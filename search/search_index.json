{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<ul> <li>Releases</li> <li>See most recent public build</li> <li>change log</li> <li> <p>API is subject to change</p> </li> <li> <p>Documentation</p> </li> <li>Project Website</li> <li>Getting Started</li> <li> <p>Developer Guide</p> </li> <li> <p>Related Projects</p> </li> <li>misk-web</li> <li>wisp: wisp is now a part of Misk</li> </ul>"},{"location":"#overview","title":"Overview","text":""},{"location":"#what-is-misk","title":"What is Misk","text":"<p>Misk (Microservice Container in Kotlin) is an open source microservice container from Cash App. It allows you to quickly create a microservice in Kotlin or Java, and provides libraries for common concerns like serving endpoints, caching, queueing, persistence, distributed leasing and clustering. It also includes the Wisp library, which is a collection of Kotlin modules providing various features and utilities, including config, logging, feature flags and more.</p> <p>It has been powering hundreds of microservices within Cash App since 2018.</p>"},{"location":"#a-tour-of-features","title":"A Tour of Features","text":"<ul> <li>Server</li> <li>Built on top of Jetty</li> <li>HTTP/2 and gRPC support</li> <li>Configurable through YAML</li> <li>Service management through Guava</li> <li>Web-based admin console</li> <li>Client</li> <li>Configurable HTTP clients built on top of OkHttp     and Retrofit</li> <li>gRPC clients built on top of Wire</li> <li>Cloud integration</li> <li>AWS: SQS, S3, DynamoDB</li> <li>Google Cloud: Spanner</li> <li>Scheduled Jobs with cron syntax</li> <li>Persistence</li> <li>ORM: Hibernate</li> <li>JDBC: Connection pooling through Hikari</li> <li>Cache: redis client</li> <li>Metrics:</li> <li>Integration with prometheus</li> <li>Built-in metrics for JVM performance, networking and connection pooling</li> <li>Testing framework with annotations</li> <li>Kotlin utilities with minimal dependencies: Wisp</li> </ul>"},{"location":"#whats-next","title":"What\u2019s Next?","text":"<p>Want to jump right into it? Check out our Getting Started Guide.</p> <p>What to know more about each module, see Developer Guide.</p>"},{"location":"actions/","title":"Actions","text":"<p>Actions are Misk\u2019s unit for an endpoint. Misk lets you make HTTP actions, and gRPC actions via  Wire.</p>"},{"location":"actions/#web-actions","title":"Web Actions","text":"<p>Below are some example Web action declarations. Note that many of the annotations are optional.</p> <p>Calls are authenticated at the service-level (service is listed in the @Authenticated annotation) or at the user-level (user has at least one of the capabilities listed in the @Authenticated annotation).</p> <p>GET:</p> <pre><code>@Singleton\nclass HelloWebAction @Inject constructor() : WebAction {\n  @Get(\"/hello/{name}\") // Enclose path parameters in {}\n  @ResponseContentType(MediaTypes.APPLICATION_JSON)\n  @Authenticated(services = [\"my-other-app\"], capabilities = [\"my-app_owners\"])\n  fun hello(\n    // Use @PathParam with the name of the param. Required if there's a param in the path pattern.\n    @PathParam name: String,\n    // RequestHeaders is optional:\n    @RequestHeaders headers: Headers,\n    // QueryParams are optional:\n    @QueryParam nickName: String?, // e.g. /hello/abc?nickName=def\n    @QueryParam greetings: List&lt;String&gt;? // e.g. /hello/abc?greetings=def&amp;greetings=ghi\n  ): HelloResponse {\n    return HelloResponse(name)\n  }\n}\n</code></pre> <p>POST:</p> <pre><code>@Singleton\nclass HelloWebPostAction @Inject constructor() : WebAction {\n  @Post(\"/hello/{name}\")\n  @RequestContentType(MediaTypes.APPLICATION_JSON)\n  @ResponseContentType(MediaTypes.APPLICATION_JSON)\n  @Authenticated(services = [\"my-other-app\"], capabilities = [\"my-app_owners\"])\n  fun hello(\n      @PathParam name: String, \n      // RequestBody is optional, and is automatically deserialized to the provided type.\n      @RequestBody body: PostBody\n  ): HelloPostResponse {\n    return HelloPostResponse(body.greeting, name)\n  }\n}\n\ndata class HelloPostResponse(val greeting: String, val name: String)\n\ndata class PostBody(val greeting: String)\n</code></pre>"},{"location":"actions/#setting-up-http-actions","title":"Setting up HTTP actions","text":"<p>Install the action into a module: <pre><code>class HelloModule : KAbstractModule() {\n  override fun configure() {\n    install(WebActionModule.create&lt;HelloWebAction&gt;())\n    install(WebActionModule.create&lt;HelloWebPostAction&gt;())\n  }\n}\n</code></pre></p> <p>And then put that module onto the top level <code>MiskApplication</code>. <pre><code>fun main(args: Array&lt;String&gt;) {\n  MiskApplication(\n    // ...\n    HelloModule(), // new!\n  ).run(args)\n}\n</code></pre></p>"},{"location":"actions/#response-type","title":"Response type","text":"<p>If you change the action\u2019s response type to <code>Response&lt;T&gt;</code>, it gives you better control over the  response status code and headers.</p> <pre><code>@Singleton\nclass HelloWebResponseAction @Inject constructor() : WebAction {\n  @Get(\"/hello_but_203/{name}\")\n  @ResponseContentType(MediaTypes.APPLICATION_JSON)\n  fun hello(@PathParam name: String): Response&lt;HelloResponse&gt; = Response(\n    statusCode = 203,\n    headers = headersOf(),\n    body = HelloResponse()\n  )\n}\n</code></pre> <p>It\u2019s also possible to throw exceptions that are mapped to status codes.</p> <pre><code>@Singleton\nclass HelloWebResponseAction @Inject constructor() : WebAction {\n  @Get(\"/no_access/{name}\")\n  fun hello(@PathParam name: String): HelloResponse {\n      throw UnauthenticatedException()\n  }\n}\n</code></pre>"},{"location":"actions/#grpc-actions","title":"gRPC Actions","text":"<p>Misk has support for gRPC actions via the Wire protocol buffer (protobuf) library.</p> <p>To create a gRPC action, first define the relevant protos for your service. Let\u2019s say we\u2019re  creating a <code>GreeterService</code> that exposes one API, <code>Hello</code>. Create this file in  <code>src/main/proto/hello.proto</code>:</p> <pre><code>syntax = \"proto2\";\npackage squareup.cash.hello;\n\noption java_package = \"com.squareup.protos.cash.hello\";\n\nmessage HelloRequest {\n  optional string message = 1;\n}\n\nmessage HelloResponse {\n  optional string message = 1;\n}\n\nservice GreeterService {\n  rpc Hello(HelloRequest) returns (HelloResponse) {}\n}\n</code></pre> <p>Next, in your project\u2019s build file (for this example, <code>build.gradle.kts</code>), add a dependency on the  wire plugin:</p> <pre><code>plugins {\n  id(\"com.squareup.wire\")\n}\n</code></pre> <p>Add the following configuration to generate the gRPC interfaces for your service:</p> <pre><code>wire {\n  sourcePath {\n    srcDir(\"src/main/proto\")\n  }\n\n  kotlin {\n    include(\"squareup.cash.hello.GreeterService\")\n    rpcCallStyle = \"blocking\"\n    rpcRole = \"server\"\n    singleMethodServices = true\n  }\n\n  java {\n  }\n}\n</code></pre> <p>Finally, implement and bind your gRPC action. <code>GreeterServiceHelloBlockingServer</code> is generated by Wire.</p> <pre><code>@Singleton\nclass HelloGrpcAction @Inject internal constructor()\n  : GreeterServiceHelloBlockingServer, WebAction {\n\n  @Unauthorized\n  override fun Hello(request: HelloRequest): HelloResponse {\n    return HelloResponse(\"message\")\n  }\n}\n\n// This module binds HelloGrpcAction.\nclass GreeterActionModule : KAbstractModule() {\n  override fun configure() {\n    install(WebActionModule.create&lt;HelloGrpcAction&gt;())\n  }\n}\n</code></pre> <p>Creating a gRPC action automatically creates a JSON endpoint with all of the same annotations in the  path defined by the <code>...BlockingServer</code>, typically <code>/&lt;package&gt;.&lt;service name&gt;/&lt;rpc name&gt;</code>.</p> <p>You can also create a second class that extends WebAction to customize this further. Read more about  HTTP actions in Web Actions. If you\u2019re building both a gRPC and a HTTP action, a  common pattern is to have them both use a common dependency:</p> <pre><code>@Singleton\nclass HelloGrpcAction @Inject constructor(val greeter: Greeter)\n  : GreeterServiceHelloBlockingServer, WebAction {\n  @Unauthorized override fun hello() = HelloResponse(greeter.greet())\n}\n\n@Singleton\nclass HelloWebAction @Inject constructor(val greeter: Greeter) : WebAction {\n  @Unauthorized\n  @Get(\"/hello\")\n  @ResponseContentType(MediaTypes.APPLICATION_JSON)\n  fun hello() = HelloResponse(greeter.greet())\n}\n\n@Singleton\nclass Greeter @Inject constructor()  {\n  fun greet() = \"Hello world\"\n}\n</code></pre>"},{"location":"actions/#actionscoped","title":"ActionScoped","text":"<p><code>ActionScoped</code> gives an action access to context produced by the action\u2019s interceptors.</p> <p>Misk has a few <code>ActionScoped</code> items built in:</p> <ul> <li><code>MiskCaller</code> - access derived authorization details</li> <li><code>HttpCall</code> - access lower level HTTP details, e.g.    request headers</li> </ul>"},{"location":"actions/#testing","title":"Testing","text":"<p>Use tests annotated with <code>@MiskTest</code> to perform tests. There are two common patterns to testing actions:</p>"},{"location":"actions/#test-action-classes-directly","title":"Test Action classes directly","text":"<p>Make sure that the module under test contains a Guice binding for the action and its dependencies,  then inject your action.</p> <pre><code>class MyModule : KAbstractModule() {\n  override fun configure() {\n    install(WebActionModule.create&lt;HelloWebAction&gt;())\n    // Alternatively, a direct or just-in-time binding might be sufficient.\n  }\n}\n\n@MiskTest class MyTest {\n  @MiskTestModule val module = MyModule()\n  @Inject lateinit var action: HelloWebAction\n\n  // use action...\n}\n</code></pre>"},{"location":"actions/#testing-actionscoped","title":"Testing <code>ActionScoped</code>","text":"<p>Use <code>@WithMiskCaller</code> for <code>ActionScoped&lt;MiskCaller&gt;</code>:</p> <pre><code>@MiskTest\n@WithMiskCaller\nclass MyTest {\n  @MiskTestModule val module = MyModule()\n  @Inject lateinit var action: HelloWebAction\n  @Inject lateinit var miskCaller: ActionScoped&lt;MiskCaller&gt;\n\n  // use action...\n}\n</code></pre> <p>Otherwise, use <code>ActionScope</code> directly:</p> <pre><code>@MiskTest\nclass MyTest {\n  @MiskTestModule val module = MyModule()\n  @Inject lateinit var actionScope: ActionScope\n  @Inject lateinit var action: HelloWebAction\n  @Inject lateinit var myScopedObject: ActionScoped&lt;MyScopedObject&gt;\n\n  @BeforeEach fun setUp() {\n    actionScope.enter(\n      mapOf(\n        keyOf&lt;MyScopedObject&gt;() to MyScopedObject()\n      )\n    )\n  }\n\n  @AfterEach fun tearDown() {\n    actionScope.provider.get().close()\n  }\n\n  // use action...\n}\n</code></pre>"},{"location":"actions/#integration-tests","title":"Integration tests","text":"<p>It\u2019s possible to perform tests terminating at the app\u2019s HTTP/gRPC interface.</p> <p>The module under test should include <code>WebServerTestingModule</code> so that Misk stands up a server during tests:</p> <pre><code>class MyModule : KAbstractModule() {\n   override fun configure(){\n    install(WebServerTestingModule())\n    // install other modules...\n }\n}\n</code></pre> <p>Then test HTTP requests using <code>WebTestClient</code> (assertions here were made using  Kotest):</p> <pre><code>@MiskTest(startService = true)\nclass HelloWebIntegrationTest {\n  @Suppress(\"unused\")\n  @MiskTestModule val module = MyModule()\n\n  @Inject lateinit var webTestClient: WebTestClient\n\n  @Test\n  fun `makes a call to the service`() {\n    val response = webTestClient.post(\"/hello\", HelloRequest(\"world\"))\n    response.response.code shouldBe 200\n    response.parseJson&lt;HelloResponse&gt;() shouldBe HelloResponse(\"hello world\")\n  }\n}\n</code></pre> <p>Test gRPC requests by setting up a gRPC client pointing to the running app:</p> <pre><code>class MyServerModule : KAbstractModule() {\n  override fun configure() {\n    install(WebServerTestingModule())\n    // Assume RobotLocatorWebAction is a gRPC action.\n    install(WebActionModule.create&lt;RobotLocatorWebAction&gt;())\n  }\n}\n\nclass MyClientModule(val jetty: JettyService): KAbstractModule() {\n  override fun configure() {\n    // Assume RobotLocator was generated via Wire.\n    install(GrpcClientModule.create&lt;RobotLocator, GrpcRobotLocator&gt;(\"robots\"))\n  }\n\n  @Provides\n  @Singleton\n  fun provideHttpClientConfig(): HttpClientsConfig {\n    return HttpClientsConfig(\n      endpoints = mapOf(\n        \"robots\" to HttpClientEndpointConfig(jetty.httpServerUrl.toString())\n      )\n    )\n  }\n}\n\n@MiskTest(startService = true)\nclass RobotLocatorIntegrationTest {\n  @Suppress(\"unused\")\n  @MiskTestModule val module = MyServerModule()\n\n  @Inject lateinit var jettyService: JettyService\n\n  @Test \n  fun `makes a call to the service`() {\n    val robotLocator = Guice.createInjector(MyClientModule(jettyService))\n      .getInstance&lt;RobotLocator&gt;()\n\n    robotLocator.SayHello().executeBlocking(HelloRequest.builder().name(\"world\").build()) shouldBe \n      HelloReply.Builder().message(\"hello world\").build()\n  }\n}\n</code></pre>"},{"location":"changelog/","title":"Change Log","text":""},{"location":"changelog/#version-0240-2022-04-13","title":"Version 0.24.0 (2022-04-13)","text":"<p>Unstable public release.</p> <p>New features and fixes:</p> <ul> <li>Fill out the Misk BOM (#2353)</li> <li>Restore a deleted WebConfig constructor (#2352)</li> <li>enable kochiku in CI (#2351)</li> </ul>"},{"location":"changelog/#version-0230-2022-03-30","title":"Version 0.23.0 (2022-03-30)","text":"<p>Unstable public release. Thank you to all the contributors, as always.</p> <p>Breaking changes:</p> <ul> <li>Upgrade to use kotlin 1.6 (#2323)</li> <li>Move ActionScope and related code to :misk-action-scopes (#2301)</li> <li>Remove misk.flags.Flags (#2341)</li> <li>misk-metrics: Allow configuring max_age_in_seconds for Prometheus (#2292)</li> </ul> <p>New features:</p> <ul> <li>misk-actions: Multi-method WebActions (#2198)</li> <li>misk-clients: Allow binding for application interceptors in grpc and typed clients (#2201)</li> <li>misk-core: Support a configurable delay before shutting down services (#2238)</li> <li>misk-core: Allow minimum thread pool size to be configured (#2210)</li> <li>misk-core: Record client metrics for incomplete HTTP connections (#2209)</li> <li>misk-jdbc: Provide more helpful error message when duplicate migration versions present (#2325)</li> <li>misk-jdbc: Default to use modern TLS in JDBC connections (#2221)</li> <li>misk-hibernate: add support for FlushEntity listener (#2220)</li> <li>misk-feature: Make FakeFeatureFlag overrides composable with FakeFeatureFlagsOverrideModule (#2306)</li> <li>misk-feature, wisp-feature: Add strongly typed feature flag support (#2293)</li> <li>misk-feature, wisp-feature: Launch Darkly client will use system proxy settings if provided (#2255)</li> <li>misk-redis: Implement Redis.hincrBy (#2269)</li> <li>misk-zookeeper, wisp-lease: Extend LeaseManager to support Leases as AutoCloseable resources (#2319)</li> <li>wisp-config: Add a filesystem preprocessor (#2275)</li> <li>wisp-config: Add a classpath preprocessor (#2268)</li> </ul> <p>Fixes:</p> <ul> <li>misk-admin: Web Actions Tab: handle long primitive when building web forms (#2300)</li> <li>misk-clients: Do not require <code>List&lt;Client*Interceptor&gt;</code> to be bound when using TypedClientFactory stand-alone (#2218)</li> <li>misk-core: Improve handling timeout/reset connection when reading request (#2279)</li> <li>misk-core: Configure VegasLimit with higher initial limit (#2250)</li> <li>misk-gcp: Properly shut down Google Spanner clients (#2203)</li> <li>misk-hibernate: Move StartDatabaseService init code to explicit function (#2294)</li> <li>misk-jooq: Use appropriate SQLDialect per configuration (#2305)</li> <li>misk-jooq: Don\u2019t use \u201cselect * from\u201d (#2231)</li> </ul>"},{"location":"changelog/#version-0220-2021-11-03","title":"Version 0.22.0 (2021-11-03)","text":"<p>Unstable public release.</p> <p>Breaking changes:</p> <ul> <li>The <code>/error</code> action is no longer installed by default (#2190)</li> </ul> <p>New features and fixes:</p> <ul> <li>Ignore @transient fields when constructing queries (#2162)</li> <li>Add support for Google Spanner to misk-gcp (#2188)</li> <li>Add a default Moshi build in wisp, and move the builder from Misk (#2187)</li> <li>Add wisp-token* - copied from misk.tokens (#2186)</li> <li>Allow invalid accept headers (#2185)</li> <li>Put unack\u2019d jobs on the deadletter queue and remove FakeTransactionalJobQueue (#2180)</li> <li>Remove internal visibility modifier from PrometheusHttpService (#2181)</li> <li>Add wisp-tracing module (#2171)</li> </ul>"},{"location":"changelog/#version-0210-2021-10-18","title":"Version 0.21.0 (2021-10-18)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-0200-2021-08-31","title":"Version 0.20.0 (2021-08-31)","text":"<p>Unstable public release.</p> <p>Breaking changes:</p> <ul> <li>Leases now use a different package</li> <li>Wisp Lease API is changing to handle explicit acquire/release on lease (#2113)</li> <li>Log on properties present in config yaml but not in object (#2118)</li> <li>Config now requires defaults for primitive types</li> <li>Move misk admin components to misk-admin (#2065)</li> <li>Reinstate WebActionExceptionMapper sending a response body based on the WebActionException\u2019s responseBody (#2050)</li> </ul> <p>New features and fixes:</p> <ul> <li>Add incr and incrBy operations to misk-redis (#2119)</li> <li>Add @fetch as a valid hibernate query annotation (#2112)</li> <li>When evaluating JSON LD feature flags, log unknown fields once (#2086)</li> <li>Make additional jooq configurations possible (#2078)</li> <li>Log a warning if health checks fail (#2063)</li> <li>Add support for double feature flags (#2029)</li> <li>Send gRPC errors properly (#1983)</li> <li>Bump log level for invalid access (#2024)</li> <li>misk-policy: To query specific paths, treat document path as urlencoded (#2030)</li> <li>Create LaunchDarkly in Wisp (#2088)</li> </ul>"},{"location":"changelog/#version-0190-2021-06-30","title":"Version 0.19.0 (2021-06-30)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-0180-2021-06-28","title":"Version 0.18.0 (2021-06-28)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-0171-2021-04-29","title":"Version 0.17.1 (2021-04-29)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-0170-2021-04-28","title":"Version 0.17.0 (2021-04-28)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-0160-2020-12-17","title":"Version 0.16.0 (2020-12-17)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-0150-2020-12-03","title":"Version 0.15.0 (2020-12-03)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-0140-2020-11-12","title":"Version 0.14.0 (2020-11-12)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-0130-2020-07-16","title":"Version 0.13.0 (2020-07-16)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-0120-2020-05-06","title":"Version 0.12.0 (2020-05-06)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-0110-2020-02-25","title":"Version 0.11.0 (2020-02-25)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-0100-2019-01-21","title":"Version 0.10.0 (2019-01-21)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-090-2019-12-06","title":"Version 0.9.0 (2019-12-06)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-080-2019-10-22","title":"Version 0.8.0 (2019-10-22)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-070-2019-08-26","title":"Version 0.7.0 (2019-08-26)","text":"<p>Unstable public release.</p>"},{"location":"changelog/#version-025-2018-06-11","title":"Version 0.2.5 (2018-06-11)","text":""},{"location":"changelog/#new","title":"New","text":"<ul> <li>Cluster interface and DataSourceCluster bindings</li> <li>Add a JPAEntityModule for binding entities for a DataSource</li> <li>Hook up raw Hibernate APIs</li> <li>Use JPA entity types in HibernateModule.</li> <li>Introduce FakeResourceLoader</li> <li>SchemaMigrator for running and tracking schema migrations.</li> <li>Update Misk version in Dockerfiles to 0.2.5</li> <li>Drop support for unqualified datasources.</li> <li>move exemplars into sample directory in preparation for more of them</li> <li>Make all Kotlin warnings build errors</li> <li>Allow services to specify dependencies on other services.</li> <li>Fast fail on dependency cycles.</li> <li>jre8 was deprecated for kotlin 1.2</li> <li>Early types for the Transacter APIs</li> <li>Queries in the Misk Hibernate API.</li> <li>Implement Query with dynamic proxies and reflection</li> <li>Offer strict validation and nice errors in ReflectionQueryFactory</li> <li>Log the reasons why liveness/readiness checks fail</li> <li>URL shortener sample</li> <li>Support more operators in Query</li> <li>Wire up Hibernate event listeners through Guice.</li> <li>HibernateTestingModule.</li> <li>Switch tests to MySQL</li> <li>Rollback transactions on exceptions</li> <li>Delete DataSourceModule. It\u2019s redundant with HibernateModule.</li> <li>Support ByteString columns</li> <li>Misk containers should not run as root</li> <li>DbTimestampedEntity</li> </ul>"},{"location":"changelog/#fix","title":"Fix","text":"<ul> <li>Don\u2019t inject until after services are started.</li> <li>Tidy up some test cases.</li> <li>Fix a missing dependency in exemplar</li> <li>Don\u2019t use KubernetesHealthCheck with LocalClusterConnector</li> </ul>"},{"location":"changelog/#version-024-2018-05-14","title":"Version 0.2.4 (2018-05-14)","text":""},{"location":"changelog/#new_1","title":"New","text":"<ul> <li>Add support for protobuf over HTTP</li> <li>Cloudwatch Trail logging support</li> <li>Add retry() helper</li> <li>Add Backoff/ExponentialBackoff</li> <li>MiskCaller and authz support</li> <li>Adds a DataSourceModule</li> <li>Add support for logging to StackDriver</li> </ul>"},{"location":"changelog/#fix_1","title":"Fix","text":"<ul> <li>Move static resources from web root into resources</li> <li>Move web-specific NetworkInterceptor into web</li> <li>Remove use of instance metadata endpoints</li> </ul>"},{"location":"changelog/#version-023-2018-04-27","title":"Version 0.2.3 (2018-04-27)","text":""},{"location":"changelog/#new_2","title":"New","text":"<ul> <li>Add kubernetes java client so that hosts can know their peers</li> <li>Use EventRouter for exemplarchat. Add a static resource mapper</li> <li>Create a cluster wide admin healthcheck page</li> <li>Change CacheBuilder to be mapOf since no concurrency</li> <li>Adds a healthcheck for the kubernetes client</li> <li>Adds a local cluster connector so that development functions</li> </ul>"},{"location":"changelog/#fix_2","title":"Fix","text":"<ul> <li>Don\u2019t treat assembly as a release when running in CI</li> <li>Fix tracing startup when none is configured</li> <li>Various event router fixes and refactorings</li> </ul>"},{"location":"changelog/#version-021-2018-03-26","title":"Version 0.2.1 (2018-03-26)","text":""},{"location":"changelog/#new_3","title":"New","text":"<ul> <li>Remove unnecessary check from uploadArchives task (#149)</li> <li>Add a RELEASING.md to outline misk release process (#150)</li> <li>Move chat into its own example project. (#146)</li> <li>Introduce event router api (#147)</li> <li>Add basic frontend for exemplarchat</li> <li>Add MoshiJsonAdapters and SocketEventJsonAdapter (#151)</li> <li>Expose client certificates as action scoped vars (#141)</li> <li>Add ClusterMapper interface, refactor RealEventRouter to event loop (#155)</li> <li>Handle cluster changes (#156)</li> <li>More tests to exercise EventRouter behaviors. (#158)</li> <li>Support loading keystores from combined private key and certificate chain PEM files (#157)</li> </ul>"},{"location":"changelog/#fix_3","title":"Fix","text":"<ul> <li>Fix event router tests (#159)</li> </ul>"},{"location":"changelog/#version-020-2018-03-13","title":"Version 0.2.0 (2018-03-13)","text":""},{"location":"changelog/#new_4","title":"New","text":"<ul> <li>Add _status action</li> <li>Split Interceptor into NetworkInterceptor and ApplicationInterceptor</li> <li>Introduce websocket support in misk</li> <li>Add tracing interceptor for web actions</li> <li>Add ActionExceptionLogLevelConfig to control log levels for ActionExceptions</li> <li>Allow binding an ExceptionMapper by an Exception type</li> <li>Google Cloud Datastore and Cloud Storage support</li> <li>Add backend for Zipkin tracer</li> <li>Add MiskTracer to facilitate ad-hoc method tracing</li> <li>Retrofit based typed client support (#112)</li> <li>Enable SSL for both clients and servers (#111)</li> <li>Support application/x-www-form-urlencoded parameters (#97)</li> <li>Add API for injecting dynamically sourced flags</li> <li>Add metrics backend for SignalFx</li> <li>Add support for commands</li> <li>Upgrade to Gradle 4.5 to support Java 9; add Java 9 to test matrix</li> <li>Allow customized exception mappings</li> <li>Add support for query strings in urls</li> </ul>"},{"location":"changelog/#fix_4","title":"Fix","text":"<ul> <li>Eliminate redundant _config suffix in config files</li> <li>Support Web actions that return Nothing</li> <li>Use proper snake-casing for default property names</li> <li>Fix Java path param dispatching</li> <li>Fix NotFoundAction handling (#134)</li> <li>Fix wildcard based content routing</li> <li>Fix a bug when a user-defined Interceptor returns a Response object</li> <li>Fix up Java translation from Moshi. (#107)</li> </ul>"},{"location":"changelog/#version-010-2018-02-01","title":"Version 0.1.0 (2018-02-01)","text":"<p>Initial release.</p>"},{"location":"clients/","title":"Clients","text":"<p>Misk provides configurable HTTP clients built on top of OkHttp and Retrofit, and gRPC clients built on top of Wire.</p>"},{"location":"clients/#http-clients","title":"HTTP Clients","text":""},{"location":"clients/#config","title":"Config","text":"<p>Set up a Config object (and use <code>MiskConfig.load</code> to load config from a YAML file):</p> <pre><code>data class MyServiceConfig(\n  val http_clients: HttpClientsConfig,\n  // ...\n) : Config\n</code></pre> <p>In the configuration YAML, specify the target service\u2019s address:</p> <pre><code>http_clients:\n  ...\n  endpoints:\n    ...\n    greeter:  { url: \"https://hello.example.com\" }\n</code></pre>"},{"location":"clients/#create-an-okhttpclient","title":"Create an OkHttpClient","text":"<p>Use <code>HttpClientModule</code>:</p> <pre><code>class MyClientModule : KAbstractModule() {\n  override fun configure() {\n    install(HttpClientModule(\n      // Corresponds to the YAML config. Requires a bound HttpClientsConfig\n      name = \"greeter\",\n      // Optional annotation to define how you inject your client dependency\n      annotation = Names.named(\"greeterHttp\")\n    ))\n  }\n}\n</code></pre> <p>This binds an <code>OkHttpClient</code> that you can inject:</p> <pre><code>class MyClient @Inject constructor(@Named(\"greeterHttp\") val client: OkHttpClient) {\n  fun callGreeter() {\n    val response = client.newCall(\n      Request.Builder()\n        .url(\"http://localhost:8080/hello\")\n        .build()\n    ).execute()\n  }\n}\n</code></pre>"},{"location":"clients/#create-typed-clients-with-retrofit","title":"Create typed clients with Retrofit","text":"<p>First, create a Retrofit interface. See the Retrofit docs for more details.</p> <pre><code>interface GreeterApi {\n  @POST(\"/hello\")\n  @Headers(value = [\"accept: application/json\"])\n  fun hello(\n    @Body request: HelloRequest\n  ): Call&lt;HelloResponse&gt;\n}\n</code></pre> <p>Next, install a <code>TypedHttpClientModule</code> with this interface.</p> <pre><code>class HelloClientModule : KAbstractModule() {\n  override fun configure() {\n    install(\n      TypedHttpClientModule(\n        GreeterApi::class, \n        // Corresponds to the YAML config. Requires a bound HttpClientsConfig\n        name = \"greeter\", \n        // Optional annotation to define how you inject your client dependency\n        annotation = Names.named(\"greeterApi\")\n      )\n    )\n  }\n}\n</code></pre> <p>Now you can inject an implementation of this client:</p> <pre><code>@Singleton class MyApiClient @Inject constructor(\n  @Named(\"greeterApi\") private val api: GreeterApi\n) {\n  fun hello(message: String): String {\n    val response = api.hello(\n      HelloRequest(\n        message = message\n      )\n    ).execute()\n  }\n}\n</code></pre>"},{"location":"clients/#grpc-clients","title":"gRPC Clients","text":"<p>First, include the auto-generated gRPC client code at the caller module using the Wire Gradle  plugin.</p> <pre><code>plugins {\n  id(\"com.squareup.wire\")\n}\n\nwire {\n  sourcePath {\n    srcDir(\"src/main/proto\")\n  }\n\n  // Generate Kotlin for the gRPC client API.\n  kotlin {\n    // Set this to false if you're generating client and server interfaces in one module\n    exclusive = false\n    includes (\"squareup.cash.hello.GreeterService\")\n    rpcRole = \"client\"\n  }\n\n  java {\n  }\n}\n</code></pre> <p>Next, bind your client in code in a similar fashion to an HTTP client. Set up client configuration, as described in Config. Then, bind a <code>GrpcClientModule</code>:</p> <pre><code>class GreeterClientModule : KAbstractModule() {\n  override fun configure() {\n    install(GrpcClientModule.create&lt;GreeterServiceClient, GrpcGreeterServiceClient&gt;(\n        // Corresponds to the YAML config. Requires a bound HttpClientsConfig\n        name = \"greeter\",\n        // Optional annotation to define how you inject your client dependency\n        annotation = Names.named(\"greeterGrpc\")\n    ))\n  }\n}\n</code></pre> <p>With this all setup, you can now inject your client in source code and connect via gRPC:</p> <pre><code>internal class GrpcGreeterServiceClient @Inject internal constructor(\n  @Named(\"greeterGrpc\") private val greeterGrpc: GreeterServiceClient\n) {\n  fun get(message: String) {\n    val response = greeterGrpc.Hello().executeBlocking(HelloRequest(message))\n\n    // ... do something with the response here\n  }\n}\n</code></pre>"},{"location":"contributing/","title":"Contributing","text":"<p>If you would like to contribute code to this project you can do so through GitHub by forking the repository and sending a pull request.</p> <p>When submitting code, please make every effort to follow existing conventions and style in order to keep the code as readable as possible.</p> <p>Before your code can be accepted into the project you must also sign the Individual Contributor License Agreement (CLA).</p>"},{"location":"contributing/#building-misk-locally","title":"Building Misk locally","text":"<p>Install and activate hermit: https://cashapp.github.io/hermit/</p> <p>Use gradle to run all Kotlin tests locally:</p> <pre><code>gradle build\n</code></pre> <p>misk-hibernate tests expect a mysql server running on <code>localhost:3306</code> with no password set on the root user. You might stand up a server with a docker image, e.g.</p> <pre><code>docker run -d --rm --name \"mysql-57\" -p 3306:3306 -e MYSQL_ALLOW_EMPTY_PASSWORD=true -e MYSQL_LOG_CONSOLE=true mysql:5.7 --sql-mode=\"\"\n</code></pre> <p>Misk may download these Docker images as part of its tests. Because tests can time out, pre-downloading these can help resolve timeouts.</p> <pre><code>alpine:latest\namazon/dynamodb-local:latest\ncockroachdb/cockroach\ngcr.io/cloud-spanner-emulator/emulator\npingcap/tidb\npostgres\nredis:6.2-alpine\nsoftwaremill/elasticmq\nvitess/base\n</code></pre>"},{"location":"contributing/#breaking-changes","title":"Breaking changes","text":"<p>We use the Kotlin binary compatibility validator to check for API changes. If  a change contains an API change and breaks the build, run the <code>:apiDump</code> task and  commit the resulting changes to the <code>.api</code> files. <code>.api</code> files should not have  removals and additions in the same change so that downstream apps do not immediately run into backwards-compatibility issues.</p>"},{"location":"developer-guide/","title":"Developer Guide","text":""},{"location":"developer-guide/#action","title":"Action","text":"<p>Actions are Misk\u2019s unit for an endpoint. Misk lets you make HTTP actions, and gRPC actions via Wire.</p> <p>Learn more about Misk actions</p>"},{"location":"developer-guide/#interceptors","title":"Interceptors","text":"<p>Misk uses interceptors (middleware) to observe and potentially transform HTTP messages. The pattern is borrowed from OkHttp Interceptors.</p> <p>Learn more about Misk interceptors</p>"},{"location":"developer-guide/#clients","title":"Clients","text":"<p>Misk provides configurable HTTP clients built on top of OkHttp and Retrofit, and gRPC clients built on top of Wire.</p> <p>Learn more about how to create, configure and test HTTP clients or gRPC clients within a Misk application here.</p>"},{"location":"developer-guide/#tests","title":"Tests","text":"<p>Misk provides a few ways to streamline testing with JUnit.</p> <p>Learn more about Misk tests</p>"},{"location":"developer-guide/#modules","title":"Modules","text":"<p>Misk provides dozens of modules to facilitate the development and deployment of applications, and the integration with clouds and various common technologies.</p> <p>Learn more about Misk modules</p>"},{"location":"developer-guide/#wisp","title":"Wisp","text":"<p>Wisp is a collection of kotlin modules providing various features and utilities, including config, logging, feature flags and more. It is basically extracted Misk functionality without Dependency Injection (i.e., no Guice).</p> <p>Learn more about Wisp.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>The easiest way to get started is to copy the  Misk exemplar project. This exemplar  contains a Misk web app with the requisite dependencies.</p>"},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<p>Misk relies on hermit to install tools required to develop and run the service. Please follow this to install and activate hermit.</p> <p>Misk uses Gradle to build and run test locally.</p>"},{"location":"getting-started/#start-the-service","title":"Start the service","text":"<p>Run <code>ExemplarService#main</code> from your IDE, or use gradle to run:</p> <pre><code>gradle run\n</code></pre>"},{"location":"getting-started/#set-up-bindings","title":"Set up bindings","text":"<p>A Misk application is wired together using Guice. Features of Misk are managed by Guava <code>Services</code>, provided by Guice <code>Modules</code>, and configured using Misk <code>Config</code>s. For example, if your application needs a Redis cache, you would install <code>RedisModule</code>, and add a corresponding <code>RedisConfig</code> to your application\u2019s config YAML.</p> <p>Misk is unopinionated about which of its features your application chooses to use, and offers multiple alternatives for some common concerns.</p>"},{"location":"getting-started/#the-main-function","title":"The main function","text":"<p>The entry point to every Misk application is <code>MiskApplication</code>:</p> <pre><code>fun main(args: Array&lt;String&gt;) {\n  val environment = Environment.fromEnvironmentVariable()\n  val env = Env(environment.name)\n  val config = MiskConfig.load&lt;ExemplarConfig&gt;(\"exemplar\", env)\n\n  MiskApplication(\n    MiskRealServiceModule(),\n    MiskWebModule(config.web),\n    ExemplarAccessModule(),\n    ExemplarWebActionsModule(),\n\n    // e.g. to add an admin dashboard:\n    AdminDashboardModule(isDevelopment = true)\n  ).run(args)\n}\n</code></pre>"},{"location":"getting-started/#set-up-configuration","title":"Set up configuration","text":"<p>Every Misk application has a top-level class that implements the <code>Config</code> marker interface. This <code>Config</code> encapsulates all of the configuration for the app.</p> <p>By default, configs are loaded from YAML files at the app\u2019s resources root. Each value in the config must have a corresponding entry in the YAML file.</p> <p>Modules in Misk that require configuration usually have their own <code>Config</code> objects. If you want to use the Module in your app, you should add them as properties of your app\u2019s <code>Config</code> object, for example:</p> <pre><code>data class MyAppConfig(\n    val my_config_value: String,\n    val http_clients: HttpClientsConfig\n) : Config\n</code></pre> <p>This then corresponds to a YAML file:</p> <pre><code>my_config_value: \"this value\"\n\nhttp_clients:\n  # ... config\n</code></pre>"},{"location":"getting-started/#config-resolution","title":"Config resolution","text":"<p>Configs are loaded using the app\u2019s resource loader. The config loader looks for files in the following order by default:</p> <ol> <li><code>$SERVICE_NAME-common.yaml</code></li> <li><code>$SERVICE_NAME-$ENVIRONMENT.yaml</code></li> </ol> <p>At least one of <code>$SERVICE_NAME-common.yaml</code> or <code>$SERVICE_NAME-$ENVIRONMENT.yaml</code> must exist. </p> <p>Values from later files take precedence.</p>"},{"location":"getting-started/#write-an-endpoint","title":"Write an endpoint","text":"<p>Actions are Misk\u2019s unit for an endpoint.</p> <p>Actions inherit from <code>WebAction</code> and have a <code>@Get</code>/<code>@Post</code> annotation:</p> <pre><code>@Singleton\nclass HelloWebAction @Inject constructor() : WebAction {\n  @Get(\"/hello/{name}\")\n  @Unauthenticated\n  @ResponseContentType(MediaTypes.APPLICATION_JSON)\n  fun hello(\n    @PathParam name: String,\n  ): HelloResponse {\n    return HelloResponse(name)\n  }\n}\n\ndata class HelloResponse(val name: String)\n</code></pre> <p>Read more about this in Actions.</p>"},{"location":"getting-started/#test-the-endpoint","title":"Test the endpoint","text":"<p>You can unit test directly: <pre><code>class HelloWebActionTest {\n  @Test\n  fun `tests the unit`() {\n    assertThat(HelloWebAction().hello(\"sandy\", headersOf(), null, null))\n        .isEqualTo(HelloResponse(\"sandy\"))\n  }\n}\n</code></pre></p> <p>Integration tests set up a module for you, and adds an injector to the test class.</p> <p>You can use <code>WebServerTestingModule</code> to set up a running web server and make <code>WebTestClient</code>  available.</p> <pre><code>@MiskTest(startService = true)\nclass HelloWebActionTest {\n  @MiskTestModule val module = TestModule()\n\n  @Inject private lateinit var webTestClient: WebTestClient\n\n  @Test\n  fun `tests a request being made`() {\n    val hello = webTestClient.get(\"/hello/sandy\")\n    assertThat(hello.response.code).isEqualTo(200)\n    assertThat(hello.parseJson&lt;HelloResponse&gt;())\n      .isEqualTo(HelloResponse(\"sandy\"))\n  }\n\n  class TestModule : KAbstractModule() {\n    override fun configure() {\n      install(WebServerTestingModule())\n      install(HelloModule())\n    }\n  }\n}\n</code></pre> <p>Read more about this in Actions</p>"},{"location":"getting-started/#create-services","title":"Create services","text":"<p>The main function is just an entry point for wiring together components of Misk. Long-running threads that do the real work are written as <code>Services</code> using Guava\u2019s Service Framework.</p> <p>A <code>Service</code> is bound by installing a <code>ServiceModule</code>, for example: <pre><code>class MyServiceModule : KAbstractModule() {\n  override fun configure() {\n    install(ServiceModule&lt;MyService&gt;())\n  }\n}\n</code></pre></p> <p>Notice that in this example we use <code>KAbstractModule()</code>, Misk\u2019s Kotlin wrapper for <code>AbstractModule</code>, as our base Module class.</p> <p><code>MiskApplication</code> will start all services installed by a <code>ServiceModule</code>.</p> <p>If there is a <code>Service</code> that must be run after a other set of <code>Services</code> have started, the service dependency graph should be specified at the installation site.</p> <p>For example, if you are operating a movie service, which needs a database: <pre><code>class MovieServiceModule : KAbstractModule() {\n  override fun configure() {\n    // Note that DatabaseService does not have to be installed here.\n    // It could be installed in another KAbstractModule if preferred.\n    install(ServiceModule&lt;DatabaseService&gt;())\n\n    // Multiple dependencies can be added by chaining calls to `dependsOn`.\n    install(ServiceModule&lt;MovieService&gt;()\n        .dependsOn&lt;DatabaseService&gt;())\n  }\n}\n</code></pre> See <code>ServiceModule</code> for more details about the  service graph.</p> <p>When writing <code>Services</code>, always prefer to inherit from one of the common base classes: <code>AbstractIdleService</code>, <code>AbstractScheduledService</code>, or <code>AbstractExecutionThreadService</code>. See Services Explained for details. If your service is can make use of exponential backoff and scheduling, take a look at using <code>RepeatedTaskQueue</code>.</p>"},{"location":"interceptors/","title":"Interceptors","text":"<p>Misk has interceptors (middleware) to observe &amp; potentially transform HTTP messages. The pattern borrows from OkHttp Interceptors.</p> <p>Interceptors can be for inbound calls to Misk\u2019s Jetty webserver from an external client, or outbound calls from Misk\u2019s OkHttpClient to an external service.</p> <p>Interceptors can be network interceptors that operate on the encoded HTTP messages, or application interceptors that operate on decoded value objects.</p> <p>Misk has both built-in interceptors and user-provided interceptors. In all cases, interceptors must be registered with a Guice multibinding.</p>"},{"location":"interceptors/#inbound-network-interceptors","title":"Inbound Network Interceptors","text":"<p>These run for inbound HTTP calls into Misk.</p> <p>They may short-circuit the inbound calls, preventing the calls from ever reaching the destination action. For example, the concurrency limiting (ie. load shedding) interceptor short-circuits inbound calls when it predicts a timeout. Inbound calls may also be short-circuited if authentication headers are absent or inadequate.</p> <pre><code>/** This sample interceptor decompresses the inbound request body. */\nclass GunzipRequestBodyInterceptor : NetworkInterceptor {\n  override fun intercept(chain: NetworkChain) {\n    val httpCall = chain.httpCall\n    val contentEncoding = httpCall.requestHeaders[CONTENT_ENCODING]\n      ?: return chain.proceed(httpCall)\n    if (contentEncoding.lowercase() == GZIP) {\n      httpCall.takeRequestBody()?.let {\n        httpCall.putRequestBody(GzipSource(it).buffer())\n      }\n    }\n    chain.proceed(httpCall)\n  }\n}\n</code></pre> <p>Though inbound interceptors may rewrite the inbound request, they generally run too late to rewrite the outbound response. In particular, by the time the <code>proceed()</code> call returns, the outbound HTTP response has already been encoded and transmitted.</p> <p>The built-in inbound network interceptors are:</p> <ul> <li>GunzipRequestBodyInterceptor</li> <li>RebalancingInterceptor</li> <li>InternalErrorInterceptorFactory</li> <li>RequestLogContextInterceptor</li> <li>MetricsInterceptor</li> <li>ConcurrencyLimitsInterceptor</li> <li>TracingInterceptor</li> <li>ExceptionHandlingInterceptor</li> <li>RequestLoggingInterceptor </li> </ul> <p>Multibind these with <code>NetworkInterceptor.Factory</code>.</p>"},{"location":"interceptors/#inbound-application-interceptors","title":"Inbound Application Interceptors","text":"<p>These run after the network interceptors, and after the request body has been decoded into the type specified by the target action.</p> <pre><code>class RequestBodyLoggingInterceptor: ApplicationInterceptor {\n  override fun intercept(chain: Chain): Any {\n    val result = chain.proceed(chain.args)\n    log(\"Request arguments: ${chain.args}, response value: $result\")\n    return result\n  }\n}\n</code></pre> <p>Working in this layer is convenient because the <code>chain</code> argument has the action, its args, its function, and its <code>HttpCall</code>. Because the action is already selected and its arguments are already decoded, this layer cannot be used to rewrite the bytes of the request! But it can change the arguments to the function (in a type-safe way). </p> <p>The built-in inbound application interceptors are:</p> <ul> <li>RequestBodyLoggingInterceptor.Factory</li> </ul> <p>Multibind these with <code>ApplicationInterceptor.Factory</code>.</p>"},{"location":"interceptors/#outbound-application-interceptors","title":"Outbound Application Interceptors","text":"<p>On inbound calls, network interceptors run before application interceptors. On outbound calls, the ordering is reversed: application interceptors run first.</p> <p>Outbound application interceptors use OkHttp\u2019s <code>Interceptor</code> type for calls. Multibind these using <code>ClientApplicationInterceptorFactory</code>.</p> <pre><code>class LoggingInterceptor : Interceptor {\n\n  override fun intercept(chain: Interceptor.Chain): Response {\n    val response = chain.proceed(chain.request())\n    log(\"Call to ${targetName(chain)} returned ${response.code}\")\n    return response\n  }\n\n  private fun targetName(chain: Interceptor.Chain): String? {\n    val invocation = chain.request().tag(Invocation::class.java)\n    if (invocation != null) return \"$clientName.${invocation.method().name}\"\n\n    val grpcMethod = chain.request().tag(GrpcMethod::class.java)\n    if (grpcMethod != null) return \"$clientName.${grpcMethod.path.substringAfterLast(\"/\")}\"\n\n    return null\n  }\n}\n</code></pre> <p>Calls made via Retrofit or the Wire gRPC client have metadata objects available as tags on the HTTP request. You can use these to find out which Retrofit method was called (and its arguments), or which gRPC method was called.</p> <p>In these interceptors it\u2019s possible to rewrite the request body, request URL, and request headers. It\u2019s also possible to rewrite the returned response body, headers, or status code. You might do this to inject a missing response header or remove one.</p> <p>The built-in outbound application interceptors are:</p> <ul> <li>ClientMetricsInterceptor</li> <li>ClientLoggingInterceptor</li> </ul> <p>Multibind these with <code>ClientApplicationInterceptorFactory</code>.</p>"},{"location":"interceptors/#outbound-network-interceptors","title":"Outbound Network Interceptors","text":"<p>These run on outbound calls after the outbound application interceptors. These run after the socket connection to the remote HTTP server has been established.</p> <pre><code>class LoggingInterceptor : ClientNetworkInterceptor {\n  override fun intercept(chain: ClientNetworkChain): Response {\n    log(\"executing ${chain.action}\")\n    return chain.proceed(chain.request)\n  }\n}\n</code></pre> <p>Network interceptors cannot rewrite the destination hostname or URL. They can rewrite outbound request bodies and request headers. They can also rewrite returned status codes, bodies and headers.</p> <p>Misk has no built-in network interceptors.</p> <p>Multibind these with <code>ClientNetworkInterceptor.Factory</code>.</p>"},{"location":"modules/","title":"Misk Modules","text":"<p>Misk is split into many Gradle subprojects to organize functionality. The below is an overview of some of the modules.</p>"},{"location":"modules/#misk-actions","title":"misk-actions","text":"<p>The core annotations and interfaces necessary to define actions that can be hosted in Misk. This package has no dependency on the enclosing container (Misk!) and so your actions can be used in other environments without any heavy dependencies.</p> <p>Actions should extend <code>WebAction</code>, be annotated with a HTTP method like <code>@Post</code>, accept a request object and return a response object. Throw an exception like <code>BadRequestException</code> to fail the request without much boilerplate.</p>"},{"location":"modules/#misk-aws","title":"misk-aws","text":"<p>Integrate with Amazon Web Services, and includes packages to integrate with S3 and SQS.</p>"},{"location":"modules/#misk-aws-dynamodb","title":"misk-aws-dynamodb","text":"<p>Integrate with AWS DynamoDb using AWS SDK for Java 1.x. It should be safe to install side-by-side with <code>misk-aws2-dynamodb</code> if you need to use features in both.</p>"},{"location":"modules/#misk-aws-dynamodb-testing","title":"misk-aws-dynamodb-testing","text":"<p>Integrate with this package to write tests for code that interacts with DynamoDb. Exposes APIs via AWS SDK for Java 1.x. Use alongside with <code>misk-aws-dynamodb</code>.</p> <p>Installing <code>InProcessDynamoDbModule</code> runs a DynamoDb Local instance in memory for your tests to run against. This module is recommended over <code>DockerDynamoDbModule</code> because there is less overhead in test execution performance.</p> <p>Installing <code>DockerDynamoDbModule</code> runs a DynamoDB Local instance in Docker for your tests to execute against.</p>"},{"location":"modules/#misk-aws2-dynamodb","title":"misk-aws2-dynamodb","text":"<p>Integrate with AWS DynamoDb using AWS SDK for Java 2.x. It should be safe to install side-by-side with <code>misk-aws-dynamodb</code> if you need to use features in both.</p> <p>Please read the AWS SDK for Java 2.x Migration Guide for more details.</p>"},{"location":"modules/#misk-aws2-dynamodb-testing","title":"misk-aws2-dynamodb-testing","text":"<p>Integrate with this package to write tests for code that interacts with DynamoDb. Exposes APIs via AWS SDK for Java 2.x. Use alongside with <code>misk-aws2-dynamodb</code>.</p> <p>Installing <code>InProcessDynamoDbModule</code> runs a DynamoDb Local instance in memory for your tests to run against. This module is recommended over <code>DockerDynamoDbModule</code> because there is less overhead in test execution performance.</p> <p>Installing <code>DockerDynamoDbModule</code> runs a DynamoDB Local instance in Docker for your tests to execute against.</p>"},{"location":"modules/#misk-service","title":"misk-service","text":"<p>Bind Guava services with inter-service dependencies.</p> <p>Any service can depend on any other service. ServiceManager won\u2019t start a service until the services it depends on are running.</p>"},{"location":"modules/#misk-inject","title":"misk-inject","text":"<p>Integrates Guice with Kotlin.</p> <p>Extending <code>KAbstractModule</code> instead of Guice\u2019s <code>AbstractModule</code> lets you use <code>KClass</code> instead of <code>java.lang.Class</code> and other conveniences.</p>"},{"location":"modules/#misk-feature","title":"misk-feature","text":"<p>Runtime feature flags. <code>misk-launchdarkly</code> is the reference implementation.</p>"},{"location":"modules/#misk-jobqueue","title":"misk-jobqueue","text":"<p>A job queue with a high quality fake. <code>AwsSqsJobQueueModule</code> from <code>misk-aws</code> is the reference implementation.</p>"},{"location":"modules/#misk-events","title":"misk-events","text":"<p>An event publisher + consumer. There is no open source reference implementation at this time.</p>"},{"location":"testing/","title":"Testing","text":"<p>Misk provides a few ways to streamline testing with JUnit.</p> <p>Without Misk, you would instantiate units under test and their dependencies:</p> <pre><code>class FeatureWithoutMiskTest {\n    @Test \n    fun `tests something`() {\n        val repository = MyRepository()\n        val handler = MyHandler(repository)\n\n        // ... perform assertions\n    }\n}\n</code></pre>"},{"location":"testing/#using-misktest","title":"Using <code>@MiskTest</code>","text":"<p><code>@MiskTest</code> will stand up a Misk app given a provided module and then inject members onto the test  class. For instance, with a test that looks like this:</p> <pre><code>@MiskTest(startService = true)\nclass HelloWebIntegrationTest {\n  @MiskTestModule val module = MyTestingModule()\n\n  @Inject lateinit var myHandler: MyHandler\n\n  @Test\n  fun `makes a call to the service`() {\n      // use myHandler...\n  }\n}\n\nclass MyTestingModule : KAbstractModule() {\n    override fun configure() {\n        // add modules, declare bindings...\n    }\n}\n</code></pre> <ul> <li><code>@MiskTest</code> signals to JUnit to honour the other annotations.</li> <li><code>@MiskTestModule</code> declares which module to use to perform the tests in this class. This module (or a sub-module under it) should have a binding for <code>MyHandler</code>, which gets injected in the test class.</li> </ul>"},{"location":"testing/#next-steps","title":"Next steps","text":"<p>Some common domains to test:</p> <ul> <li>Testing actions</li> </ul>"},{"location":"0.x/detektive/","title":"detektive - Misk","text":"<p>//detektive</p>"},{"location":"0.x/detektive/#detektive","title":"detektive","text":""},{"location":"0.x/detektive/#packages","title":"Packages","text":"Name cash.detektive cash.detektive.javacompat"},{"location":"0.x/detektive/detektive/cash.detektive/","title":"Package cash.detektive - Misk","text":"<p>//detektive/cash.detektive</p>"},{"location":"0.x/detektive/detektive/cash.detektive/#package-cashdetektive","title":"Package cash.detektive","text":""},{"location":"0.x/detektive/detektive/cash.detektive/#types","title":"Types","text":"Name Summary DetektiveRuleSetProvider [jvm]class DetektiveRuleSetProvider : RuleSetProvider"},{"location":"0.x/detektive/detektive/cash.detektive/-detektive-rule-set-provider/","title":"DetektiveRuleSetProvider - Misk","text":"<p>//detektive/cash.detektive/DetektiveRuleSetProvider</p>"},{"location":"0.x/detektive/detektive/cash.detektive/-detektive-rule-set-provider/#detektiverulesetprovider","title":"DetektiveRuleSetProvider","text":"<p>[jvm]\\ class DetektiveRuleSetProvider : RuleSetProvider</p>"},{"location":"0.x/detektive/detektive/cash.detektive/-detektive-rule-set-provider/#functions","title":"Functions","text":"Name Summary instance [jvm]open override fun instance(config: Config): RuleSet"},{"location":"0.x/detektive/detektive/cash.detektive/-detektive-rule-set-provider/#properties","title":"Properties","text":"Name Summary ruleSetId [jvm]open override val ruleSetId: String"},{"location":"0.x/detektive/detektive/cash.detektive/-detektive-rule-set-provider/-detektive-rule-set-provider/","title":"DetektiveRuleSetProvider - Misk","text":"<p>//detektive/cash.detektive/DetektiveRuleSetProvider/DetektiveRuleSetProvider</p>"},{"location":"0.x/detektive/detektive/cash.detektive/-detektive-rule-set-provider/-detektive-rule-set-provider/#detektiverulesetprovider","title":"DetektiveRuleSetProvider","text":"<p>[jvm]\\ fun DetektiveRuleSetProvider()</p>"},{"location":"0.x/detektive/detektive/cash.detektive/-detektive-rule-set-provider/instance/","title":"instance - Misk","text":"<p>//detektive/cash.detektive/DetektiveRuleSetProvider/instance</p>"},{"location":"0.x/detektive/detektive/cash.detektive/-detektive-rule-set-provider/instance/#instance","title":"instance","text":"<p>[jvm]\\ open override fun instance(config: Config): RuleSet</p>"},{"location":"0.x/detektive/detektive/cash.detektive/-detektive-rule-set-provider/rule-set-id/","title":"ruleSetId - Misk","text":"<p>//detektive/cash.detektive/DetektiveRuleSetProvider/ruleSetId</p>"},{"location":"0.x/detektive/detektive/cash.detektive/-detektive-rule-set-provider/rule-set-id/#rulesetid","title":"ruleSetId","text":"<p>[jvm]\\ open override val ruleSetId: String</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/","title":"Package cash.detektive.javacompat - Misk","text":"<p>//detektive/cash.detektive.javacompat</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/#package-cashdetektivejavacompat","title":"Package cash.detektive.javacompat","text":""},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/#types","title":"Types","text":"Name Summary AnnotatePublicApisWithJvmOverloads [jvm]class AnnotatePublicApisWithJvmOverloads(config: Config) : Rule"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/","title":"AnnotatePublicApisWithJvmOverloads - Misk","text":"<p>//detektive/cash.detektive.javacompat/AnnotatePublicApisWithJvmOverloads</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/#annotatepublicapiswithjvmoverloads","title":"AnnotatePublicApisWithJvmOverloads","text":"<p>[jvm]\\ class AnnotatePublicApisWithJvmOverloads(config: Config) : Rule</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/#types","title":"Types","text":"Name Summary ElementType [jvm]enum ElementType : Enum&lt;AnnotatePublicApisWithJvmOverloads.ElementType&gt;"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/#functions","title":"Functions","text":"Name Summary clearFindings [jvm]open override fun clearFindings() report [jvm]fun report(finding: Finding)fun report(findings: List&lt;Finding&gt;)open override fun report(finding: Finding, aliases: Set&lt;String&gt;, ruleSetId: RuleSetId?)open override fun report(findings: List&lt;Finding&gt;, aliases: Set&lt;String&gt;, ruleSetId: RuleSetId?) subConfig [jvm]open override fun subConfig(key: String): Config valueOrDefault [jvm]open override fun &lt;T : Any&gt; valueOrDefault(key: String, default: T): T valueOrNull [jvm]open override fun &lt;T : Any&gt; valueOrNull(key: String): T? visit [jvm]open fun visit(root: KtFile) visitAnnotatedExpression [jvm]open fun visitAnnotatedExpression(@NotNullp0: KtAnnotatedExpression)override fun visitAnnotatedExpression(@NotNullp0: KtAnnotatedExpression, p1: Void): Void visitAnnotation [jvm]open fun visitAnnotation(@NotNullp0: KtAnnotation)override fun visitAnnotation(@NotNullp0: KtAnnotation, p1: Void): Void visitAnnotationEntry [jvm]open fun visitAnnotationEntry(@NotNullp0: KtAnnotationEntry)override fun visitAnnotationEntry(@NotNullp0: KtAnnotationEntry, p1: Void): Void visitAnnotationUseSiteTarget [jvm]open fun visitAnnotationUseSiteTarget(@NotNullp0: KtAnnotationUseSiteTarget, p1: Void): Void visitAnonymousInitializer [jvm]open fun visitAnonymousInitializer(@NotNullp0: KtAnonymousInitializer)override fun visitAnonymousInitializer(@NotNullp0: KtAnonymousInitializer, p1: Void): Void visitArgument [jvm]open fun visitArgument(@NotNullp0: KtValueArgument)override fun visitArgument(@NotNullp0: KtValueArgument, p1: Void): Void visitArrayAccessExpression [jvm]open fun visitArrayAccessExpression(@NotNullp0: KtArrayAccessExpression)override fun visitArrayAccessExpression(@NotNullp0: KtArrayAccessExpression, p1: Void): Void visitBackingField [jvm]open fun visitBackingField(@NotNullp0: KtBackingField, p1: Void): Void visitBinaryExpression [jvm]open fun visitBinaryExpression(@NotNullp0: KtBinaryExpression)override fun visitBinaryExpression(@NotNullp0: KtBinaryExpression, p1: Void): Void visitBinaryFile [jvm]open fun visitBinaryFile(@NotNullp0: @NotNullPsiBinaryFile) visitBinaryWithTypeRHSExpression [jvm]open fun visitBinaryWithTypeRHSExpression(@NotNullp0: KtBinaryExpressionWithTypeRHS)override fun visitBinaryWithTypeRHSExpression(@NotNullp0: KtBinaryExpressionWithTypeRHS, p1: Void): Void visitBlockExpression [jvm]open fun visitBlockExpression(@NotNullp0: KtBlockExpression)override fun visitBlockExpression(@NotNullp0: KtBlockExpression, p1: Void): Void visitBlockStringTemplateEntry [jvm]open fun visitBlockStringTemplateEntry(@NotNullp0: KtBlockStringTemplateEntry)override fun visitBlockStringTemplateEntry(@NotNullp0: KtBlockStringTemplateEntry, p1: Void): Void visitBreakExpression [jvm]open fun visitBreakExpression(@NotNullp0: KtBreakExpression)override fun visitBreakExpression(@NotNullp0: KtBreakExpression, p1: Void): Void visitCallableReferenceExpression [jvm]open fun visitCallableReferenceExpression(@NotNullp0: KtCallableReferenceExpression)override fun visitCallableReferenceExpression(@NotNullp0: KtCallableReferenceExpression, p1: Void): Void visitCallExpression [jvm]open fun visitCallExpression(@NotNullp0: KtCallExpression)override fun visitCallExpression(@NotNullp0: KtCallExpression, p1: Void): Void visitCatchSection [jvm]open fun visitCatchSection(@NotNullp0: KtCatchClause)override fun visitCatchSection(@NotNullp0: KtCatchClause, p1: Void): Void visitClass [jvm]open fun visitClass(@NotNullp0: KtClass)override fun visitClass(@NotNullp0: KtClass, p1: Void): Void visitClassBody [jvm]open fun visitClassBody(@NotNullp0: KtClassBody)override fun visitClassBody(@NotNullp0: KtClassBody, p1: Void): Void visitClassInitializer [jvm]open fun visitClassInitializer(@NotNullp0: KtClassInitializer)open override fun visitClassInitializer(@NotNullp0: KtClassInitializer, p1: Void): Void visitClassLiteralExpression [jvm]open fun visitClassLiteralExpression(@NotNullp0: KtClassLiteralExpression)override fun visitClassLiteralExpression(@NotNullp0: KtClassLiteralExpression, p1: Void): Void visitClassOrObject [jvm]open fun visitClassOrObject(@NotNullp0: KtClassOrObject)override fun visitClassOrObject(@NotNullp0: KtClassOrObject, p1: Void): Void visitCollectionLiteralExpression [jvm]open fun visitCollectionLiteralExpression(@NotNullp0: KtCollectionLiteralExpression)override fun visitCollectionLiteralExpression(@NotNullp0: KtCollectionLiteralExpression, p1: Void): Void visitComment [jvm]open fun visitComment(@NotNullp0: @NotNullPsiComment) visitCondition [jvm]open override fun visitCondition(root: KtFile): Boolean visitConstantExpression [jvm]open fun visitConstantExpression(@NotNullp0: KtConstantExpression)override fun visitConstantExpression(@NotNullp0: KtConstantExpression, p1: Void): Void visitConstructorCalleeExpression [jvm]open fun visitConstructorCalleeExpression(@NotNullp0: KtConstructorCalleeExpression)override fun visitConstructorCalleeExpression(@NotNullp0: KtConstructorCalleeExpression, p1: Void): Void visitConstructorDelegationCall [jvm]open fun visitConstructorDelegationCall(@NotNullp0: KtConstructorDelegationCall)override fun visitConstructorDelegationCall(@NotNullp0: KtConstructorDelegationCall, p1: Void): Void visitContextReceiverList [jvm]open fun visitContextReceiverList(@NotNullp0: KtContextReceiverList)open fun visitContextReceiverList(@NotNullp0: KtContextReceiverList, p1: Void): Void visitContinueExpression [jvm]open fun visitContinueExpression(@NotNullp0: KtContinueExpression)override fun visitContinueExpression(@NotNullp0: KtContinueExpression, p1: Void): Void visitDeclaration [jvm]open fun visitDeclaration(@NotNullp0: KtDeclaration)override fun visitDeclaration(@NotNullp0: KtDeclaration, p1: Void): Void visitDelegatedSuperTypeEntry [jvm]open fun visitDelegatedSuperTypeEntry(@NotNullp0: KtDelegatedSuperTypeEntry)override fun visitDelegatedSuperTypeEntry(@NotNullp0: KtDelegatedSuperTypeEntry, p1: Void): Void visitDestructuringDeclaration [jvm]open fun visitDestructuringDeclaration(@NotNullp0: KtDestructuringDeclaration)override fun visitDestructuringDeclaration(@NotNullp0: KtDestructuringDeclaration, p1: Void): Void visitDestructuringDeclarationEntry [jvm]open fun visitDestructuringDeclarationEntry(@NotNullp0: KtDestructuringDeclarationEntry)override fun visitDestructuringDeclarationEntry(@NotNullp0: KtDestructuringDeclarationEntry, p1: Void): Void visitDirectory [jvm]open fun visitDirectory(@NotNullp0: @NotNullPsiDirectory) visitDotQualifiedExpression [jvm]open fun visitDotQualifiedExpression(@NotNullp0: KtDotQualifiedExpression)override fun visitDotQualifiedExpression(@NotNullp0: KtDotQualifiedExpression, p1: Void): Void visitDoubleColonExpression [jvm]open fun visitDoubleColonExpression(@NotNullp0: KtDoubleColonExpression)override fun visitDoubleColonExpression(@NotNullp0: KtDoubleColonExpression, p1: Void): Void visitDoWhileExpression [jvm]open fun visitDoWhileExpression(@NotNullp0: KtDoWhileExpression)override fun visitDoWhileExpression(@NotNullp0: KtDoWhileExpression, p1: Void): Void visitDynamicType [jvm]open fun visitDynamicType(@NotNullp0: KtDynamicType)open override fun visitDynamicType(@NotNullp0: KtDynamicType, p1: Void): Void visitElement [jvm]open override fun visitElement(@NotNullp0: PsiElement) visitEnumEntry [jvm]open fun visitEnumEntry(@NotNullp0: KtEnumEntry)override fun visitEnumEntry(@NotNullp0: KtEnumEntry, p1: Void): Void visitErrorElement [jvm]open fun visitErrorElement(@NotNullp0: @NotNullPsiErrorElement) visitEscapeStringTemplateEntry [jvm]open fun visitEscapeStringTemplateEntry(@NotNullp0: KtEscapeStringTemplateEntry)override fun visitEscapeStringTemplateEntry(@NotNullp0: KtEscapeStringTemplateEntry, p1: Void): Void visitExpression [jvm]open fun visitExpression(@NotNullp0: KtExpression)override fun visitExpression(@NotNullp0: KtExpression, p1: Void): Void visitExpressionWithLabel [jvm]open fun visitExpressionWithLabel(@NotNullp0: KtExpressionWithLabel)override fun visitExpressionWithLabel(@NotNullp0: KtExpressionWithLabel, p1: Void): Void visitFile [jvm]open fun visitFile(@NotNullp0: @NotNullPsiFile)fun visitFile(root: KtFile, bindingContext: BindingContext, compilerResources: CompilerResources?) visitFileAnnotationList [jvm]open fun visitFileAnnotationList(@NotNullp0: KtFileAnnotationList, p1: Void): Void visitFinallySection [jvm]open fun visitFinallySection(@NotNullp0: KtFinallySection)override fun visitFinallySection(@NotNullp0: KtFinallySection, p1: Void): Void visitForExpression [jvm]open fun visitForExpression(@NotNullp0: KtForExpression)override fun visitForExpression(@NotNullp0: KtForExpression, p1: Void): Void visitFunctionType [jvm]open fun visitFunctionType(@NotNullp0: KtFunctionType)override fun visitFunctionType(@NotNullp0: KtFunctionType, p1: Void): Void visitIfExpression [jvm]open fun visitIfExpression(@NotNullp0: KtIfExpression)override fun visitIfExpression(@NotNullp0: KtIfExpression, p1: Void): Void visitImportAlias [jvm]open fun visitImportAlias(@NotNullp0: KtImportAlias)open fun visitImportAlias(@NotNullp0: KtImportAlias, p1: Void): Void visitImportDirective [jvm]open fun visitImportDirective(@NotNullp0: KtImportDirective)override fun visitImportDirective(@NotNullp0: KtImportDirective, p1: Void): Void visitImportList [jvm]open fun visitImportList(@NotNullp0: KtImportList)override fun visitImportList(@NotNullp0: KtImportList, p1: Void): Void visitInitializerList [jvm]open fun visitInitializerList(@NotNullp0: KtInitializerList)override fun visitInitializerList(@NotNullp0: KtInitializerList, p1: Void): Void visitIntersectionType [jvm]open fun visitIntersectionType(@NotNullp0: KtIntersectionType)open override fun visitIntersectionType(@NotNullp0: KtIntersectionType, p1: Void): Void visitIsExpression [jvm]open fun visitIsExpression(@NotNullp0: KtIsExpression)override fun visitIsExpression(@NotNullp0: KtIsExpression, p1: Void): Void visitKtElement [jvm]open fun visitKtElement(@NotNullp0: KtElement)override fun visitKtElement(@NotNullp0: KtElement, p1: Void): Void visitKtFile [jvm]open fun visitKtFile(@NotNullp0: KtFile)override fun visitKtFile(@NotNullp0: KtFile, p1: Void): Void visitLabeledExpression [jvm]open fun visitLabeledExpression(@NotNullp0: KtLabeledExpression)override fun visitLabeledExpression(@NotNullp0: KtLabeledExpression, p1: Void): Void visitLambdaExpression [jvm]open fun visitLambdaExpression(@NotNullp0: KtLambdaExpression)override fun visitLambdaExpression(@NotNullp0: KtLambdaExpression, p1: Void): Void visitLiteralStringTemplateEntry [jvm]open fun visitLiteralStringTemplateEntry(@NotNullp0: KtLiteralStringTemplateEntry)override fun visitLiteralStringTemplateEntry(@NotNullp0: KtLiteralStringTemplateEntry, p1: Void): Void visitLoopExpression [jvm]open fun visitLoopExpression(@NotNullp0: KtLoopExpression)override fun visitLoopExpression(@NotNullp0: KtLoopExpression, p1: Void): Void visitModifierList [jvm]open fun visitModifierList(@NotNullp0: KtModifierList)override fun visitModifierList(@NotNullp0: KtModifierList, p1: Void): Void visitNamedDeclaration [jvm]open fun visitNamedDeclaration(@NotNullp0: KtNamedDeclaration)override fun visitNamedDeclaration(@NotNullp0: KtNamedDeclaration, p1: Void): Void visitNamedFunction [jvm]open override fun visitNamedFunction(function: KtNamedFunction)override fun visitNamedFunction(@NotNullp0: KtNamedFunction, p1: Void): Void visitNullableType [jvm]open fun visitNullableType(@NotNullp0: KtNullableType)override fun visitNullableType(@NotNullp0: KtNullableType, p1: Void): Void visitObjectDeclaration [jvm]open fun visitObjectDeclaration(@NotNullp0: KtObjectDeclaration)override fun visitObjectDeclaration(@NotNullp0: KtObjectDeclaration, p1: Void): Void visitObjectLiteralExpression [jvm]open fun visitObjectLiteralExpression(@NotNullp0: KtObjectLiteralExpression)override fun visitObjectLiteralExpression(@NotNullp0: KtObjectLiteralExpression, p1: Void): Void visitOuterLanguageElement [jvm]open fun visitOuterLanguageElement(@NotNullp0: @NotNullOuterLanguageElement) visitPackageDirective [jvm]open fun visitPackageDirective(@NotNullp0: KtPackageDirective)open override fun visitPackageDirective(@NotNullp0: KtPackageDirective, p1: Void): Void visitParameter [jvm]open fun visitParameter(@NotNullp0: KtParameter)override fun visitParameter(@NotNullp0: KtParameter, p1: Void): Void visitParameterList [jvm]open fun visitParameterList(@NotNullp0: KtParameterList)override fun visitParameterList(@NotNullp0: KtParameterList, p1: Void): Void visitParenthesizedExpression [jvm]open fun visitParenthesizedExpression(@NotNullp0: KtParenthesizedExpression)override fun visitParenthesizedExpression(@NotNullp0: KtParenthesizedExpression, p1: Void): Void visitPlainText [jvm]open fun visitPlainText(@NotNullp0: @NotNullPsiPlainText) visitPlainTextFile [jvm]open fun visitPlainTextFile(@NotNullp0: @NotNullPsiPlainTextFile) visitPostfixExpression [jvm]open fun visitPostfixExpression(@NotNullp0: KtPostfixExpression)override fun visitPostfixExpression(@NotNullp0: KtPostfixExpression, p1: Void): Void visitPrefixExpression [jvm]open fun visitPrefixExpression(@NotNullp0: KtPrefixExpression)override fun visitPrefixExpression(@NotNullp0: KtPrefixExpression, p1: Void): Void visitPrimaryConstructor [jvm]open override fun visitPrimaryConstructor(constructor: KtPrimaryConstructor)override fun visitPrimaryConstructor(@NotNullp0: KtPrimaryConstructor, p1: Void): Void visitProperty [jvm]open fun visitProperty(@NotNullp0: KtProperty)override fun visitProperty(@NotNullp0: KtProperty, p1: Void): Void visitPropertyAccessor [jvm]open fun visitPropertyAccessor(@NotNullp0: KtPropertyAccessor)override fun visitPropertyAccessor(@NotNullp0: KtPropertyAccessor, p1: Void): Void visitPropertyDelegate [jvm]open fun visitPropertyDelegate(@NotNullp0: KtPropertyDelegate)override fun visitPropertyDelegate(@NotNullp0: KtPropertyDelegate, p1: Void): Void visitQualifiedExpression [jvm]open fun visitQualifiedExpression(@NotNullp0: KtQualifiedExpression)override fun visitQualifiedExpression(@NotNullp0: KtQualifiedExpression, p1: Void): Void visitReferenceExpression [jvm]open fun visitReferenceExpression(@NotNullp0: KtReferenceExpression)override fun visitReferenceExpression(@NotNullp0: KtReferenceExpression, p1: Void): Void visitReturnExpression [jvm]open fun visitReturnExpression(@NotNullp0: KtReturnExpression)override fun visitReturnExpression(@NotNullp0: KtReturnExpression, p1: Void): Void visitSafeQualifiedExpression [jvm]open fun visitSafeQualifiedExpression(@NotNullp0: KtSafeQualifiedExpression)override fun visitSafeQualifiedExpression(@NotNullp0: KtSafeQualifiedExpression, p1: Void): Void visitScript [jvm]open fun visitScript(@NotNullp0: KtScript)override fun visitScript(@NotNullp0: KtScript, p1: Void): Void visitScriptInitializer [jvm]open fun visitScriptInitializer(@NotNullp0: KtScriptInitializer)open override fun visitScriptInitializer(@NotNullp0: KtScriptInitializer, p1: Void): Void visitSecondaryConstructor [jvm]open fun visitSecondaryConstructor(@NotNullp0: KtSecondaryConstructor)override fun visitSecondaryConstructor(@NotNullp0: KtSecondaryConstructor, p1: Void): Void visitSelfType [jvm]open fun visitSelfType(@NotNullp0: KtSelfType)override fun visitSelfType(@NotNullp0: KtSelfType, p1: Void): Void visitSimpleNameExpression [jvm]open fun visitSimpleNameExpression(@NotNullp0: KtSimpleNameExpression)override fun visitSimpleNameExpression(@NotNullp0: KtSimpleNameExpression, p1: Void): Void visitSimpleNameStringTemplateEntry [jvm]open fun visitSimpleNameStringTemplateEntry(@NotNullp0: KtSimpleNameStringTemplateEntry)override fun visitSimpleNameStringTemplateEntry(@NotNullp0: KtSimpleNameStringTemplateEntry, p1: Void): Void visitStringTemplateEntry [jvm]open fun visitStringTemplateEntry(@NotNullp0: KtStringTemplateEntry)override fun visitStringTemplateEntry(@NotNullp0: KtStringTemplateEntry, p1: Void): Void visitStringTemplateEntryWithExpression [jvm]open fun visitStringTemplateEntryWithExpression(@NotNullp0: KtStringTemplateEntryWithExpression)override fun visitStringTemplateEntryWithExpression(@NotNullp0: KtStringTemplateEntryWithExpression, p1: Void): Void visitStringTemplateExpression [jvm]open fun visitStringTemplateExpression(@NotNullp0: KtStringTemplateExpression)override fun visitStringTemplateExpression(@NotNullp0: KtStringTemplateExpression, p1: Void): Void visitSuperExpression [jvm]open fun visitSuperExpression(@NotNullp0: KtSuperExpression)override fun visitSuperExpression(@NotNullp0: KtSuperExpression, p1: Void): Void visitSuperTypeCallEntry [jvm]open fun visitSuperTypeCallEntry(@NotNullp0: KtSuperTypeCallEntry)override fun visitSuperTypeCallEntry(@NotNullp0: KtSuperTypeCallEntry, p1: Void): Void visitSuperTypeEntry [jvm]open fun visitSuperTypeEntry(@NotNullp0: KtSuperTypeEntry)override fun visitSuperTypeEntry(@NotNullp0: KtSuperTypeEntry, p1: Void): Void visitSuperTypeList [jvm]open fun visitSuperTypeList(@NotNullp0: KtSuperTypeList)override fun visitSuperTypeList(@NotNullp0: KtSuperTypeList, p1: Void): Void visitSuperTypeListEntry [jvm]open fun visitSuperTypeListEntry(@NotNullp0: KtSuperTypeListEntry)override fun visitSuperTypeListEntry(@NotNullp0: KtSuperTypeListEntry, p1: Void): Void visitThisExpression [jvm]open fun visitThisExpression(@NotNullp0: KtThisExpression)override fun visitThisExpression(@NotNullp0: KtThisExpression, p1: Void): Void visitThrowExpression [jvm]open fun visitThrowExpression(@NotNullp0: KtThrowExpression)override fun visitThrowExpression(@NotNullp0: KtThrowExpression, p1: Void): Void visitTryExpression [jvm]open fun visitTryExpression(@NotNullp0: KtTryExpression)override fun visitTryExpression(@NotNullp0: KtTryExpression, p1: Void): Void visitTypeAlias [jvm]open fun visitTypeAlias(@NotNullp0: KtTypeAlias)override fun visitTypeAlias(@NotNullp0: KtTypeAlias, p1: Void): Void visitTypeArgumentList [jvm]open fun visitTypeArgumentList(@NotNullp0: KtTypeArgumentList)override fun visitTypeArgumentList(@NotNullp0: KtTypeArgumentList, p1: Void): Void visitTypeConstraint [jvm]open fun visitTypeConstraint(@NotNullp0: KtTypeConstraint)override fun visitTypeConstraint(@NotNullp0: KtTypeConstraint, p1: Void): Void visitTypeConstraintList [jvm]open fun visitTypeConstraintList(@NotNullp0: KtTypeConstraintList)override fun visitTypeConstraintList(@NotNullp0: KtTypeConstraintList, p1: Void): Void visitTypeParameter [jvm]open fun visitTypeParameter(@NotNullp0: KtTypeParameter)override fun visitTypeParameter(@NotNullp0: KtTypeParameter, p1: Void): Void visitTypeParameterList [jvm]open fun visitTypeParameterList(@NotNullp0: KtTypeParameterList)override fun visitTypeParameterList(@NotNullp0: KtTypeParameterList, p1: Void): Void visitTypeProjection [jvm]open fun visitTypeProjection(@NotNullp0: KtTypeProjection)override fun visitTypeProjection(@NotNullp0: KtTypeProjection, p1: Void): Void visitTypeReference [jvm]open fun visitTypeReference(@NotNullp0: KtTypeReference)override fun visitTypeReference(@NotNullp0: KtTypeReference, p1: Void): Void visitUnaryExpression [jvm]open fun visitUnaryExpression(@NotNullp0: KtUnaryExpression)override fun visitUnaryExpression(@NotNullp0: KtUnaryExpression, p1: Void): Void visitUserType [jvm]open fun visitUserType(@NotNullp0: KtUserType)override fun visitUserType(@NotNullp0: KtUserType, p1: Void): Void visitValueArgumentList [jvm]open fun visitValueArgumentList(@NotNullp0: KtValueArgumentList)override fun visitValueArgumentList(@NotNullp0: KtValueArgumentList, p1: Void): Void visitWhenConditionInRange [jvm]open fun visitWhenConditionInRange(@NotNullp0: KtWhenConditionInRange)override fun visitWhenConditionInRange(@NotNullp0: KtWhenConditionInRange, p1: Void): Void visitWhenConditionIsPattern [jvm]open fun visitWhenConditionIsPattern(@NotNullp0: KtWhenConditionIsPattern)override fun visitWhenConditionIsPattern(@NotNullp0: KtWhenConditionIsPattern, p1: Void): Void visitWhenConditionWithExpression [jvm]open fun visitWhenConditionWithExpression(@NotNullp0: KtWhenConditionWithExpression)override fun visitWhenConditionWithExpression(@NotNullp0: KtWhenConditionWithExpression, p1: Void): Void visitWhenEntry [jvm]open fun visitWhenEntry(@NotNullp0: KtWhenEntry)override fun visitWhenEntry(@NotNullp0: KtWhenEntry, p1: Void): Void visitWhenExpression [jvm]open fun visitWhenExpression(@NotNullp0: KtWhenExpression)override fun visitWhenExpression(@NotNullp0: KtWhenExpression, p1: Void): Void visitWhileExpression [jvm]open fun visitWhileExpression(@NotNullp0: KtWhileExpression)override fun visitWhileExpression(@NotNullp0: KtWhileExpression, p1: Void): Void visitWhiteSpace [jvm]open fun visitWhiteSpace(@NotNullp0: @NotNullPsiWhiteSpace) withAutoCorrect [jvm]open fun withAutoCorrect(block: () -&gt; Unit)"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/#properties","title":"Properties","text":"Name Summary active [jvm]open val active: Boolean aliases [jvm]val aliases: Set&lt;String&gt; autoCorrect [jvm]open val autoCorrect: Boolean bindingContext [jvm]var bindingContext: BindingContext compilerResources [jvm]var compilerResources: CompilerResources? defaultRuleIdAliases [jvm]open val defaultRuleIdAliases: Set&lt;String&gt; filters [jvm]open val filters: PathFilters? findings [jvm]open override val findings: List&lt;Finding&gt; issue [jvm]open override val issue: Issue parentPath [jvm]open val parentPath: String? ruleId [jvm]override val ruleId: RuleId ruleSetConfig [jvm]open override val ruleSetConfig: Config"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/-annotate-public-apis-with-jvm-overloads/","title":"AnnotatePublicApisWithJvmOverloads - Misk","text":"<p>//detektive/cash.detektive.javacompat/AnnotatePublicApisWithJvmOverloads/AnnotatePublicApisWithJvmOverloads</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/-annotate-public-apis-with-jvm-overloads/#annotatepublicapiswithjvmoverloads","title":"AnnotatePublicApisWithJvmOverloads","text":"<p>[jvm]\\ fun AnnotatePublicApisWithJvmOverloads(config: Config)</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/issue/","title":"issue - Misk","text":"<p>//detektive/cash.detektive.javacompat/AnnotatePublicApisWithJvmOverloads/issue</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/issue/#issue","title":"issue","text":"<p>[jvm]\\ open override val issue: Issue</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/visit-named-function/","title":"visitNamedFunction - Misk","text":"<p>//detektive/cash.detektive.javacompat/AnnotatePublicApisWithJvmOverloads/visitNamedFunction</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/visit-named-function/#visitnamedfunction","title":"visitNamedFunction","text":"<p>[jvm]\\ open override fun visitNamedFunction(function: KtNamedFunction)</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/visit-primary-constructor/","title":"visitPrimaryConstructor - Misk","text":"<p>//detektive/cash.detektive.javacompat/AnnotatePublicApisWithJvmOverloads/visitPrimaryConstructor</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/visit-primary-constructor/#visitprimaryconstructor","title":"visitPrimaryConstructor","text":"<p>[jvm]\\ open override fun visitPrimaryConstructor(constructor: KtPrimaryConstructor)</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/-element-type/","title":"ElementType - Misk","text":"<p>//detektive/cash.detektive.javacompat/AnnotatePublicApisWithJvmOverloads/ElementType</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/-element-type/#elementtype","title":"ElementType","text":"<p>[jvm]\\ enum ElementType : Enum&lt;AnnotatePublicApisWithJvmOverloads.ElementType&gt;</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/-element-type/#entries","title":"Entries","text":"CONSTRUCTOR [jvm]CONSTRUCTOR() FUNCTION [jvm]FUNCTION()"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/-element-type/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/-element-type/-c-o-n-s-t-r-u-c-t-o-r/","title":"CONSTRUCTOR - Misk","text":"<p>//detektive/cash.detektive.javacompat/AnnotatePublicApisWithJvmOverloads/ElementType/CONSTRUCTOR</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/-element-type/-c-o-n-s-t-r-u-c-t-o-r/#constructor","title":"CONSTRUCTOR","text":"<p>[jvm]\\ CONSTRUCTOR()</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/-element-type/-c-o-n-s-t-r-u-c-t-o-r/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/-element-type/-f-u-n-c-t-i-o-n/","title":"FUNCTION - Misk","text":"<p>//detektive/cash.detektive.javacompat/AnnotatePublicApisWithJvmOverloads/ElementType/FUNCTION</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/-element-type/-f-u-n-c-t-i-o-n/#function","title":"FUNCTION","text":"<p>[jvm]\\ FUNCTION()</p>"},{"location":"0.x/detektive/detektive/cash.detektive.javacompat/-annotate-public-apis-with-jvm-overloads/-element-type/-f-u-n-c-t-i-o-n/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/exemplar/","title":"exemplar - Misk","text":"<p>//exemplar</p>"},{"location":"0.x/exemplar/#exemplar","title":"exemplar","text":""},{"location":"0.x/exemplar/#packages","title":"Packages","text":"Name com.squareup.exemplar com.squareup.exemplar.actions com.squareup.exemplar.dashboard com.squareup.exemplar.dashboard.admin com.squareup.exemplar.dashboard.frontend com.squareup.exemplar.dashboard.support"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/","title":"Package com.squareup.exemplar - Misk","text":"<p>//exemplar/com.squareup.exemplar</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/#package-comsquareupexemplar","title":"Package com.squareup.exemplar","text":""},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/#types","title":"Types","text":"Name Summary ExemplarAccessModule [jvm]class ExemplarAccessModule : KAbstractModule ExemplarConfig [jvm]data class ExemplarConfig(apiKey: Secret&lt;String&gt;, web: WebConfig, prometheus: PrometheusConfig, redacted: String) : Config ExemplarJavaApp [jvm]open class ExemplarJavaApp ExemplarJavaConfig [jvm]open class ExemplarJavaConfig : Config ExemplarJavaModule [jvm]open class ExemplarJavaModule : AbstractModule ExemplarLogging [jvm]object ExemplarLogging ExemplarWebActionsModule [jvm]class ExemplarWebActionsModule : KAbstractModule HelloJavaAction [jvm]@Singletonopen class HelloJavaAction : WebAction"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/#functions","title":"Functions","text":"Name Summary main [jvm]fun main(args: Array&lt;String&gt;)"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/main/","title":"main - Misk","text":"<p>//exemplar/com.squareup.exemplar/main</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/main/#main","title":"main","text":"<p>[jvm]\\ fun main(args: Array&lt;String&gt;)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-access-module/","title":"ExemplarAccessModule - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarAccessModule</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-access-module/#exemplaraccessmodule","title":"ExemplarAccessModule","text":"<p>[jvm]\\ class ExemplarAccessModule : KAbstractModule</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-access-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-access-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-access-module/-exemplar-access-module/","title":"ExemplarAccessModule - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarAccessModule/ExemplarAccessModule</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-access-module/-exemplar-access-module/#exemplaraccessmodule","title":"ExemplarAccessModule","text":"<p>[jvm]\\ fun ExemplarAccessModule()</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-config/","title":"ExemplarConfig - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarConfig</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-config/#exemplarconfig","title":"ExemplarConfig","text":"<p>[jvm]\\ data class ExemplarConfig(apiKey: Secret&lt;String&gt;, web: WebConfig, prometheus: PrometheusConfig, redacted: String) : Config</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-config/#properties","title":"Properties","text":"Name Summary apiKey [jvm]val apiKey: Secret&lt;String&gt; prometheus [jvm]val prometheus: PrometheusConfig redacted [jvm]val redacted: String web [jvm]val web: WebConfig"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-config/-exemplar-config/","title":"ExemplarConfig - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarConfig/ExemplarConfig</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-config/-exemplar-config/#exemplarconfig","title":"ExemplarConfig","text":"<p>[jvm]\\ fun ExemplarConfig(apiKey: Secret&lt;String&gt;, web: WebConfig, prometheus: PrometheusConfig, redacted: String)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-config/api-key/","title":"apiKey - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarConfig/apiKey</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-config/api-key/#apikey","title":"apiKey","text":"<p>[jvm]\\ val apiKey: Secret&lt;String&gt;</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-config/prometheus/","title":"prometheus - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarConfig/prometheus</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-config/prometheus/#prometheus","title":"prometheus","text":"<p>[jvm]\\ val prometheus: PrometheusConfig</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-config/redacted/","title":"redacted - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarConfig/redacted</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-config/redacted/#redacted","title":"redacted","text":"<p>[jvm]\\ val redacted: String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-config/web/","title":"web - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarConfig/web</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-config/web/#web","title":"web","text":"<p>[jvm]\\ val web: WebConfig</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-java-app/","title":"ExemplarJavaApp - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarJavaApp</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-java-app/#exemplarjavaapp","title":"ExemplarJavaApp","text":"<p>[jvm]\\ open class ExemplarJavaApp</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-java-app/#functions","title":"Functions","text":"Name Summary main [jvm]open fun main(args: Array&lt;String&gt;)"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-java-app/main/","title":"main - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarJavaApp/main</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-java-app/main/#main","title":"main","text":"<p>[jvm]\\ open fun main(args: Array&lt;String&gt;)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-java-config/","title":"ExemplarJavaConfig - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarJavaConfig</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-java-config/#exemplarjavaconfig","title":"ExemplarJavaConfig","text":"<p>[jvm]\\ open class ExemplarJavaConfig : Config</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-java-config/#properties","title":"Properties","text":"Name Summary web [jvm]open val web: WebConfig"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-java-config/web/","title":"web - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarJavaConfig/web</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-java-config/web/#web","title":"web","text":"<p>[jvm]\\ open val web: WebConfig</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-java-module/","title":"ExemplarJavaModule - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarJavaModule</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-java-module/#exemplarjavamodule","title":"ExemplarJavaModule","text":"<p>[jvm]\\ open class ExemplarJavaModule : AbstractModule</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-java-module/#functions","title":"Functions","text":"Name Summary configure [jvm]fun configure(builder: Binder)"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-logging/","title":"ExemplarLogging - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarLogging</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-logging/#exemplarlogging","title":"ExemplarLogging","text":"<p>[jvm]\\ object ExemplarLogging</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-logging/#functions","title":"Functions","text":"Name Summary configure [jvm]fun configure()"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-logging/configure/","title":"configure - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarLogging/configure</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-logging/configure/#configure","title":"configure","text":"<p>[jvm]\\ fun configure()</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-web-actions-module/","title":"ExemplarWebActionsModule - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarWebActionsModule</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-web-actions-module/#exemplarwebactionsmodule","title":"ExemplarWebActionsModule","text":"<p>[jvm]\\ class ExemplarWebActionsModule : KAbstractModule</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-web-actions-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-web-actions-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-web-actions-module/-exemplar-web-actions-module/","title":"ExemplarWebActionsModule - Misk","text":"<p>//exemplar/com.squareup.exemplar/ExemplarWebActionsModule/ExemplarWebActionsModule</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-exemplar-web-actions-module/-exemplar-web-actions-module/#exemplarwebactionsmodule","title":"ExemplarWebActionsModule","text":"<p>[jvm]\\ fun ExemplarWebActionsModule()</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-hello-java-action/","title":"HelloJavaAction - Misk","text":"<p>//exemplar/com.squareup.exemplar/HelloJavaAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-hello-java-action/#hellojavaaction","title":"HelloJavaAction","text":"<p>[jvm]\\ @Singleton</p> <p>open class HelloJavaAction : WebAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-hello-java-action/#functions","title":"Functions","text":"Name Summary hello [jvm]open fun hello(name: String, headers: Headers): HelloJavaAction.HelloJavaResponse"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-hello-java-action/hello/","title":"hello - Misk","text":"<p>//exemplar/com.squareup.exemplar/HelloJavaAction/hello</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar/-hello-java-action/hello/#hello","title":"hello","text":"<p>[jvm]\\ open fun hello(name: String, headers: Headers): HelloJavaAction.HelloJavaResponse</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/","title":"Package com.squareup.exemplar.actions - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/#package-comsquareupexemplaractions","title":"Package com.squareup.exemplar.actions","text":""},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/#types","title":"Types","text":"Name Summary DownloadAFileWebAction [jvm]@Singletonclass DownloadAFileWebAction@Injectconstructor : WebAction EchoFormAction [jvm]@Singletonclass EchoFormAction@Injectconstructor : WebAction HelloPostResponse [jvm]data class HelloPostResponse(greeting: String, name: String) HelloResponse [jvm]data class HelloResponse(greeting: String, name: String) HelloWebAction [jvm]@Singletonclass HelloWebAction@Injectconstructor(tokenGenerator: &lt;ERROR CLASS&gt;) : WebAction HelloWebPostAction [jvm]@Singletonclass HelloWebPostAction@Injectconstructor : WebAction HelloWebProtoAction [jvm]class HelloWebProtoAction@Injectconstructor : WebAction PostBody [jvm]data class PostBody(greeting: String)"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-download-a-file-web-action/","title":"DownloadAFileWebAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/DownloadAFileWebAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-download-a-file-web-action/#downloadafilewebaction","title":"DownloadAFileWebAction","text":"<p>[jvm]\\ @Singleton</p> <p>class DownloadAFileWebAction@Injectconstructor : WebAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-download-a-file-web-action/#functions","title":"Functions","text":"Name Summary download [jvm]fun download(name: String): Response&lt;String&gt;"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-download-a-file-web-action/-download-a-file-web-action/","title":"DownloadAFileWebAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/DownloadAFileWebAction/DownloadAFileWebAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-download-a-file-web-action/-download-a-file-web-action/#downloadafilewebaction","title":"DownloadAFileWebAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun DownloadAFileWebAction()</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-download-a-file-web-action/download/","title":"download - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/DownloadAFileWebAction/download</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-download-a-file-web-action/download/#download","title":"download","text":"<p>[jvm]\\ fun download(name: String): Response&lt;String&gt;</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/","title":"EchoFormAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/EchoFormAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/#echoformaction","title":"EchoFormAction","text":"<p>[jvm]\\ @Singleton</p> <p>class EchoFormAction@Injectconstructor : WebAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/#types","title":"Types","text":"Name Summary Form [jvm]data class Form(string: String, int: Int, nullable: String?, optional: String, list: List&lt;String&gt;)"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/#functions","title":"Functions","text":"Name Summary echo [jvm]fun echo(form: EchoFormAction.Form): EchoFormAction.Form"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-echo-form-action/","title":"EchoFormAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/EchoFormAction/EchoFormAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-echo-form-action/#echoformaction","title":"EchoFormAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun EchoFormAction()</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/echo/","title":"echo - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/EchoFormAction/echo</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/echo/#echo","title":"echo","text":"<p>[jvm]\\ fun echo(form: EchoFormAction.Form): EchoFormAction.Form</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/","title":"Form - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/EchoFormAction/Form</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/#form","title":"Form","text":"<p>[jvm]\\ data class Form(string: String, int: Int, nullable: String?, optional: String, list: List&lt;String&gt;)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/#properties","title":"Properties","text":"Name Summary int [jvm]val int: Int list [jvm]val list: List&lt;String&gt; nullable [jvm]val nullable: String? optional [jvm]val optional: String string [jvm]val string: String"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/-form/","title":"Form - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/EchoFormAction/Form/Form</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/-form/#form","title":"Form","text":"<p>[jvm]\\ fun Form(string: String, int: Int, nullable: String?, optional: String = \u201coptional\u201d, list: List&lt;String&gt;)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/int/","title":"int - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/EchoFormAction/Form/int</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/int/#int","title":"int","text":"<p>[jvm]\\ val int: Int</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/list/","title":"list - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/EchoFormAction/Form/list</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/list/#list","title":"list","text":"<p>[jvm]\\ val list: List&lt;String&gt;</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/nullable/","title":"nullable - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/EchoFormAction/Form/nullable</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/nullable/#nullable","title":"nullable","text":"<p>[jvm]\\ val nullable: String?</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/optional/","title":"optional - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/EchoFormAction/Form/optional</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/optional/#optional","title":"optional","text":"<p>[jvm]\\ val optional: String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/string/","title":"string - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/EchoFormAction/Form/string</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-echo-form-action/-form/string/#string","title":"string","text":"<p>[jvm]\\ val string: String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-post-response/","title":"HelloPostResponse - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloPostResponse</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-post-response/#hellopostresponse","title":"HelloPostResponse","text":"<p>[jvm]\\ data class HelloPostResponse(greeting: String, name: String)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-post-response/#properties","title":"Properties","text":"Name Summary greeting [jvm]val greeting: String name [jvm]val name: String"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-post-response/-hello-post-response/","title":"HelloPostResponse - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloPostResponse/HelloPostResponse</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-post-response/-hello-post-response/#hellopostresponse","title":"HelloPostResponse","text":"<p>[jvm]\\ fun HelloPostResponse(greeting: String, name: String)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-post-response/greeting/","title":"greeting - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloPostResponse/greeting</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-post-response/greeting/#greeting","title":"greeting","text":"<p>[jvm]\\ val greeting: String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-post-response/name/","title":"name - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloPostResponse/name</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-post-response/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-response/","title":"HelloResponse - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloResponse</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-response/#helloresponse","title":"HelloResponse","text":"<p>[jvm]\\ data class HelloResponse(greeting: String, name: String)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-response/#properties","title":"Properties","text":"Name Summary greeting [jvm]val greeting: String name [jvm]val name: String"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-response/-hello-response/","title":"HelloResponse - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloResponse/HelloResponse</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-response/-hello-response/#helloresponse","title":"HelloResponse","text":"<p>[jvm]\\ fun HelloResponse(greeting: String, name: String)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-response/greeting/","title":"greeting - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloResponse/greeting</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-response/greeting/#greeting","title":"greeting","text":"<p>[jvm]\\ val greeting: String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-response/name/","title":"name - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloResponse/name</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-response/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-action/","title":"HelloWebAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloWebAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-action/#hellowebaction","title":"HelloWebAction","text":"<p>[jvm]\\ @Singleton</p> <p>class HelloWebAction@Injectconstructor(tokenGenerator: &lt;ERROR CLASS&gt;) : WebAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-action/#functions","title":"Functions","text":"Name Summary hello [jvm]fun hello(name: String, headers: Headers, nickName: String?, greetings: List&lt;String&gt;?): HelloResponse"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-action/-hello-web-action/","title":"HelloWebAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloWebAction/HelloWebAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-action/-hello-web-action/#hellowebaction","title":"HelloWebAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun HelloWebAction(tokenGenerator: &lt;ERROR CLASS&gt;)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-action/hello/","title":"hello - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloWebAction/hello</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-action/hello/#hello","title":"hello","text":"<p>[jvm]\\ fun hello(name: String, headers: Headers, nickName: String?, greetings: List&lt;String&gt;?): HelloResponse</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-post-action/","title":"HelloWebPostAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloWebPostAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-post-action/#hellowebpostaction","title":"HelloWebPostAction","text":"<p>[jvm]\\ @Singleton</p> <p>class HelloWebPostAction@Injectconstructor : WebAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-post-action/#functions","title":"Functions","text":"Name Summary hello [jvm]fun hello(name: String, body: PostBody): HelloPostResponse"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-post-action/-hello-web-post-action/","title":"HelloWebPostAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloWebPostAction/HelloWebPostAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-post-action/-hello-web-post-action/#hellowebpostaction","title":"HelloWebPostAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun HelloWebPostAction()</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-post-action/hello/","title":"hello - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloWebPostAction/hello</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-post-action/hello/#hello","title":"hello","text":"<p>[jvm]\\ fun hello(name: String, body: PostBody): HelloPostResponse</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-proto-action/","title":"HelloWebProtoAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloWebProtoAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-proto-action/#hellowebprotoaction","title":"HelloWebProtoAction","text":"<p>[jvm]\\ class HelloWebProtoAction@Injectconstructor : WebAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-proto-action/#functions","title":"Functions","text":"Name Summary hello [jvm]fun hello(request: HelloWebRequest): Response&lt;HelloWebResponse&gt;"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-proto-action/-hello-web-proto-action/","title":"HelloWebProtoAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloWebProtoAction/HelloWebProtoAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-proto-action/-hello-web-proto-action/#hellowebprotoaction","title":"HelloWebProtoAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun HelloWebProtoAction()</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-proto-action/hello/","title":"hello - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/HelloWebProtoAction/hello</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-hello-web-proto-action/hello/#hello","title":"hello","text":"<p>[jvm]\\ fun hello(request: HelloWebRequest): Response&lt;HelloWebResponse&gt;</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-post-body/","title":"PostBody - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/PostBody</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-post-body/#postbody","title":"PostBody","text":"<p>[jvm]\\ data class PostBody(greeting: String)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-post-body/#properties","title":"Properties","text":"Name Summary greeting [jvm]val greeting: String"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-post-body/-post-body/","title":"PostBody - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/PostBody/PostBody</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-post-body/-post-body/#postbody","title":"PostBody","text":"<p>[jvm]\\ fun PostBody(greeting: String)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-post-body/greeting/","title":"greeting - Misk","text":"<p>//exemplar/com.squareup.exemplar.actions/PostBody/greeting</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.actions/-post-body/greeting/#greeting","title":"greeting","text":"<p>[jvm]\\ val greeting: String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/","title":"Package com.squareup.exemplar.dashboard - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/#package-comsquareupexemplardashboard","title":"Package com.squareup.exemplar.dashboard","text":""},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/#types","title":"Types","text":"Name Summary ExemplarDashboardModule [jvm]class ExemplarDashboardModule : KAbstractModule SupportDashboard [jvm]@Qualifier@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.FUNCTION])annotation class SupportDashboardDashboard Annotation used for all tabs bound in the Exemplar service support dashboard. SupportDashboardAccess [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class SupportDashboardAccessAccess for the support dashboard."},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-exemplar-dashboard-module/","title":"ExemplarDashboardModule - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard/ExemplarDashboardModule</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-exemplar-dashboard-module/#exemplardashboardmodule","title":"ExemplarDashboardModule","text":"<p>[jvm]\\ class ExemplarDashboardModule : KAbstractModule</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-exemplar-dashboard-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-exemplar-dashboard-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-exemplar-dashboard-module/-exemplar-dashboard-module/","title":"ExemplarDashboardModule - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard/ExemplarDashboardModule/ExemplarDashboardModule</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-exemplar-dashboard-module/-exemplar-dashboard-module/#exemplardashboardmodule","title":"ExemplarDashboardModule","text":"<p>[jvm]\\ fun ExemplarDashboardModule()</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-support-dashboard/","title":"SupportDashboard - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard/SupportDashboard</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-support-dashboard/#supportdashboard","title":"SupportDashboard","text":"<p>[jvm]\\ @Qualifier</p> <p>@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.FUNCTION])</p> <p>annotation class SupportDashboard</p> <p>Dashboard Annotation used for all tabs bound in the Exemplar service support dashboard.</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-support-dashboard/#constructors","title":"Constructors","text":"SupportDashboard [jvm]fun SupportDashboard()"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-support-dashboard/-support-dashboard/","title":"SupportDashboard - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard/SupportDashboard/SupportDashboard</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-support-dashboard/-support-dashboard/#supportdashboard","title":"SupportDashboard","text":"<p>[jvm]\\ fun SupportDashboard()</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-support-dashboard-access/","title":"SupportDashboardAccess - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard/SupportDashboardAccess</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-support-dashboard-access/#supportdashboardaccess","title":"SupportDashboardAccess","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class SupportDashboardAccess</p> <p>Access for the support dashboard.</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-support-dashboard-access/#constructors","title":"Constructors","text":"SupportDashboardAccess [jvm]fun SupportDashboardAccess()"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-support-dashboard-access/-support-dashboard-access/","title":"SupportDashboardAccess - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard/SupportDashboardAccess/SupportDashboardAccess</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard/-support-dashboard-access/-support-dashboard-access/#supportdashboardaccess","title":"SupportDashboardAccess","text":"<p>[jvm]\\ fun SupportDashboardAccess()</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/","title":"Package com.squareup.exemplar.dashboard.admin - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.admin</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/#package-comsquareupexemplardashboardadmin","title":"Package com.squareup.exemplar.dashboard.admin","text":""},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/#types","title":"Types","text":"Name Summary AlphaIndexAction [jvm]@Singletonclass AlphaIndexAction@Injectconstructor(dashboardPageLayout: DashboardPageLayout) : WebAction"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/-alpha-index-action/","title":"AlphaIndexAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.admin/AlphaIndexAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/-alpha-index-action/#alphaindexaction","title":"AlphaIndexAction","text":"<p>[jvm]\\ @Singleton</p> <p>class AlphaIndexAction@Injectconstructor(dashboardPageLayout: DashboardPageLayout) : WebAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/-alpha-index-action/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/-alpha-index-action/#functions","title":"Functions","text":"Name Summary get [jvm]fun get(): String"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/-alpha-index-action/-alpha-index-action/","title":"AlphaIndexAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.admin/AlphaIndexAction/AlphaIndexAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/-alpha-index-action/-alpha-index-action/#alphaindexaction","title":"AlphaIndexAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun AlphaIndexAction(dashboardPageLayout: DashboardPageLayout)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/-alpha-index-action/get/","title":"get - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.admin/AlphaIndexAction/get</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/-alpha-index-action/get/#get","title":"get","text":"<p>[jvm]\\ fun get(): String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/-alpha-index-action/-companion/","title":"Companion - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.admin/AlphaIndexAction/Companion</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/-alpha-index-action/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/-alpha-index-action/-companion/#properties","title":"Properties","text":"Name Summary PATH [jvm]const val PATH: String"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/-alpha-index-action/-companion/-p-a-t-h/","title":"PATH - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.admin/AlphaIndexAction/Companion/PATH</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.admin/-alpha-index-action/-companion/-p-a-t-h/#path","title":"PATH","text":"<p>[jvm]\\ const val PATH: String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/","title":"Package com.squareup.exemplar.dashboard.frontend - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/#package-comsquareupexemplardashboardfrontend","title":"Package com.squareup.exemplar.dashboard.frontend","text":""},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/#types","title":"Types","text":"Name Summary EcommerceLandingPage [jvm]@Singletonclass EcommerceLandingPage@Injectconstructor(appName: String, deployment: Deployment) : WebActionExample page from Tailwind UI https://tailwindui.com/components/ecommerce/page-examples/storefront-pages IndexPage [jvm]@Singletonclass IndexPage@Injectconstructor(appName: String, deployment: Deployment) : WebActionExample page from Tailwind UI https://tailwindui.com/components/ecommerce/page-examples/storefront-pages SimplePage [jvm]@Singletonclass SimplePage@Injectconstructor(appName: String) : WebActionExample page from Tailwind UI https://tailwindui.com/components/ecommerce/page-examples/storefront-pages"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/","title":"EcommerceLandingPage - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend/EcommerceLandingPage</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/#ecommercelandingpage","title":"EcommerceLandingPage","text":"<p>[jvm]\\ @Singleton</p> <p>class EcommerceLandingPage@Injectconstructor(appName: String, deployment: Deployment) : WebAction</p> <p>Example page from Tailwind UI https://tailwindui.com/components/ecommerce/page-examples/storefront-pages</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/#constructors","title":"Constructors","text":"EcommerceLandingPage [jvm]@Injectfun EcommerceLandingPage(appName: String, deployment: Deployment)"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/#functions","title":"Functions","text":"Name Summary get [jvm]fun get(): String"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/-ecommerce-landing-page/","title":"EcommerceLandingPage - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend/EcommerceLandingPage/EcommerceLandingPage</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/-ecommerce-landing-page/#ecommercelandingpage","title":"EcommerceLandingPage","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun EcommerceLandingPage(appName: String, deployment: Deployment)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/get/","title":"get - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend/EcommerceLandingPage/get</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/get/#get","title":"get","text":"<p>[jvm]\\ fun get(): String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/-companion/","title":"Companion - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend/EcommerceLandingPage/Companion</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/-companion/#properties","title":"Properties","text":"Name Summary PATH [jvm]const val PATH: String"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/-companion/-p-a-t-h/","title":"PATH - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend/EcommerceLandingPage/Companion/PATH</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-ecommerce-landing-page/-companion/-p-a-t-h/#path","title":"PATH","text":"<p>[jvm]\\ const val PATH: String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-index-page/","title":"IndexPage - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend/IndexPage</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-index-page/#indexpage","title":"IndexPage","text":"<p>[jvm]\\ @Singleton</p> <p>class IndexPage@Injectconstructor(appName: String, deployment: Deployment) : WebAction</p> <p>Example page from Tailwind UI https://tailwindui.com/components/ecommerce/page-examples/storefront-pages</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-index-page/#constructors","title":"Constructors","text":"IndexPage [jvm]@Injectfun IndexPage(appName: String, deployment: Deployment)"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-index-page/#functions","title":"Functions","text":"Name Summary get [jvm]fun get(): String"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-index-page/-index-page/","title":"IndexPage - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend/IndexPage/IndexPage</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-index-page/-index-page/#indexpage","title":"IndexPage","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun IndexPage(appName: String, deployment: Deployment)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-index-page/get/","title":"get - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend/IndexPage/get</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-index-page/get/#get","title":"get","text":"<p>[jvm]\\ fun get(): String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/","title":"SimplePage - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend/SimplePage</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/#simplepage","title":"SimplePage","text":"<p>[jvm]\\ @Singleton</p> <p>class SimplePage@Injectconstructor(appName: String) : WebAction</p> <p>Example page from Tailwind UI https://tailwindui.com/components/ecommerce/page-examples/storefront-pages</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/#constructors","title":"Constructors","text":"SimplePage [jvm]@Injectfun SimplePage(appName: String)"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/#functions","title":"Functions","text":"Name Summary get [jvm]fun get(): String"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/-simple-page/","title":"SimplePage - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend/SimplePage/SimplePage</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/-simple-page/#simplepage","title":"SimplePage","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun SimplePage(appName: String)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/get/","title":"get - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend/SimplePage/get</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/get/#get","title":"get","text":"<p>[jvm]\\ fun get(): String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/-companion/","title":"Companion - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend/SimplePage/Companion</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/-companion/#properties","title":"Properties","text":"Name Summary PATH [jvm]const val PATH: String"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/-companion/-p-a-t-h/","title":"PATH - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.frontend/SimplePage/Companion/PATH</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.frontend/-simple-page/-companion/-p-a-t-h/#path","title":"PATH","text":"<p>[jvm]\\ const val PATH: String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/","title":"Package com.squareup.exemplar.dashboard.support - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.support</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/#package-comsquareupexemplardashboardsupport","title":"Package com.squareup.exemplar.dashboard.support","text":""},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/#types","title":"Types","text":"Name Summary SupportBravoIndexAction [jvm]@Singletonclass SupportBravoIndexAction@Injectconstructor(dashboardPageLayout: DashboardPageLayout) : WebAction SupportDashboardIndexAction [jvm]@Singletonclass SupportDashboardIndexAction@Injectconstructor(dashboardPageLayout: DashboardPageLayout) : WebAction"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-bravo-index-action/","title":"SupportBravoIndexAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.support/SupportBravoIndexAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-bravo-index-action/#supportbravoindexaction","title":"SupportBravoIndexAction","text":"<p>[jvm]\\ @Singleton</p> <p>class SupportBravoIndexAction@Injectconstructor(dashboardPageLayout: DashboardPageLayout) : WebAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-bravo-index-action/#functions","title":"Functions","text":"Name Summary get [jvm]fun get(): String"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-bravo-index-action/-support-bravo-index-action/","title":"SupportBravoIndexAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.support/SupportBravoIndexAction/SupportBravoIndexAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-bravo-index-action/-support-bravo-index-action/#supportbravoindexaction","title":"SupportBravoIndexAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun SupportBravoIndexAction(dashboardPageLayout: DashboardPageLayout)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-bravo-index-action/get/","title":"get - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.support/SupportBravoIndexAction/get</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-bravo-index-action/get/#get","title":"get","text":"<p>[jvm]\\ fun get(): String</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-dashboard-index-action/","title":"SupportDashboardIndexAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.support/SupportDashboardIndexAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-dashboard-index-action/#supportdashboardindexaction","title":"SupportDashboardIndexAction","text":"<p>[jvm]\\ @Singleton</p> <p>class SupportDashboardIndexAction@Injectconstructor(dashboardPageLayout: DashboardPageLayout) : WebAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-dashboard-index-action/#functions","title":"Functions","text":"Name Summary get [jvm]fun get(): String"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-dashboard-index-action/-support-dashboard-index-action/","title":"SupportDashboardIndexAction - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.support/SupportDashboardIndexAction/SupportDashboardIndexAction</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-dashboard-index-action/-support-dashboard-index-action/#supportdashboardindexaction","title":"SupportDashboardIndexAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun SupportDashboardIndexAction(dashboardPageLayout: DashboardPageLayout)</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-dashboard-index-action/get/","title":"get - Misk","text":"<p>//exemplar/com.squareup.exemplar.dashboard.support/SupportDashboardIndexAction/get</p>"},{"location":"0.x/exemplar/exemplar/com.squareup.exemplar.dashboard.support/-support-dashboard-index-action/get/#get","title":"get","text":"<p>[jvm]\\ fun get(): String</p>"},{"location":"0.x/exemplarchat/","title":"exemplarchat - Misk","text":"<p>//exemplarchat</p>"},{"location":"0.x/exemplarchat/#exemplarchat","title":"exemplarchat","text":""},{"location":"0.x/exemplarchat/#packages","title":"Packages","text":"Name com.squareup.chat com.squareup.chat.actions com.squareup.chat.healthchecks"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/","title":"Package com.squareup.chat - Misk","text":"<p>//exemplarchat/com.squareup.chat</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/#package-comsquareupchat","title":"Package com.squareup.chat","text":""},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/#types","title":"Types","text":"Name Summary ChatConfig [jvm]data class ChatConfig(web: WebConfig, prometheus: PrometheusConfig, kubernetes: KubernetesConfig) : Config ChatLogging [jvm]object ChatLogging ChatModule [jvm]class ChatModule : KAbstractModule"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/#functions","title":"Functions","text":"Name Summary main [jvm]fun main(args: Array&lt;String&gt;)"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/main/","title":"main - Misk","text":"<p>//exemplarchat/com.squareup.chat/main</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/main/#main","title":"main","text":"<p>[jvm]\\ fun main(args: Array&lt;String&gt;)</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-config/","title":"ChatConfig - Misk","text":"<p>//exemplarchat/com.squareup.chat/ChatConfig</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-config/#chatconfig","title":"ChatConfig","text":"<p>[jvm]\\ data class ChatConfig(web: WebConfig, prometheus: PrometheusConfig, kubernetes: KubernetesConfig) : Config</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-config/#properties","title":"Properties","text":"Name Summary kubernetes [jvm]val kubernetes: KubernetesConfig prometheus [jvm]val prometheus: PrometheusConfig web [jvm]val web: WebConfig"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-config/-chat-config/","title":"ChatConfig - Misk","text":"<p>//exemplarchat/com.squareup.chat/ChatConfig/ChatConfig</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-config/-chat-config/#chatconfig","title":"ChatConfig","text":"<p>[jvm]\\ fun ChatConfig(web: WebConfig, prometheus: PrometheusConfig, kubernetes: KubernetesConfig = KubernetesConfig())</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-config/kubernetes/","title":"kubernetes - Misk","text":"<p>//exemplarchat/com.squareup.chat/ChatConfig/kubernetes</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-config/kubernetes/#kubernetes","title":"kubernetes","text":"<p>[jvm]\\ val kubernetes: KubernetesConfig</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-config/prometheus/","title":"prometheus - Misk","text":"<p>//exemplarchat/com.squareup.chat/ChatConfig/prometheus</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-config/prometheus/#prometheus","title":"prometheus","text":"<p>[jvm]\\ val prometheus: PrometheusConfig</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-config/web/","title":"web - Misk","text":"<p>//exemplarchat/com.squareup.chat/ChatConfig/web</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-config/web/#web","title":"web","text":"<p>[jvm]\\ val web: WebConfig</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-logging/","title":"ChatLogging - Misk","text":"<p>//exemplarchat/com.squareup.chat/ChatLogging</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-logging/#chatlogging","title":"ChatLogging","text":"<p>[jvm]\\ object ChatLogging</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-logging/#functions","title":"Functions","text":"Name Summary configure [jvm]fun configure()"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-logging/configure/","title":"configure - Misk","text":"<p>//exemplarchat/com.squareup.chat/ChatLogging/configure</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-logging/configure/#configure","title":"configure","text":"<p>[jvm]\\ fun configure()</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-module/","title":"ChatModule - Misk","text":"<p>//exemplarchat/com.squareup.chat/ChatModule</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-module/#chatmodule","title":"ChatModule","text":"<p>[jvm]\\ class ChatModule : KAbstractModule</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-module/-chat-module/","title":"ChatModule - Misk","text":"<p>//exemplarchat/com.squareup.chat/ChatModule/ChatModule</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat/-chat-module/-chat-module/#chatmodule","title":"ChatModule","text":"<p>[jvm]\\ fun ChatModule()</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/","title":"Package com.squareup.chat.actions - Misk","text":"<p>//exemplarchat/com.squareup.chat.actions</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/#package-comsquareupchatactions","title":"Package com.squareup.chat.actions","text":""},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/#types","title":"Types","text":"Name Summary ChatWebSocketAction [jvm]@Singletonclass ChatWebSocketAction@Injectconstructor(redis: Redis) : WebActionChatWebSocketAction is a basic chat program which supports multiple chat rooms and their histories through web socket connections. ToggleManualHealthCheckAction [jvm]@Singletonclass ToggleManualHealthCheckAction@Injectconstructor : WebAction"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-chat-web-socket-action/","title":"ChatWebSocketAction - Misk","text":"<p>//exemplarchat/com.squareup.chat.actions/ChatWebSocketAction</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-chat-web-socket-action/#chatwebsocketaction","title":"ChatWebSocketAction","text":"<p>[jvm]\\ @Singleton</p> <p>class ChatWebSocketAction@Injectconstructor(redis: Redis) : WebAction</p> <p>ChatWebSocketAction is a basic chat program which supports multiple chat rooms and their histories through web socket connections.</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-chat-web-socket-action/#constructors","title":"Constructors","text":"ChatWebSocketAction [jvm]@Injectfun ChatWebSocketAction(redis: Redis)"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-chat-web-socket-action/#functions","title":"Functions","text":"Name Summary chat [jvm]fun chat(name: String, webSocket: WebSocket): WebSocketListener"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-chat-web-socket-action/-chat-web-socket-action/","title":"ChatWebSocketAction - Misk","text":"<p>//exemplarchat/com.squareup.chat.actions/ChatWebSocketAction/ChatWebSocketAction</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-chat-web-socket-action/-chat-web-socket-action/#chatwebsocketaction","title":"ChatWebSocketAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ChatWebSocketAction(redis: Redis)</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-chat-web-socket-action/chat/","title":"chat - Misk","text":"<p>//exemplarchat/com.squareup.chat.actions/ChatWebSocketAction/chat</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-chat-web-socket-action/chat/#chat","title":"chat","text":"<p>[jvm]\\ fun chat(name: String, webSocket: WebSocket): WebSocketListener</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-toggle-manual-health-check-action/","title":"ToggleManualHealthCheckAction - Misk","text":"<p>//exemplarchat/com.squareup.chat.actions/ToggleManualHealthCheckAction</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-toggle-manual-health-check-action/#togglemanualhealthcheckaction","title":"ToggleManualHealthCheckAction","text":"<p>[jvm]\\ @Singleton</p> <p>class ToggleManualHealthCheckAction@Injectconstructor : WebAction</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-toggle-manual-health-check-action/#functions","title":"Functions","text":"Name Summary setManualHealthCheck [jvm]fun setManualHealthCheck(status: String?): Response&lt;String&gt;"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-toggle-manual-health-check-action/#properties","title":"Properties","text":"Name Summary manualHealthCheck [jvm]@Injectlateinit var manualHealthCheck: ManualHealthCheck"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-toggle-manual-health-check-action/-toggle-manual-health-check-action/","title":"ToggleManualHealthCheckAction - Misk","text":"<p>//exemplarchat/com.squareup.chat.actions/ToggleManualHealthCheckAction/ToggleManualHealthCheckAction</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-toggle-manual-health-check-action/-toggle-manual-health-check-action/#togglemanualhealthcheckaction","title":"ToggleManualHealthCheckAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ToggleManualHealthCheckAction()</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-toggle-manual-health-check-action/manual-health-check/","title":"manualHealthCheck - Misk","text":"<p>//exemplarchat/com.squareup.chat.actions/ToggleManualHealthCheckAction/manualHealthCheck</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-toggle-manual-health-check-action/manual-health-check/#manualhealthcheck","title":"manualHealthCheck","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var manualHealthCheck: ManualHealthCheck</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-toggle-manual-health-check-action/set-manual-health-check/","title":"setManualHealthCheck - Misk","text":"<p>//exemplarchat/com.squareup.chat.actions/ToggleManualHealthCheckAction/setManualHealthCheck</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.actions/-toggle-manual-health-check-action/set-manual-health-check/#setmanualhealthcheck","title":"setManualHealthCheck","text":"<p>[jvm]\\ fun setManualHealthCheck(status: String?): Response&lt;String&gt;</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/","title":"Package com.squareup.chat.healthchecks - Misk","text":"<p>//exemplarchat/com.squareup.chat.healthchecks</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/#package-comsquareupchathealthchecks","title":"Package com.squareup.chat.healthchecks","text":""},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/#types","title":"Types","text":"Name Summary ManualHealthCheck [jvm]@Singletonclass ManualHealthCheck : HealthCheck"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/-manual-health-check/","title":"ManualHealthCheck - Misk","text":"<p>//exemplarchat/com.squareup.chat.healthchecks/ManualHealthCheck</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/-manual-health-check/#manualhealthcheck","title":"ManualHealthCheck","text":"<p>[jvm]\\ @Singleton</p> <p>class ManualHealthCheck : HealthCheck</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/-manual-health-check/#functions","title":"Functions","text":"Name Summary setHealth [jvm]fun setHealth() setUnhealthy [jvm]fun setUnhealthy() status [jvm]open override fun status(): HealthStatus"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/-manual-health-check/-manual-health-check/","title":"ManualHealthCheck - Misk","text":"<p>//exemplarchat/com.squareup.chat.healthchecks/ManualHealthCheck/ManualHealthCheck</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/-manual-health-check/-manual-health-check/#manualhealthcheck","title":"ManualHealthCheck","text":"<p>[jvm]\\ fun ManualHealthCheck()</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/-manual-health-check/set-health/","title":"setHealth - Misk","text":"<p>//exemplarchat/com.squareup.chat.healthchecks/ManualHealthCheck/setHealth</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/-manual-health-check/set-health/#sethealth","title":"setHealth","text":"<p>[jvm]\\ fun setHealth()</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/-manual-health-check/set-unhealthy/","title":"setUnhealthy - Misk","text":"<p>//exemplarchat/com.squareup.chat.healthchecks/ManualHealthCheck/setUnhealthy</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/-manual-health-check/set-unhealthy/#setunhealthy","title":"setUnhealthy","text":"<p>[jvm]\\ fun setUnhealthy()</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/-manual-health-check/status/","title":"status - Misk","text":"<p>//exemplarchat/com.squareup.chat.healthchecks/ManualHealthCheck/status</p>"},{"location":"0.x/exemplarchat/exemplarchat/com.squareup.chat.healthchecks/-manual-health-check/status/#status","title":"status","text":"<p>[jvm]\\ open override fun status(): HealthStatus</p>"},{"location":"0.x/misk/","title":"misk - Misk","text":"<p>//misk</p>"},{"location":"0.x/misk/#misk","title":"misk","text":""},{"location":"0.x/misk/#packages","title":"Packages","text":"Name misk misk.client misk.concurrent misk.environment misk.grpc misk.io misk.jvm misk.monitoring misk.moshi misk.moshi.adapters misk.moshi.okio misk.moshi.time misk.okio misk.perf misk.security.authz misk.security.cert misk.security.csp misk.security.keys misk.security.ssl misk.tasks misk.time misk.web misk.web.actions misk.web.concurrencylimits misk.web.exceptions misk.web.extractors misk.web.formatter misk.web.interceptors misk.web.jetty misk.web.marshal misk.web.mdc misk.web.metadata.webaction misk.web.proxy misk.web.resources"},{"location":"0.x/misk/misk/misk/","title":"Package misk - Misk","text":"<p>//misk/misk</p>"},{"location":"0.x/misk/misk/misk/#package-misk","title":"Package misk","text":""},{"location":"0.x/misk/misk/misk/#types","title":"Types","text":"Name Summary Action [jvm]data class Action(name: String, function: KFunction&lt;*&gt;, acceptedMediaRanges: List&lt;MediaRange&gt;, responseContentType: MediaType?, parameters: List&lt;KParameter&gt;, returnType: KType, dispatchMechanism: DispatchMechanism) ApplicationInterceptor [jvm]interface ApplicationInterceptor Chain [jvm]interface Chain MiskApplication [jvm]class MiskApplicationThe entry point for misk applications MiskCommand [jvm]abstract class MiskCommand(name: String, modules: List&lt;Module&gt;) : RunnableA command to run from the command line. Each command has an associated name and the list of modules to use in initializing the command. Commands can specify optional and required arguments via JCommander annotations. The command line will pick the appropriate command based on the name, create an injector based on that command\u2019s modules, use the injector to initialize the command, and then run the command. MiskCommonServiceModule [jvm]class MiskCommonServiceModule : KAbstractModuleThis module has common bindings for all environments (both real and testing). MiskRealServiceModule [jvm]class MiskRealServiceModule : KAbstractModuleInstall this module in real environments."},{"location":"0.x/misk/misk/misk/#functions","title":"Functions","text":"Name Summary asAction [jvm]fun KFunction&lt;*&gt;.asAction(dispatchMechanism: DispatchMechanism, responseContentType: MediaType? = singleOrNullResponseMediaType()): Action"},{"location":"0.x/misk/misk/misk/as-action/","title":"asAction - Misk","text":"<p>//misk/misk/asAction</p>"},{"location":"0.x/misk/misk/misk/as-action/#asaction","title":"asAction","text":"<p>[jvm]\\ fun KFunction&lt;*&gt;.asAction(dispatchMechanism: DispatchMechanism, responseContentType: MediaType? = singleOrNullResponseMediaType()): Action</p>"},{"location":"0.x/misk/misk/misk/-action/","title":"Action - Misk","text":"<p>//misk/misk/Action</p>"},{"location":"0.x/misk/misk/misk/-action/#action","title":"Action","text":"<p>[jvm]\\ data class Action(name: String, function: KFunction&lt;*&gt;, acceptedMediaRanges: List&lt;MediaRange&gt;, responseContentType: MediaType?, parameters: List&lt;KParameter&gt;, returnType: KType, dispatchMechanism: DispatchMechanism)</p>"},{"location":"0.x/misk/misk/misk/-action/#functions","title":"Functions","text":"Name Summary hasReturnValue [jvm]fun hasReturnValue(): Boolean toString [jvm]open override fun toString(): String"},{"location":"0.x/misk/misk/misk/-action/#properties","title":"Properties","text":"Name Summary acceptedMediaRanges [jvm]val acceptedMediaRanges: List&lt;MediaRange&gt; dispatchMechanism [jvm]val dispatchMechanism: DispatchMechanism function [jvm]val function: KFunction&lt;*&gt; name [jvm]val name: String parameters [jvm]val parameters: List&lt;KParameter&gt; parameterTypes [jvm]val parameterTypes: List&lt;KType&gt;ParameterTypes and RequestType can differ because RequestType pertains only to the type of the request body, whereas ParameterTypes includes other parts of the request such as path params and query params. requestType [jvm]val requestType: KType? responseContentType [jvm]val responseContentType: MediaType? returnType [jvm]val returnType: KType"},{"location":"0.x/misk/misk/misk/-action/-action/","title":"Action - Misk","text":"<p>//misk/misk/Action/Action</p>"},{"location":"0.x/misk/misk/misk/-action/-action/#action","title":"Action","text":"<p>[jvm]\\ fun Action(name: String, function: KFunction&lt;*&gt;, acceptedMediaRanges: List&lt;MediaRange&gt;, responseContentType: MediaType?, parameters: List&lt;KParameter&gt;, returnType: KType, dispatchMechanism: DispatchMechanism)</p>"},{"location":"0.x/misk/misk/misk/-action/accepted-media-ranges/","title":"acceptedMediaRanges - Misk","text":"<p>//misk/misk/Action/acceptedMediaRanges</p>"},{"location":"0.x/misk/misk/misk/-action/accepted-media-ranges/#acceptedmediaranges","title":"acceptedMediaRanges","text":"<p>[jvm]\\ val acceptedMediaRanges: List&lt;MediaRange&gt;</p>"},{"location":"0.x/misk/misk/misk/-action/dispatch-mechanism/","title":"dispatchMechanism - Misk","text":"<p>//misk/misk/Action/dispatchMechanism</p>"},{"location":"0.x/misk/misk/misk/-action/dispatch-mechanism/#dispatchmechanism","title":"dispatchMechanism","text":"<p>[jvm]\\ val dispatchMechanism: DispatchMechanism</p>"},{"location":"0.x/misk/misk/misk/-action/function/","title":"function - Misk","text":"<p>//misk/misk/Action/function</p>"},{"location":"0.x/misk/misk/misk/-action/function/#function","title":"function","text":"<p>[jvm]\\ val function: KFunction&lt;*&gt;</p>"},{"location":"0.x/misk/misk/misk/-action/has-return-value/","title":"hasReturnValue - Misk","text":"<p>//misk/misk/Action/hasReturnValue</p>"},{"location":"0.x/misk/misk/misk/-action/has-return-value/#hasreturnvalue","title":"hasReturnValue","text":"<p>[jvm]\\ fun hasReturnValue(): Boolean</p>"},{"location":"0.x/misk/misk/misk/-action/name/","title":"name - Misk","text":"<p>//misk/misk/Action/name</p>"},{"location":"0.x/misk/misk/misk/-action/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk/misk/misk/-action/parameter-types/","title":"parameterTypes - Misk","text":"<p>//misk/misk/Action/parameterTypes</p>"},{"location":"0.x/misk/misk/misk/-action/parameter-types/#parametertypes","title":"parameterTypes","text":"<p>[jvm]\\ val parameterTypes: List&lt;KType&gt;</p> <p>ParameterTypes and RequestType can differ because RequestType pertains only to the type of the request body, whereas ParameterTypes includes other parts of the request such as path params and query params.</p>"},{"location":"0.x/misk/misk/misk/-action/parameters/","title":"parameters - Misk","text":"<p>//misk/misk/Action/parameters</p>"},{"location":"0.x/misk/misk/misk/-action/parameters/#parameters","title":"parameters","text":"<p>[jvm]\\ val parameters: List&lt;KParameter&gt;</p>"},{"location":"0.x/misk/misk/misk/-action/request-type/","title":"requestType - Misk","text":"<p>//misk/misk/Action/requestType</p>"},{"location":"0.x/misk/misk/misk/-action/request-type/#requesttype","title":"requestType","text":"<p>[jvm]\\ val requestType: KType?</p>"},{"location":"0.x/misk/misk/misk/-action/response-content-type/","title":"responseContentType - Misk","text":"<p>//misk/misk/Action/responseContentType</p>"},{"location":"0.x/misk/misk/misk/-action/response-content-type/#responsecontenttype","title":"responseContentType","text":"<p>[jvm]\\ val responseContentType: MediaType?</p>"},{"location":"0.x/misk/misk/misk/-action/return-type/","title":"returnType - Misk","text":"<p>//misk/misk/Action/returnType</p>"},{"location":"0.x/misk/misk/misk/-action/return-type/#returntype","title":"returnType","text":"<p>[jvm]\\ val returnType: KType</p>"},{"location":"0.x/misk/misk/misk/-action/to-string/","title":"toString - Misk","text":"<p>//misk/misk/Action/toString</p>"},{"location":"0.x/misk/misk/misk/-action/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk/misk/misk/-application-interceptor/","title":"ApplicationInterceptor - Misk","text":"<p>//misk/misk/ApplicationInterceptor</p>"},{"location":"0.x/misk/misk/misk/-application-interceptor/#applicationinterceptor","title":"ApplicationInterceptor","text":"<p>[jvm]\\ interface ApplicationInterceptor</p>"},{"location":"0.x/misk/misk/misk/-application-interceptor/#types","title":"Types","text":"Name Summary Factory [jvm]interface Factory"},{"location":"0.x/misk/misk/misk/-application-interceptor/#functions","title":"Functions","text":"Name Summary intercept [jvm]abstract fun intercept(chain: Chain): Any"},{"location":"0.x/misk/misk/misk/-application-interceptor/#inheritors","title":"Inheritors","text":"Name AccessInterceptor RequestBodyLoggingInterceptor"},{"location":"0.x/misk/misk/misk/-application-interceptor/intercept/","title":"intercept - Misk","text":"<p>//misk/misk/ApplicationInterceptor/intercept</p>"},{"location":"0.x/misk/misk/misk/-application-interceptor/intercept/#intercept","title":"intercept","text":"<p>[jvm]\\ abstract fun intercept(chain: Chain): Any</p>"},{"location":"0.x/misk/misk/misk/-application-interceptor/-factory/","title":"Factory - Misk","text":"<p>//misk/misk/ApplicationInterceptor/Factory</p>"},{"location":"0.x/misk/misk/misk/-application-interceptor/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ interface Factory</p>"},{"location":"0.x/misk/misk/misk/-application-interceptor/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]abstract fun create(action: Action): ApplicationInterceptor?"},{"location":"0.x/misk/misk/misk/-application-interceptor/-factory/#inheritors","title":"Inheritors","text":"Name Factory"},{"location":"0.x/misk/misk/misk/-application-interceptor/-factory/create/","title":"create - Misk","text":"<p>//misk/misk/ApplicationInterceptor/Factory/create</p>"},{"location":"0.x/misk/misk/misk/-application-interceptor/-factory/create/#create","title":"create","text":"<p>[jvm]\\ abstract fun create(action: Action): ApplicationInterceptor?</p>"},{"location":"0.x/misk/misk/misk/-chain/","title":"Chain - Misk","text":"<p>//misk/misk/Chain</p>"},{"location":"0.x/misk/misk/misk/-chain/#chain","title":"Chain","text":"<p>[jvm]\\ interface Chain</p>"},{"location":"0.x/misk/misk/misk/-chain/#functions","title":"Functions","text":"Name Summary proceed [jvm]abstract fun proceed(args: List&lt;Any?&gt;): Any"},{"location":"0.x/misk/misk/misk/-chain/#properties","title":"Properties","text":"Name Summary action [jvm]abstract val action: WebAction args [jvm]abstract val args: List&lt;Any?&gt; function [jvm]abstract val function: KFunction&lt;*&gt; httpCall [jvm]abstract val httpCall: HttpCall"},{"location":"0.x/misk/misk/misk/-chain/action/","title":"action - Misk","text":"<p>//misk/misk/Chain/action</p>"},{"location":"0.x/misk/misk/misk/-chain/action/#action","title":"action","text":"<p>[jvm]\\ abstract val action: WebAction</p>"},{"location":"0.x/misk/misk/misk/-chain/args/","title":"args - Misk","text":"<p>//misk/misk/Chain/args</p>"},{"location":"0.x/misk/misk/misk/-chain/args/#args","title":"args","text":"<p>[jvm]\\ abstract val args: List&lt;Any?&gt;</p>"},{"location":"0.x/misk/misk/misk/-chain/function/","title":"function - Misk","text":"<p>//misk/misk/Chain/function</p>"},{"location":"0.x/misk/misk/misk/-chain/function/#function","title":"function","text":"<p>[jvm]\\ abstract val function: KFunction&lt;*&gt;</p>"},{"location":"0.x/misk/misk/misk/-chain/http-call/","title":"httpCall - Misk","text":"<p>//misk/misk/Chain/httpCall</p>"},{"location":"0.x/misk/misk/misk/-chain/http-call/#httpcall","title":"httpCall","text":"<p>[jvm]\\ abstract val httpCall: HttpCall</p>"},{"location":"0.x/misk/misk/misk/-chain/proceed/","title":"proceed - Misk","text":"<p>//misk/misk/Chain/proceed</p>"},{"location":"0.x/misk/misk/misk/-chain/proceed/#proceed","title":"proceed","text":"<p>[jvm]\\ abstract fun proceed(args: List&lt;Any?&gt;): Any</p>"},{"location":"0.x/misk/misk/misk/-misk-application/","title":"MiskApplication - Misk","text":"<p>//misk/misk/MiskApplication</p>"},{"location":"0.x/misk/misk/misk/-misk-application/#miskapplication","title":"MiskApplication","text":"<p>[jvm]\\ class MiskApplication</p> <p>The entry point for misk applications</p>"},{"location":"0.x/misk/misk/misk/-misk-application/#constructors","title":"Constructors","text":"MiskApplication [jvm]fun MiskApplication(vararg modules: Module) MiskApplication [jvm]fun MiskApplication(vararg commands: MiskCommand) MiskApplication [jvm]fun MiskApplication(modules: List&lt;Module&gt;, commands: List&lt;MiskCommand&gt; = listOf()) MiskApplication [jvm]fun MiskApplication(injector: Injector)"},{"location":"0.x/misk/misk/misk/-misk-application/#functions","title":"Functions","text":"Name Summary run [jvm]fun run(args: Array&lt;String&gt;)Runs the application, finding and executing the appropriate command based on the provided command line arguments"},{"location":"0.x/misk/misk/misk/-misk-application/-misk-application/","title":"MiskApplication - Misk","text":"<p>//misk/misk/MiskApplication/MiskApplication</p>"},{"location":"0.x/misk/misk/misk/-misk-application/-misk-application/#miskapplication","title":"MiskApplication","text":"<p>[jvm]\\ fun MiskApplication(vararg modules: Module)</p> <p>fun MiskApplication(vararg commands: MiskCommand)</p> <p>fun MiskApplication(modules: List&lt;Module&gt;, commands: List&lt;MiskCommand&gt; = listOf())</p> <p>fun MiskApplication(injector: Injector)</p>"},{"location":"0.x/misk/misk/misk/-misk-application/run/","title":"run - Misk","text":"<p>//misk/misk/MiskApplication/run</p>"},{"location":"0.x/misk/misk/misk/-misk-application/run/#run","title":"run","text":"<p>[jvm]\\ fun run(args: Array&lt;String&gt;)</p> <p>Runs the application, finding and executing the appropriate command based on the provided command line arguments</p>"},{"location":"0.x/misk/misk/misk/-misk-command/","title":"MiskCommand - Misk","text":"<p>//misk/misk/MiskCommand</p>"},{"location":"0.x/misk/misk/misk/-misk-command/#miskcommand","title":"MiskCommand","text":"<p>[jvm]\\ abstract class MiskCommand(name: String, modules: List&lt;Module&gt;) : Runnable</p> <p>A command to run from the command line. Each command has an associated name and the list of modules to use in initializing the command. Commands can specify optional and required arguments via JCommander annotations. The command line will pick the appropriate command based on the name, create an injector based on that command\u2019s modules, use the injector to initialize the command, and then run the command.</p>"},{"location":"0.x/misk/misk/misk/-misk-command/#constructors","title":"Constructors","text":"MiskCommand [jvm]fun MiskCommand(name: String, vararg modules: Module) MiskCommand [jvm]fun MiskCommand(name: String, modules: List&lt;Module&gt;)"},{"location":"0.x/misk/misk/misk/-misk-command/#functions","title":"Functions","text":"Name Summary requireCli [jvm]fun requireCli(value: Boolean, lazyMessage: () -&gt; String)Confirms that the given precondition is true, otherwise throws a ParameterException with the supplied message. run [jvm]abstract fun run()"},{"location":"0.x/misk/misk/misk/-misk-command/-misk-command/","title":"MiskCommand - Misk","text":"<p>//misk/misk/MiskCommand/MiskCommand</p>"},{"location":"0.x/misk/misk/misk/-misk-command/-misk-command/#miskcommand","title":"MiskCommand","text":"<p>[jvm]\\ fun MiskCommand(name: String, vararg modules: Module)</p> <p>fun MiskCommand(name: String, modules: List&lt;Module&gt;)</p>"},{"location":"0.x/misk/misk/misk/-misk-command/require-cli/","title":"requireCli - Misk","text":"<p>//misk/misk/MiskCommand/requireCli</p>"},{"location":"0.x/misk/misk/misk/-misk-command/require-cli/#requirecli","title":"requireCli","text":"<p>[jvm]\\ fun requireCli(value: Boolean, lazyMessage: () -&gt; String)</p> <p>Confirms that the given precondition is true, otherwise throws a ParameterException with the supplied message.</p>"},{"location":"0.x/misk/misk/misk/-misk-common-service-module/","title":"MiskCommonServiceModule - Misk","text":"<p>//misk/misk/MiskCommonServiceModule</p>"},{"location":"0.x/misk/misk/misk/-misk-common-service-module/#miskcommonservicemodule","title":"MiskCommonServiceModule","text":"<p>[jvm]\\ class MiskCommonServiceModule : KAbstractModule</p> <p>This module has common bindings for all environments (both real and testing).</p>"},{"location":"0.x/misk/misk/misk/-misk-common-service-module/#constructors","title":"Constructors","text":"MiskCommonServiceModule [jvm]fun MiskCommonServiceModule()"},{"location":"0.x/misk/misk/misk/-misk-common-service-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk/-misk-common-service-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk/-misk-common-service-module/-misk-common-service-module/","title":"MiskCommonServiceModule - Misk","text":"<p>//misk/misk/MiskCommonServiceModule/MiskCommonServiceModule</p>"},{"location":"0.x/misk/misk/misk/-misk-common-service-module/-misk-common-service-module/#miskcommonservicemodule","title":"MiskCommonServiceModule","text":"<p>[jvm]\\ fun MiskCommonServiceModule()</p>"},{"location":"0.x/misk/misk/misk/-misk-real-service-module/","title":"MiskRealServiceModule - Misk","text":"<p>//misk/misk/MiskRealServiceModule</p>"},{"location":"0.x/misk/misk/misk/-misk-real-service-module/#miskrealservicemodule","title":"MiskRealServiceModule","text":"<p>[jvm]\\ class MiskRealServiceModule : KAbstractModule</p> <p>Install this module in real environments.</p> <p>The vast majority of Service bindings belong in MiskCommonServiceModule, in order to share with MiskTestingServiceModule. Only bindings that are not suitable for a unit testing environment belong here.</p>"},{"location":"0.x/misk/misk/misk/-misk-real-service-module/#constructors","title":"Constructors","text":"MiskRealServiceModule [jvm]fun MiskRealServiceModule()"},{"location":"0.x/misk/misk/misk/-misk-real-service-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk/-misk-real-service-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk/-misk-real-service-module/-misk-real-service-module/","title":"MiskRealServiceModule - Misk","text":"<p>//misk/misk/MiskRealServiceModule/MiskRealServiceModule</p>"},{"location":"0.x/misk/misk/misk/-misk-real-service-module/-misk-real-service-module/#miskrealservicemodule","title":"MiskRealServiceModule","text":"<p>[jvm]\\ fun MiskRealServiceModule()</p>"},{"location":"0.x/misk/misk/misk.client/","title":"Package misk.client - Misk","text":"<p>//misk/misk.client</p>"},{"location":"0.x/misk/misk/misk.client/#package-miskclient","title":"Package misk.client","text":""},{"location":"0.x/misk/misk/misk.client/#types","title":"Types","text":"Name Summary BackwardsCompatibleClientsConfig [jvm]data class BackwardsCompatibleClientsConfig@JvmOverloadsconstructor(defaultConnectTimeout: Duration?, defaultWriteTimeout: Duration?, defaultReadTimeout: Duration?, ssl: HttpClientSSLConfig?, defaultPingInterval: Duration?, defaultCallTimeout: Duration?, endpoints: Map&lt;String, BackwardsCompatibleEndpointConfig&gt;, hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt;, logRequests: Boolean) BackwardsCompatibleClientsConfigConverter [jvm]class BackwardsCompatibleClientsConfigConverter : Converter&lt;BackwardsCompatibleClientsConfig, HttpClientsConfig&gt; BackwardsCompatibleEndpointConfig [jvm]data class BackwardsCompatibleEndpointConfig@JvmOverloadsconstructor(url: String?, envoy: HttpClientEnvoyConfig?, connectTimeout: Duration?, writeTimeout: Duration?, readTimeout: Duration?, pingInterval: Duration?, callTimeout: Duration?, maxRequests: Int, maxRequestsPerHost: Int, maxIdleConnections: Int, keepAliveDuration: Duration, ssl: HttpClientSSLConfig?, clientConfig: HttpClientConfig?) BeginClientCallChain [jvm]interface BeginClientCallChain CallFactoryWrapper [jvm]interface CallFactoryWrapperCallFactoryWrapper is a way to extend the functionality of the okhttp3.Call.Factory instance injected to typed http clients and gRPC clients created by TypedClientFactoryProvider and GrpcClientProvider. ClientAction [jvm]data class ClientAction(name: String, function: KFunction&lt;*&gt;, parameterTypes: List&lt;KType&gt;, returnType: KType)Metadata about a client action ClientApplicationInterceptorFactory [jvm]interface ClientApplicationInterceptorFactory ClientChain [jvm]interface ClientChain ClientMetricsInterceptor [jvm]class ClientMetricsInterceptor : Interceptor ClientNetworkChain [jvm]interface ClientNetworkChain ClientNetworkInterceptor [jvm]interface ClientNetworkInterceptorIntercepts client side calls at the application level, able to view and modify the outgoing HTTP request and observe the returned HTTP response ClientNetworkInterceptorsModule [jvm]class ClientNetworkInterceptorsModule : KAbstractModuleThe common set of ClientNetworkInterceptors for all misk apps. GrpcClientModule [jvm]class GrpcClientModule&lt;T : Service, G : T&gt;@JvmOverloadsconstructor(kclass: KClass&lt;T&gt;, grpcClientClass: KClass&lt;G&gt;, name: String, annotation: Annotation?) : KAbstractModuleCreates a gRPC client given a Wire-generated interface and HTTP configuration. HttpClientConfig [jvm]data class HttpClientConfig@JvmOverloadsconstructor(connectTimeout: Duration?, writeTimeout: Duration?, readTimeout: Duration?, pingInterval: Duration?, callTimeout: Duration?, maxRequests: Int?, maxRequestsPerHost: Int?, maxIdleConnections: Int?, keepAliveDuration: Duration?, ssl: HttpClientSSLConfig?, unixSocketFile: String?, protocols: List&lt;String&gt;?, retryOnConnectionFailure: Boolean?) HttpClientConfigUrlProvider [jvm]class HttpClientConfigUrlProvider@InjectconstructorCalculates the url for an http client config, which can differ depending on if the client is envoy-based or connects directly. HttpClientEndpointConfig [jvm]data class HttpClientEndpointConfig@JvmOverloadsconstructor(url: String?, envoy: HttpClientEnvoyConfig?, clientConfig: HttpClientConfig) HttpClientEnvoyConfig [jvm]data class HttpClientEnvoyConfig@JvmOverloadsconstructor(app: String, env: String?) HttpClientFactory [jvm]@Singletonclass HttpClientFactory@Injectconstructor(sslLoader: SslLoader, sslContextFactory: SslContextFactory, okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator) HttpClientModule [jvm]class HttpClientModule@JvmOverloadsconstructor(name: String, annotation: Annotation?) : KAbstractModuleProvides an OkHttpClient and ProtoMessageHttpClient for a peer service HttpClientsConfig [jvm]data class HttpClientsConfig@JvmOverloadsconstructor(hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt;, endpoints: Map&lt;String, HttpClientEndpointConfig&gt;, logRequests: Boolean) : Config HttpClientsConfigModule [jvm]class HttpClientsConfigModule(config: HttpClientsConfig) : KAbstractModule HttpClientSSLConfig [jvm]data class HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig) JettyPortPeerClientModule [jvm]class JettyPortPeerClientModule : KAbstractModuleFor testing. OkHttpClientCommonConfigurator [jvm]class OkHttpClientCommonConfigurator@Injectconstructor PeerClientFactory [jvm]class PeerClientFactory(appName: String, httpClientsConfig: HttpClientsConfig, httpClientFactory: HttpClientFactory, httpsPort: Int)Factory that creates OkHttpClients for connecting to another instance of the same application running in the same cluster. PeerClientModule [jvm]class PeerClientModule : KAbstractModuleBinds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the SSL port in the WebConfig. ProtoMessageHttpClient [jvm]class ProtoMessageHttpClient(baseUrl: String, moshi: Moshi, okHttp: OkHttpClient)This helper class is for making HTTP requests to an endpoint that handles protobuf Message classes. TypedClientFactory [jvm]class TypedClientFactory@Injectconstructor TypedHttpClientModule [jvm]class TypedHttpClientModule&lt;T : Any&gt;@JvmOverloadsconstructor(kclass: KClass&lt;T&gt;, name: String, annotation: Annotation?, retrofitBuilderProvider: Provider&lt;Retrofit.Builder&gt;?) : KAbstractModuleCreates a retrofit-backed typed client given an API interface and an HTTP configuration. TypedPeerClientFactory [jvm]interface TypedPeerClientFactory&lt;T&gt;Factory for creating typed clients that call other members of a cluster. TypedPeerHttpClientModule [jvm]class TypedPeerHttpClientModule&lt;T : Any&gt;@JvmOverloadsconstructor(kclass: KClass&lt;T&gt;, name: String, retrofitBuilderProvider: Provider&lt;Retrofit.Builder&gt;?) : KAbstractModuleCreates a retrofit-backed typed client factory given an API interface and an HTTP configuration."},{"location":"0.x/misk/misk/misk.client/#functions","title":"Functions","text":"Name Summary applyDefaults [jvm]fun HttpClientConfig.applyDefaults(other: HttpClientConfig): HttpClientConfig"},{"location":"0.x/misk/misk/misk.client/apply-defaults/","title":"applyDefaults - Misk","text":"<p>//misk/misk.client/applyDefaults</p>"},{"location":"0.x/misk/misk/misk.client/apply-defaults/#applydefaults","title":"applyDefaults","text":"<p>[jvm]\\ fun HttpClientConfig.applyDefaults(other: HttpClientConfig): HttpClientConfig</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/","title":"BackwardsCompatibleClientsConfig - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfig</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/#backwardscompatibleclientsconfig","title":"BackwardsCompatibleClientsConfig","text":"<p>[jvm]\\ data class BackwardsCompatibleClientsConfig@JvmOverloadsconstructor(defaultConnectTimeout: Duration?, defaultWriteTimeout: Duration?, defaultReadTimeout: Duration?, ssl: HttpClientSSLConfig?, defaultPingInterval: Duration?, defaultCallTimeout: Duration?, endpoints: Map&lt;String, BackwardsCompatibleEndpointConfig&gt;, hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt;, logRequests: Boolean)</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/#properties","title":"Properties","text":"Name Summary defaultCallTimeout [jvm]val defaultCallTimeout: Duration? = null defaultConnectTimeout [jvm]val defaultConnectTimeout: Duration? = null defaultPingInterval [jvm]val defaultPingInterval: Duration? = null defaultReadTimeout [jvm]val defaultReadTimeout: Duration? = null defaultWriteTimeout [jvm]val defaultWriteTimeout: Duration? = null endpoints [jvm]val endpoints: Map&lt;String, BackwardsCompatibleEndpointConfig&gt; hostConfigs [jvm]val hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt; logRequests [jvm]val logRequests: Boolean = false ssl [jvm]val ssl: HttpClientSSLConfig? = null"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/-backwards-compatible-clients-config/","title":"BackwardsCompatibleClientsConfig - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfig/BackwardsCompatibleClientsConfig</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/-backwards-compatible-clients-config/#backwardscompatibleclientsconfig","title":"BackwardsCompatibleClientsConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun BackwardsCompatibleClientsConfig(defaultConnectTimeout: Duration? = null, defaultWriteTimeout: Duration? = null, defaultReadTimeout: Duration? = null, ssl: HttpClientSSLConfig? = null, defaultPingInterval: Duration? = null, defaultCallTimeout: Duration? = null, endpoints: Map&lt;String, BackwardsCompatibleEndpointConfig&gt; = mapOf(), hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt; = linkedMapOf(), logRequests: Boolean = false)</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/default-call-timeout/","title":"defaultCallTimeout - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfig/defaultCallTimeout</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/default-call-timeout/#defaultcalltimeout","title":"defaultCallTimeout","text":"<p>[jvm]\\ val defaultCallTimeout: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/default-connect-timeout/","title":"defaultConnectTimeout - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfig/defaultConnectTimeout</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/default-connect-timeout/#defaultconnecttimeout","title":"defaultConnectTimeout","text":"<p>[jvm]\\ val defaultConnectTimeout: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/default-ping-interval/","title":"defaultPingInterval - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfig/defaultPingInterval</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/default-ping-interval/#defaultpinginterval","title":"defaultPingInterval","text":"<p>[jvm]\\ val defaultPingInterval: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/default-read-timeout/","title":"defaultReadTimeout - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfig/defaultReadTimeout</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/default-read-timeout/#defaultreadtimeout","title":"defaultReadTimeout","text":"<p>[jvm]\\ val defaultReadTimeout: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/default-write-timeout/","title":"defaultWriteTimeout - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfig/defaultWriteTimeout</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/default-write-timeout/#defaultwritetimeout","title":"defaultWriteTimeout","text":"<p>[jvm]\\ val defaultWriteTimeout: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/endpoints/","title":"endpoints - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfig/endpoints</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/endpoints/#endpoints","title":"endpoints","text":"<p>[jvm]\\ val endpoints: Map&lt;String, BackwardsCompatibleEndpointConfig&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/host-configs/","title":"hostConfigs - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfig/hostConfigs</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/host-configs/#hostconfigs","title":"hostConfigs","text":"<p>[jvm]\\ val hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/log-requests/","title":"logRequests - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfig/logRequests</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/log-requests/#logrequests","title":"logRequests","text":"<p>[jvm]\\ val logRequests: Boolean = false</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/ssl/","title":"ssl - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfig/ssl</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config/ssl/#ssl","title":"ssl","text":"<p>[jvm]\\ val ssl: HttpClientSSLConfig? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config-converter/","title":"BackwardsCompatibleClientsConfigConverter - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfigConverter</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config-converter/#backwardscompatibleclientsconfigconverter","title":"BackwardsCompatibleClientsConfigConverter","text":"<p>[jvm]\\ class BackwardsCompatibleClientsConfigConverter : Converter&lt;BackwardsCompatibleClientsConfig, HttpClientsConfig&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config-converter/#functions","title":"Functions","text":"Name Summary convert [jvm]open override fun convert(value: BackwardsCompatibleClientsConfig): HttpClientsConfig getInputType [jvm]open override fun getInputType(typeFactory: TypeFactory): &lt;ERROR CLASS&gt; getOutputType [jvm]open override fun getOutputType(typeFactory: TypeFactory): &lt;ERROR CLASS&gt;"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config-converter/-backwards-compatible-clients-config-converter/","title":"BackwardsCompatibleClientsConfigConverter - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfigConverter/BackwardsCompatibleClientsConfigConverter</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config-converter/-backwards-compatible-clients-config-converter/#backwardscompatibleclientsconfigconverter","title":"BackwardsCompatibleClientsConfigConverter","text":"<p>[jvm]\\ fun BackwardsCompatibleClientsConfigConverter()</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config-converter/convert/","title":"convert - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfigConverter/convert</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config-converter/convert/#convert","title":"convert","text":"<p>[jvm]\\ open override fun convert(value: BackwardsCompatibleClientsConfig): HttpClientsConfig</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config-converter/get-input-type/","title":"getInputType - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfigConverter/getInputType</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config-converter/get-input-type/#getinputtype","title":"getInputType","text":"<p>[jvm]\\ open override fun getInputType(typeFactory: TypeFactory): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config-converter/get-output-type/","title":"getOutputType - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleClientsConfigConverter/getOutputType</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-clients-config-converter/get-output-type/#getoutputtype","title":"getOutputType","text":"<p>[jvm]\\ open override fun getOutputType(typeFactory: TypeFactory): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/","title":"BackwardsCompatibleEndpointConfig - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/#backwardscompatibleendpointconfig","title":"BackwardsCompatibleEndpointConfig","text":"<p>[jvm]\\ data class BackwardsCompatibleEndpointConfig@JvmOverloadsconstructor(url: String?, envoy: HttpClientEnvoyConfig?, connectTimeout: Duration?, writeTimeout: Duration?, readTimeout: Duration?, pingInterval: Duration?, callTimeout: Duration?, maxRequests: Int, maxRequestsPerHost: Int, maxIdleConnections: Int, keepAliveDuration: Duration, ssl: HttpClientSSLConfig?, clientConfig: HttpClientConfig?)</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/#properties","title":"Properties","text":"Name Summary callTimeout [jvm]val callTimeout: Duration? = null clientConfig [jvm]val clientConfig: HttpClientConfig? = null connectTimeout [jvm]val connectTimeout: Duration? = null envoy [jvm]val envoy: HttpClientEnvoyConfig? = null keepAliveDuration [jvm]val keepAliveDuration: Duration maxIdleConnections [jvm]val maxIdleConnections: Int = 100 maxRequests [jvm]val maxRequests: Int = 128 maxRequestsPerHost [jvm]val maxRequestsPerHost: Int = 32 pingInterval [jvm]val pingInterval: Duration? = null readTimeout [jvm]val readTimeout: Duration? = null ssl [jvm]val ssl: HttpClientSSLConfig? = null url [jvm]val url: String? = null writeTimeout [jvm]val writeTimeout: Duration? = null"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/-backwards-compatible-endpoint-config/","title":"BackwardsCompatibleEndpointConfig - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/BackwardsCompatibleEndpointConfig</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/-backwards-compatible-endpoint-config/#backwardscompatibleendpointconfig","title":"BackwardsCompatibleEndpointConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun BackwardsCompatibleEndpointConfig(url: String? = null, envoy: HttpClientEnvoyConfig? = null, connectTimeout: Duration? = null, writeTimeout: Duration? = null, readTimeout: Duration? = null, pingInterval: Duration? = null, callTimeout: Duration? = null, maxRequests: Int = 128, maxRequestsPerHost: Int = 32, maxIdleConnections: Int = 100, keepAliveDuration: Duration = Duration.ofMinutes(5), ssl: HttpClientSSLConfig? = null, clientConfig: HttpClientConfig? = null)</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/call-timeout/","title":"callTimeout - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/callTimeout</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/call-timeout/#calltimeout","title":"callTimeout","text":"<p>[jvm]\\ val callTimeout: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/client-config/","title":"clientConfig - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/clientConfig</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/client-config/#clientconfig","title":"clientConfig","text":"<p>[jvm]\\ val clientConfig: HttpClientConfig? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/connect-timeout/","title":"connectTimeout - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/connectTimeout</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/connect-timeout/#connecttimeout","title":"connectTimeout","text":"<p>[jvm]\\ val connectTimeout: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/envoy/","title":"envoy - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/envoy</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/envoy/#envoy","title":"envoy","text":"<p>[jvm]\\ val envoy: HttpClientEnvoyConfig? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/keep-alive-duration/","title":"keepAliveDuration - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/keepAliveDuration</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/keep-alive-duration/#keepaliveduration","title":"keepAliveDuration","text":"<p>[jvm]\\ val keepAliveDuration: Duration</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/max-idle-connections/","title":"maxIdleConnections - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/maxIdleConnections</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/max-idle-connections/#maxidleconnections","title":"maxIdleConnections","text":"<p>[jvm]\\ val maxIdleConnections: Int = 100</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/max-requests-per-host/","title":"maxRequestsPerHost - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/maxRequestsPerHost</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/max-requests-per-host/#maxrequestsperhost","title":"maxRequestsPerHost","text":"<p>[jvm]\\ val maxRequestsPerHost: Int = 32</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/max-requests/","title":"maxRequests - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/maxRequests</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/max-requests/#maxrequests","title":"maxRequests","text":"<p>[jvm]\\ val maxRequests: Int = 128</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/ping-interval/","title":"pingInterval - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/pingInterval</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/ping-interval/#pinginterval","title":"pingInterval","text":"<p>[jvm]\\ val pingInterval: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/read-timeout/","title":"readTimeout - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/readTimeout</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/read-timeout/#readtimeout","title":"readTimeout","text":"<p>[jvm]\\ val readTimeout: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/ssl/","title":"ssl - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/ssl</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/ssl/#ssl","title":"ssl","text":"<p>[jvm]\\ val ssl: HttpClientSSLConfig? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/url/","title":"url - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/url</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/url/#url","title":"url","text":"<p>[jvm]\\ val url: String? = null</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/write-timeout/","title":"writeTimeout - Misk","text":"<p>//misk/misk.client/BackwardsCompatibleEndpointConfig/writeTimeout</p>"},{"location":"0.x/misk/misk/misk.client/-backwards-compatible-endpoint-config/write-timeout/#writetimeout","title":"writeTimeout","text":"<p>[jvm]\\ val writeTimeout: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-begin-client-call-chain/","title":"BeginClientCallChain - Misk","text":"<p>//misk/misk.client/BeginClientCallChain</p>"},{"location":"0.x/misk/misk/misk.client/-begin-client-call-chain/#beginclientcallchain","title":"BeginClientCallChain","text":"<p>[jvm]\\ interface BeginClientCallChain</p>"},{"location":"0.x/misk/misk/misk.client/-begin-client-call-chain/#functions","title":"Functions","text":"Name Summary proceed [jvm]abstract fun proceed(args: List&lt;*&gt;): Call&lt;Any&gt;"},{"location":"0.x/misk/misk/misk.client/-begin-client-call-chain/#properties","title":"Properties","text":"Name Summary action [jvm]abstract val action: ClientAction args [jvm]abstract val args: List&lt;*&gt;"},{"location":"0.x/misk/misk/misk.client/-begin-client-call-chain/action/","title":"action - Misk","text":"<p>//misk/misk.client/BeginClientCallChain/action</p>"},{"location":"0.x/misk/misk/misk.client/-begin-client-call-chain/action/#action","title":"action","text":"<p>[jvm]\\ abstract val action: ClientAction</p>"},{"location":"0.x/misk/misk/misk.client/-begin-client-call-chain/args/","title":"args - Misk","text":"<p>//misk/misk.client/BeginClientCallChain/args</p>"},{"location":"0.x/misk/misk/misk.client/-begin-client-call-chain/args/#args","title":"args","text":"<p>[jvm]\\ abstract val args: List&lt;*&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-begin-client-call-chain/proceed/","title":"proceed - Misk","text":"<p>//misk/misk.client/BeginClientCallChain/proceed</p>"},{"location":"0.x/misk/misk/misk.client/-begin-client-call-chain/proceed/#proceed","title":"proceed","text":"<p>[jvm]\\ abstract fun proceed(args: List&lt;*&gt;): Call&lt;Any&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-call-factory-wrapper/","title":"CallFactoryWrapper - Misk","text":"<p>//misk/misk.client/CallFactoryWrapper</p>"},{"location":"0.x/misk/misk/misk.client/-call-factory-wrapper/#callfactorywrapper","title":"CallFactoryWrapper","text":"<p>[jvm]\\ interface CallFactoryWrapper</p> <p>CallFactoryWrapper is a way to extend the functionality of the okhttp3.Call.Factory instance injected to typed http clients and gRPC clients created by TypedClientFactoryProvider and GrpcClientProvider.</p> <p>The ability to extend the Call.Factory instance gives you similar functionalities to ClientApplicationInterceptorFactory and ClientNetworkInterceptor, where you can modify the request/response of the outgoing request. The main difference is that Call.Factory will be run in the thread the client is making the request as opposite to ClientApplicationInterceptorFactory and ClientNetworkInterceptor, which might be run on the okhttp3.Dispatcher threads when executing requests asynchronously. That can be problematic if ActionScoped or ThreadLocal information wants to be propagated using interceptors to downstream services. For example, tracing related information.</p> <p>This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:</p> <p>multibind&lt;CallFactoryWrapper&gt;().to&lt;MyFactoryWrapper&gt;()</p>"},{"location":"0.x/misk/misk/misk.client/-call-factory-wrapper/#functions","title":"Functions","text":"Name Summary wrap [jvm]abstract fun wrap(action: ClientAction, delegate: Call.Factory): Call.Factory?Returns a Call.Factory that wraps the original call factory delegate pass as argument."},{"location":"0.x/misk/misk/misk.client/-call-factory-wrapper/wrap/","title":"wrap - Misk","text":"<p>//misk/misk.client/CallFactoryWrapper/wrap</p>"},{"location":"0.x/misk/misk/misk.client/-call-factory-wrapper/wrap/#wrap","title":"wrap","text":"<p>[jvm]\\ abstract fun wrap(action: ClientAction, delegate: Call.Factory): Call.Factory?</p> <p>Returns a Call.Factory that wraps the original call factory delegate pass as argument.</p>"},{"location":"0.x/misk/misk/misk.client/-client-action/","title":"ClientAction - Misk","text":"<p>//misk/misk.client/ClientAction</p>"},{"location":"0.x/misk/misk/misk.client/-client-action/#clientaction","title":"ClientAction","text":"<p>[jvm]\\ data class ClientAction(name: String, function: KFunction&lt;*&gt;, parameterTypes: List&lt;KType&gt;, returnType: KType)</p> <p>Metadata about a client action</p>"},{"location":"0.x/misk/misk/misk.client/-client-action/#constructors","title":"Constructors","text":"ClientAction [jvm]fun ClientAction(name: String, function: KFunction&lt;*&gt;, parameterTypes: List&lt;KType&gt;, returnType: KType)"},{"location":"0.x/misk/misk/misk.client/-client-action/#properties","title":"Properties","text":"Name Summary function [jvm]val function: KFunction&lt;*&gt;The function that was used to invoke the action name [jvm]val name: StringThe name of the action, composed of the name of the client + the name of the method parameterTypes [jvm]val parameterTypes: List&lt;KType&gt;The parameter types to the action returnType [jvm]val returnType: KTypeThe return type fo the action"},{"location":"0.x/misk/misk/misk.client/-client-action/-client-action/","title":"ClientAction - Misk","text":"<p>//misk/misk.client/ClientAction/ClientAction</p>"},{"location":"0.x/misk/misk/misk.client/-client-action/-client-action/#clientaction","title":"ClientAction","text":"<p>[jvm]\\ fun ClientAction(name: String, function: KFunction&lt;*&gt;, parameterTypes: List&lt;KType&gt;, returnType: KType)</p>"},{"location":"0.x/misk/misk/misk.client/-client-action/function/","title":"function - Misk","text":"<p>//misk/misk.client/ClientAction/function</p>"},{"location":"0.x/misk/misk/misk.client/-client-action/function/#function","title":"function","text":"<p>[jvm]\\ val function: KFunction&lt;*&gt;</p> <p>The function that was used to invoke the action</p>"},{"location":"0.x/misk/misk/misk.client/-client-action/name/","title":"name - Misk","text":"<p>//misk/misk.client/ClientAction/name</p>"},{"location":"0.x/misk/misk/misk.client/-client-action/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p> <p>The name of the action, composed of the name of the client + the name of the method</p>"},{"location":"0.x/misk/misk/misk.client/-client-action/parameter-types/","title":"parameterTypes - Misk","text":"<p>//misk/misk.client/ClientAction/parameterTypes</p>"},{"location":"0.x/misk/misk/misk.client/-client-action/parameter-types/#parametertypes","title":"parameterTypes","text":"<p>[jvm]\\ val parameterTypes: List&lt;KType&gt;</p> <p>The parameter types to the action</p>"},{"location":"0.x/misk/misk/misk.client/-client-action/return-type/","title":"returnType - Misk","text":"<p>//misk/misk.client/ClientAction/returnType</p>"},{"location":"0.x/misk/misk/misk.client/-client-action/return-type/#returntype","title":"returnType","text":"<p>[jvm]\\ val returnType: KType</p> <p>The return type fo the action</p>"},{"location":"0.x/misk/misk/misk.client/-client-application-interceptor-factory/","title":"ClientApplicationInterceptorFactory - Misk","text":"<p>//misk/misk.client/ClientApplicationInterceptorFactory</p>"},{"location":"0.x/misk/misk/misk.client/-client-application-interceptor-factory/#clientapplicationinterceptorfactory","title":"ClientApplicationInterceptorFactory","text":"<p>[jvm]\\ interface ClientApplicationInterceptorFactory</p>"},{"location":"0.x/misk/misk/misk.client/-client-application-interceptor-factory/#functions","title":"Functions","text":"Name Summary create [jvm]abstract fun create(action: ClientAction): Interceptor?"},{"location":"0.x/misk/misk/misk.client/-client-application-interceptor-factory/create/","title":"create - Misk","text":"<p>//misk/misk.client/ClientApplicationInterceptorFactory/create</p>"},{"location":"0.x/misk/misk/misk.client/-client-application-interceptor-factory/create/#create","title":"create","text":"<p>[jvm]\\ abstract fun create(action: ClientAction): Interceptor?</p>"},{"location":"0.x/misk/misk/misk.client/-client-chain/","title":"ClientChain - Misk","text":"<p>//misk/misk.client/ClientChain</p>"},{"location":"0.x/misk/misk/misk.client/-client-chain/#clientchain","title":"ClientChain","text":"<p>[jvm]\\ interface ClientChain</p>"},{"location":"0.x/misk/misk/misk.client/-client-chain/#functions","title":"Functions","text":"Name Summary proceed [jvm]abstract fun proceed(args: List&lt;*&gt;, callback: Callback&lt;Any&gt;)"},{"location":"0.x/misk/misk/misk.client/-client-chain/#properties","title":"Properties","text":"Name Summary action [jvm]abstract val action: ClientAction args [jvm]abstract val args: List&lt;*&gt; call [jvm]abstract val call: Call&lt;Any&gt; callback [jvm]abstract val callback: Callback&lt;Any&gt;"},{"location":"0.x/misk/misk/misk.client/-client-chain/action/","title":"action - Misk","text":"<p>//misk/misk.client/ClientChain/action</p>"},{"location":"0.x/misk/misk/misk.client/-client-chain/action/#action","title":"action","text":"<p>[jvm]\\ abstract val action: ClientAction</p>"},{"location":"0.x/misk/misk/misk.client/-client-chain/args/","title":"args - Misk","text":"<p>//misk/misk.client/ClientChain/args</p>"},{"location":"0.x/misk/misk/misk.client/-client-chain/args/#args","title":"args","text":"<p>[jvm]\\ abstract val args: List&lt;*&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-client-chain/call/","title":"call - Misk","text":"<p>//misk/misk.client/ClientChain/call</p>"},{"location":"0.x/misk/misk/misk.client/-client-chain/call/#call","title":"call","text":"<p>[jvm]\\ abstract val call: Call&lt;Any&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-client-chain/callback/","title":"callback - Misk","text":"<p>//misk/misk.client/ClientChain/callback</p>"},{"location":"0.x/misk/misk/misk.client/-client-chain/callback/#callback","title":"callback","text":"<p>[jvm]\\ abstract val callback: Callback&lt;Any&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-client-chain/proceed/","title":"proceed - Misk","text":"<p>//misk/misk.client/ClientChain/proceed</p>"},{"location":"0.x/misk/misk/misk.client/-client-chain/proceed/#proceed","title":"proceed","text":"<p>[jvm]\\ abstract fun proceed(args: List&lt;*&gt;, callback: Callback&lt;Any&gt;)</p>"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/","title":"ClientMetricsInterceptor - Misk","text":"<p>//misk/misk.client/ClientMetricsInterceptor</p>"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/#clientmetricsinterceptor","title":"ClientMetricsInterceptor","text":"<p>[jvm]\\ class ClientMetricsInterceptor : Interceptor</p>"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/#types","title":"Types","text":"Name Summary Factory [jvm]@Singletonclass Factory"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/#functions","title":"Functions","text":"Name Summary intercept [jvm]open override fun intercept(chain: Interceptor.Chain): Response"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/#properties","title":"Properties","text":"Name Summary clientName [jvm]val clientName: String"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/client-name/","title":"clientName - Misk","text":"<p>//misk/misk.client/ClientMetricsInterceptor/clientName</p>"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/client-name/#clientname","title":"clientName","text":"<p>[jvm]\\ val clientName: String</p>"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/intercept/","title":"intercept - Misk","text":"<p>//misk/misk.client/ClientMetricsInterceptor/intercept</p>"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/intercept/#intercept","title":"intercept","text":"<p>[jvm]\\ open override fun intercept(chain: Interceptor.Chain): Response</p>"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.client/ClientMetricsInterceptor/Factory</p>"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ @Singleton</p> <p>class Factory</p>"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]fun create(clientName: String): ClientMetricsInterceptor"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.client/ClientMetricsInterceptor/Factory/create</p>"},{"location":"0.x/misk/misk/misk.client/-client-metrics-interceptor/-factory/create/#create","title":"create","text":"<p>[jvm]\\ fun create(clientName: String): ClientMetricsInterceptor</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-chain/","title":"ClientNetworkChain - Misk","text":"<p>//misk/misk.client/ClientNetworkChain</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-chain/#clientnetworkchain","title":"ClientNetworkChain","text":"<p>[jvm]\\ interface ClientNetworkChain</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-chain/#functions","title":"Functions","text":"Name Summary proceed [jvm]abstract fun proceed(request: Request): Response"},{"location":"0.x/misk/misk/misk.client/-client-network-chain/#properties","title":"Properties","text":"Name Summary action [jvm]abstract val action: ClientAction request [jvm]abstract val request: Request"},{"location":"0.x/misk/misk/misk.client/-client-network-chain/action/","title":"action - Misk","text":"<p>//misk/misk.client/ClientNetworkChain/action</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-chain/action/#action","title":"action","text":"<p>[jvm]\\ abstract val action: ClientAction</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-chain/proceed/","title":"proceed - Misk","text":"<p>//misk/misk.client/ClientNetworkChain/proceed</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-chain/proceed/#proceed","title":"proceed","text":"<p>[jvm]\\ abstract fun proceed(request: Request): Response</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-chain/request/","title":"request - Misk","text":"<p>//misk/misk.client/ClientNetworkChain/request</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-chain/request/#request","title":"request","text":"<p>[jvm]\\ abstract val request: Request</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptor/","title":"ClientNetworkInterceptor - Misk","text":"<p>//misk/misk.client/ClientNetworkInterceptor</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptor/#clientnetworkinterceptor","title":"ClientNetworkInterceptor","text":"<p>[jvm]\\ interface ClientNetworkInterceptor</p> <p>Intercepts client side calls at the application level, able to view and modify the outgoing HTTP request and observe the returned HTTP response</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptor/#types","title":"Types","text":"Name Summary Factory [jvm]interface FactoryThis interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptor/#functions","title":"Functions","text":"Name Summary intercept [jvm]abstract fun intercept(chain: ClientNetworkChain): Response"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptor/intercept/","title":"intercept - Misk","text":"<p>//misk/misk.client/ClientNetworkInterceptor/intercept</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptor/intercept/#intercept","title":"intercept","text":"<p>[jvm]\\ abstract fun intercept(chain: ClientNetworkChain): Response</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptor/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.client/ClientNetworkInterceptor/Factory</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptor/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ interface Factory</p> <p>This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:</p> <p>multibind&lt;ClientNetworkInterceptor.Factory&gt;().to&lt;MyFactory&gt;()</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptor/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]abstract fun create(action: ClientAction): ClientNetworkInterceptor?"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptor/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.client/ClientNetworkInterceptor/Factory/create</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptor/-factory/create/#create","title":"create","text":"<p>[jvm]\\ abstract fun create(action: ClientAction): ClientNetworkInterceptor?</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptors-module/","title":"ClientNetworkInterceptorsModule - Misk","text":"<p>//misk/misk.client/ClientNetworkInterceptorsModule</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptors-module/#clientnetworkinterceptorsmodule","title":"ClientNetworkInterceptorsModule","text":"<p>[jvm]\\ class ClientNetworkInterceptorsModule : KAbstractModule</p> <p>The common set of ClientNetworkInterceptors for all misk apps.</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptors-module/#constructors","title":"Constructors","text":"ClientNetworkInterceptorsModule [jvm]fun ClientNetworkInterceptorsModule()"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptors-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptors-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptors-module/-client-network-interceptors-module/","title":"ClientNetworkInterceptorsModule - Misk","text":"<p>//misk/misk.client/ClientNetworkInterceptorsModule/ClientNetworkInterceptorsModule</p>"},{"location":"0.x/misk/misk/misk.client/-client-network-interceptors-module/-client-network-interceptors-module/#clientnetworkinterceptorsmodule","title":"ClientNetworkInterceptorsModule","text":"<p>[jvm]\\ fun ClientNetworkInterceptorsModule()</p>"},{"location":"0.x/misk/misk/misk.client/-grpc-client-module/","title":"GrpcClientModule - Misk","text":"<p>//misk/misk.client/GrpcClientModule</p>"},{"location":"0.x/misk/misk/misk.client/-grpc-client-module/#grpcclientmodule","title":"GrpcClientModule","text":"<p>[jvm]\\ class GrpcClientModule&lt;T : Service, G : T&gt;@JvmOverloadsconstructor(kclass: KClass&lt;T&gt;, grpcClientClass: KClass&lt;G&gt;, name: String, annotation: Annotation?) : KAbstractModule</p> <p>Creates a gRPC client given a Wire-generated interface and HTTP configuration.</p>"},{"location":"0.x/misk/misk/misk.client/-grpc-client-module/#constructors","title":"Constructors","text":"GrpcClientModule [jvm]@JvmOverloadsfun &lt;T : Service, G : T&gt; GrpcClientModule(kclass: KClass&lt;T&gt;, grpcClientClass: KClass&lt;G&gt;, name: String, annotation: Annotation? = null)"},{"location":"0.x/misk/misk/misk.client/-grpc-client-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.client/-grpc-client-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.client/-grpc-client-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.client/-grpc-client-module/-grpc-client-module/","title":"GrpcClientModule - Misk","text":"<p>//misk/misk.client/GrpcClientModule/GrpcClientModule</p>"},{"location":"0.x/misk/misk/misk.client/-grpc-client-module/-grpc-client-module/#grpcclientmodule","title":"GrpcClientModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun &lt;T : Service, G : T&gt; GrpcClientModule(kclass: KClass&lt;T&gt;, grpcClientClass: KClass&lt;G&gt;, name: String, annotation: Annotation? = null)</p>"},{"location":"0.x/misk/misk/misk.client/-grpc-client-module/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.client/GrpcClientModule/Companion</p>"},{"location":"0.x/misk/misk/misk.client/-grpc-client-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.client/-grpc-client-module/-companion/#functions","title":"Functions","text":"Name Summary create [jvm]inline fun &lt;T : Service, G : T&gt; create(name: String, annotation: Annotation? = null): GrpcClientModule&lt;T, G&gt;"},{"location":"0.x/misk/misk/misk.client/-grpc-client-module/-companion/create/","title":"create - Misk","text":"<p>//misk/misk.client/GrpcClientModule/Companion/create</p>"},{"location":"0.x/misk/misk/misk.client/-grpc-client-module/-companion/create/#create","title":"create","text":"<p>[jvm]\\ inline fun &lt;T : Service, G : T&gt; create(name: String, annotation: Annotation? = null): GrpcClientModule&lt;T, G&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/","title":"HttpClientConfig - Misk","text":"<p>//misk/misk.client/HttpClientConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/#httpclientconfig","title":"HttpClientConfig","text":"<p>[jvm]\\ data class HttpClientConfig@JvmOverloadsconstructor(connectTimeout: Duration?, writeTimeout: Duration?, readTimeout: Duration?, pingInterval: Duration?, callTimeout: Duration?, maxRequests: Int?, maxRequestsPerHost: Int?, maxIdleConnections: Int?, keepAliveDuration: Duration?, ssl: HttpClientSSLConfig?, unixSocketFile: String?, protocols: List&lt;String&gt;?, retryOnConnectionFailure: Boolean?)</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/#functions","title":"Functions","text":"Name Summary toWispConfig [jvm]fun toWispConfig(): HttpClientConfig"},{"location":"0.x/misk/misk/misk.client/-http-client-config/#properties","title":"Properties","text":"Name Summary callTimeout [jvm]val callTimeout: Duration? = null connectTimeout [jvm]val connectTimeout: Duration? = null keepAliveDuration [jvm]val keepAliveDuration: Duration? = null maxIdleConnections [jvm]val maxIdleConnections: Int? = null maxRequests [jvm]val maxRequests: Int? = null maxRequestsPerHost [jvm]val maxRequestsPerHost: Int? = null pingInterval [jvm]val pingInterval: Duration? = null protocols [jvm]val protocols: List&lt;String&gt;? = null readTimeout [jvm]val readTimeout: Duration? = null retryOnConnectionFailure [jvm]val retryOnConnectionFailure: Boolean? = null ssl [jvm]val ssl: HttpClientSSLConfig? = null unixSocketFile [jvm]val unixSocketFile: String? = null writeTimeout [jvm]val writeTimeout: Duration? = null"},{"location":"0.x/misk/misk/misk.client/-http-client-config/#extensions","title":"Extensions","text":"Name Summary applyDefaults [jvm]fun HttpClientConfig.applyDefaults(other: HttpClientConfig): HttpClientConfig"},{"location":"0.x/misk/misk/misk.client/-http-client-config/-http-client-config/","title":"HttpClientConfig - Misk","text":"<p>//misk/misk.client/HttpClientConfig/HttpClientConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/-http-client-config/#httpclientconfig","title":"HttpClientConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun HttpClientConfig(connectTimeout: Duration? = null, writeTimeout: Duration? = null, readTimeout: Duration? = null, pingInterval: Duration? = null, callTimeout: Duration? = null, maxRequests: Int? = null, maxRequestsPerHost: Int? = null, maxIdleConnections: Int? = null, keepAliveDuration: Duration? = null, ssl: HttpClientSSLConfig? = null, unixSocketFile: String? = null, protocols: List&lt;String&gt;? = null, retryOnConnectionFailure: Boolean? = null)</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/call-timeout/","title":"callTimeout - Misk","text":"<p>//misk/misk.client/HttpClientConfig/callTimeout</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/call-timeout/#calltimeout","title":"callTimeout","text":"<p>[jvm]\\ val callTimeout: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/connect-timeout/","title":"connectTimeout - Misk","text":"<p>//misk/misk.client/HttpClientConfig/connectTimeout</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/connect-timeout/#connecttimeout","title":"connectTimeout","text":"<p>[jvm]\\ val connectTimeout: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/keep-alive-duration/","title":"keepAliveDuration - Misk","text":"<p>//misk/misk.client/HttpClientConfig/keepAliveDuration</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/keep-alive-duration/#keepaliveduration","title":"keepAliveDuration","text":"<p>[jvm]\\ val keepAliveDuration: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/max-idle-connections/","title":"maxIdleConnections - Misk","text":"<p>//misk/misk.client/HttpClientConfig/maxIdleConnections</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/max-idle-connections/#maxidleconnections","title":"maxIdleConnections","text":"<p>[jvm]\\ val maxIdleConnections: Int? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/max-requests-per-host/","title":"maxRequestsPerHost - Misk","text":"<p>//misk/misk.client/HttpClientConfig/maxRequestsPerHost</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/max-requests-per-host/#maxrequestsperhost","title":"maxRequestsPerHost","text":"<p>[jvm]\\ val maxRequestsPerHost: Int? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/max-requests/","title":"maxRequests - Misk","text":"<p>//misk/misk.client/HttpClientConfig/maxRequests</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/max-requests/#maxrequests","title":"maxRequests","text":"<p>[jvm]\\ val maxRequests: Int? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/ping-interval/","title":"pingInterval - Misk","text":"<p>//misk/misk.client/HttpClientConfig/pingInterval</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/ping-interval/#pinginterval","title":"pingInterval","text":"<p>[jvm]\\ val pingInterval: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/protocols/","title":"protocols - Misk","text":"<p>//misk/misk.client/HttpClientConfig/protocols</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/protocols/#protocols","title":"protocols","text":"<p>[jvm]\\ val protocols: List&lt;String&gt;? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/read-timeout/","title":"readTimeout - Misk","text":"<p>//misk/misk.client/HttpClientConfig/readTimeout</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/read-timeout/#readtimeout","title":"readTimeout","text":"<p>[jvm]\\ val readTimeout: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/retry-on-connection-failure/","title":"retryOnConnectionFailure - Misk","text":"<p>//misk/misk.client/HttpClientConfig/retryOnConnectionFailure</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/retry-on-connection-failure/#retryonconnectionfailure","title":"retryOnConnectionFailure","text":"<p>[jvm]\\ val retryOnConnectionFailure: Boolean? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/ssl/","title":"ssl - Misk","text":"<p>//misk/misk.client/HttpClientConfig/ssl</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/ssl/#ssl","title":"ssl","text":"<p>[jvm]\\ val ssl: HttpClientSSLConfig? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/to-wisp-config/","title":"toWispConfig - Misk","text":"<p>//misk/misk.client/HttpClientConfig/toWispConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/to-wisp-config/#towispconfig","title":"toWispConfig","text":"<p>[jvm]\\ fun toWispConfig(): HttpClientConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/unix-socket-file/","title":"unixSocketFile - Misk","text":"<p>//misk/misk.client/HttpClientConfig/unixSocketFile</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/unix-socket-file/#unixsocketfile","title":"unixSocketFile","text":"<p>[jvm]\\ val unixSocketFile: String? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/write-timeout/","title":"writeTimeout - Misk","text":"<p>//misk/misk.client/HttpClientConfig/writeTimeout</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config/write-timeout/#writetimeout","title":"writeTimeout","text":"<p>[jvm]\\ val writeTimeout: Duration? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config-url-provider/","title":"HttpClientConfigUrlProvider - Misk","text":"<p>//misk/misk.client/HttpClientConfigUrlProvider</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config-url-provider/#httpclientconfigurlprovider","title":"HttpClientConfigUrlProvider","text":"<p>[jvm]\\ class HttpClientConfigUrlProvider@Injectconstructor</p> <p>Calculates the url for an http client config, which can differ depending on if the client is envoy-based or connects directly.</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config-url-provider/#constructors","title":"Constructors","text":"HttpClientConfigUrlProvider [jvm]@Injectfun HttpClientConfigUrlProvider()"},{"location":"0.x/misk/misk/misk.client/-http-client-config-url-provider/#functions","title":"Functions","text":"Name Summary getUrl [jvm]fun getUrl(endpointConfig: HttpClientEndpointConfig): String"},{"location":"0.x/misk/misk/misk.client/-http-client-config-url-provider/#properties","title":"Properties","text":"Name Summary envoyClientEndpointProvider [jvm]@Inject(optional = true)lateinit var envoyClientEndpointProvider: EnvoyClientEndpointProvider"},{"location":"0.x/misk/misk/misk.client/-http-client-config-url-provider/-http-client-config-url-provider/","title":"HttpClientConfigUrlProvider - Misk","text":"<p>//misk/misk.client/HttpClientConfigUrlProvider/HttpClientConfigUrlProvider</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config-url-provider/-http-client-config-url-provider/#httpclientconfigurlprovider","title":"HttpClientConfigUrlProvider","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun HttpClientConfigUrlProvider()</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config-url-provider/envoy-client-endpoint-provider/","title":"envoyClientEndpointProvider - Misk","text":"<p>//misk/misk.client/HttpClientConfigUrlProvider/envoyClientEndpointProvider</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config-url-provider/envoy-client-endpoint-provider/#envoyclientendpointprovider","title":"envoyClientEndpointProvider","text":"<p>[jvm]\\</p> <p>@Inject(optional = true)</p> <p>lateinit var envoyClientEndpointProvider: EnvoyClientEndpointProvider</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config-url-provider/get-url/","title":"getUrl - Misk","text":"<p>//misk/misk.client/HttpClientConfigUrlProvider/getUrl</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-config-url-provider/get-url/#geturl","title":"getUrl","text":"<p>[jvm]\\ fun getUrl(endpointConfig: HttpClientEndpointConfig): String</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/","title":"HttpClientEndpointConfig - Misk","text":"<p>//misk/misk.client/HttpClientEndpointConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/#httpclientendpointconfig","title":"HttpClientEndpointConfig","text":"<p>[jvm]\\ data class HttpClientEndpointConfig@JvmOverloadsconstructor(url: String?, envoy: HttpClientEnvoyConfig?, clientConfig: HttpClientConfig)</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/#functions","title":"Functions","text":"Name Summary toWispConfig [jvm]fun toWispConfig(): HttpClientEndpointConfig"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/#properties","title":"Properties","text":"Name Summary clientConfig [jvm]val clientConfig: HttpClientConfig envoy [jvm]val envoy: HttpClientEnvoyConfig? = null url [jvm]val url: String? = null"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/-http-client-endpoint-config/","title":"HttpClientEndpointConfig - Misk","text":"<p>//misk/misk.client/HttpClientEndpointConfig/HttpClientEndpointConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/-http-client-endpoint-config/#httpclientendpointconfig","title":"HttpClientEndpointConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun HttpClientEndpointConfig(url: String? = null, envoy: HttpClientEnvoyConfig? = null, clientConfig: HttpClientConfig = HttpClientConfig())</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/client-config/","title":"clientConfig - Misk","text":"<p>//misk/misk.client/HttpClientEndpointConfig/clientConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/client-config/#clientconfig","title":"clientConfig","text":"<p>[jvm]\\ val clientConfig: HttpClientConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/envoy/","title":"envoy - Misk","text":"<p>//misk/misk.client/HttpClientEndpointConfig/envoy</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/envoy/#envoy","title":"envoy","text":"<p>[jvm]\\ val envoy: HttpClientEnvoyConfig? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/to-wisp-config/","title":"toWispConfig - Misk","text":"<p>//misk/misk.client/HttpClientEndpointConfig/toWispConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/to-wisp-config/#towispconfig","title":"toWispConfig","text":"<p>[jvm]\\ fun toWispConfig(): HttpClientEndpointConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/url/","title":"url - Misk","text":"<p>//misk/misk.client/HttpClientEndpointConfig/url</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-endpoint-config/url/#url","title":"url","text":"<p>[jvm]\\ val url: String? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-envoy-config/","title":"HttpClientEnvoyConfig - Misk","text":"<p>//misk/misk.client/HttpClientEnvoyConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-envoy-config/#httpclientenvoyconfig","title":"HttpClientEnvoyConfig","text":"<p>[jvm]\\ data class HttpClientEnvoyConfig@JvmOverloadsconstructor(app: String, env: String?)</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-envoy-config/#functions","title":"Functions","text":"Name Summary toWispConfig [jvm]fun toWispConfig(): HttpClientEnvoyConfig"},{"location":"0.x/misk/misk/misk.client/-http-client-envoy-config/#properties","title":"Properties","text":"Name Summary app [jvm]val app: String env [jvm]val env: String? = nullEnvironment to target. If null, the same environment as the app is running in is assumed."},{"location":"0.x/misk/misk/misk.client/-http-client-envoy-config/-http-client-envoy-config/","title":"HttpClientEnvoyConfig - Misk","text":"<p>//misk/misk.client/HttpClientEnvoyConfig/HttpClientEnvoyConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-envoy-config/-http-client-envoy-config/#httpclientenvoyconfig","title":"HttpClientEnvoyConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun HttpClientEnvoyConfig(app: String, env: String? = null)</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-envoy-config/app/","title":"app - Misk","text":"<p>//misk/misk.client/HttpClientEnvoyConfig/app</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-envoy-config/app/#app","title":"app","text":"<p>[jvm]\\ val app: String</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-envoy-config/env/","title":"env - Misk","text":"<p>//misk/misk.client/HttpClientEnvoyConfig/env</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-envoy-config/env/#env","title":"env","text":"<p>[jvm]\\ val env: String? = null</p> <p>Environment to target. If null, the same environment as the app is running in is assumed.</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-envoy-config/to-wisp-config/","title":"toWispConfig - Misk","text":"<p>//misk/misk.client/HttpClientEnvoyConfig/toWispConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-envoy-config/to-wisp-config/#towispconfig","title":"toWispConfig","text":"<p>[jvm]\\ fun toWispConfig(): HttpClientEnvoyConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/","title":"HttpClientFactory - Misk","text":"<p>//misk/misk.client/HttpClientFactory</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/#httpclientfactory","title":"HttpClientFactory","text":"<p>[jvm]\\ @Singleton</p> <p>class HttpClientFactory@Injectconstructor(sslLoader: SslLoader, sslContextFactory: SslContextFactory, okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator)</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/#functions","title":"Functions","text":"Name Summary create [jvm]fun create(config: HttpClientEndpointConfig): OkHttpClientReturns a client initialized based on config."},{"location":"0.x/misk/misk/misk.client/-http-client-factory/#properties","title":"Properties","text":"Name Summary envoyClientEndpointProvider [jvm]@Inject(optional = true)var envoyClientEndpointProvider: EnvoyClientEndpointProvider? = null okhttpInterceptors [jvm]@Inject(optional = true)var okhttpInterceptors: Provider&lt;List&lt;Interceptor&gt;&gt;? = null"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/-http-client-factory/","title":"HttpClientFactory - Misk","text":"<p>//misk/misk.client/HttpClientFactory/HttpClientFactory</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/-http-client-factory/#httpclientfactory","title":"HttpClientFactory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun HttpClientFactory(sslLoader: SslLoader, sslContextFactory: SslContextFactory, okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator)</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/create/","title":"create - Misk","text":"<p>//misk/misk.client/HttpClientFactory/create</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/create/#create","title":"create","text":"<p>[jvm]\\ fun create(config: HttpClientEndpointConfig): OkHttpClient</p> <p>Returns a client initialized based on config.</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/envoy-client-endpoint-provider/","title":"envoyClientEndpointProvider - Misk","text":"<p>//misk/misk.client/HttpClientFactory/envoyClientEndpointProvider</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/envoy-client-endpoint-provider/#envoyclientendpointprovider","title":"envoyClientEndpointProvider","text":"<p>[jvm]\\</p> <p>@Inject(optional = true)</p> <p>var envoyClientEndpointProvider: EnvoyClientEndpointProvider? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/okhttp-interceptors/","title":"okhttpInterceptors - Misk","text":"<p>//misk/misk.client/HttpClientFactory/okhttpInterceptors</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/okhttp-interceptors/#okhttpinterceptors","title":"okhttpInterceptors","text":"<p>[jvm]\\</p> <p>@Inject(optional = true)</p> <p>var okhttpInterceptors: Provider&lt;List&lt;Interceptor&gt;&gt;? = null</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.client/HttpClientFactory/Companion</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-factory/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-module/","title":"HttpClientModule - Misk","text":"<p>//misk/misk.client/HttpClientModule</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-module/#httpclientmodule","title":"HttpClientModule","text":"<p>[jvm]\\ class HttpClientModule@JvmOverloadsconstructor(name: String, annotation: Annotation?) : KAbstractModule</p> <p>Provides an OkHttpClient and ProtoMessageHttpClient for a peer service</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-module/#constructors","title":"Constructors","text":"HttpClientModule [jvm]@JvmOverloadsfun HttpClientModule(name: String, annotation: Annotation? = null)"},{"location":"0.x/misk/misk/misk.client/-http-client-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.client/-http-client-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.client/-http-client-module/-http-client-module/","title":"HttpClientModule - Misk","text":"<p>//misk/misk.client/HttpClientModule/HttpClientModule</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-module/-http-client-module/#httpclientmodule","title":"HttpClientModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun HttpClientModule(name: String, annotation: Annotation? = null)</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-s-s-l-config/","title":"HttpClientSSLConfig - Misk","text":"<p>//misk/misk.client/HttpClientSSLConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-s-s-l-config/#httpclientsslconfig","title":"HttpClientSSLConfig","text":"<p>[jvm]\\ data class HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig)</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-s-s-l-config/#functions","title":"Functions","text":"Name Summary toWispConfig [jvm]fun toWispConfig(): HttpClientSSLConfig"},{"location":"0.x/misk/misk/misk.client/-http-client-s-s-l-config/#properties","title":"Properties","text":"Name Summary cert_store [jvm]val cert_store: CertStoreConfig? trust_store [jvm]val trust_store: TrustStoreConfig"},{"location":"0.x/misk/misk/misk.client/-http-client-s-s-l-config/-http-client-s-s-l-config/","title":"HttpClientSSLConfig - Misk","text":"<p>//misk/misk.client/HttpClientSSLConfig/HttpClientSSLConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-s-s-l-config/-http-client-s-s-l-config/#httpclientsslconfig","title":"HttpClientSSLConfig","text":"<p>[jvm]\\ fun HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig)</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-s-s-l-config/cert_store/","title":"cert_store - Misk","text":"<p>//misk/misk.client/HttpClientSSLConfig/cert_store</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-s-s-l-config/cert_store/#cert_store","title":"cert_store","text":"<p>[jvm]\\ val cert_store: CertStoreConfig?</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-s-s-l-config/to-wisp-config/","title":"toWispConfig - Misk","text":"<p>//misk/misk.client/HttpClientSSLConfig/toWispConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-s-s-l-config/to-wisp-config/#towispconfig","title":"toWispConfig","text":"<p>[jvm]\\ fun toWispConfig(): HttpClientSSLConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-s-s-l-config/trust_store/","title":"trust_store - Misk","text":"<p>//misk/misk.client/HttpClientSSLConfig/trust_store</p>"},{"location":"0.x/misk/misk/misk.client/-http-client-s-s-l-config/trust_store/#trust_store","title":"trust_store","text":"<p>[jvm]\\ val trust_store: TrustStoreConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/","title":"HttpClientsConfig - Misk","text":"<p>//misk/misk.client/HttpClientsConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/#httpclientsconfig","title":"HttpClientsConfig","text":"<p>[jvm]\\ data class HttpClientsConfig@JvmOverloadsconstructor(hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt;, endpoints: Map&lt;String, HttpClientEndpointConfig&gt;, logRequests: Boolean) : Config</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/#functions","title":"Functions","text":"Name Summary endpointNames [jvm]fun endpointNames(): Set&lt;String&gt;Names of configured endpoints, all of which can be fetched using get get [jvm]operator fun get(url: URL): HttpClientEndpointConfigoperator fun get(clientName: String): HttpClientEndpointConfig"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/#properties","title":"Properties","text":"Name Summary endpoints [jvm]val endpoints: Map&lt;String, HttpClientEndpointConfig&gt; hostConfigs [jvm]val hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt; logRequests [jvm]val logRequests: Boolean = false"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/-http-clients-config/","title":"HttpClientsConfig - Misk","text":"<p>//misk/misk.client/HttpClientsConfig/HttpClientsConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/-http-clients-config/#httpclientsconfig","title":"HttpClientsConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun HttpClientsConfig(hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt; = linkedMapOf(), endpoints: Map&lt;String, HttpClientEndpointConfig&gt; = mapOf(), logRequests: Boolean = false)</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/endpoint-names/","title":"endpointNames - Misk","text":"<p>//misk/misk.client/HttpClientsConfig/endpointNames</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/endpoint-names/#endpointnames","title":"endpointNames","text":"<p>[jvm]\\ fun endpointNames(): Set&lt;String&gt;</p> <p>Names of configured endpoints, all of which can be fetched using get</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/endpoints/","title":"endpoints - Misk","text":"<p>//misk/misk.client/HttpClientsConfig/endpoints</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/endpoints/#endpoints","title":"endpoints","text":"<p>[jvm]\\ val endpoints: Map&lt;String, HttpClientEndpointConfig&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/get/","title":"get - Misk","text":"<p>//misk/misk.client/HttpClientsConfig/get</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/get/#get","title":"get","text":"<p>[jvm]\\ operator fun get(clientName: String): HttpClientEndpointConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/get/#return","title":"Return","text":"<p>The HttpClientEndpointConfig for the given client, populated with defaults as needed</p> <p>[jvm]\\ operator fun get(url: URL): HttpClientEndpointConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/get/#return_1","title":"Return","text":"<p>The HttpClientEndpointConfig for the given URL, populated with defaults as needed</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/host-configs/","title":"hostConfigs - Misk","text":"<p>//misk/misk.client/HttpClientsConfig/hostConfigs</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/host-configs/#hostconfigs","title":"hostConfigs","text":"<p>[jvm]\\ val hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/log-requests/","title":"logRequests - Misk","text":"<p>//misk/misk.client/HttpClientsConfig/logRequests</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/log-requests/#logrequests","title":"logRequests","text":"<p>[jvm]\\ val logRequests: Boolean = false</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.client/HttpClientsConfig/Companion</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/-companion/#properties","title":"Properties","text":"Name Summary httpClientConfigDefaults [jvm]val httpClientConfigDefaults: HttpClientConfig logger [jvm]val logger: &lt;ERROR CLASS&gt;"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/-companion/http-client-config-defaults/","title":"httpClientConfigDefaults - Misk","text":"<p>//misk/misk.client/HttpClientsConfig/Companion/httpClientConfigDefaults</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/-companion/http-client-config-defaults/#httpclientconfigdefaults","title":"httpClientConfigDefaults","text":"<p>[jvm]\\ val httpClientConfigDefaults: HttpClientConfig</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/-companion/logger/","title":"logger - Misk","text":"<p>//misk/misk.client/HttpClientsConfig/Companion/logger</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config/-companion/logger/#logger","title":"logger","text":"<p>[jvm]\\ val logger: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config-module/","title":"HttpClientsConfigModule - Misk","text":"<p>//misk/misk.client/HttpClientsConfigModule</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config-module/#httpclientsconfigmodule","title":"HttpClientsConfigModule","text":"<p>[jvm]\\ class HttpClientsConfigModule(config: HttpClientsConfig) : KAbstractModule</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.client/-http-clients-config-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.client/-http-clients-config-module/-http-clients-config-module/","title":"HttpClientsConfigModule - Misk","text":"<p>//misk/misk.client/HttpClientsConfigModule/HttpClientsConfigModule</p>"},{"location":"0.x/misk/misk/misk.client/-http-clients-config-module/-http-clients-config-module/#httpclientsconfigmodule","title":"HttpClientsConfigModule","text":"<p>[jvm]\\ fun HttpClientsConfigModule(config: HttpClientsConfig)</p>"},{"location":"0.x/misk/misk/misk.client/-jetty-port-peer-client-module/","title":"JettyPortPeerClientModule - Misk","text":"<p>//misk/misk.client/JettyPortPeerClientModule</p>"},{"location":"0.x/misk/misk/misk.client/-jetty-port-peer-client-module/#jettyportpeerclientmodule","title":"JettyPortPeerClientModule","text":"<p>[jvm]\\ class JettyPortPeerClientModule : KAbstractModule</p> <p>For testing.</p> <p>Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the Jetty server\u2019s port.</p>"},{"location":"0.x/misk/misk/misk.client/-jetty-port-peer-client-module/#constructors","title":"Constructors","text":"JettyPortPeerClientModule [jvm]fun JettyPortPeerClientModule()"},{"location":"0.x/misk/misk/misk.client/-jetty-port-peer-client-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]open fun configure()override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) peerClientFactory [jvm]@Provides@Singletonfun peerClientFactory(appName: String, httpClientsConfig: HttpClientsConfig, httpClientFactory: HttpClientFactory, jetty: JettyService): PeerClientFactory requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.client/-jetty-port-peer-client-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.client/-jetty-port-peer-client-module/-jetty-port-peer-client-module/","title":"JettyPortPeerClientModule - Misk","text":"<p>//misk/misk.client/JettyPortPeerClientModule/JettyPortPeerClientModule</p>"},{"location":"0.x/misk/misk/misk.client/-jetty-port-peer-client-module/-jetty-port-peer-client-module/#jettyportpeerclientmodule","title":"JettyPortPeerClientModule","text":"<p>[jvm]\\ fun JettyPortPeerClientModule()</p>"},{"location":"0.x/misk/misk/misk.client/-jetty-port-peer-client-module/peer-client-factory/","title":"peerClientFactory - Misk","text":"<p>//misk/misk.client/JettyPortPeerClientModule/peerClientFactory</p>"},{"location":"0.x/misk/misk/misk.client/-jetty-port-peer-client-module/peer-client-factory/#peerclientfactory","title":"peerClientFactory","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun peerClientFactory(appName: String, httpClientsConfig: HttpClientsConfig, httpClientFactory: HttpClientFactory, jetty: JettyService): PeerClientFactory</p>"},{"location":"0.x/misk/misk/misk.client/-ok-http-client-common-configurator/","title":"OkHttpClientCommonConfigurator - Misk","text":"<p>//misk/misk.client/OkHttpClientCommonConfigurator</p>"},{"location":"0.x/misk/misk/misk.client/-ok-http-client-common-configurator/#okhttpclientcommonconfigurator","title":"OkHttpClientCommonConfigurator","text":"<p>[jvm]\\ class OkHttpClientCommonConfigurator@Injectconstructor</p>"},{"location":"0.x/misk/misk/misk.client/-ok-http-client-common-configurator/#functions","title":"Functions","text":"Name Summary configure [jvm]fun configure(builder: OkHttpClient.Builder, config: HttpClientEndpointConfig): OkHttpClient.Builder"},{"location":"0.x/misk/misk/misk.client/-ok-http-client-common-configurator/#properties","title":"Properties","text":"Name Summary delegate [jvm]val delegate: OkHttpClientCommonConfigurator"},{"location":"0.x/misk/misk/misk.client/-ok-http-client-common-configurator/-ok-http-client-common-configurator/","title":"OkHttpClientCommonConfigurator - Misk","text":"<p>//misk/misk.client/OkHttpClientCommonConfigurator/OkHttpClientCommonConfigurator</p>"},{"location":"0.x/misk/misk/misk.client/-ok-http-client-common-configurator/-ok-http-client-common-configurator/#okhttpclientcommonconfigurator","title":"OkHttpClientCommonConfigurator","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun OkHttpClientCommonConfigurator()</p>"},{"location":"0.x/misk/misk/misk.client/-ok-http-client-common-configurator/configure/","title":"configure - Misk","text":"<p>//misk/misk.client/OkHttpClientCommonConfigurator/configure</p>"},{"location":"0.x/misk/misk/misk.client/-ok-http-client-common-configurator/configure/#configure","title":"configure","text":"<p>[jvm]\\ fun configure(builder: OkHttpClient.Builder, config: HttpClientEndpointConfig): OkHttpClient.Builder</p>"},{"location":"0.x/misk/misk/misk.client/-ok-http-client-common-configurator/delegate/","title":"delegate - Misk","text":"<p>//misk/misk.client/OkHttpClientCommonConfigurator/delegate</p>"},{"location":"0.x/misk/misk/misk.client/-ok-http-client-common-configurator/delegate/#delegate","title":"delegate","text":"<p>[jvm]\\ val delegate: OkHttpClientCommonConfigurator</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-factory/","title":"PeerClientFactory - Misk","text":"<p>//misk/misk.client/PeerClientFactory</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-factory/#peerclientfactory","title":"PeerClientFactory","text":"<p>[jvm]\\ class PeerClientFactory(appName: String, httpClientsConfig: HttpClientsConfig, httpClientFactory: HttpClientFactory, httpsPort: Int)</p> <p>Factory that creates OkHttpClients for connecting to another instance of the same application running in the same cluster.</p> <p>An OkHttpClient is cached for each peer.</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-factory/#constructors","title":"Constructors","text":"PeerClientFactory [jvm]fun PeerClientFactory(appName: String, httpClientsConfig: HttpClientsConfig, httpClientFactory: HttpClientFactory, httpsPort: Int)"},{"location":"0.x/misk/misk/misk.client/-peer-client-factory/#functions","title":"Functions","text":"Name Summary baseUrl [jvm]fun baseUrl(peer: Cluster.Member): StringGet the base URL for calling the given peer cluster member. client [jvm]fun client(peer: Cluster.Member): OkHttpClientGet a client to call the given peer cluster member. This client will fail when calling different services, as determined by the OU in the certificate returned by the called service."},{"location":"0.x/misk/misk/misk.client/-peer-client-factory/-peer-client-factory/","title":"PeerClientFactory - Misk","text":"<p>//misk/misk.client/PeerClientFactory/PeerClientFactory</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-factory/-peer-client-factory/#peerclientfactory","title":"PeerClientFactory","text":"<p>[jvm]\\ fun PeerClientFactory(appName: String, httpClientsConfig: HttpClientsConfig, httpClientFactory: HttpClientFactory, httpsPort: Int)</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-factory/base-url/","title":"baseUrl - Misk","text":"<p>//misk/misk.client/PeerClientFactory/baseUrl</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-factory/base-url/#baseurl","title":"baseUrl","text":"<p>[jvm]\\ fun baseUrl(peer: Cluster.Member): String</p> <p>Get the base URL for calling the given peer cluster member.</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-factory/client/","title":"client - Misk","text":"<p>//misk/misk.client/PeerClientFactory/client</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-factory/client/#client","title":"client","text":"<p>[jvm]\\ fun client(peer: Cluster.Member): OkHttpClient</p> <p>Get a client to call the given peer cluster member. This client will fail when calling different services, as determined by the OU in the certificate returned by the called service.</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-module/","title":"PeerClientModule - Misk","text":"<p>//misk/misk.client/PeerClientModule</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-module/#peerclientmodule","title":"PeerClientModule","text":"<p>[jvm]\\ class PeerClientModule : KAbstractModule</p> <p>Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the SSL port in the WebConfig.</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-module/#constructors","title":"Constructors","text":"PeerClientModule [jvm]fun PeerClientModule()"},{"location":"0.x/misk/misk/misk.client/-peer-client-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]open fun configure()override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) peerClientFactory [jvm]@Provides@Singletonfun peerClientFactory(appName: String, httpClientsConfig: HttpClientsConfig, httpClientFactory: HttpClientFactory, webConfig: WebConfig): PeerClientFactory requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.client/-peer-client-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.client/-peer-client-module/-peer-client-module/","title":"PeerClientModule - Misk","text":"<p>//misk/misk.client/PeerClientModule/PeerClientModule</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-module/-peer-client-module/#peerclientmodule","title":"PeerClientModule","text":"<p>[jvm]\\ fun PeerClientModule()</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-module/peer-client-factory/","title":"peerClientFactory - Misk","text":"<p>//misk/misk.client/PeerClientModule/peerClientFactory</p>"},{"location":"0.x/misk/misk/misk.client/-peer-client-module/peer-client-factory/#peerclientfactory","title":"peerClientFactory","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun peerClientFactory(appName: String, httpClientsConfig: HttpClientsConfig, httpClientFactory: HttpClientFactory, webConfig: WebConfig): PeerClientFactory</p>"},{"location":"0.x/misk/misk/misk.client/-proto-message-http-client/","title":"ProtoMessageHttpClient - Misk","text":"<p>//misk/misk.client/ProtoMessageHttpClient</p>"},{"location":"0.x/misk/misk/misk.client/-proto-message-http-client/#protomessagehttpclient","title":"ProtoMessageHttpClient","text":"<p>[jvm]\\ class ProtoMessageHttpClient(baseUrl: String, moshi: Moshi, okHttp: OkHttpClient)</p> <p>This helper class is for making HTTP requests to an endpoint that handles protobuf Message classes.</p>"},{"location":"0.x/misk/misk/misk.client/-proto-message-http-client/#constructors","title":"Constructors","text":"ProtoMessageHttpClient [jvm]fun ProtoMessageHttpClient(baseUrl: String, moshi: Moshi, okHttp: OkHttpClient)"},{"location":"0.x/misk/misk/misk.client/-proto-message-http-client/#functions","title":"Functions","text":"Name Summary post [jvm]inline fun &lt;O : Any&gt; post(path: String, requestBody: Message&lt;, *&gt;): &lt;ERROR CLASS&gt;fun &lt;O : Any&gt; post(path: String, requestBody: Message&lt;, *&gt;, responseType: Class&lt;O&gt;): O"},{"location":"0.x/misk/misk/misk.client/-proto-message-http-client/-proto-message-http-client/","title":"ProtoMessageHttpClient - Misk","text":"<p>//misk/misk.client/ProtoMessageHttpClient/ProtoMessageHttpClient</p>"},{"location":"0.x/misk/misk/misk.client/-proto-message-http-client/-proto-message-http-client/#protomessagehttpclient","title":"ProtoMessageHttpClient","text":"<p>[jvm]\\ fun ProtoMessageHttpClient(baseUrl: String, moshi: Moshi, okHttp: OkHttpClient)</p>"},{"location":"0.x/misk/misk/misk.client/-proto-message-http-client/post/","title":"post - Misk","text":"<p>//misk/misk.client/ProtoMessageHttpClient/post</p>"},{"location":"0.x/misk/misk/misk.client/-proto-message-http-client/post/#post","title":"post","text":"<p>[jvm]\\ fun &lt;O : Any&gt; post(path: String, requestBody: Message&lt;*, *&gt;, responseType: Class&lt;O&gt;): O</p> <p>inline fun &lt;O : Any&gt; post(path: String, requestBody: Message&lt;*, *&gt;): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-typed-client-factory/","title":"TypedClientFactory - Misk","text":"<p>//misk/misk.client/TypedClientFactory</p>"},{"location":"0.x/misk/misk/misk.client/-typed-client-factory/#typedclientfactory","title":"TypedClientFactory","text":"<p>[jvm]\\ class TypedClientFactory@Injectconstructor</p>"},{"location":"0.x/misk/misk/misk.client/-typed-client-factory/#functions","title":"Functions","text":"Name Summary build [jvm]@JvmOverloadsinline fun &lt;T : Any&gt; build(endpointConfig: HttpClientEndpointConfig, name: String, retrofitBuilderProvider: Provider&lt;Retrofit.Builder&gt;? = null): TReified flavor of build[jvm]fun &lt;T : Any&gt; build(endpointConfig: HttpClientEndpointConfig, kclass: KClass&lt;T&gt;, name: String, retrofitBuilderProvider: Provider&lt;Retrofit.Builder&gt;?): TBuild up a typed client dynamically in runtime. This is useful for platform-type services that cannot statically define all of the services they talk to."},{"location":"0.x/misk/misk/misk.client/-typed-client-factory/-typed-client-factory/","title":"TypedClientFactory - Misk","text":"<p>//misk/misk.client/TypedClientFactory/TypedClientFactory</p>"},{"location":"0.x/misk/misk/misk.client/-typed-client-factory/-typed-client-factory/#typedclientfactory","title":"TypedClientFactory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun TypedClientFactory()</p>"},{"location":"0.x/misk/misk/misk.client/-typed-client-factory/build/","title":"build - Misk","text":"<p>//misk/misk.client/TypedClientFactory/build</p>"},{"location":"0.x/misk/misk/misk.client/-typed-client-factory/build/#build","title":"build","text":"<p>[jvm]\\ fun &lt;T : Any&gt; build(endpointConfig: HttpClientEndpointConfig, kclass: KClass&lt;T&gt;, name: String, retrofitBuilderProvider: Provider&lt;Retrofit.Builder&gt;?): T</p> <p>Build up a typed client dynamically in runtime. This is useful for platform-type services that cannot statically define all of the services they talk to.</p> <p>Services should cache the resulting clients to avoid incurring the construction on every call.</p>"},{"location":"0.x/misk/misk/misk.client/-typed-client-factory/build/#parameters","title":"Parameters","text":"<p>jvm</p> endpointConfig HTTP configuration to use to connect to the service kclass The class of the typed client that will be built name A name to reference the client by for observability purposes retrofitBuilderProvider Optional retrofit builder override.     If not provided, an empty builder is used <p>[jvm]\\</p> <p>@JvmOverloads</p> <p>inline fun &lt;T : Any&gt; build(endpointConfig: HttpClientEndpointConfig, name: String, retrofitBuilderProvider: Provider&lt;Retrofit.Builder&gt;? = null): T</p> <p>Reified flavor of build</p>"},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/","title":"TypedHttpClientModule - Misk","text":"<p>//misk/misk.client/TypedHttpClientModule</p>"},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/#typedhttpclientmodule","title":"TypedHttpClientModule","text":"<p>[jvm]\\ class TypedHttpClientModule&lt;T : Any&gt;@JvmOverloadsconstructor(kclass: KClass&lt;T&gt;, name: String, annotation: Annotation?, retrofitBuilderProvider: Provider&lt;Retrofit.Builder&gt;?) : KAbstractModule</p> <p>Creates a retrofit-backed typed client given an API interface and an HTTP configuration.</p>"},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/#parameters","title":"Parameters","text":"<p>jvm</p> retrofitBuilderProvider Optional provider of a Retrofit.Builder. This provider should not return a singleton since the builder it returns will be mutated."},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/#constructors","title":"Constructors","text":"TypedHttpClientModule [jvm]@JvmOverloadsfun &lt;T : Any&gt; TypedHttpClientModule(kclass: KClass&lt;T&gt;, name: String, annotation: Annotation? = null, retrofitBuilderProvider: Provider&lt;Retrofit.Builder&gt;? = null)"},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/-typed-http-client-module/","title":"TypedHttpClientModule - Misk","text":"<p>//misk/misk.client/TypedHttpClientModule/TypedHttpClientModule</p>"},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/-typed-http-client-module/#typedhttpclientmodule","title":"TypedHttpClientModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun &lt;T : Any&gt; TypedHttpClientModule(kclass: KClass&lt;T&gt;, name: String, annotation: Annotation? = null, retrofitBuilderProvider: Provider&lt;Retrofit.Builder&gt;? = null)</p>"},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/-typed-http-client-module/#parameters","title":"Parameters","text":"<p>jvm</p> retrofitBuilderProvider Optional provider of a Retrofit.Builder. This provider should not return a singleton since the builder it returns will be mutated."},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.client/TypedHttpClientModule/Companion</p>"},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/-companion/#functions","title":"Functions","text":"Name Summary create [jvm]inline fun &lt;T : Any&gt; create(name: String, annotation: Annotation? = null): TypedHttpClientModule&lt;T&gt;"},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/-companion/create/","title":"create - Misk","text":"<p>//misk/misk.client/TypedHttpClientModule/Companion/create</p>"},{"location":"0.x/misk/misk/misk.client/-typed-http-client-module/-companion/create/#create","title":"create","text":"<p>[jvm]\\ inline fun &lt;T : Any&gt; create(name: String, annotation: Annotation? = null): TypedHttpClientModule&lt;T&gt;</p>"},{"location":"0.x/misk/misk/misk.client/-typed-peer-client-factory/","title":"TypedPeerClientFactory - Misk","text":"<p>//misk/misk.client/TypedPeerClientFactory</p>"},{"location":"0.x/misk/misk/misk.client/-typed-peer-client-factory/#typedpeerclientfactory","title":"TypedPeerClientFactory","text":"<p>[jvm]\\ interface TypedPeerClientFactory&lt;T&gt;</p> <p>Factory for creating typed clients that call other members of a cluster.</p>"},{"location":"0.x/misk/misk/misk.client/-typed-peer-client-factory/#functions","title":"Functions","text":"Name Summary client [jvm]abstract fun client(peer: Cluster.Member): T"},{"location":"0.x/misk/misk/misk.client/-typed-peer-client-factory/client/","title":"client - Misk","text":"<p>//misk/misk.client/TypedPeerClientFactory/client</p>"},{"location":"0.x/misk/misk/misk.client/-typed-peer-client-factory/client/#client","title":"client","text":"<p>[jvm]\\ abstract fun client(peer: Cluster.Member): T</p>"},{"location":"0.x/misk/misk/misk.client/-typed-peer-http-client-module/","title":"TypedPeerHttpClientModule - Misk","text":"<p>//misk/misk.client/TypedPeerHttpClientModule</p>"},{"location":"0.x/misk/misk/misk.client/-typed-peer-http-client-module/#typedpeerhttpclientmodule","title":"TypedPeerHttpClientModule","text":"<p>[jvm]\\ class TypedPeerHttpClientModule&lt;T : Any&gt;@JvmOverloadsconstructor(kclass: KClass&lt;T&gt;, name: String, retrofitBuilderProvider: Provider&lt;Retrofit.Builder&gt;?) : KAbstractModule</p> <p>Creates a retrofit-backed typed client factory given an API interface and an HTTP configuration.</p> <p>The factory returned typed clients that can be used to call other members of the cluster.</p>"},{"location":"0.x/misk/misk/misk.client/-typed-peer-http-client-module/#constructors","title":"Constructors","text":"TypedPeerHttpClientModule [jvm]@JvmOverloadsfun &lt;T : Any&gt; TypedPeerHttpClientModule(kclass: KClass&lt;T&gt;, name: String, retrofitBuilderProvider: Provider&lt;Retrofit.Builder&gt;? = null)"},{"location":"0.x/misk/misk/misk.client/-typed-peer-http-client-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.client/-typed-peer-http-client-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.client/-typed-peer-http-client-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.client/-typed-peer-http-client-module/-typed-peer-http-client-module/","title":"TypedPeerHttpClientModule - Misk","text":"<p>//misk/misk.client/TypedPeerHttpClientModule/TypedPeerHttpClientModule</p>"},{"location":"0.x/misk/misk/misk.client/-typed-peer-http-client-module/-typed-peer-http-client-module/#typedpeerhttpclientmodule","title":"TypedPeerHttpClientModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun &lt;T : Any&gt; TypedPeerHttpClientModule(kclass: KClass&lt;T&gt;, name: String, retrofitBuilderProvider: Provider&lt;Retrofit.Builder&gt;? = null)</p>"},{"location":"0.x/misk/misk/misk.client/-typed-peer-http-client-module/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.client/TypedPeerHttpClientModule/Companion</p>"},{"location":"0.x/misk/misk/misk.client/-typed-peer-http-client-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.client/-typed-peer-http-client-module/-companion/#functions","title":"Functions","text":"Name Summary create [jvm]inline fun &lt;T : Any&gt; create(name: String): TypedPeerHttpClientModule&lt;T&gt;"},{"location":"0.x/misk/misk/misk.client/-typed-peer-http-client-module/-companion/create/","title":"create - Misk","text":"<p>//misk/misk.client/TypedPeerHttpClientModule/Companion/create</p>"},{"location":"0.x/misk/misk/misk.client/-typed-peer-http-client-module/-companion/create/#create","title":"create","text":"<p>[jvm]\\ inline fun &lt;T : Any&gt; create(name: String): TypedPeerHttpClientModule&lt;T&gt;</p>"},{"location":"0.x/misk/misk/misk.concurrent/","title":"Package misk.concurrent - Misk","text":"<p>//misk/misk.concurrent</p>"},{"location":"0.x/misk/misk/misk.concurrent/#package-miskconcurrent","title":"Package misk.concurrent","text":""},{"location":"0.x/misk/misk/misk.concurrent/#types","title":"Types","text":"Name Summary ExecutorServiceModule [jvm]class ExecutorServiceModule(annotation: KClass&lt;out Annotation&gt;, createFunction: (ExecutorServiceFactory) -&gt; ExecutorService) : KAbstractModuleInstall this to bind an executor service with annotation. The executor service will be automatically shut down when the service shuts down. ExplicitReleaseBlockingQueue [jvm]class ExplicitReleaseBlockingQueue&lt;T&gt; : BlockingQueue&lt;T&gt; An ExplicitReleaseBlockingQueue is a BlockingQueue that only returns elements from BlockingQueue.take, BlockingQueue.poll, and BlockingQueue.peek after a call to ExplicitReleaseBlockingQueue.release. Used by tests that want to explicitly control when pollers receive queued items. ExplicitReleaseDelayQueue [jvm]class ExplicitReleaseDelayQueue&lt;T : Delayed&gt; : BlockingQueue&lt;T&gt; An ExplicitReleaseDelayQueue is an ExplicitReleaseBlockingQueue that release elements in the order in which they expire WrappingListeningExecutorService [jvm]abstract class WrappingListeningExecutorService : ForwardingListeningExecutorServiceListeningExecutorService which wraps all calls"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/","title":"ExecutorServiceModule - Misk","text":"<p>//misk/misk.concurrent/ExecutorServiceModule</p>"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/#executorservicemodule","title":"ExecutorServiceModule","text":"<p>[jvm]\\ class ExecutorServiceModule(annotation: KClass&lt;out Annotation&gt;, createFunction: (ExecutorServiceFactory) -&gt; ExecutorService) : KAbstractModule</p> <p>Install this to bind an executor service with annotation. The executor service will be automatically shut down when the service shuts down.</p>"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/#constructors","title":"Constructors","text":"ExecutorServiceModule [jvm]fun ExecutorServiceModule(annotation: KClass&lt;out Annotation&gt;, createFunction: (ExecutorServiceFactory) -&gt; ExecutorService)"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/-executor-service-module/","title":"ExecutorServiceModule - Misk","text":"<p>//misk/misk.concurrent/ExecutorServiceModule/ExecutorServiceModule</p>"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/-executor-service-module/#executorservicemodule","title":"ExecutorServiceModule","text":"<p>[jvm]\\ fun ExecutorServiceModule(annotation: KClass&lt;out Annotation&gt;, createFunction: (ExecutorServiceFactory) -&gt; ExecutorService)</p>"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.concurrent/ExecutorServiceModule/Companion</p>"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/-companion/#functions","title":"Functions","text":"Name Summary withFixedThreadPool [jvm]fun withFixedThreadPool(annotation: KClass&lt;out Annotation&gt;, nameFormat: String, nThreads: Int): ExecutorServiceModule withUnboundThreadPool [jvm]fun withUnboundThreadPool(annotation: KClass&lt;out Annotation&gt;, nameFormat: String): ExecutorServiceModule"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/-companion/with-fixed-thread-pool/","title":"withFixedThreadPool - Misk","text":"<p>//misk/misk.concurrent/ExecutorServiceModule/Companion/withFixedThreadPool</p>"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/-companion/with-fixed-thread-pool/#withfixedthreadpool","title":"withFixedThreadPool","text":"<p>[jvm]\\ fun withFixedThreadPool(annotation: KClass&lt;out Annotation&gt;, nameFormat: String, nThreads: Int): ExecutorServiceModule</p>"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/-companion/with-unbound-thread-pool/","title":"withUnboundThreadPool - Misk","text":"<p>//misk/misk.concurrent/ExecutorServiceModule/Companion/withUnboundThreadPool</p>"},{"location":"0.x/misk/misk/misk.concurrent/-executor-service-module/-companion/with-unbound-thread-pool/#withunboundthreadpool","title":"withUnboundThreadPool","text":"<p>[jvm]\\ fun withUnboundThreadPool(annotation: KClass&lt;out Annotation&gt;, nameFormat: String): ExecutorServiceModule</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/","title":"ExplicitReleaseBlockingQueue - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/#explicitreleaseblockingqueue","title":"ExplicitReleaseBlockingQueue","text":"<p>[jvm]\\ class ExplicitReleaseBlockingQueue&lt;T&gt; : BlockingQueue&lt;T&gt; </p> <p>An ExplicitReleaseBlockingQueue is a BlockingQueue that only returns elements from BlockingQueue.take, BlockingQueue.poll, and BlockingQueue.peek after a call to ExplicitReleaseBlockingQueue.release. Used by tests that want to explicitly control when pollers receive queued items.</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/#constructors","title":"Constructors","text":"ExplicitReleaseBlockingQueue [jvm]fun ExplicitReleaseBlockingQueue()"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/#functions","title":"Functions","text":"Name Summary add [jvm]open override fun add(element: T): Boolean addAll [jvm]open override fun addAll(elements: Collection&lt;T&gt;): Boolean clear [jvm]open override fun clear() contains [jvm]open operator override fun contains(element: T): Boolean containsAll [jvm]open override fun containsAll(elements: Collection&lt;T&gt;): Boolean drainTo [jvm]open override fun drainTo(c: MutableCollection&lt;in T&gt;): Intopen override fun drainTo(c: MutableCollection&lt;in T&gt;?, maxElements: Int): Int element [jvm]open override fun element(): T forEach [jvm]open fun forEach(p0: Consumer&lt;in T&gt;) isEmpty [jvm]open override fun isEmpty(): Boolean iterator [jvm]open operator override fun iterator(): MutableIterator&lt;T&gt; offer [jvm]open override fun offer(e: T): Booleanopen override fun offer(e: T, timeout: Long, unit: TimeUnit): Boolean parallelStream [jvm]open fun parallelStream(): Stream&lt;T&gt; peek [jvm]open override fun peek(): T? peekPending [jvm]fun peekPending(): T? poll [jvm]open override fun poll(): T?open override fun poll(timeout: Long, unit: TimeUnit): T? put [jvm]open override fun put(e: T) release [jvm]fun release(n: Int): Intreleases up to n items from the pending queue, making them visible to take, poll, peek, etc. This method does not \u201cextend credit\u201d; if n number of pending items on the queue, every currently pending item is made visible, but any items added in the future continue to go onto the pending queue releaseAll [jvm]fun releaseAll(): Intreleases all items from the pending queue, returning the number of items released remainingCapacity [jvm]open override fun remainingCapacity(): Int remove [jvm]open override fun remove(): T?open override fun remove(element: T): Boolean removeAll [jvm]open override fun removeAll(elements: Collection&lt;T&gt;): Boolean removeIf [jvm]open fun removeIf(p0: Predicate&lt;in T&gt;): Boolean retainAll [jvm]open override fun retainAll(elements: Collection&lt;T&gt;): Boolean spliterator [jvm]open override fun spliterator(): Spliterator&lt;T&gt; stream [jvm]open fun stream(): Stream&lt;T&gt; take [jvm]open override fun take(): T"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/#properties","title":"Properties","text":"Name Summary size [jvm]open override val size: Int"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/-explicit-release-blocking-queue/","title":"ExplicitReleaseBlockingQueue - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/ExplicitReleaseBlockingQueue</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/-explicit-release-blocking-queue/#explicitreleaseblockingqueue","title":"ExplicitReleaseBlockingQueue","text":"<p>[jvm]\\ fun ExplicitReleaseBlockingQueue()</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/add-all/","title":"addAll - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/addAll</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/add-all/#addall","title":"addAll","text":"<p>[jvm]\\ open override fun addAll(elements: Collection&lt;T&gt;): Boolean</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/add/","title":"add - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/add</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/add/#add","title":"add","text":"<p>[jvm]\\ open override fun add(element: T): Boolean</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/clear/","title":"clear - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/clear</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/clear/#clear","title":"clear","text":"<p>[jvm]\\ open override fun clear()</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/contains-all/","title":"containsAll - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/containsAll</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/contains-all/#containsall","title":"containsAll","text":"<p>[jvm]\\ open override fun containsAll(elements: Collection&lt;T&gt;): Boolean</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/contains/","title":"contains - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/contains</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/contains/#contains","title":"contains","text":"<p>[jvm]\\ open operator override fun contains(element: T): Boolean</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/drain-to/","title":"drainTo - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/drainTo</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/drain-to/#drainto","title":"drainTo","text":"<p>[jvm]\\ open override fun drainTo(c: MutableCollection&lt;in T&gt;): Int</p> <p>open override fun drainTo(c: MutableCollection&lt;in T&gt;?, maxElements: Int): Int</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/element/","title":"element - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/element</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/element/#element","title":"element","text":"<p>[jvm]\\ open override fun element(): T</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/is-empty/","title":"isEmpty - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/isEmpty</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/is-empty/#isempty","title":"isEmpty","text":"<p>[jvm]\\ open override fun isEmpty(): Boolean</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/iterator/","title":"iterator - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/iterator</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/iterator/#iterator","title":"iterator","text":"<p>[jvm]\\ open operator override fun iterator(): MutableIterator&lt;T&gt;</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/offer/","title":"offer - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/offer</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/offer/#offer","title":"offer","text":"<p>[jvm]\\ open override fun offer(e: T): Boolean</p> <p>open override fun offer(e: T, timeout: Long, unit: TimeUnit): Boolean</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/peek-pending/","title":"peekPending - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/peekPending</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/peek-pending/#peekpending","title":"peekPending","text":"<p>[jvm]\\ fun peekPending(): T?</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/peek/","title":"peek - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/peek</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/peek/#peek","title":"peek","text":"<p>[jvm]\\ open override fun peek(): T?</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/poll/","title":"poll - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/poll</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/poll/#poll","title":"poll","text":"<p>[jvm]\\ open override fun poll(timeout: Long, unit: TimeUnit): T?</p> <p>open override fun poll(): T?</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/put/","title":"put - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/put</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/put/#put","title":"put","text":"<p>[jvm]\\ open override fun put(e: T)</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/release-all/","title":"releaseAll - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/releaseAll</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/release-all/#releaseall","title":"releaseAll","text":"<p>[jvm]\\ fun releaseAll(): Int</p> <p>releases all items from the pending queue, returning the number of items released</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/release/","title":"release - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/release</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/release/#release","title":"release","text":"<p>[jvm]\\ fun release(n: Int): Int</p> <p>releases up to n items from the pending queue, making them visible to take, poll, peek, etc. This method does not \u201cextend credit\u201d; if n number of pending items on the queue, every currently pending item is made visible, but any items added in the future continue to go onto the pending queue</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/release/#return","title":"Return","text":"<p>the number of items actually releases</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/remaining-capacity/","title":"remainingCapacity - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/remainingCapacity</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/remaining-capacity/#remainingcapacity","title":"remainingCapacity","text":"<p>[jvm]\\ open override fun remainingCapacity(): Int</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/remove-all/","title":"removeAll - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/removeAll</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/remove-all/#removeall","title":"removeAll","text":"<p>[jvm]\\ open override fun removeAll(elements: Collection&lt;T&gt;): Boolean</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/remove/","title":"remove - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/remove</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/remove/#remove","title":"remove","text":"<p>[jvm]\\ open override fun remove(element: T): Boolean</p> <p>open override fun remove(): T?</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/retain-all/","title":"retainAll - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/retainAll</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/retain-all/#retainall","title":"retainAll","text":"<p>[jvm]\\ open override fun retainAll(elements: Collection&lt;T&gt;): Boolean</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/size/","title":"size - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/size</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/size/#size","title":"size","text":"<p>[jvm]\\ open override val size: Int</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/take/","title":"take - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseBlockingQueue/take</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-blocking-queue/take/#take","title":"take","text":"<p>[jvm]\\ open override fun take(): T</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-delay-queue/","title":"ExplicitReleaseDelayQueue - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseDelayQueue</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-delay-queue/#explicitreleasedelayqueue","title":"ExplicitReleaseDelayQueue","text":"<p>[jvm]\\ class ExplicitReleaseDelayQueue&lt;T : Delayed&gt; : BlockingQueue&lt;T&gt; </p> <p>An ExplicitReleaseDelayQueue is an ExplicitReleaseBlockingQueue that release elements in the order in which they expire</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-delay-queue/#constructors","title":"Constructors","text":"ExplicitReleaseDelayQueue [jvm]fun ExplicitReleaseDelayQueue()"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-delay-queue/#functions","title":"Functions","text":"Name Summary add [jvm]open override fun add(element: T): Boolean addAll [jvm]open override fun addAll(elements: Collection&lt;T&gt;): Boolean clear [jvm]open override fun clear() contains [jvm]open operator override fun contains(element: T): Boolean containsAll [jvm]open override fun containsAll(elements: Collection&lt;T&gt;): Boolean drainTo [jvm]open override fun drainTo(p0: MutableCollection&lt;in T&gt;): Intopen override fun drainTo(p0: MutableCollection&lt;in T&gt;, p1: Int): Int element [jvm]open override fun element(): T forEach [jvm]open fun forEach(p0: Consumer&lt;in T&gt;) isEmpty [jvm]open override fun isEmpty(): Boolean iterator [jvm]open operator override fun iterator(): MutableIterator&lt;T&gt; offer [jvm]open override fun offer(p0: T): Booleanopen override fun offer(p0: T, p1: Long, p2: TimeUnit): Boolean parallelStream [jvm]open fun parallelStream(): Stream&lt;T&gt; peek [jvm]open override fun peek(): T peekPending [jvm]fun peekPending(): T? poll [jvm]open override fun poll(): Topen override fun poll(p0: Long, p1: TimeUnit): T put [jvm]open override fun put(p0: T) release [jvm]fun release(n: Int): Int releaseAll [jvm]fun releaseAll(): Int remainingCapacity [jvm]open override fun remainingCapacity(): Int remove [jvm]open override fun remove(): Topen override fun remove(element: T): Boolean removeAll [jvm]open override fun removeAll(elements: Collection&lt;T&gt;): Boolean removeIf [jvm]open fun removeIf(p0: Predicate&lt;in T&gt;): Boolean retainAll [jvm]open override fun retainAll(elements: Collection&lt;T&gt;): Boolean spliterator [jvm]open override fun spliterator(): Spliterator&lt;T&gt; stream [jvm]open fun stream(): Stream&lt;T&gt; take [jvm]open override fun take(): T"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-delay-queue/#properties","title":"Properties","text":"Name Summary size [jvm]open override val size: Int"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-delay-queue/-explicit-release-delay-queue/","title":"ExplicitReleaseDelayQueue - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseDelayQueue/ExplicitReleaseDelayQueue</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-delay-queue/-explicit-release-delay-queue/#explicitreleasedelayqueue","title":"ExplicitReleaseDelayQueue","text":"<p>[jvm]\\ fun ExplicitReleaseDelayQueue()</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-delay-queue/peek-pending/","title":"peekPending - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseDelayQueue/peekPending</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-delay-queue/peek-pending/#peekpending","title":"peekPending","text":"<p>[jvm]\\ fun peekPending(): T?</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-delay-queue/release-all/","title":"releaseAll - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseDelayQueue/releaseAll</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-delay-queue/release-all/#releaseall","title":"releaseAll","text":"<p>[jvm]\\ fun releaseAll(): Int</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-delay-queue/release/","title":"release - Misk","text":"<p>//misk/misk.concurrent/ExplicitReleaseDelayQueue/release</p>"},{"location":"0.x/misk/misk/misk.concurrent/-explicit-release-delay-queue/release/#release","title":"release","text":"<p>[jvm]\\ fun release(n: Int): Int</p>"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/","title":"WrappingListeningExecutorService - Misk","text":"<p>//misk/misk.concurrent/WrappingListeningExecutorService</p>"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/#wrappinglisteningexecutorservice","title":"WrappingListeningExecutorService","text":"<p>[jvm]\\ abstract class WrappingListeningExecutorService : ForwardingListeningExecutorService</p> <p>ListeningExecutorService which wraps all calls</p>"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/#constructors","title":"Constructors","text":"WrappingListeningExecutorService [jvm]fun WrappingListeningExecutorService()"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/#functions","title":"Functions","text":"Name Summary awaitTermination [jvm]open fun awaitTermination(timeout: Duration): Boolean@CheckReturnValueopen override fun awaitTermination(timeout: Long, unit: TimeUnit): Boolean delegate [jvm]abstract override fun delegate(): ListeningExecutorService execute [jvm]open override fun execute(runnable: Runnable) invokeAll [jvm]open override fun &lt;T&gt; invokeAll(callables: Collection&lt;Callable&lt;T&gt;&gt;): List&lt;Future&lt;T&gt;&gt;open fun &lt;T : @NullableAny&gt; invokeAll(tasks: MutableCollection&lt;out Callable&lt;T&gt;&gt;, timeout: Duration): MutableList&lt;Future&lt;T&gt;&gt;open override fun &lt;T&gt; invokeAll(callables: Collection&lt;Callable&lt;T&gt;&gt;, timeout: Long, timeUnit: TimeUnit): List&lt;Future&lt;T&gt;&gt; invokeAny [jvm]open override fun &lt;T&gt; invokeAny(callables: Collection&lt;Callable&lt;T&gt;&gt;): Topen fun &lt;T : @NullableAny&gt; invokeAny(tasks: MutableCollection&lt;out Callable&lt;T&gt;&gt;, timeout: Duration): Topen override fun &lt;T&gt; invokeAny(callables: Collection&lt;Callable&lt;T&gt;&gt;, timeout: Long, timeUnit: TimeUnit): T isShutdown [jvm]open override fun isShutdown(): Boolean isTerminated [jvm]open override fun isTerminated(): Boolean shutdown [jvm]open override fun shutdown() shutdownNow [jvm]@CanIgnoreReturnValueopen override fun shutdownNow(): MutableList&lt;Runnable&gt; submit [jvm]open override fun submit(runnable: Runnable): ListenableFuture&lt;*&gt;open override fun &lt;T&gt; submit(callable: Callable&lt;T&gt;): ListenableFuture&lt;T&gt;open override fun &lt;T&gt; submit(runnable: Runnable, result: T): ListenableFuture&lt;T&gt; toString [jvm]open override fun toString(): String"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/-wrapping-listening-executor-service/","title":"WrappingListeningExecutorService - Misk","text":"<p>//misk/misk.concurrent/WrappingListeningExecutorService/WrappingListeningExecutorService</p>"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/-wrapping-listening-executor-service/#wrappinglisteningexecutorservice","title":"WrappingListeningExecutorService","text":"<p>[jvm]\\ fun WrappingListeningExecutorService()</p>"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/execute/","title":"execute - Misk","text":"<p>//misk/misk.concurrent/WrappingListeningExecutorService/execute</p>"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/execute/#execute","title":"execute","text":"<p>[jvm]\\ open override fun execute(runnable: Runnable)</p>"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/invoke-all/","title":"invokeAll - Misk","text":"<p>//misk/misk.concurrent/WrappingListeningExecutorService/invokeAll</p>"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/invoke-all/#invokeall","title":"invokeAll","text":"<p>[jvm]\\ open override fun &lt;T&gt; invokeAll(callables: Collection&lt;Callable&lt;T&gt;&gt;): List&lt;Future&lt;T&gt;&gt;</p> <p>open override fun &lt;T&gt; invokeAll(callables: Collection&lt;Callable&lt;T&gt;&gt;, timeout: Long, timeUnit: TimeUnit): List&lt;Future&lt;T&gt;&gt;</p>"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/invoke-any/","title":"invokeAny - Misk","text":"<p>//misk/misk.concurrent/WrappingListeningExecutorService/invokeAny</p>"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/invoke-any/#invokeany","title":"invokeAny","text":"<p>[jvm]\\ open override fun &lt;T&gt; invokeAny(callables: Collection&lt;Callable&lt;T&gt;&gt;): T</p> <p>open override fun &lt;T&gt; invokeAny(callables: Collection&lt;Callable&lt;T&gt;&gt;, timeout: Long, timeUnit: TimeUnit): T</p>"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/submit/","title":"submit - Misk","text":"<p>//misk/misk.concurrent/WrappingListeningExecutorService/submit</p>"},{"location":"0.x/misk/misk/misk.concurrent/-wrapping-listening-executor-service/submit/#submit","title":"submit","text":"<p>[jvm]\\ open override fun &lt;T&gt; submit(callable: Callable&lt;T&gt;): ListenableFuture&lt;T&gt;</p> <p>open override fun &lt;T&gt; submit(runnable: Runnable, result: T): ListenableFuture&lt;T&gt;</p> <p>open override fun submit(runnable: Runnable): ListenableFuture&lt;*&gt;</p>"},{"location":"0.x/misk/misk/misk.environment/","title":"Package misk.environment - Misk","text":"<p>//misk/misk.environment</p>"},{"location":"0.x/misk/misk/misk.environment/#package-miskenvironment","title":"Package misk.environment","text":""},{"location":"0.x/misk/misk/misk.environment/#types","title":"Types","text":"Name Summary DeploymentModule [jvm]class DeploymentModule@JvmOverloadsconstructor(deployment: Deployment) : KAbstractModuleBinds Deployment to make it available to services and actions EnvVarLoader [jvm]interface EnvVarLoader : EnvironmentVariableLoaderLoads an environment variable value. FakeEnvVarModule [jvm]class FakeEnvVarModule : KAbstractModuleBinds a EnvVarLoader for tests. Tests can contribute values through the <code>@ForEnvVars Map&amp;lt;String, String&amp;gt;</code> binding. ForEnvVars [jvm]@Qualifierannotation class ForEnvVars RealEnvVarModule [jvm]class RealEnvVarModule : KAbstractModuleBinds a EnvVarLoader for production"},{"location":"0.x/misk/misk/misk.environment/-deployment-module/","title":"DeploymentModule - Misk","text":"<p>//misk/misk.environment/DeploymentModule</p>"},{"location":"0.x/misk/misk/misk.environment/-deployment-module/#deploymentmodule","title":"DeploymentModule","text":"<p>[jvm]\\ class DeploymentModule@JvmOverloadsconstructor(deployment: Deployment) : KAbstractModule</p> <p>Binds Deployment to make it available to services and actions</p>"},{"location":"0.x/misk/misk/misk.environment/-deployment-module/#constructors","title":"Constructors","text":"DeploymentModule [jvm]@JvmOverloadsfun DeploymentModule(deployment: Deployment = getDeploymentFromEnvironmentVariable())"},{"location":"0.x/misk/misk/misk.environment/-deployment-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.environment/-deployment-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.environment/-deployment-module/-deployment-module/","title":"DeploymentModule - Misk","text":"<p>//misk/misk.environment/DeploymentModule/DeploymentModule</p>"},{"location":"0.x/misk/misk/misk.environment/-deployment-module/-deployment-module/#deploymentmodule","title":"DeploymentModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun DeploymentModule(deployment: Deployment = getDeploymentFromEnvironmentVariable())</p>"},{"location":"0.x/misk/misk/misk.environment/-env-var-loader/","title":"EnvVarLoader - Misk","text":"<p>//misk/misk.environment/EnvVarLoader</p>"},{"location":"0.x/misk/misk/misk.environment/-env-var-loader/#envvarloader","title":"EnvVarLoader","text":"<p>[jvm]\\ interface EnvVarLoader : EnvironmentVariableLoader</p> <p>Loads an environment variable value.</p>"},{"location":"0.x/misk/misk/misk.environment/-env-var-loader/#functions","title":"Functions","text":"Name Summary getEnvironmentVariable [jvm]open fun getEnvironmentVariable(name: String): String getEnvironmentVariableOrDefault [jvm]open fun getEnvironmentVariableOrDefault(name: String, defaultValue: String): String getEnvVar [jvm]open fun getEnvVar(name: String): StringGet the environment variable value"},{"location":"0.x/misk/misk/misk.environment/-env-var-loader/get-env-var/","title":"getEnvVar - Misk","text":"<p>//misk/misk.environment/EnvVarLoader/getEnvVar</p>"},{"location":"0.x/misk/misk/misk.environment/-env-var-loader/get-env-var/#getenvvar","title":"getEnvVar","text":"<p>[jvm]\\ open fun getEnvVar(name: String): String</p> <p>Get the environment variable value</p>"},{"location":"0.x/misk/misk/misk.environment/-env-var-loader/get-env-var/#throws","title":"Throws","text":"java.lang.IllegalStateException if the environment variable is not found"},{"location":"0.x/misk/misk/misk.environment/-fake-env-var-module/","title":"FakeEnvVarModule - Misk","text":"<p>//misk/misk.environment/FakeEnvVarModule</p>"},{"location":"0.x/misk/misk/misk.environment/-fake-env-var-module/#fakeenvvarmodule","title":"FakeEnvVarModule","text":"<p>[jvm]\\ class FakeEnvVarModule : KAbstractModule</p> <p>Binds a EnvVarLoader for tests. Tests can contribute values through the <code>@ForEnvVars Map&amp;lt;String, String&amp;gt;</code> binding.</p>"},{"location":"0.x/misk/misk/misk.environment/-fake-env-var-module/#constructors","title":"Constructors","text":"FakeEnvVarModule [jvm]fun FakeEnvVarModule()"},{"location":"0.x/misk/misk/misk.environment/-fake-env-var-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.environment/-fake-env-var-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.environment/-fake-env-var-module/-fake-env-var-module/","title":"FakeEnvVarModule - Misk","text":"<p>//misk/misk.environment/FakeEnvVarModule/FakeEnvVarModule</p>"},{"location":"0.x/misk/misk/misk.environment/-fake-env-var-module/-fake-env-var-module/#fakeenvvarmodule","title":"FakeEnvVarModule","text":"<p>[jvm]\\ fun FakeEnvVarModule()</p>"},{"location":"0.x/misk/misk/misk.environment/-for-env-vars/","title":"ForEnvVars - Misk","text":"<p>//misk/misk.environment/ForEnvVars</p>"},{"location":"0.x/misk/misk/misk.environment/-for-env-vars/#forenvvars","title":"ForEnvVars","text":"<p>[jvm]\\ @Qualifier</p> <p>annotation class ForEnvVars</p>"},{"location":"0.x/misk/misk/misk.environment/-for-env-vars/-for-env-vars/","title":"ForEnvVars - Misk","text":"<p>//misk/misk.environment/ForEnvVars/ForEnvVars</p>"},{"location":"0.x/misk/misk/misk.environment/-for-env-vars/-for-env-vars/#forenvvars","title":"ForEnvVars","text":"<p>[jvm]\\ fun ForEnvVars()</p>"},{"location":"0.x/misk/misk/misk.environment/-real-env-var-module/","title":"RealEnvVarModule - Misk","text":"<p>//misk/misk.environment/RealEnvVarModule</p>"},{"location":"0.x/misk/misk/misk.environment/-real-env-var-module/#realenvvarmodule","title":"RealEnvVarModule","text":"<p>[jvm]\\ class RealEnvVarModule : KAbstractModule</p> <p>Binds a EnvVarLoader for production</p>"},{"location":"0.x/misk/misk/misk.environment/-real-env-var-module/#constructors","title":"Constructors","text":"RealEnvVarModule [jvm]fun RealEnvVarModule()"},{"location":"0.x/misk/misk/misk.environment/-real-env-var-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.environment/-real-env-var-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.environment/-real-env-var-module/-real-env-var-module/","title":"RealEnvVarModule - Misk","text":"<p>//misk/misk.environment/RealEnvVarModule/RealEnvVarModule</p>"},{"location":"0.x/misk/misk/misk.environment/-real-env-var-module/-real-env-var-module/#realenvvarmodule","title":"RealEnvVarModule","text":"<p>[jvm]\\ fun RealEnvVarModule()</p>"},{"location":"0.x/misk/misk/misk.grpc/","title":"Package misk.grpc - Misk","text":"<p>//misk/misk.grpc</p>"},{"location":"0.x/misk/misk/misk.grpc/#package-miskgrpc","title":"Package misk.grpc","text":""},{"location":"0.x/misk/misk/misk.grpc/#functions","title":"Functions","text":"Name Summary consumeEachAndClose [jvm]fun &lt;T : Any&gt; MessageSource&lt;T&gt;.consumeEachAndClose(block: (T) -&gt; Unit)"},{"location":"0.x/misk/misk/misk.grpc/consume-each-and-close/","title":"consumeEachAndClose - Misk","text":"<p>//misk/misk.grpc/consumeEachAndClose</p>"},{"location":"0.x/misk/misk/misk.grpc/consume-each-and-close/#consumeeachandclose","title":"consumeEachAndClose","text":"<p>[jvm]\\ fun &lt;T : Any&gt; MessageSource&lt;T&gt;.consumeEachAndClose(block: (T) -&gt; Unit)</p>"},{"location":"0.x/misk/misk/misk.io/","title":"Package misk.io - Misk","text":"<p>//misk/misk.io</p>"},{"location":"0.x/misk/misk/misk.io/#package-miskio","title":"Package misk.io","text":""},{"location":"0.x/misk/misk/misk.io/#functions","title":"Functions","text":"Name Summary listRecursively [jvm]fun Path.listRecursively(includeDirs: Boolean = false): List&lt;Path&gt;"},{"location":"0.x/misk/misk/misk.io/list-recursively/","title":"listRecursively - Misk","text":"<p>//misk/misk.io/listRecursively</p>"},{"location":"0.x/misk/misk/misk.io/list-recursively/#listrecursively","title":"listRecursively","text":"<p>[jvm]\\ fun Path.listRecursively(includeDirs: Boolean = false): List&lt;Path&gt;</p>"},{"location":"0.x/misk/misk/misk.io/list-recursively/#return","title":"Return","text":"<p>all of the paths beneath this one, including nested paths</p>"},{"location":"0.x/misk/misk/misk.jvm/","title":"Package misk.jvm - Misk","text":"<p>//misk/misk.jvm</p>"},{"location":"0.x/misk/misk/misk.jvm/#package-miskjvm","title":"Package misk.jvm","text":""},{"location":"0.x/misk/misk/misk.jvm/#types","title":"Types","text":"Name Summary JvmManagementFactoryModule [jvm]class JvmManagementFactoryModule : KInstallOnceModuleDefault providers for the ManagementFactory beans that the framework depends on."},{"location":"0.x/misk/misk/misk.jvm/-jvm-management-factory-module/","title":"JvmManagementFactoryModule - Misk","text":"<p>//misk/misk.jvm/JvmManagementFactoryModule</p>"},{"location":"0.x/misk/misk/misk.jvm/-jvm-management-factory-module/#jvmmanagementfactorymodule","title":"JvmManagementFactoryModule","text":"<p>[jvm]\\ class JvmManagementFactoryModule : KInstallOnceModule</p> <p>Default providers for the ManagementFactory beans that the framework depends on.</p>"},{"location":"0.x/misk/misk/misk.jvm/-jvm-management-factory-module/#constructors","title":"Constructors","text":"JvmManagementFactoryModule [jvm]fun JvmManagementFactoryModule()"},{"location":"0.x/misk/misk/misk.jvm/-jvm-management-factory-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]open fun configure()override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage equals [jvm]operator override fun equals(other: Any?): Boolean getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; hashCode [jvm]override fun hashCode(): Int install [jvm]open fun install(module: Module) provideRuntimeMxBean [jvm]@Providesfun provideRuntimeMxBean(): RuntimeMXBean requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.jvm/-jvm-management-factory-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.jvm/-jvm-management-factory-module/-jvm-management-factory-module/","title":"JvmManagementFactoryModule - Misk","text":"<p>//misk/misk.jvm/JvmManagementFactoryModule/JvmManagementFactoryModule</p>"},{"location":"0.x/misk/misk/misk.jvm/-jvm-management-factory-module/-jvm-management-factory-module/#jvmmanagementfactorymodule","title":"JvmManagementFactoryModule","text":"<p>[jvm]\\ fun JvmManagementFactoryModule()</p>"},{"location":"0.x/misk/misk/misk.jvm/-jvm-management-factory-module/provide-runtime-mx-bean/","title":"provideRuntimeMxBean - Misk","text":"<p>//misk/misk.jvm/JvmManagementFactoryModule/provideRuntimeMxBean</p>"},{"location":"0.x/misk/misk/misk.jvm/-jvm-management-factory-module/provide-runtime-mx-bean/#provideruntimemxbean","title":"provideRuntimeMxBean","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>fun provideRuntimeMxBean(): RuntimeMXBean</p>"},{"location":"0.x/misk/misk/misk.monitoring/","title":"Package misk.monitoring - Misk","text":"<p>//misk/misk.monitoring</p>"},{"location":"0.x/misk/misk/misk.monitoring/#package-miskmonitoring","title":"Package misk.monitoring","text":""},{"location":"0.x/misk/misk/misk.monitoring/#types","title":"Types","text":"Name Summary JvmMetrics [jvm]@Singletonclass JvmMetrics@Injectconstructor(runtimeMxBean: RuntimeMXBean, metrics: Metrics)Exposes additional JVM metrics. MonitoringModule [jvm]class MonitoringModule : KInstallOnceModule"},{"location":"0.x/misk/misk/misk.monitoring/-jvm-metrics/","title":"JvmMetrics - Misk","text":"<p>//misk/misk.monitoring/JvmMetrics</p>"},{"location":"0.x/misk/misk/misk.monitoring/-jvm-metrics/#jvmmetrics","title":"JvmMetrics","text":"<p>[jvm]\\ @Singleton</p> <p>class JvmMetrics@Injectconstructor(runtimeMxBean: RuntimeMXBean, metrics: Metrics)</p> <p>Exposes additional JVM metrics.</p>"},{"location":"0.x/misk/misk/misk.monitoring/-jvm-metrics/#constructors","title":"Constructors","text":"JvmMetrics [jvm]@Injectfun JvmMetrics(runtimeMxBean: RuntimeMXBean, metrics: Metrics)"},{"location":"0.x/misk/misk/misk.monitoring/-jvm-metrics/-jvm-metrics/","title":"JvmMetrics - Misk","text":"<p>//misk/misk.monitoring/JvmMetrics/JvmMetrics</p>"},{"location":"0.x/misk/misk/misk.monitoring/-jvm-metrics/-jvm-metrics/#jvmmetrics","title":"JvmMetrics","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun JvmMetrics(runtimeMxBean: RuntimeMXBean, metrics: Metrics)</p>"},{"location":"0.x/misk/misk/misk.monitoring/-monitoring-module/","title":"MonitoringModule - Misk","text":"<p>//misk/misk.monitoring/MonitoringModule</p>"},{"location":"0.x/misk/misk/misk.monitoring/-monitoring-module/#monitoringmodule","title":"MonitoringModule","text":"<p>[jvm]\\ class MonitoringModule : KInstallOnceModule</p>"},{"location":"0.x/misk/misk/misk.monitoring/-monitoring-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage equals [jvm]operator override fun equals(other: Any?): Boolean getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; hashCode [jvm]override fun hashCode(): Int install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.monitoring/-monitoring-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.monitoring/-monitoring-module/-monitoring-module/","title":"MonitoringModule - Misk","text":"<p>//misk/misk.monitoring/MonitoringModule/MonitoringModule</p>"},{"location":"0.x/misk/misk/misk.monitoring/-monitoring-module/-monitoring-module/#monitoringmodule","title":"MonitoringModule","text":"<p>[jvm]\\ fun MonitoringModule()</p>"},{"location":"0.x/misk/misk/misk.moshi/","title":"Package misk.moshi - Misk","text":"<p>//misk/misk.moshi</p>"},{"location":"0.x/misk/misk/misk.moshi/#package-miskmoshi","title":"Package misk.moshi","text":""},{"location":"0.x/misk/misk/misk.moshi/#types","title":"Types","text":"Name Summary MoshiAdapterModule [jvm]class MoshiAdapterModule@JvmOverloadsconstructor(jsonAdapter: Any, addLast: Boolean) : KAbstractModule MoshiModule [jvm]class MoshiModule@JvmOverloadsconstructor(useWireToRead: Boolean, useWireToWrite: Boolean) : KAbstractModuleFor service setup, prefer to install misk.MiskCommonServiceModule over installing MoshiModule directly."},{"location":"0.x/misk/misk/misk.moshi/#functions","title":"Functions","text":"Name Summary adapter [jvm]inline fun &lt;T&gt; Moshi.adapter(): &lt;ERROR CLASS&gt;"},{"location":"0.x/misk/misk/misk.moshi/adapter/","title":"adapter - Misk","text":"<p>//misk/misk.moshi/adapter</p>"},{"location":"0.x/misk/misk/misk.moshi/adapter/#adapter","title":"adapter","text":"<p>[jvm]\\ inline fun &lt;T&gt; Moshi.adapter(): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-adapter-module/","title":"MoshiAdapterModule - Misk","text":"<p>//misk/misk.moshi/MoshiAdapterModule</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-adapter-module/#moshiadaptermodule","title":"MoshiAdapterModule","text":"<p>[jvm]\\ class MoshiAdapterModule@JvmOverloadsconstructor(jsonAdapter: Any, addLast: Boolean) : KAbstractModule</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-adapter-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.moshi/-moshi-adapter-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.moshi/-moshi-adapter-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.moshi/-moshi-adapter-module/-moshi-adapter-module/","title":"MoshiAdapterModule - Misk","text":"<p>//misk/misk.moshi/MoshiAdapterModule/MoshiAdapterModule</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-adapter-module/-moshi-adapter-module/#moshiadaptermodule","title":"MoshiAdapterModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun MoshiAdapterModule(jsonAdapter: Any, addLast: Boolean = false)</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-adapter-module/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.moshi/MoshiAdapterModule/Companion</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-adapter-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-adapter-module/-companion/#functions","title":"Functions","text":"Name Summary invoke [jvm]inline operator fun &lt;T&gt; invoke(adapter: JsonAdapter&lt;T&gt;, addLast: Boolean = false): MoshiAdapterModule"},{"location":"0.x/misk/misk/misk.moshi/-moshi-adapter-module/-companion/invoke/","title":"invoke - Misk","text":"<p>//misk/misk.moshi/MoshiAdapterModule/Companion/invoke</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-adapter-module/-companion/invoke/#invoke","title":"invoke","text":"<p>[jvm]\\ inline operator fun &lt;T&gt; invoke(adapter: JsonAdapter&lt;T&gt;, addLast: Boolean = false): MoshiAdapterModule</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-module/","title":"MoshiModule - Misk","text":"<p>//misk/misk.moshi/MoshiModule</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-module/#moshimodule","title":"MoshiModule","text":"<p>[jvm]\\ class MoshiModule@JvmOverloadsconstructor(useWireToRead: Boolean, useWireToWrite: Boolean) : KAbstractModule</p> <p>For service setup, prefer to install misk.MiskCommonServiceModule over installing MoshiModule directly.</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-module/#constructors","title":"Constructors","text":"MoshiModule [jvm]@JvmOverloadsfun MoshiModule(useWireToRead: Boolean = false, useWireToWrite: Boolean = false)"},{"location":"0.x/misk/misk/misk.moshi/-moshi-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideMoshi [jvm]@Provides@Singletonfun provideMoshi(jsonAdapters: List&lt;Any&gt;, jsonLastAdapters: List&lt;Any&gt;): Moshi requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.moshi/-moshi-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.moshi/-moshi-module/-moshi-module/","title":"MoshiModule - Misk","text":"<p>//misk/misk.moshi/MoshiModule/MoshiModule</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-module/-moshi-module/#moshimodule","title":"MoshiModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun MoshiModule(useWireToRead: Boolean = false, useWireToWrite: Boolean = false)</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-module/provide-moshi/","title":"provideMoshi - Misk","text":"<p>//misk/misk.moshi/MoshiModule/provideMoshi</p>"},{"location":"0.x/misk/misk/misk.moshi/-moshi-module/provide-moshi/#providemoshi","title":"provideMoshi","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideMoshi(jsonAdapters: List&lt;Any&gt;, jsonLastAdapters: List&lt;Any&gt;): Moshi</p>"},{"location":"0.x/misk/misk/misk.moshi.adapters/","title":"Package misk.moshi.adapters - Misk","text":"<p>//misk/misk.moshi.adapters</p>"},{"location":"0.x/misk/misk/misk.moshi.adapters/#package-miskmoshiadapters","title":"Package misk.moshi.adapters","text":""},{"location":"0.x/misk/misk/misk.moshi.adapters/#types","title":"Types","text":"Name Summary BigDecimalAdapter [jvm]object BigDecimalAdapter"},{"location":"0.x/misk/misk/misk.moshi.adapters/-big-decimal-adapter/","title":"BigDecimalAdapter - Misk","text":"<p>//misk/misk.moshi.adapters/BigDecimalAdapter</p>"},{"location":"0.x/misk/misk/misk.moshi.adapters/-big-decimal-adapter/#bigdecimaladapter","title":"BigDecimalAdapter","text":"<p>[jvm]\\ object BigDecimalAdapter</p>"},{"location":"0.x/misk/misk/misk.moshi.adapters/-big-decimal-adapter/#functions","title":"Functions","text":"Name Summary decode [jvm]fun decode(decimal: String): BigDecimal encode [jvm]fun encode(decimal: BigDecimal): String"},{"location":"0.x/misk/misk/misk.moshi.adapters/-big-decimal-adapter/decode/","title":"decode - Misk","text":"<p>//misk/misk.moshi.adapters/BigDecimalAdapter/decode</p>"},{"location":"0.x/misk/misk/misk.moshi.adapters/-big-decimal-adapter/decode/#decode","title":"decode","text":"<p>[jvm]\\ fun decode(decimal: String): BigDecimal</p>"},{"location":"0.x/misk/misk/misk.moshi.adapters/-big-decimal-adapter/encode/","title":"encode - Misk","text":"<p>//misk/misk.moshi.adapters/BigDecimalAdapter/encode</p>"},{"location":"0.x/misk/misk/misk.moshi.adapters/-big-decimal-adapter/encode/#encode","title":"encode","text":"<p>[jvm]\\ fun encode(decimal: BigDecimal): String</p>"},{"location":"0.x/misk/misk/misk.moshi.okio/","title":"Package misk.moshi.okio - Misk","text":"<p>//misk/misk.moshi.okio</p>"},{"location":"0.x/misk/misk/misk.moshi.okio/#package-miskmoshiokio","title":"Package misk.moshi.okio","text":""},{"location":"0.x/misk/misk/misk.moshi.okio/#types","title":"Types","text":"Name Summary ByteStringAdapter [jvm]object ByteStringAdapterJSON adapter converting ByteStrings as base64 encoded strings"},{"location":"0.x/misk/misk/misk.moshi.okio/-byte-string-adapter/","title":"ByteStringAdapter - Misk","text":"<p>//misk/misk.moshi.okio/ByteStringAdapter</p>"},{"location":"0.x/misk/misk/misk.moshi.okio/-byte-string-adapter/#bytestringadapter","title":"ByteStringAdapter","text":"<p>[jvm]\\ object ByteStringAdapter</p> <p>JSON adapter converting ByteStrings as base64 encoded strings</p>"},{"location":"0.x/misk/misk/misk.moshi.okio/-byte-string-adapter/#functions","title":"Functions","text":"Name Summary fromJson [jvm]fun fromJson(value: String): ByteString toJson [jvm]fun toJson(value: ByteString): String"},{"location":"0.x/misk/misk/misk.moshi.okio/-byte-string-adapter/from-json/","title":"fromJson - Misk","text":"<p>//misk/misk.moshi.okio/ByteStringAdapter/fromJson</p>"},{"location":"0.x/misk/misk/misk.moshi.okio/-byte-string-adapter/from-json/#fromjson","title":"fromJson","text":"<p>[jvm]\\ fun fromJson(value: String): ByteString</p>"},{"location":"0.x/misk/misk/misk.moshi.okio/-byte-string-adapter/to-json/","title":"toJson - Misk","text":"<p>//misk/misk.moshi.okio/ByteStringAdapter/toJson</p>"},{"location":"0.x/misk/misk/misk.moshi.okio/-byte-string-adapter/to-json/#tojson","title":"toJson","text":"<p>[jvm]\\ fun toJson(value: ByteString): String</p>"},{"location":"0.x/misk/misk/misk.moshi.time/","title":"Package misk.moshi.time - Misk","text":"<p>//misk/misk.moshi.time</p>"},{"location":"0.x/misk/misk/misk.moshi.time/#package-miskmoshitime","title":"Package misk.moshi.time","text":""},{"location":"0.x/misk/misk/misk.moshi.time/#types","title":"Types","text":"Name Summary InstantAdapter [jvm]object InstantAdapter LocalDateAdapter [jvm]object LocalDateAdapter"},{"location":"0.x/misk/misk/misk.moshi.time/-instant-adapter/","title":"InstantAdapter - Misk","text":"<p>//misk/misk.moshi.time/InstantAdapter</p>"},{"location":"0.x/misk/misk/misk.moshi.time/-instant-adapter/#instantadapter","title":"InstantAdapter","text":"<p>[jvm]\\ object InstantAdapter</p>"},{"location":"0.x/misk/misk/misk.moshi.time/-instant-adapter/#functions","title":"Functions","text":"Name Summary fromJson [jvm]fun fromJson(date: Date?): Instant? toJson [jvm]fun toJson(value: Instant?): Date?"},{"location":"0.x/misk/misk/misk.moshi.time/-instant-adapter/from-json/","title":"fromJson - Misk","text":"<p>//misk/misk.moshi.time/InstantAdapter/fromJson</p>"},{"location":"0.x/misk/misk/misk.moshi.time/-instant-adapter/from-json/#fromjson","title":"fromJson","text":"<p>[jvm]\\ fun fromJson(date: Date?): Instant?</p>"},{"location":"0.x/misk/misk/misk.moshi.time/-instant-adapter/to-json/","title":"toJson - Misk","text":"<p>//misk/misk.moshi.time/InstantAdapter/toJson</p>"},{"location":"0.x/misk/misk/misk.moshi.time/-instant-adapter/to-json/#tojson","title":"toJson","text":"<p>[jvm]\\ fun toJson(value: Instant?): Date?</p>"},{"location":"0.x/misk/misk/misk.moshi.time/-local-date-adapter/","title":"LocalDateAdapter - Misk","text":"<p>//misk/misk.moshi.time/LocalDateAdapter</p>"},{"location":"0.x/misk/misk/misk.moshi.time/-local-date-adapter/#localdateadapter","title":"LocalDateAdapter","text":"<p>[jvm]\\ object LocalDateAdapter</p>"},{"location":"0.x/misk/misk/misk.moshi.time/-local-date-adapter/#functions","title":"Functions","text":"Name Summary fromJson [jvm]fun fromJson(date: Date?): LocalDate? toJson [jvm]fun toJson(value: LocalDate?): Date?"},{"location":"0.x/misk/misk/misk.moshi.time/-local-date-adapter/from-json/","title":"fromJson - Misk","text":"<p>//misk/misk.moshi.time/LocalDateAdapter/fromJson</p>"},{"location":"0.x/misk/misk/misk.moshi.time/-local-date-adapter/from-json/#fromjson","title":"fromJson","text":"<p>[jvm]\\ fun fromJson(date: Date?): LocalDate?</p>"},{"location":"0.x/misk/misk/misk.moshi.time/-local-date-adapter/to-json/","title":"toJson - Misk","text":"<p>//misk/misk.moshi.time/LocalDateAdapter/toJson</p>"},{"location":"0.x/misk/misk/misk.moshi.time/-local-date-adapter/to-json/#tojson","title":"toJson","text":"<p>[jvm]\\ fun toJson(value: LocalDate?): Date?</p>"},{"location":"0.x/misk/misk/misk.okio/","title":"Package misk.okio - Misk","text":"<p>//misk/misk.okio</p>"},{"location":"0.x/misk/misk/misk.okio/#package-miskokio","title":"Package misk.okio","text":""},{"location":"0.x/misk/misk/misk.okio/#functions","title":"Functions","text":"Name Summary forEachBlock [jvm]fun BufferedSource.forEachBlock(buffer: ByteArray, f: (buffer: ByteArray, bytesRead: Int) -&gt; Unit)fun BufferedSource.forEachBlock(blockSize: Int, f: (buffer: ByteArray, bytesRead: Int) -&gt; Unit) split [jvm]fun BufferedSource.split(separator: ByteString): Sequence&lt;Buffer&gt;"},{"location":"0.x/misk/misk/misk.okio/for-each-block/","title":"forEachBlock - Misk","text":"<p>//misk/misk.okio/forEachBlock</p>"},{"location":"0.x/misk/misk/misk.okio/for-each-block/#foreachblock","title":"forEachBlock","text":"<p>[jvm]\\ fun BufferedSource.forEachBlock(buffer: ByteArray, f: (buffer: ByteArray, bytesRead: Int) -&gt; Unit)</p> <p>fun BufferedSource.forEachBlock(blockSize: Int, f: (buffer: ByteArray, bytesRead: Int) -&gt; Unit)</p>"},{"location":"0.x/misk/misk/misk.okio/split/","title":"split - Misk","text":"<p>//misk/misk.okio/split</p>"},{"location":"0.x/misk/misk/misk.okio/split/#split","title":"split","text":"<p>[jvm]\\ fun BufferedSource.split(separator: ByteString): Sequence&lt;Buffer&gt;</p>"},{"location":"0.x/misk/misk/misk.perf/","title":"Package misk.perf - Misk","text":"<p>//misk/misk.perf</p>"},{"location":"0.x/misk/misk/misk.perf/#package-miskperf","title":"Package misk.perf","text":""},{"location":"0.x/misk/misk/misk.perf/#types","title":"Types","text":"Name Summary ForPauseDetector [jvm]@Qualifier@Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE])annotation class ForPauseDetectorUsed to bind a Sleeper and Ticker that are suitable for usage by the PauseDetector PauseDetectorConfig [jvm]data class PauseDetectorConfig@JvmOverloadsconstructor(resolutionMillis: Long, logInfoMillis: Long, logWarnMillis: Long, logErrorMillis: Long, metricsUpdateFloor: Long)Configuration for the PauseDetector PauseDetectorModule [jvm]class PauseDetectorModule@JvmOverloadsconstructor(pauseDetectorConfig: PauseDetectorConfig) : KAbstractModuleInstall this module to run the PauseDetector in the background."},{"location":"0.x/misk/misk/misk.perf/-for-pause-detector/","title":"ForPauseDetector - Misk","text":"<p>//misk/misk.perf/ForPauseDetector</p>"},{"location":"0.x/misk/misk/misk.perf/-for-pause-detector/#forpausedetector","title":"ForPauseDetector","text":"<p>[jvm]\\ @Qualifier</p> <p>@Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE])</p> <p>annotation class ForPauseDetector</p> <p>Used to bind a Sleeper and Ticker that are suitable for usage by the PauseDetector</p>"},{"location":"0.x/misk/misk/misk.perf/-for-pause-detector/#constructors","title":"Constructors","text":"ForPauseDetector [jvm]fun ForPauseDetector()"},{"location":"0.x/misk/misk/misk.perf/-for-pause-detector/-for-pause-detector/","title":"ForPauseDetector - Misk","text":"<p>//misk/misk.perf/ForPauseDetector/ForPauseDetector</p>"},{"location":"0.x/misk/misk/misk.perf/-for-pause-detector/-for-pause-detector/#forpausedetector","title":"ForPauseDetector","text":"<p>[jvm]\\ fun ForPauseDetector()</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/","title":"PauseDetectorConfig - Misk","text":"<p>//misk/misk.perf/PauseDetectorConfig</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/#pausedetectorconfig","title":"PauseDetectorConfig","text":"<p>[jvm]\\ data class PauseDetectorConfig@JvmOverloadsconstructor(resolutionMillis: Long, logInfoMillis: Long, logWarnMillis: Long, logErrorMillis: Long, metricsUpdateFloor: Long)</p> <p>Configuration for the PauseDetector</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/#constructors","title":"Constructors","text":"PauseDetectorConfig [jvm]@JvmOverloadsfun PauseDetectorConfig(resolutionMillis: Long = 1, logInfoMillis: Long = 1000, logWarnMillis: Long = -1, logErrorMillis: Long = -1, metricsUpdateFloor: Long = 0)"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/#properties","title":"Properties","text":"Name Summary logErrorMillis [jvm]val logErrorMillis: LongThe minimum number of millis paused before logging at error. -1 for never. logInfoMillis [jvm]val logInfoMillis: Long = 1000The minimum number of millis paused before logging at info. -1 for never. logWarnMillis [jvm]val logWarnMillis: LongThe minimum number of millis paused before logging at warn. -1 for never. metricsUpdateFloor [jvm]val metricsUpdateFloor: Long = 0The minimum number of millis required to trigger an update of the histogram resolutionMillis [jvm]val resolutionMillis: Long = 1The delay between detector runs. If 0, the detector runs in a spin loop."},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/-pause-detector-config/","title":"PauseDetectorConfig - Misk","text":"<p>//misk/misk.perf/PauseDetectorConfig/PauseDetectorConfig</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/-pause-detector-config/#pausedetectorconfig","title":"PauseDetectorConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun PauseDetectorConfig(resolutionMillis: Long = 1, logInfoMillis: Long = 1000, logWarnMillis: Long = -1, logErrorMillis: Long = -1, metricsUpdateFloor: Long = 0)</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/log-error-millis/","title":"logErrorMillis - Misk","text":"<p>//misk/misk.perf/PauseDetectorConfig/logErrorMillis</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/log-error-millis/#logerrormillis","title":"logErrorMillis","text":"<p>[jvm]\\ val logErrorMillis: Long</p> <p>The minimum number of millis paused before logging at error. -1 for never.</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/log-info-millis/","title":"logInfoMillis - Misk","text":"<p>//misk/misk.perf/PauseDetectorConfig/logInfoMillis</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/log-info-millis/#loginfomillis","title":"logInfoMillis","text":"<p>[jvm]\\ val logInfoMillis: Long = 1000</p> <p>The minimum number of millis paused before logging at info. -1 for never.</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/log-warn-millis/","title":"logWarnMillis - Misk","text":"<p>//misk/misk.perf/PauseDetectorConfig/logWarnMillis</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/log-warn-millis/#logwarnmillis","title":"logWarnMillis","text":"<p>[jvm]\\ val logWarnMillis: Long</p> <p>The minimum number of millis paused before logging at warn. -1 for never.</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/metrics-update-floor/","title":"metricsUpdateFloor - Misk","text":"<p>//misk/misk.perf/PauseDetectorConfig/metricsUpdateFloor</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/metrics-update-floor/#metricsupdatefloor","title":"metricsUpdateFloor","text":"<p>[jvm]\\ val metricsUpdateFloor: Long = 0</p> <p>The minimum number of millis required to trigger an update of the histogram</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/resolution-millis/","title":"resolutionMillis - Misk","text":"<p>//misk/misk.perf/PauseDetectorConfig/resolutionMillis</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-config/resolution-millis/#resolutionmillis","title":"resolutionMillis","text":"<p>[jvm]\\ val resolutionMillis: Long = 1</p> <p>The delay between detector runs. If 0, the detector runs in a spin loop.</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-module/","title":"PauseDetectorModule - Misk","text":"<p>//misk/misk.perf/PauseDetectorModule</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-module/#pausedetectormodule","title":"PauseDetectorModule","text":"<p>[jvm]\\ class PauseDetectorModule@JvmOverloadsconstructor(pauseDetectorConfig: PauseDetectorConfig) : KAbstractModule</p> <p>Install this module to run the PauseDetector in the background.</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-module/#constructors","title":"Constructors","text":"PauseDetectorModule [jvm]@JvmOverloadsfun PauseDetectorModule(pauseDetectorConfig: PauseDetectorConfig = PauseDetectorConfig())"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder pauseDetectorConfig [jvm]val pauseDetectorConfig: PauseDetectorConfig"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-module/-pause-detector-module/","title":"PauseDetectorModule - Misk","text":"<p>//misk/misk.perf/PauseDetectorModule/PauseDetectorModule</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-module/-pause-detector-module/#pausedetectormodule","title":"PauseDetectorModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun PauseDetectorModule(pauseDetectorConfig: PauseDetectorConfig = PauseDetectorConfig())</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-module/pause-detector-config/","title":"pauseDetectorConfig - Misk","text":"<p>//misk/misk.perf/PauseDetectorModule/pauseDetectorConfig</p>"},{"location":"0.x/misk/misk/misk.perf/-pause-detector-module/pause-detector-config/#pausedetectorconfig","title":"pauseDetectorConfig","text":"<p>[jvm]\\ val pauseDetectorConfig: PauseDetectorConfig</p>"},{"location":"0.x/misk/misk/misk.security.authz/","title":"Package misk.security.authz - Misk","text":"<p>//misk/misk.security.authz</p>"},{"location":"0.x/misk/misk/misk.security.authz/#package-misksecurityauthz","title":"Package misk.security.authz","text":""},{"location":"0.x/misk/misk/misk.security.authz/#types","title":"Types","text":"Name Summary AccessAnnotationEntry [jvm]data class AccessAnnotationEntry@JvmOverloadsconstructor(annotation: KClass&lt;out Annotation&gt;, services: List&lt;String&gt;, capabilities: List&lt;String&gt;)Use this to alias an annotation to a set of services and capabilities. This can be used to decouple code that needs access control from the policy that defines it. AccessControlModule [jvm]class AccessControlModule : ActionScopedProviderModuleInstall support for performing access control checks for actions based on the incoming caller. AccessInterceptor [jvm]class AccessInterceptor : ApplicationInterceptor DevelopmentOnly [jvm]@Qualifier@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.FUNCTION])annotation class DevelopmentOnly ExcludeFromAllowAnyService [jvm]@Target(allowedTargets = [AnnotationTarget.PROPERTY, AnnotationTarget.VALUE_PARAMETER])annotation class ExcludeFromAllowAnyServiceExclude a service from @AllowAnyService. FakeCallerAuthenticator [jvm]@Singletonclass FakeCallerAuthenticator@Injectconstructor(currentHttpCall: ActionScoped&lt;HttpCall&gt;) : MiskCallerAuthenticatorA caller authenticator that blindly trusts HTTP headers. Unsafe for production use. MiskCallerAuthenticator [jvm]interface MiskCallerAuthenticatorInterface for determining the current MiskCaller. Typically use an Request, ClientCertSubject, etc to determine the caller based on request headers or client certificate information."},{"location":"0.x/misk/misk/misk.security.authz/#functions","title":"Functions","text":"Name Summary AccessAnnotationEntry [jvm]inline fun &lt;T : Annotation&gt; AccessAnnotationEntry(services: List&lt;String&gt; = listOf(), capabilities: List&lt;String&gt; = listOf()): AccessAnnotationEntry"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/","title":"AccessAnnotationEntry - Misk","text":"<p>//misk/misk.security.authz/AccessAnnotationEntry</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/#accessannotationentry","title":"AccessAnnotationEntry","text":"<p>[jvm]\\ inline fun &lt;T : Annotation&gt; AccessAnnotationEntry(services: List&lt;String&gt; = listOf(), capabilities: List&lt;String&gt; = listOf()): AccessAnnotationEntry</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/","title":"AccessAnnotationEntry - Misk","text":"<p>//misk/misk.security.authz/AccessAnnotationEntry</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/#accessannotationentry","title":"AccessAnnotationEntry","text":"<p>[jvm]\\ data class AccessAnnotationEntry@JvmOverloadsconstructor(annotation: KClass&lt;out Annotation&gt;, services: List&lt;String&gt;, capabilities: List&lt;String&gt;)</p> <p>Use this to alias an annotation to a set of services and capabilities. This can be used to decouple code that needs access control from the policy that defines it.</p> <p>To demonstrate, let\u2019s define an access annotation. By convention these annotations are suffixed Access:</p> <p>@Retention(AnnotationRetention.RUNTIME)\\ @Target(AnnotationTarget.FUNCTION)\\ annotation class PaleontologistAccess</p> <p>Next we define actions that apply our annotation:</p> <p>class DiscoverDinosaurAction @Inject constructor() : WebAction {\\   @Get(\u201c/discover\u201d)\\   @PaleontologistAccess\\   fun discover()\\ }\\ \\ class DigUpDinosaurAction @Inject constructor() : WebAction {\\   @Get(\u201c/dig\u201d)\\   @PaleontologistAccess\\   fun dig()\\ }</p> <p>Finally we use multibindings to specify which services and capabilities are permitted:</p> <p>multibind&lt;AccessAnnotationEntry&gt;().toInstance(\\  AccessAnnotationEntry&lt;PaleontologistAccess&gt;(capabilities = listOf(\u201cpaleontologist\u201d, \u201cintern\u201d)))</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/#constructors","title":"Constructors","text":"AccessAnnotationEntry [jvm]@JvmOverloadsfun AccessAnnotationEntry(annotation: KClass&lt;out Annotation&gt;, services: List&lt;String&gt; = listOf(), capabilities: List&lt;String&gt; = listOf())"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/#properties","title":"Properties","text":"Name Summary annotation [jvm]val annotation: KClass&lt;out Annotation&gt; capabilities [jvm]val capabilities: List&lt;String&gt; services [jvm]val services: List&lt;String&gt;"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/-access-annotation-entry/","title":"AccessAnnotationEntry - Misk","text":"<p>//misk/misk.security.authz/AccessAnnotationEntry/AccessAnnotationEntry</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/-access-annotation-entry/#accessannotationentry","title":"AccessAnnotationEntry","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun AccessAnnotationEntry(annotation: KClass&lt;out Annotation&gt;, services: List&lt;String&gt; = listOf(), capabilities: List&lt;String&gt; = listOf())</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/annotation/","title":"annotation - Misk","text":"<p>//misk/misk.security.authz/AccessAnnotationEntry/annotation</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/annotation/#annotation","title":"annotation","text":"<p>[jvm]\\ val annotation: KClass&lt;out Annotation&gt;</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/capabilities/","title":"capabilities - Misk","text":"<p>//misk/misk.security.authz/AccessAnnotationEntry/capabilities</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/capabilities/#capabilities","title":"capabilities","text":"<p>[jvm]\\ val capabilities: List&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/services/","title":"services - Misk","text":"<p>//misk/misk.security.authz/AccessAnnotationEntry/services</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-annotation-entry/services/#services","title":"services","text":"<p>[jvm]\\ val services: List&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-control-module/","title":"AccessControlModule - Misk","text":"<p>//misk/misk.security.authz/AccessControlModule</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-control-module/#accesscontrolmodule","title":"AccessControlModule","text":"<p>[jvm]\\ class AccessControlModule : ActionScopedProviderModule</p> <p>Install support for performing access control checks for actions based on the incoming caller.</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-control-module/#constructors","title":"Constructors","text":"AccessControlModule [jvm]fun AccessControlModule()"},{"location":"0.x/misk/misk/misk.security.authz/-access-control-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilderfun &lt;T : Any&gt; bindConstant(type: TypeLiteral&lt;T&gt;, providedValue: T, annotatedBy: Annotation?)fun &lt;T : Any&gt; bindConstant(kclass: KClass&lt;T&gt;, providedValue: T, annotatedBy: Annotation?) bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindProvider [jvm]fun &lt;T, A : Annotation&gt; bindProvider(type: TypeLiteral&lt;T&gt;, providerType: KClass&lt;out ActionScopedProvider&lt;T&gt;&gt;, annotatedBy: Class&lt;A&gt;)fun &lt;T&gt; bindProvider(type: TypeLiteral&lt;T&gt;, providerType: KClass&lt;out ActionScopedProvider&lt;T&gt;&gt;, annotatedBy: Annotation?)fun &lt;T : Any, A : Annotation&gt; bindProvider(kclass: KClass&lt;T&gt;, providerType: KClass&lt;out ActionScopedProvider&lt;T&gt;&gt;, annotatedBy: Class&lt;A&gt;)fun &lt;T : Any&gt; bindProvider(kclass: KClass&lt;T&gt;, providerType: KClass&lt;out ActionScopedProvider&lt;T&gt;&gt;, annotatedBy: Annotation?) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) bindSeedData [jvm]fun &lt;T : Any&gt; bindSeedData(type: TypeLiteral&lt;T&gt;)fun &lt;T : Any&gt; bindSeedData(kclass: KClass&lt;T&gt;)fun &lt;T : Any&gt; bindSeedData(type: TypeLiteral&lt;T&gt;, a: Annotation)fun &lt;T : Any&gt; bindSeedData(kclass: KClass&lt;T&gt;, a: Annotation)fun &lt;T : Any, A : Annotation&gt; bindSeedData(kclass: KClass&lt;T&gt;, a: KClass&lt;A&gt;) configure [jvm]override fun configure(builder: Binder) configureProviders [jvm]open override fun configureProviders() convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.security.authz/-access-control-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.security.authz/-access-control-module/-access-control-module/","title":"AccessControlModule - Misk","text":"<p>//misk/misk.security.authz/AccessControlModule/AccessControlModule</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-control-module/-access-control-module/#accesscontrolmodule","title":"AccessControlModule","text":"<p>[jvm]\\ fun AccessControlModule()</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-control-module/configure-providers/","title":"configureProviders - Misk","text":"<p>//misk/misk.security.authz/AccessControlModule/configureProviders</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-control-module/configure-providers/#configureproviders","title":"configureProviders","text":"<p>[jvm]\\ open override fun configureProviders()</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/","title":"AccessInterceptor - Misk","text":"<p>//misk/misk.security.authz/AccessInterceptor</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/#accessinterceptor","title":"AccessInterceptor","text":"<p>[jvm]\\ class AccessInterceptor : ApplicationInterceptor</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/#functions","title":"Functions","text":"Name Summary intercept [jvm]open override fun intercept(chain: Chain): Any"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/#properties","title":"Properties","text":"Name Summary allowedCapabilities [jvm]val allowedCapabilities: Set&lt;String&gt; allowedServices [jvm]val allowedServices: Set&lt;String&gt;"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/allowed-capabilities/","title":"allowedCapabilities - Misk","text":"<p>//misk/misk.security.authz/AccessInterceptor/allowedCapabilities</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/allowed-capabilities/#allowedcapabilities","title":"allowedCapabilities","text":"<p>[jvm]\\ val allowedCapabilities: Set&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/allowed-services/","title":"allowedServices - Misk","text":"<p>//misk/misk.security.authz/AccessInterceptor/allowedServices</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/allowed-services/#allowedservices","title":"allowedServices","text":"<p>[jvm]\\ val allowedServices: Set&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/intercept/","title":"intercept - Misk","text":"<p>//misk/misk.security.authz/AccessInterceptor/intercept</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/intercept/#intercept","title":"intercept","text":"<p>[jvm]\\ open override fun intercept(chain: Chain): Any</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.security.authz/AccessInterceptor/Companion</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/-companion/#properties","title":"Properties","text":"Name Summary logger [jvm]val logger: &lt;ERROR CLASS&gt;"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/-companion/logger/","title":"logger - Misk","text":"<p>//misk/misk.security.authz/AccessInterceptor/Companion/logger</p>"},{"location":"0.x/misk/misk/misk.security.authz/-access-interceptor/-companion/logger/#logger","title":"logger","text":"<p>[jvm]\\ val logger: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk/misk/misk.security.authz/-development-only/","title":"DevelopmentOnly - Misk","text":"<p>//misk/misk.security.authz/DevelopmentOnly</p>"},{"location":"0.x/misk/misk/misk.security.authz/-development-only/#developmentonly","title":"DevelopmentOnly","text":"<p>[jvm]\\ @Qualifier</p> <p>@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.FUNCTION])</p> <p>annotation class DevelopmentOnly</p>"},{"location":"0.x/misk/misk/misk.security.authz/-development-only/-development-only/","title":"DevelopmentOnly - Misk","text":"<p>//misk/misk.security.authz/DevelopmentOnly/DevelopmentOnly</p>"},{"location":"0.x/misk/misk/misk.security.authz/-development-only/-development-only/#developmentonly","title":"DevelopmentOnly","text":"<p>[jvm]\\ fun DevelopmentOnly()</p>"},{"location":"0.x/misk/misk/misk.security.authz/-exclude-from-allow-any-service/","title":"ExcludeFromAllowAnyService - Misk","text":"<p>//misk/misk.security.authz/ExcludeFromAllowAnyService</p>"},{"location":"0.x/misk/misk/misk.security.authz/-exclude-from-allow-any-service/#excludefromallowanyservice","title":"ExcludeFromAllowAnyService","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.PROPERTY, AnnotationTarget.VALUE_PARAMETER])</p> <p>annotation class ExcludeFromAllowAnyService</p> <p>Exclude a service from @AllowAnyService.</p> <p>Add any external proxies that do service-to-service authentication to prevent AllowAnyService from also allowing external traffic to your service.</p> <p>You can still explicitly include these services by including them in</p>"},{"location":"0.x/misk/misk/misk.security.authz/-exclude-from-allow-any-service/#constructors","title":"Constructors","text":"ExcludeFromAllowAnyService [jvm]fun ExcludeFromAllowAnyService()"},{"location":"0.x/misk/misk/misk.security.authz/-exclude-from-allow-any-service/-exclude-from-allow-any-service/","title":"ExcludeFromAllowAnyService - Misk","text":"<p>//misk/misk.security.authz/ExcludeFromAllowAnyService/ExcludeFromAllowAnyService</p>"},{"location":"0.x/misk/misk/misk.security.authz/-exclude-from-allow-any-service/-exclude-from-allow-any-service/#excludefromallowanyservice","title":"ExcludeFromAllowAnyService","text":"<p>[jvm]\\ fun ExcludeFromAllowAnyService()</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/","title":"FakeCallerAuthenticator - Misk","text":"<p>//misk/misk.security.authz/FakeCallerAuthenticator</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/#fakecallerauthenticator","title":"FakeCallerAuthenticator","text":"<p>[jvm]\\ @Singleton</p> <p>class FakeCallerAuthenticator@Injectconstructor(currentHttpCall: ActionScoped&lt;HttpCall&gt;) : MiskCallerAuthenticator</p> <p>A caller authenticator that blindly trusts HTTP headers. Unsafe for production use.</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/#constructors","title":"Constructors","text":"FakeCallerAuthenticator [jvm]@Injectfun FakeCallerAuthenticator(currentHttpCall: ActionScoped&lt;HttpCall&gt;)"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/#functions","title":"Functions","text":"Name Summary getAuthenticatedCaller [jvm]open override fun getAuthenticatedCaller(): MiskCaller?"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/#properties","title":"Properties","text":"Name Summary developmentCaller [jvm]@Inject(optional = true)var developmentCaller: MiskCaller? = null"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/-fake-caller-authenticator/","title":"FakeCallerAuthenticator - Misk","text":"<p>//misk/misk.security.authz/FakeCallerAuthenticator/FakeCallerAuthenticator</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/-fake-caller-authenticator/#fakecallerauthenticator","title":"FakeCallerAuthenticator","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun FakeCallerAuthenticator(currentHttpCall: ActionScoped&lt;HttpCall&gt;)</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/development-caller/","title":"developmentCaller - Misk","text":"<p>//misk/misk.security.authz/FakeCallerAuthenticator/developmentCaller</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/development-caller/#developmentcaller","title":"developmentCaller","text":"<p>[jvm]\\</p> <p>@Inject(optional = true)</p> <p>var developmentCaller: MiskCaller? = null</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/get-authenticated-caller/","title":"getAuthenticatedCaller - Misk","text":"<p>//misk/misk.security.authz/FakeCallerAuthenticator/getAuthenticatedCaller</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/get-authenticated-caller/#getauthenticatedcaller","title":"getAuthenticatedCaller","text":"<p>[jvm]\\ open override fun getAuthenticatedCaller(): MiskCaller?</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.security.authz/FakeCallerAuthenticator/Companion</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/-companion/#properties","title":"Properties","text":"Name Summary CAPABILITIES_HEADER [jvm]const val CAPABILITIES_HEADER: String SERVICE_HEADER [jvm]const val SERVICE_HEADER: String USER_HEADER [jvm]const val USER_HEADER: String"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/-companion/-c-a-p-a-b-i-l-i-t-i-e-s_-h-e-a-d-e-r/","title":"CAPABILITIES_HEADER - Misk","text":"<p>//misk/misk.security.authz/FakeCallerAuthenticator/Companion/CAPABILITIES_HEADER</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/-companion/-c-a-p-a-b-i-l-i-t-i-e-s_-h-e-a-d-e-r/#capabilities_header","title":"CAPABILITIES_HEADER","text":"<p>[jvm]\\ const val CAPABILITIES_HEADER: String</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/-companion/-s-e-r-v-i-c-e_-h-e-a-d-e-r/","title":"SERVICE_HEADER - Misk","text":"<p>//misk/misk.security.authz/FakeCallerAuthenticator/Companion/SERVICE_HEADER</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/-companion/-s-e-r-v-i-c-e_-h-e-a-d-e-r/#service_header","title":"SERVICE_HEADER","text":"<p>[jvm]\\ const val SERVICE_HEADER: String</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/-companion/-u-s-e-r_-h-e-a-d-e-r/","title":"USER_HEADER - Misk","text":"<p>//misk/misk.security.authz/FakeCallerAuthenticator/Companion/USER_HEADER</p>"},{"location":"0.x/misk/misk/misk.security.authz/-fake-caller-authenticator/-companion/-u-s-e-r_-h-e-a-d-e-r/#user_header","title":"USER_HEADER","text":"<p>[jvm]\\ const val USER_HEADER: String</p>"},{"location":"0.x/misk/misk/misk.security.authz/-misk-caller-authenticator/","title":"MiskCallerAuthenticator - Misk","text":"<p>//misk/misk.security.authz/MiskCallerAuthenticator</p>"},{"location":"0.x/misk/misk/misk.security.authz/-misk-caller-authenticator/#miskcallerauthenticator","title":"MiskCallerAuthenticator","text":"<p>[jvm]\\ interface MiskCallerAuthenticator</p> <p>Interface for determining the current MiskCaller. Typically use an Request, ClientCertSubject, etc to determine the caller based on request headers or client certificate information.</p> <p>This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:</p> <p>multibind&lt;MiskCallerAuthenticator&gt;().to&lt;MyAuthenticator&gt;()</p> <p>We allow binding up many authenticators in case applications would like to support alternative ways in which to authenticate requests. For example, one mechanism might leverage HTTP headers while another mechanism might leverage third party authentication services.</p>"},{"location":"0.x/misk/misk/misk.security.authz/-misk-caller-authenticator/#functions","title":"Functions","text":"Name Summary getAuthenticatedCaller [jvm]abstract fun getAuthenticatedCaller(): MiskCaller?"},{"location":"0.x/misk/misk/misk.security.authz/-misk-caller-authenticator/#inheritors","title":"Inheritors","text":"Name FakeCallerAuthenticator"},{"location":"0.x/misk/misk/misk.security.authz/-misk-caller-authenticator/get-authenticated-caller/","title":"getAuthenticatedCaller - Misk","text":"<p>//misk/misk.security.authz/MiskCallerAuthenticator/getAuthenticatedCaller</p>"},{"location":"0.x/misk/misk/misk.security.authz/-misk-caller-authenticator/get-authenticated-caller/#getauthenticatedcaller","title":"getAuthenticatedCaller","text":"<p>[jvm]\\ abstract fun getAuthenticatedCaller(): MiskCaller?</p>"},{"location":"0.x/misk/misk/misk.security.cert/","title":"Package misk.security.cert - Misk","text":"<p>//misk/misk.security.cert</p>"},{"location":"0.x/misk/misk/misk.security.cert/#package-misksecuritycert","title":"Package misk.security.cert","text":""},{"location":"0.x/misk/misk/misk.security.cert/#types","title":"Types","text":"Name Summary X500Name [jvm]data class X500Name(commonName: String?, organizationalUnit: String?, organization: String?, locality: String?, state: String?, country: String?)"},{"location":"0.x/misk/misk/misk.security.cert/#functions","title":"Functions","text":"Name Summary isSignedBy [jvm]fun X509Certificate.isSignedBy(key: PublicKey): Booleanfun X509Certificate.isSignedBy(cert: Certificate): Boolean"},{"location":"0.x/misk/misk/misk.security.cert/#properties","title":"Properties","text":"Name Summary isSelfSigned [jvm]val X509Certificate.isSelfSigned: Boolean"},{"location":"0.x/misk/misk/misk.security.cert/is-self-signed/","title":"isSelfSigned - Misk","text":"<p>//misk/misk.security.cert/isSelfSigned</p>"},{"location":"0.x/misk/misk/misk.security.cert/is-self-signed/#isselfsigned","title":"isSelfSigned","text":"<p>[jvm]\\ val X509Certificate.isSelfSigned: Boolean</p>"},{"location":"0.x/misk/misk/misk.security.cert/is-signed-by/","title":"isSignedBy - Misk","text":"<p>//misk/misk.security.cert/isSignedBy</p>"},{"location":"0.x/misk/misk/misk.security.cert/is-signed-by/#issignedby","title":"isSignedBy","text":"<p>[jvm]\\ fun X509Certificate.isSignedBy(cert: Certificate): Boolean</p> <p>fun X509Certificate.isSignedBy(key: PublicKey): Boolean</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/","title":"X500Name - Misk","text":"<p>//misk/misk.security.cert/X500Name</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/#x500name","title":"X500Name","text":"<p>[jvm]\\ data class X500Name(commonName: String?, organizationalUnit: String?, organization: String?, locality: String?, state: String?, country: String?)</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/#constructors","title":"Constructors","text":"X500Name [jvm]fun X500Name(components: Map&lt;String, String&gt;)"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/#properties","title":"Properties","text":"Name Summary commonName [jvm]val commonName: String? country [jvm]val country: String? locality [jvm]val locality: String? organization [jvm]val organization: String? organizationalUnit [jvm]val organizationalUnit: String? state [jvm]val state: String?"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/-x500-name/","title":"X500Name - Misk","text":"<p>//misk/misk.security.cert/X500Name/X500Name</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/-x500-name/#x500name","title":"X500Name","text":"<p>[jvm]\\ fun X500Name(components: Map&lt;String, String&gt;)</p> <p>fun X500Name(commonName: String?, organizationalUnit: String?, organization: String?, locality: String?, state: String?, country: String?)</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/common-name/","title":"commonName - Misk","text":"<p>//misk/misk.security.cert/X500Name/commonName</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/common-name/#commonname","title":"commonName","text":"<p>[jvm]\\ val commonName: String?</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/country/","title":"country - Misk","text":"<p>//misk/misk.security.cert/X500Name/country</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/country/#country","title":"country","text":"<p>[jvm]\\ val country: String?</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/locality/","title":"locality - Misk","text":"<p>//misk/misk.security.cert/X500Name/locality</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/locality/#locality","title":"locality","text":"<p>[jvm]\\ val locality: String?</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/organization/","title":"organization - Misk","text":"<p>//misk/misk.security.cert/X500Name/organization</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/organization/#organization","title":"organization","text":"<p>[jvm]\\ val organization: String?</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/organizational-unit/","title":"organizationalUnit - Misk","text":"<p>//misk/misk.security.cert/X500Name/organizationalUnit</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/organizational-unit/#organizationalunit","title":"organizationalUnit","text":"<p>[jvm]\\ val organizationalUnit: String?</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/state/","title":"state - Misk","text":"<p>//misk/misk.security.cert/X500Name/state</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/state/#state","title":"state","text":"<p>[jvm]\\ val state: String?</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.security.cert/X500Name/Companion</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/-companion/#functions","title":"Functions","text":"Name Summary parse [jvm]fun parse(dnString: String): X500Name"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/-companion/parse/","title":"parse - Misk","text":"<p>//misk/misk.security.cert/X500Name/Companion/parse</p>"},{"location":"0.x/misk/misk/misk.security.cert/-x500-name/-companion/parse/#parse","title":"parse","text":"<p>[jvm]\\ fun parse(dnString: String): X500Name</p>"},{"location":"0.x/misk/misk/misk.security.csp/","title":"Package misk.security.csp - Misk","text":"<p>//misk/misk.security.csp</p>"},{"location":"0.x/misk/misk/misk.security.csp/#package-misksecuritycsp","title":"Package misk.security.csp","text":""},{"location":"0.x/misk/misk/misk.security.csp/#types","title":"Types","text":"Name Summary ContentSecurityPolicy [jvm]annotation class ContentSecurityPolicy(rules: Array&lt;String&gt;)This annotation allows misk endpoints to define their Content-Security-Policy directive. See https://web.archive.org/web/20220906063156/https://content-security-policy.com/ for a reference that\u2019s up to date when this annotation was added. ContentSecurityPolicyInterceptor [jvm]class ContentSecurityPolicyInterceptor(rules: List&lt;String&gt;) : NetworkInterceptor"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy/","title":"ContentSecurityPolicy - Misk","text":"<p>//misk/misk.security.csp/ContentSecurityPolicy</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy/#contentsecuritypolicy","title":"ContentSecurityPolicy","text":"<p>[jvm]\\ annotation class ContentSecurityPolicy(rules: Array&lt;String&gt;)</p> <p>This annotation allows misk endpoints to define their Content-Security-Policy directive. See https://web.archive.org/web/20220906063156/https://content-security-policy.com/ for a reference that\u2019s up to date when this annotation was added.</p> <p> Production CSPs can be very long so a future contribution should add the ability to define CSP into YAML configs and point the @Csp annotation to the config value.  This annotation is currently dumb, it adds the rules passed to a Content-Security-Policy header directive, with no inspection or validation. A future change could parse the policy.  Developers using this should check out the various browser extensions to verify the actual CSP on their webpages.  ## Parameters  jvm  | | | |---|---| | rules | A list of valid Content-Security-Policy rules. |  ## Constructors  | | | |---|---| | [ContentSecurityPolicy](-content-security-policy.md) | [jvm]fun [ContentSecurityPolicy](-content-security-policy.md)(rules: [Array](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-array/index.html)&lt;[String](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html)&gt;) |  ## Properties  | Name | Summary | |---|---| | [rules](rules.md) | [jvm]val [rules](rules.md): [Array](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-array/index.html)&lt;[String](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html)&gt; |"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy/-content-security-policy/","title":"ContentSecurityPolicy - Misk","text":"<p>//misk/misk.security.csp/ContentSecurityPolicy/ContentSecurityPolicy</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy/-content-security-policy/#contentsecuritypolicy","title":"ContentSecurityPolicy","text":"<p>[jvm]\\ fun ContentSecurityPolicy(rules: Array&lt;String&gt;)</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy/-content-security-policy/#parameters","title":"Parameters","text":"<p>jvm</p> rules A list of valid Content-Security-Policy rules."},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy/rules/","title":"rules - Misk","text":"<p>//misk/misk.security.csp/ContentSecurityPolicy/rules</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy/rules/#rules","title":"rules","text":"<p>[jvm]\\ val rules: Array&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/","title":"ContentSecurityPolicyInterceptor - Misk","text":"<p>//misk/misk.security.csp/ContentSecurityPolicyInterceptor</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/#contentsecuritypolicyinterceptor","title":"ContentSecurityPolicyInterceptor","text":"<p>[jvm]\\ class ContentSecurityPolicyInterceptor(rules: List&lt;String&gt;) : NetworkInterceptor</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/#types","title":"Types","text":"Name Summary Factory [jvm]class Factory@Injectconstructor : NetworkInterceptor.Factory"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/#functions","title":"Functions","text":"Name Summary intercept [jvm]open override fun intercept(chain: NetworkChain)"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/#properties","title":"Properties","text":"Name Summary rules [jvm]val rules: List&lt;String&gt;"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/-content-security-policy-interceptor/","title":"ContentSecurityPolicyInterceptor - Misk","text":"<p>//misk/misk.security.csp/ContentSecurityPolicyInterceptor/ContentSecurityPolicyInterceptor</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/-content-security-policy-interceptor/#contentsecuritypolicyinterceptor","title":"ContentSecurityPolicyInterceptor","text":"<p>[jvm]\\ fun ContentSecurityPolicyInterceptor(rules: List&lt;String&gt;)</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/intercept/","title":"intercept - Misk","text":"<p>//misk/misk.security.csp/ContentSecurityPolicyInterceptor/intercept</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/intercept/#intercept","title":"intercept","text":"<p>[jvm]\\ open override fun intercept(chain: NetworkChain)</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/rules/","title":"rules - Misk","text":"<p>//misk/misk.security.csp/ContentSecurityPolicyInterceptor/rules</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/rules/#rules","title":"rules","text":"<p>[jvm]\\ val rules: List&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.security.csp/ContentSecurityPolicyInterceptor/Factory</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ class Factory@Injectconstructor : NetworkInterceptor.Factory</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(action: Action): NetworkInterceptor?"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/-factory/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.security.csp/ContentSecurityPolicyInterceptor/Factory/Factory</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/-factory/-factory/#factory","title":"Factory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun Factory()</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.security.csp/ContentSecurityPolicyInterceptor/Factory/create</p>"},{"location":"0.x/misk/misk/misk.security.csp/-content-security-policy-interceptor/-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(action: Action): NetworkInterceptor?</p>"},{"location":"0.x/misk/misk/misk.security.keys/","title":"Package misk.security.keys - Misk","text":"<p>//misk/misk.security.keys</p>"},{"location":"0.x/misk/misk/misk.security.keys/#package-misksecuritykeys","title":"Package misk.security.keys","text":""},{"location":"0.x/misk/misk/misk.security.keys/#types","title":"Types","text":"Name Summary KeyService [jvm]interface KeyServiceHandles encryption and decryption using keys stored in a key management service"},{"location":"0.x/misk/misk/misk.security.keys/-key-service/","title":"KeyService - Misk","text":"<p>//misk/misk.security.keys/KeyService</p>"},{"location":"0.x/misk/misk/misk.security.keys/-key-service/#keyservice","title":"KeyService","text":"<p>[jvm]\\ interface KeyService</p> <p>Handles encryption and decryption using keys stored in a key management service</p>"},{"location":"0.x/misk/misk/misk.security.keys/-key-service/#functions","title":"Functions","text":"Name Summary decrypt [jvm]abstract fun decrypt(keyAlias: String, cipherText: ByteString): ByteStringdecrypts the provided cipher text using the given stored key encrypt [jvm]abstract fun encrypt(keyAlias: String, plainText: ByteString): ByteStringencrypts the provided plain text using the given stored key"},{"location":"0.x/misk/misk/misk.security.keys/-key-service/decrypt/","title":"decrypt - Misk","text":"<p>//misk/misk.security.keys/KeyService/decrypt</p>"},{"location":"0.x/misk/misk/misk.security.keys/-key-service/decrypt/#decrypt","title":"decrypt","text":"<p>[jvm]\\ abstract fun decrypt(keyAlias: String, cipherText: ByteString): ByteString</p> <p>decrypts the provided cipher text using the given stored key</p>"},{"location":"0.x/misk/misk/misk.security.keys/-key-service/encrypt/","title":"encrypt - Misk","text":"<p>//misk/misk.security.keys/KeyService/encrypt</p>"},{"location":"0.x/misk/misk/misk.security.keys/-key-service/encrypt/#encrypt","title":"encrypt","text":"<p>[jvm]\\ abstract fun encrypt(keyAlias: String, plainText: ByteString): ByteString</p> <p>encrypts the provided plain text using the given stored key</p>"},{"location":"0.x/misk/misk/misk.security.ssl/","title":"Package misk.security.ssl - Misk","text":"<p>//misk/misk.security.ssl</p>"},{"location":"0.x/misk/misk/misk.security.ssl/#package-misksecurityssl","title":"Package misk.security.ssl","text":""},{"location":"0.x/misk/misk/misk.security.ssl/#types","title":"Types","text":"Name Summary CipherSuites [jvm]object CipherSuites ClientCertChain [jvm]@Qualifier@Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE])annotation class ClientCertChainQualifier annotation for an ActionScoped array of X509Certificates containing the certificate chain provided by the client (if any) ClientCertIssuer [jvm]@Qualifier@Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE])annotation class ClientCertIssuerQualifier annotation for an ActionScoped containing the issuer of the client cert ClientCertSubject [jvm]@Qualifier@Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE])annotation class ClientCertSubjectQualifier annotation for an ActionScoped containing the subject of the client cert TlsProtocols [jvm]object TlsProtocols"},{"location":"0.x/misk/misk/misk.security.ssl/-cipher-suites/","title":"CipherSuites - Misk","text":"<p>//misk/misk.security.ssl/CipherSuites</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-cipher-suites/#ciphersuites","title":"CipherSuites","text":"<p>[jvm]\\ object CipherSuites</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-cipher-suites/#properties","title":"Properties","text":"Name Summary compatible [jvm]val compatible: &lt;ERROR CLASS&gt;"},{"location":"0.x/misk/misk/misk.security.ssl/-cipher-suites/compatible/","title":"compatible - Misk","text":"<p>//misk/misk.security.ssl/CipherSuites/compatible</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-cipher-suites/compatible/#compatible","title":"compatible","text":"<p>[jvm]\\ val compatible: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-chain/","title":"ClientCertChain - Misk","text":"<p>//misk/misk.security.ssl/ClientCertChain</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-chain/#clientcertchain","title":"ClientCertChain","text":"<p>[jvm]\\ @Qualifier</p> <p>@Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE])</p> <p>annotation class ClientCertChain</p> <p>Qualifier annotation for an ActionScoped array of X509Certificates containing the certificate chain provided by the client (if any)</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-chain/#constructors","title":"Constructors","text":"ClientCertChain [jvm]fun ClientCertChain()"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-chain/-client-cert-chain/","title":"ClientCertChain - Misk","text":"<p>//misk/misk.security.ssl/ClientCertChain/ClientCertChain</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-chain/-client-cert-chain/#clientcertchain","title":"ClientCertChain","text":"<p>[jvm]\\ fun ClientCertChain()</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-issuer/","title":"ClientCertIssuer - Misk","text":"<p>//misk/misk.security.ssl/ClientCertIssuer</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-issuer/#clientcertissuer","title":"ClientCertIssuer","text":"<p>[jvm]\\ @Qualifier</p> <p>@Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE])</p> <p>annotation class ClientCertIssuer</p> <p>Qualifier annotation for an ActionScoped containing the issuer of the client cert</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-issuer/#constructors","title":"Constructors","text":"ClientCertIssuer [jvm]fun ClientCertIssuer()"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-issuer/-client-cert-issuer/","title":"ClientCertIssuer - Misk","text":"<p>//misk/misk.security.ssl/ClientCertIssuer/ClientCertIssuer</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-issuer/-client-cert-issuer/#clientcertissuer","title":"ClientCertIssuer","text":"<p>[jvm]\\ fun ClientCertIssuer()</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-subject/","title":"ClientCertSubject - Misk","text":"<p>//misk/misk.security.ssl/ClientCertSubject</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-subject/#clientcertsubject","title":"ClientCertSubject","text":"<p>[jvm]\\ @Qualifier</p> <p>@Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE])</p> <p>annotation class ClientCertSubject</p> <p>Qualifier annotation for an ActionScoped containing the subject of the client cert</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-subject/#constructors","title":"Constructors","text":"ClientCertSubject [jvm]fun ClientCertSubject()"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-subject/-client-cert-subject/","title":"ClientCertSubject - Misk","text":"<p>//misk/misk.security.ssl/ClientCertSubject/ClientCertSubject</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-client-cert-subject/-client-cert-subject/#clientcertsubject","title":"ClientCertSubject","text":"<p>[jvm]\\ fun ClientCertSubject()</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-tls-protocols/","title":"TlsProtocols - Misk","text":"<p>//misk/misk.security.ssl/TlsProtocols</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-tls-protocols/#tlsprotocols","title":"TlsProtocols","text":"<p>[jvm]\\ object TlsProtocols</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-tls-protocols/#properties","title":"Properties","text":"Name Summary compatible [jvm]val compatible: Array&lt;String&gt;List of safe to use TLS protocols, in preferred order restricted [jvm]val restricted: Array&lt;String&gt;List of modern TLS protocols for extra security, in preferred order"},{"location":"0.x/misk/misk/misk.security.ssl/-tls-protocols/compatible/","title":"compatible - Misk","text":"<p>//misk/misk.security.ssl/TlsProtocols/compatible</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-tls-protocols/compatible/#compatible","title":"compatible","text":"<p>[jvm]\\ val compatible: Array&lt;String&gt;</p> <p>List of safe to use TLS protocols, in preferred order</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-tls-protocols/restricted/","title":"restricted - Misk","text":"<p>//misk/misk.security.ssl/TlsProtocols/restricted</p>"},{"location":"0.x/misk/misk/misk.security.ssl/-tls-protocols/restricted/#restricted","title":"restricted","text":"<p>[jvm]\\ val restricted: Array&lt;String&gt;</p> <p>List of modern TLS protocols for extra security, in preferred order</p>"},{"location":"0.x/misk/misk/misk.tasks/","title":"Package misk.tasks - Misk","text":"<p>//misk/misk.tasks</p>"},{"location":"0.x/misk/misk/misk.tasks/#package-misktasks","title":"Package misk.tasks","text":""},{"location":"0.x/misk/misk/misk.tasks/#types","title":"Types","text":"Name Summary DelayedTask [jvm]class DelayedTask(clock: Clock, executionTime: Instant, task: () -&gt; Result) : DelayedA DelayedTask is a task that runs in  the future RepeatedTaskQueue [jvm]class RepeatedTaskQueue : AbstractExecutionThreadServiceA RepeatedTaskQueue runs repeated tasks at a user controlled rate. Internally it uses a DelayQueue to hold the pending tasks; a background thread pulls the next task from the DelayQueue and hands it off to an executor service for execution. RepeatedTaskQueueConfig [jvm]data class RepeatedTaskQueueConfig@JvmOverloadsconstructor(default_jitter_ms: Long, default_max_delay_sec: Long, num_parallel_tasks: Int) RepeatedTaskQueueFactory [jvm]@Singletonclass RepeatedTaskQueueFactory@Injectconstructor(clock: Clock, metrics: RepeatedTaskQueueMetrics, executorServiceFactory: ExecutorServiceFactory) RepeatedTaskQueueMetrics [jvm]@Singletonclass RepeatedTaskQueueMetrics@Injectconstructor(metrics: Metrics) Result [jvm]data class Result(status: Status, nextDelay: Duration) Status [jvm]enum Status : Enum&lt;Status&gt;"},{"location":"0.x/misk/misk/misk.tasks/-delayed-task/","title":"DelayedTask - Misk","text":"<p>//misk/misk.tasks/DelayedTask</p>"},{"location":"0.x/misk/misk/misk.tasks/-delayed-task/#delayedtask","title":"DelayedTask","text":"<p>[jvm]\\ class DelayedTask(clock: Clock, executionTime: Instant, task: () -&gt; Result) : Delayed</p> <p>A DelayedTask is a task that runs in  the future</p>"},{"location":"0.x/misk/misk/misk.tasks/-delayed-task/#constructors","title":"Constructors","text":"DelayedTask [jvm]fun DelayedTask(clock: Clock, executionTime: Instant, task: () -&gt; Result)"},{"location":"0.x/misk/misk/misk.tasks/-delayed-task/#functions","title":"Functions","text":"Name Summary compareTo [jvm]open operator override fun compareTo(other: Delayed): Int getDelay [jvm]open override fun getDelay(unit: TimeUnit): Long"},{"location":"0.x/misk/misk/misk.tasks/-delayed-task/#properties","title":"Properties","text":"Name Summary task [jvm]val task: () -&gt; Result"},{"location":"0.x/misk/misk/misk.tasks/-delayed-task/-delayed-task/","title":"DelayedTask - Misk","text":"<p>//misk/misk.tasks/DelayedTask/DelayedTask</p>"},{"location":"0.x/misk/misk/misk.tasks/-delayed-task/-delayed-task/#delayedtask","title":"DelayedTask","text":"<p>[jvm]\\ fun DelayedTask(clock: Clock, executionTime: Instant, task: () -&gt; Result)</p>"},{"location":"0.x/misk/misk/misk.tasks/-delayed-task/compare-to/","title":"compareTo - Misk","text":"<p>//misk/misk.tasks/DelayedTask/compareTo</p>"},{"location":"0.x/misk/misk/misk.tasks/-delayed-task/compare-to/#compareto","title":"compareTo","text":"<p>[jvm]\\ open operator override fun compareTo(other: Delayed): Int</p>"},{"location":"0.x/misk/misk/misk.tasks/-delayed-task/get-delay/","title":"getDelay - Misk","text":"<p>//misk/misk.tasks/DelayedTask/getDelay</p>"},{"location":"0.x/misk/misk/misk.tasks/-delayed-task/get-delay/#getdelay","title":"getDelay","text":"<p>[jvm]\\ open override fun getDelay(unit: TimeUnit): Long</p>"},{"location":"0.x/misk/misk/misk.tasks/-delayed-task/task/","title":"task - Misk","text":"<p>//misk/misk.tasks/DelayedTask/task</p>"},{"location":"0.x/misk/misk/misk.tasks/-delayed-task/task/#task","title":"task","text":"<p>[jvm]\\ val task: () -&gt; Result</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue/","title":"RepeatedTaskQueue - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueue</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue/#repeatedtaskqueue","title":"RepeatedTaskQueue","text":"<p>[jvm]\\ class RepeatedTaskQueue : AbstractExecutionThreadService</p> <p>A RepeatedTaskQueue runs repeated tasks at a user controlled rate. Internally it uses a DelayQueue to hold the pending tasks; a background thread pulls the next task from the DelayQueue and hands it off to an executor service for execution.</p> <p>RepeatedTaskQueue implements the Service interface, which requires proper startup and shutdown. Alternatively, you can add new instances to the Service multibind.</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean schedule [jvm]@JvmOverloadsfun schedule(delay: Duration, retryDelayOnFailure: Duration? = null, task: () -&gt; Result)Schedules a task to run repeatedly after an initial delay. The task itself determines the next execution time. Provide an optional retryDelayOnFailure parameter to determine when the job should be retried in the case of an unhandled exception by the client scheduleWithBackoff [jvm]@JvmOverloadsfun scheduleWithBackoff(timeBetweenRuns: Duration, initialDelay: Duration = timeBetweenRuns, noWorkBackoff: Backoff = config.defaultBackoff(timeBetweenRuns), failureBackoff: Backoff = config.defaultBackoff(timeBetweenRuns), task: () -&gt; Status)Schedules a task to run repeatedly at a fixed delay, with back-off for errors and lack of available work shutDown [jvm]open fun shutDown() startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue/name/","title":"name - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueue/name</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue/schedule-with-backoff/","title":"scheduleWithBackoff - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueue/scheduleWithBackoff</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue/schedule-with-backoff/#schedulewithbackoff","title":"scheduleWithBackoff","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun scheduleWithBackoff(timeBetweenRuns: Duration, initialDelay: Duration = timeBetweenRuns, noWorkBackoff: Backoff = config.defaultBackoff(timeBetweenRuns), failureBackoff: Backoff = config.defaultBackoff(timeBetweenRuns), task: () -&gt; Status)</p> <p>Schedules a task to run repeatedly at a fixed delay, with back-off for errors and lack of available work</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue/schedule/","title":"schedule - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueue/schedule</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue/schedule/#schedule","title":"schedule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun schedule(delay: Duration, retryDelayOnFailure: Duration? = null, task: () -&gt; Result)</p> <p>Schedules a task to run repeatedly after an initial delay. The task itself determines the next execution time. Provide an optional retryDelayOnFailure parameter to determine when the job should be retried in the case of an unhandled exception by the client</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueue/Companion</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/","title":"RepeatedTaskQueueConfig - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueueConfig</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/#repeatedtaskqueueconfig","title":"RepeatedTaskQueueConfig","text":"<p>[jvm]\\ data class RepeatedTaskQueueConfig@JvmOverloadsconstructor(default_jitter_ms: Long, default_max_delay_sec: Long, num_parallel_tasks: Int)</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/#functions","title":"Functions","text":"Name Summary defaultBackoff [jvm]fun defaultBackoff(initialDelay: Duration): BackoffConstruct an ExponentialBackoff from the initial delay using the default configs."},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/#properties","title":"Properties","text":"Name Summary default_jitter_ms [jvm]val default_jitter_ms: Long = 50The default amount of jitter to use when scheduling backoffs. default_max_delay_sec [jvm]val default_max_delay_sec: Long = 60The default maximum backoff time. num_parallel_tasks [jvm]val num_parallel_tasks: Int = 1The fixed number of parallel tasks to run."},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/-repeated-task-queue-config/","title":"RepeatedTaskQueueConfig - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueueConfig/RepeatedTaskQueueConfig</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/-repeated-task-queue-config/#repeatedtaskqueueconfig","title":"RepeatedTaskQueueConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun RepeatedTaskQueueConfig(default_jitter_ms: Long = 50, default_max_delay_sec: Long = 60, num_parallel_tasks: Int = 1)</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/default-backoff/","title":"defaultBackoff - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueueConfig/defaultBackoff</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/default-backoff/#defaultbackoff","title":"defaultBackoff","text":"<p>[jvm]\\ fun defaultBackoff(initialDelay: Duration): Backoff</p> <p>Construct an ExponentialBackoff from the initial delay using the default configs.</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/default_jitter_ms/","title":"default_jitter_ms - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueueConfig/default_jitter_ms</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/default_jitter_ms/#default_jitter_ms","title":"default_jitter_ms","text":"<p>[jvm]\\ val default_jitter_ms: Long = 50</p> <p>The default amount of jitter to use when scheduling backoffs.</p> <p>Can be overridden when scheduling a tasks.</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/default_max_delay_sec/","title":"default_max_delay_sec - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueueConfig/default_max_delay_sec</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/default_max_delay_sec/#default_max_delay_sec","title":"default_max_delay_sec","text":"<p>[jvm]\\ val default_max_delay_sec: Long = 60</p> <p>The default maximum backoff time.</p> <p>Can be overridden when scheduling a task.</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/num_parallel_tasks/","title":"num_parallel_tasks - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueueConfig/num_parallel_tasks</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-config/num_parallel_tasks/#num_parallel_tasks","title":"num_parallel_tasks","text":"<p>[jvm]\\ val num_parallel_tasks: Int = 1</p> <p>The fixed number of parallel tasks to run.</p> <p>If -1 then an unbounded number of parallel tasks are allowed. An unbounded number of tasks can be useful for an App that needs to dynamically compute the number of tasks at runtime. However, the App is then responsible for ensuring an upper bound for the number of tasks submitted.</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-factory/","title":"RepeatedTaskQueueFactory - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueueFactory</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-factory/#repeatedtaskqueuefactory","title":"RepeatedTaskQueueFactory","text":"<p>[jvm]\\ @Singleton</p> <p>class RepeatedTaskQueueFactory@Injectconstructor(clock: Clock, metrics: RepeatedTaskQueueMetrics, executorServiceFactory: ExecutorServiceFactory)</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-factory/#functions","title":"Functions","text":"Name Summary forTesting [jvm]@JvmOverloadsfun forTesting(name: String, backingStorage: ExplicitReleaseDelayQueue&lt;DelayedTask&gt;, pollingTimeout: Duration = Duration.ofMillis(50)): RepeatedTaskQueueBuilds a new instance of a RepeatedTaskQueue for testing new [jvm]@JvmOverloadsfun new(name: String, config: RepeatedTaskQueueConfig = RepeatedTaskQueueConfig(), pollingTimeout: Duration = Duration.ofMillis(250)): RepeatedTaskQueueBuilds a new instance of a RepeatedTaskQueue"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-factory/-repeated-task-queue-factory/","title":"RepeatedTaskQueueFactory - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueueFactory/RepeatedTaskQueueFactory</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-factory/-repeated-task-queue-factory/#repeatedtaskqueuefactory","title":"RepeatedTaskQueueFactory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun RepeatedTaskQueueFactory(clock: Clock, metrics: RepeatedTaskQueueMetrics, executorServiceFactory: ExecutorServiceFactory)</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-factory/for-testing/","title":"forTesting - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueueFactory/forTesting</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-factory/for-testing/#fortesting","title":"forTesting","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun forTesting(name: String, backingStorage: ExplicitReleaseDelayQueue&lt;DelayedTask&gt;, pollingTimeout: Duration = Duration.ofMillis(50)): RepeatedTaskQueue</p> <p>Builds a new instance of a RepeatedTaskQueue for testing</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-factory/new/","title":"new - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueueFactory/new</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-factory/new/#new","title":"new","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun new(name: String, config: RepeatedTaskQueueConfig = RepeatedTaskQueueConfig(), pollingTimeout: Duration = Duration.ofMillis(250)): RepeatedTaskQueue</p> <p>Builds a new instance of a RepeatedTaskQueue</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-metrics/","title":"RepeatedTaskQueueMetrics - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueueMetrics</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-metrics/#repeatedtaskqueuemetrics","title":"RepeatedTaskQueueMetrics","text":"<p>[jvm]\\ @Singleton</p> <p>class RepeatedTaskQueueMetrics@Injectconstructor(metrics: Metrics)</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-metrics/-repeated-task-queue-metrics/","title":"RepeatedTaskQueueMetrics - Misk","text":"<p>//misk/misk.tasks/RepeatedTaskQueueMetrics/RepeatedTaskQueueMetrics</p>"},{"location":"0.x/misk/misk/misk.tasks/-repeated-task-queue-metrics/-repeated-task-queue-metrics/#repeatedtaskqueuemetrics","title":"RepeatedTaskQueueMetrics","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun RepeatedTaskQueueMetrics(metrics: Metrics)</p>"},{"location":"0.x/misk/misk/misk.tasks/-result/","title":"Result - Misk","text":"<p>//misk/misk.tasks/Result</p>"},{"location":"0.x/misk/misk/misk.tasks/-result/#result","title":"Result","text":"<p>[jvm]\\ data class Result(status: Status, nextDelay: Duration)</p>"},{"location":"0.x/misk/misk/misk.tasks/-result/#properties","title":"Properties","text":"Name Summary nextDelay [jvm]val nextDelay: Duration status [jvm]val status: Status"},{"location":"0.x/misk/misk/misk.tasks/-result/-result/","title":"Result - Misk","text":"<p>//misk/misk.tasks/Result/Result</p>"},{"location":"0.x/misk/misk/misk.tasks/-result/-result/#result","title":"Result","text":"<p>[jvm]\\ fun Result(status: Status, nextDelay: Duration)</p>"},{"location":"0.x/misk/misk/misk.tasks/-result/next-delay/","title":"nextDelay - Misk","text":"<p>//misk/misk.tasks/Result/nextDelay</p>"},{"location":"0.x/misk/misk/misk.tasks/-result/next-delay/#nextdelay","title":"nextDelay","text":"<p>[jvm]\\ val nextDelay: Duration</p>"},{"location":"0.x/misk/misk/misk.tasks/-result/status/","title":"status - Misk","text":"<p>//misk/misk.tasks/Result/status</p>"},{"location":"0.x/misk/misk/misk.tasks/-result/status/#status","title":"status","text":"<p>[jvm]\\ val status: Status</p>"},{"location":"0.x/misk/misk/misk.tasks/-status/","title":"Status - Misk","text":"<p>//misk/misk.tasks/Status</p>"},{"location":"0.x/misk/misk/misk.tasks/-status/#status","title":"Status","text":"<p>[jvm]\\ enum Status : Enum&lt;Status&gt;</p>"},{"location":"0.x/misk/misk/misk.tasks/-status/#entries","title":"Entries","text":"NO_RESCHEDULE [jvm]NO_RESCHEDULE(\u201cno_reschedule\u201d)The task should not be rescheduled FAILED [jvm]FAILED(\u201cfailed\u201d)The task resulted in an error NO_WORK [jvm]NO_WORK(\u201cno_work\u201d)The task had no work to complete OK [jvm]OK(\u201cok\u201d)The task completed successfully and processed work"},{"location":"0.x/misk/misk/misk.tasks/-status/#functions","title":"Functions","text":"Name Summary metricLabel [jvm]fun metricLabel(): StringThe metric label for the status. This is used instead of name() in case the code is refactored."},{"location":"0.x/misk/misk/misk.tasks/-status/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.tasks/-status/metric-label/","title":"metricLabel - Misk","text":"<p>//misk/misk.tasks/Status/metricLabel</p>"},{"location":"0.x/misk/misk/misk.tasks/-status/metric-label/#metriclabel","title":"metricLabel","text":"<p>[jvm]\\ fun metricLabel(): String</p> <p>The metric label for the status. This is used instead of name() in case the code is refactored.</p>"},{"location":"0.x/misk/misk/misk.tasks/-status/-f-a-i-l-e-d/","title":"FAILED - Misk","text":"<p>//misk/misk.tasks/Status/FAILED</p>"},{"location":"0.x/misk/misk/misk.tasks/-status/-f-a-i-l-e-d/#failed","title":"FAILED","text":"<p>[jvm]\\ FAILED(\u201cfailed\u201d)</p> <p>The task resulted in an error</p>"},{"location":"0.x/misk/misk/misk.tasks/-status/-f-a-i-l-e-d/#functions","title":"Functions","text":"Name Summary metricLabel [jvm]fun metricLabel(): StringThe metric label for the status. This is used instead of name() in case the code is refactored."},{"location":"0.x/misk/misk/misk.tasks/-status/-f-a-i-l-e-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.tasks/-status/-n-o_-r-e-s-c-h-e-d-u-l-e/","title":"NO_RESCHEDULE - Misk","text":"<p>//misk/misk.tasks/Status/NO_RESCHEDULE</p>"},{"location":"0.x/misk/misk/misk.tasks/-status/-n-o_-r-e-s-c-h-e-d-u-l-e/#no_reschedule","title":"NO_RESCHEDULE","text":"<p>[jvm]\\ NO_RESCHEDULE(\u201cno_reschedule\u201d)</p> <p>The task should not be rescheduled</p>"},{"location":"0.x/misk/misk/misk.tasks/-status/-n-o_-r-e-s-c-h-e-d-u-l-e/#functions","title":"Functions","text":"Name Summary metricLabel [jvm]fun metricLabel(): StringThe metric label for the status. This is used instead of name() in case the code is refactored."},{"location":"0.x/misk/misk/misk.tasks/-status/-n-o_-r-e-s-c-h-e-d-u-l-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.tasks/-status/-n-o_-w-o-r-k/","title":"NO_WORK - Misk","text":"<p>//misk/misk.tasks/Status/NO_WORK</p>"},{"location":"0.x/misk/misk/misk.tasks/-status/-n-o_-w-o-r-k/#no_work","title":"NO_WORK","text":"<p>[jvm]\\ NO_WORK(\u201cno_work\u201d)</p> <p>The task had no work to complete</p>"},{"location":"0.x/misk/misk/misk.tasks/-status/-n-o_-w-o-r-k/#functions","title":"Functions","text":"Name Summary metricLabel [jvm]fun metricLabel(): StringThe metric label for the status. This is used instead of name() in case the code is refactored."},{"location":"0.x/misk/misk/misk.tasks/-status/-n-o_-w-o-r-k/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.tasks/-status/-o-k/","title":"OK - Misk","text":"<p>//misk/misk.tasks/Status/OK</p>"},{"location":"0.x/misk/misk/misk.tasks/-status/-o-k/#ok","title":"OK","text":"<p>[jvm]\\ OK(\u201cok\u201d)</p> <p>The task completed successfully and processed work</p>"},{"location":"0.x/misk/misk/misk.tasks/-status/-o-k/#functions","title":"Functions","text":"Name Summary metricLabel [jvm]fun metricLabel(): StringThe metric label for the status. This is used instead of name() in case the code is refactored."},{"location":"0.x/misk/misk/misk.tasks/-status/-o-k/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.time/","title":"Package misk.time - Misk","text":"<p>//misk/misk.time</p>"},{"location":"0.x/misk/misk/misk.time/#package-misktime","title":"Package misk.time","text":""},{"location":"0.x/misk/misk/misk.time/#types","title":"Types","text":"Name Summary ForceUtcTimeZoneService [jvm]@Singletonclass ForceUtcTimeZoneService@Injectconstructor : AbstractIdleServiceForces the default JVM timezone to UTC."},{"location":"0.x/misk/misk/misk.time/#functions","title":"Functions","text":"Name Summary timed [jvm]fun &lt;T&gt; timed(f: () -&gt; T): Pair&lt;Duration, T&gt;fun &lt;T&gt; timed(ticker: Ticker, f: () -&gt; T): Pair&lt;Duration, T&gt;"},{"location":"0.x/misk/misk/misk.time/timed/","title":"timed - Misk","text":"<p>//misk/misk.time/timed</p>"},{"location":"0.x/misk/misk/misk.time/timed/#timed","title":"timed","text":"<p>[jvm]\\ fun &lt;T&gt; timed(f: () -&gt; T): Pair&lt;Duration, T&gt;</p> <p>fun &lt;T&gt; timed(ticker: Ticker, f: () -&gt; T): Pair&lt;Duration, T&gt;</p>"},{"location":"0.x/misk/misk/misk.time/-force-utc-time-zone-service/","title":"ForceUtcTimeZoneService - Misk","text":"<p>//misk/misk.time/ForceUtcTimeZoneService</p>"},{"location":"0.x/misk/misk/misk.time/-force-utc-time-zone-service/#forceutctimezoneservice","title":"ForceUtcTimeZoneService","text":"<p>[jvm]\\ @Singleton</p> <p>class ForceUtcTimeZoneService@Injectconstructor : AbstractIdleService</p> <p>Forces the default JVM timezone to UTC.</p> <p>This is useful when running Misk applications on machines that don\u2019t have UTC set as the system timezone (eg. development machines).</p>"},{"location":"0.x/misk/misk/misk.time/-force-utc-time-zone-service/#constructors","title":"Constructors","text":"ForceUtcTimeZoneService [jvm]@Injectfun ForceUtcTimeZoneService()"},{"location":"0.x/misk/misk/misk.time/-force-utc-time-zone-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk/misk/misk.time/-force-utc-time-zone-service/-force-utc-time-zone-service/","title":"ForceUtcTimeZoneService - Misk","text":"<p>//misk/misk.time/ForceUtcTimeZoneService/ForceUtcTimeZoneService</p>"},{"location":"0.x/misk/misk/misk.time/-force-utc-time-zone-service/-force-utc-time-zone-service/#forceutctimezoneservice","title":"ForceUtcTimeZoneService","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ForceUtcTimeZoneService()</p>"},{"location":"0.x/misk/misk/misk.web/","title":"Package misk.web - Misk","text":"<p>//misk/misk.web</p>"},{"location":"0.x/misk/misk/misk.web/#package-miskweb","title":"Package misk.web","text":""},{"location":"0.x/misk/misk/misk.web/#types","title":"Types","text":"Name Summary ConcurrencyLimiterConfig [jvm]data class ConcurrencyLimiterConfig@JvmOverloadsconstructor(disabled: Boolean, strategy: ConcurrencyLimiterStrategy, min_limit: Int?, max_concurrency: Int?, initial_limit: Int?, log_level: Level) CorsConfig [jvm]data class CorsConfig@JvmOverloadsconstructor(allowedOrigins: Array&lt;String&gt;, allowedMethods: Array&lt;String&gt;, allowedHeaders: Array&lt;String&gt;, allowCredentials: Boolean, preflightMaxAge: String, chainPreflight: Boolean, exposedHeaders: Array&lt;String&gt;) DispatchMechanism [jvm]enum DispatchMechanism : Enum&lt;DispatchMechanism&gt; Describes how an action is processed. This is like the HTTP method but has special cases for web sockets and gRPC. These protocols layer on top of HTTP methods and have different semantics. FeatureBinding [jvm]interface FeatureBindingBinds an HTTP call to a WebAction function. HttpCall [jvm]interface HttpCallA live HTTP call from a client for use by a chain of network interceptors. MiskWebFormBuilder [jvm]class MiskWebFormBuilderProvides a mapping from field name to Type definition given a KType. Useful for processes that want to have a schema definition of a type. For example: used by the WebActions admin dashboard tab to show a statically typed form containing request fields for developers to fill out. Currently only supports Wire request type messages; non-Wire messages return an empty mapping. MiskWebModule [jvm]class MiskWebModule@JvmOverloadsconstructor(config: WebConfig, jettyDependsOn: List&lt;Key&lt;out Service&gt;&gt;) : KAbstractModule NetworkChain [jvm]interface NetworkChain NetworkInterceptor [jvm]interface NetworkInterceptor PathPattern [jvm]class PathPattern(pattern: String, regex: Pattern, variableNames: List&lt;String&gt;, numRegexVariables: Int, numSegments: Int, matchesWildcardPath: Boolean) : Comparable&lt;PathPattern&gt; A path with placeholders for variables. Paths may be constant like /app/home/ or dynamic like /user/{username}. Variables are delimited by curly braces and may specify an optional regex like this: {username:[a-z]+}. If no regex is specified the variable is a sequence of non-\u2018/\u2019 characters. SocketAddress [jvm]sealed class SocketAddressInformation about the socket on which a HTTP call arrived. WebActionSeedDataTransformerFactory [jvm]interface WebActionSeedDataTransformerFactoryCreates a SeedDataTransformer for a specific web Action. WebConfig [jvm]data class WebConfig@JvmOverloadsconstructor(port: Int, idle_timeout: Long, health_port: Int, host: String?, ssl: WebSslConfig?, unix_domain_socket: WebUnixDomainSocketConfig?, http2: Boolean, selectors: Int?, acceptors: Int?, queue_size: Int?, jetty_max_thread_pool_size: Int, jetty_min_thread_pool_size: Int, jetty_max_thread_pool_queue_size: Int, enable_thread_pool_queue_metrics: Boolean, action_exception_log_level: ActionExceptionLogLevelConfig, jetty_max_concurrent_streams: Int?, close_connection_percent: Double, gzip: Boolean, minGzipSize: Int, cors: Map&lt;String, CorsConfig&gt;, concurrency_limiter_disabled: Boolean, concurrency_limiter_log_level: Level, concurrency_limiter: ConcurrencyLimiterConfig?, shutdown_sleep_ms: Int, http_request_header_size: Int?, http_header_cache_size: Int?, override_shutdown_idle_timeout: Long?, readiness_refresh_interval_ms: Int, readiness_max_age_ms: Int, use_virtual_threads: Boolean) : Config WebSslConfig [jvm]data class WebSslConfig@JvmOverloadsconstructor(port: Int, cert_store: CertStoreConfig, trust_store: TrustStoreConfig?, mutual_auth: WebSslConfig.MutualAuth, cipher_compatibility: WebSslConfig.CipherCompatibility) WebUnixDomainSocketConfig [jvm]data class WebUnixDomainSocketConfig@JvmOverloadsconstructor(path: String, h2c: Boolean?)"},{"location":"0.x/misk/misk/misk.web/#functions","title":"Functions","text":"Name Summary readUtf8 [jvm]fun Response&lt;*&gt;.readUtf8(): String toMisk [jvm]fun Response.toMisk(): Response&lt;ResponseBody&gt; toResponseBody [jvm]fun String.toResponseBody(): ResponseBodyReturns a ResponseBody that writes this out as UTF-8.[jvm]fun ByteString.toResponseBody(): ResponseBodyReturns a ResponseBody that writes this out as bytestring."},{"location":"0.x/misk/misk/misk.web/read-utf8/","title":"readUtf8 - Misk","text":"<p>//misk/misk.web/readUtf8</p>"},{"location":"0.x/misk/misk/misk.web/read-utf8/#readutf8","title":"readUtf8","text":"<p>[jvm]\\ fun Response&lt;*&gt;.readUtf8(): String</p>"},{"location":"0.x/misk/misk/misk.web/to-misk/","title":"toMisk - Misk","text":"<p>//misk/misk.web/toMisk</p>"},{"location":"0.x/misk/misk/misk.web/to-misk/#tomisk","title":"toMisk","text":"<p>[jvm]\\ fun Response.toMisk(): Response&lt;ResponseBody&gt;</p>"},{"location":"0.x/misk/misk/misk.web/to-response-body/","title":"toResponseBody - Misk","text":"<p>//misk/misk.web/toResponseBody</p>"},{"location":"0.x/misk/misk/misk.web/to-response-body/#toresponsebody","title":"toResponseBody","text":"<p>[jvm]\\ fun String.toResponseBody(): ResponseBody</p> <p>Returns a ResponseBody that writes this out as UTF-8.</p> <p>[jvm]\\ fun ByteString.toResponseBody(): ResponseBody</p> <p>Returns a ResponseBody that writes this out as bytestring.</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/","title":"ConcurrencyLimiterConfig - Misk","text":"<p>//misk/misk.web/ConcurrencyLimiterConfig</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/#concurrencylimiterconfig","title":"ConcurrencyLimiterConfig","text":"<p>[jvm]\\ data class ConcurrencyLimiterConfig@JvmOverloadsconstructor(disabled: Boolean, strategy: ConcurrencyLimiterStrategy, min_limit: Int?, max_concurrency: Int?, initial_limit: Int?, log_level: Level)</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/#properties","title":"Properties","text":"Name Summary disabled [jvm]val disabled: Boolean = falseIf true, disables automatic load shedding when degraded. initial_limit [jvm]val initial_limit: Int? = nullInitial limit used by the concurrency limiter. log_level [jvm]val log_level: LevelThe level of log when concurrency shedding. Same as concurrency_limiter_log_level default for backwards compatibility. max_concurrency [jvm]val max_concurrency: Int? = nullMaximum allowed concurrency limit providing an upper bound failsafe. min_limit [jvm]val min_limit: Int? = nullMinimum concurrency limit allowed. strategy [jvm]val strategy: ConcurrencyLimiterStrategyThe algorithm to use for determining concurrency limits."},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/-concurrency-limiter-config/","title":"ConcurrencyLimiterConfig - Misk","text":"<p>//misk/misk.web/ConcurrencyLimiterConfig/ConcurrencyLimiterConfig</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/-concurrency-limiter-config/#concurrencylimiterconfig","title":"ConcurrencyLimiterConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun ConcurrencyLimiterConfig(disabled: Boolean = false, strategy: ConcurrencyLimiterStrategy = ConcurrencyLimiterStrategy.GRADIENT2, min_limit: Int? = null, max_concurrency: Int? = null, initial_limit: Int? = null, log_level: Level = Level.ERROR)</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/disabled/","title":"disabled - Misk","text":"<p>//misk/misk.web/ConcurrencyLimiterConfig/disabled</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/disabled/#disabled","title":"disabled","text":"<p>[jvm]\\ val disabled: Boolean = false</p> <p>If true, disables automatic load shedding when degraded.</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/initial_limit/","title":"initial_limit - Misk","text":"<p>//misk/misk.web/ConcurrencyLimiterConfig/initial_limit</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/initial_limit/#initial_limit","title":"initial_limit","text":"<p>[jvm]\\ val initial_limit: Int? = null</p> <p>Initial limit used by the concurrency limiter.</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/log_level/","title":"log_level - Misk","text":"<p>//misk/misk.web/ConcurrencyLimiterConfig/log_level</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/log_level/#log_level","title":"log_level","text":"<p>[jvm]\\ val log_level: Level</p> <p>The level of log when concurrency shedding. Same as concurrency_limiter_log_level default for backwards compatibility.</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/max_concurrency/","title":"max_concurrency - Misk","text":"<p>//misk/misk.web/ConcurrencyLimiterConfig/max_concurrency</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/max_concurrency/#max_concurrency","title":"max_concurrency","text":"<p>[jvm]\\ val max_concurrency: Int? = null</p> <p>Maximum allowed concurrency limit providing an upper bound failsafe.</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/min_limit/","title":"min_limit - Misk","text":"<p>//misk/misk.web/ConcurrencyLimiterConfig/min_limit</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/min_limit/#min_limit","title":"min_limit","text":"<p>[jvm]\\ val min_limit: Int? = null</p> <p>Minimum concurrency limit allowed.</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/strategy/","title":"strategy - Misk","text":"<p>//misk/misk.web/ConcurrencyLimiterConfig/strategy</p>"},{"location":"0.x/misk/misk/misk.web/-concurrency-limiter-config/strategy/#strategy","title":"strategy","text":"<p>[jvm]\\ val strategy: ConcurrencyLimiterStrategy</p> <p>The algorithm to use for determining concurrency limits.</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/","title":"CorsConfig - Misk","text":"<p>//misk/misk.web/CorsConfig</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/#corsconfig","title":"CorsConfig","text":"<p>[jvm]\\ data class CorsConfig@JvmOverloadsconstructor(allowedOrigins: Array&lt;String&gt;, allowedMethods: Array&lt;String&gt;, allowedHeaders: Array&lt;String&gt;, allowCredentials: Boolean, preflightMaxAge: String, chainPreflight: Boolean, exposedHeaders: Array&lt;String&gt;)</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/#properties","title":"Properties","text":"Name Summary allowCredentials [jvm]val allowCredentials: Boolean = trueA boolean indicating if the resource allows requests with credentials. allowedHeaders [jvm]val allowedHeaders: Array&lt;String&gt;A comma separated list of HTTP headers that are allowed to be specified when accessing the resources. allowedMethods [jvm]val allowedMethods: Array&lt;String&gt;A comma separated list of HTTP methods that are allowed to be used when accessing the resources. allowedOrigins [jvm]val allowedOrigins: Array&lt;String&gt;A comma separated list of origins that are allowed to access the resources. chainPreflight [jvm]val chainPreflight: Boolean = trueTrue if preflight requests are chained to their target resource for normal handling (as an OPTION request). exposedHeaders [jvm]val exposedHeaders: Array&lt;String&gt;A comma separated list of HTTP headers that are allowed to be exposed on the client. preflightMaxAge [jvm]val preflightMaxAge: StringThe number of seconds that preflight requests can be cached by the client."},{"location":"0.x/misk/misk/misk.web/-cors-config/-cors-config/","title":"CorsConfig - Misk","text":"<p>//misk/misk.web/CorsConfig/CorsConfig</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/-cors-config/#corsconfig","title":"CorsConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun CorsConfig(allowedOrigins: Array&lt;String&gt; = arrayOf(\u201c*\u201d), allowedMethods: Array&lt;String&gt; = arrayOf(\u201cGET\u201d, \u201cPOST\u201d, \u201cHEAD\u201d), allowedHeaders: Array&lt;String&gt; = arrayOf(     \u201cX-Requested-With\u201d, \u201cContent-Type\u201d, \u201cAccept\u201d,     \u201cOrigin\u201d   ), allowCredentials: Boolean = true, preflightMaxAge: String = \u201c1800\u201d, chainPreflight: Boolean = true, exposedHeaders: Array&lt;String&gt; = arrayOf())</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/allow-credentials/","title":"allowCredentials - Misk","text":"<p>//misk/misk.web/CorsConfig/allowCredentials</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/allow-credentials/#allowcredentials","title":"allowCredentials","text":"<p>[jvm]\\ val allowCredentials: Boolean = true</p> <p>A boolean indicating if the resource allows requests with credentials.</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/allowed-headers/","title":"allowedHeaders - Misk","text":"<p>//misk/misk.web/CorsConfig/allowedHeaders</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/allowed-headers/#allowedheaders","title":"allowedHeaders","text":"<p>[jvm]\\ val allowedHeaders: Array&lt;String&gt;</p> <p>A comma separated list of HTTP headers that are allowed to be specified when accessing the resources.</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/allowed-methods/","title":"allowedMethods - Misk","text":"<p>//misk/misk.web/CorsConfig/allowedMethods</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/allowed-methods/#allowedmethods","title":"allowedMethods","text":"<p>[jvm]\\ val allowedMethods: Array&lt;String&gt;</p> <p>A comma separated list of HTTP methods that are allowed to be used when accessing the resources.</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/allowed-origins/","title":"allowedOrigins - Misk","text":"<p>//misk/misk.web/CorsConfig/allowedOrigins</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/allowed-origins/#allowedorigins","title":"allowedOrigins","text":"<p>[jvm]\\ val allowedOrigins: Array&lt;String&gt;</p> <p>A comma separated list of origins that are allowed to access the resources.</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/chain-preflight/","title":"chainPreflight - Misk","text":"<p>//misk/misk.web/CorsConfig/chainPreflight</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/chain-preflight/#chainpreflight","title":"chainPreflight","text":"<p>[jvm]\\ val chainPreflight: Boolean = true</p> <p>True if preflight requests are chained to their target resource for normal handling (as an OPTION request).</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/exposed-headers/","title":"exposedHeaders - Misk","text":"<p>//misk/misk.web/CorsConfig/exposedHeaders</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/exposed-headers/#exposedheaders","title":"exposedHeaders","text":"<p>[jvm]\\ val exposedHeaders: Array&lt;String&gt;</p> <p>A comma separated list of HTTP headers that are allowed to be exposed on the client.</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/preflight-max-age/","title":"preflightMaxAge - Misk","text":"<p>//misk/misk.web/CorsConfig/preflightMaxAge</p>"},{"location":"0.x/misk/misk/misk.web/-cors-config/preflight-max-age/#preflightmaxage","title":"preflightMaxAge","text":"<p>[jvm]\\ val preflightMaxAge: String</p> <p>The number of seconds that preflight requests can be cached by the client.</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/","title":"DispatchMechanism - Misk","text":"<p>//misk/misk.web/DispatchMechanism</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/#dispatchmechanism","title":"DispatchMechanism","text":"<p>[jvm]\\ enum DispatchMechanism : Enum&lt;DispatchMechanism&gt; </p> <p>Describes how an action is processed. This is like the HTTP method but has special cases for web sockets and gRPC. These protocols layer on top of HTTP methods and have different semantics.</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/#entries","title":"Entries","text":"WEBSOCKET [jvm]WEBSOCKET() GRPC [jvm]GRPC() DELETE [jvm]DELETE() PUT [jvm]PUT() PATCH [jvm]PATCH() POST [jvm]POST() GET [jvm]GET()"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/#properties","title":"Properties","text":"Name Summary method [jvm]val method: StringReturns the method used when a call entered the service. name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/method/","title":"method - Misk","text":"<p>//misk/misk.web/DispatchMechanism/method</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/method/#method","title":"method","text":"<p>[jvm]\\ val method: String</p> <p>Returns the method used when a call entered the service.</p> <p>This can be misleading: web sockets don\u2019t behave like normal GETs (they are upgraded), and GRPC calls don\u2019t behave like normal POSTS (they are duplex).</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-d-e-l-e-t-e/","title":"DELETE - Misk","text":"<p>//misk/misk.web/DispatchMechanism/DELETE</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-d-e-l-e-t-e/#delete","title":"DELETE","text":"<p>[jvm]\\ DELETE()</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-d-e-l-e-t-e/#properties","title":"Properties","text":"Name Summary method [jvm]val method: StringReturns the method used when a call entered the service. name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-g-e-t/","title":"GET - Misk","text":"<p>//misk/misk.web/DispatchMechanism/GET</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-g-e-t/#get","title":"GET","text":"<p>[jvm]\\ GET()</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-g-e-t/#properties","title":"Properties","text":"Name Summary method [jvm]val method: StringReturns the method used when a call entered the service. name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-g-r-p-c/","title":"GRPC - Misk","text":"<p>//misk/misk.web/DispatchMechanism/GRPC</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-g-r-p-c/#grpc","title":"GRPC","text":"<p>[jvm]\\ GRPC()</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-g-r-p-c/#properties","title":"Properties","text":"Name Summary method [jvm]val method: StringReturns the method used when a call entered the service. name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-p-a-t-c-h/","title":"PATCH - Misk","text":"<p>//misk/misk.web/DispatchMechanism/PATCH</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-p-a-t-c-h/#patch","title":"PATCH","text":"<p>[jvm]\\ PATCH()</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-p-a-t-c-h/#properties","title":"Properties","text":"Name Summary method [jvm]val method: StringReturns the method used when a call entered the service. name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-p-o-s-t/","title":"POST - Misk","text":"<p>//misk/misk.web/DispatchMechanism/POST</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-p-o-s-t/#post","title":"POST","text":"<p>[jvm]\\ POST()</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-p-o-s-t/#properties","title":"Properties","text":"Name Summary method [jvm]val method: StringReturns the method used when a call entered the service. name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-p-u-t/","title":"PUT - Misk","text":"<p>//misk/misk.web/DispatchMechanism/PUT</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-p-u-t/#put","title":"PUT","text":"<p>[jvm]\\ PUT()</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-p-u-t/#properties","title":"Properties","text":"Name Summary method [jvm]val method: StringReturns the method used when a call entered the service. name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-w-e-b-s-o-c-k-e-t/","title":"WEBSOCKET - Misk","text":"<p>//misk/misk.web/DispatchMechanism/WEBSOCKET</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-w-e-b-s-o-c-k-e-t/#websocket","title":"WEBSOCKET","text":"<p>[jvm]\\ WEBSOCKET()</p>"},{"location":"0.x/misk/misk/misk.web/-dispatch-mechanism/-w-e-b-s-o-c-k-e-t/#properties","title":"Properties","text":"Name Summary method [jvm]val method: StringReturns the method used when a call entered the service. name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-feature-binding/","title":"FeatureBinding - Misk","text":"<p>//misk/misk.web/FeatureBinding</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/#featurebinding","title":"FeatureBinding","text":"<p>[jvm]\\ interface FeatureBinding</p> <p>Binds an HTTP call to a WebAction function.</p> <p>Each web action has several features:</p> <ul> <li>An optional HTTP request body. Some HTTP methods (GET, HEAD) don\u2019t have a request body.</li> <li>An HTTP response body. Always present but possibly empty.</li> <li>Zero or more function parameters.</li> <li>An optional function return value. Functions that return Unit do not have a return value.</li> </ul> <p>Each bindings claims one or more features that it is responsible for. Some examples:</p> <ul> <li>A path parameter binding sets parameters 1 and 2 by parsing the request path.</li> <li>The request marshaller decodes the request body and sets it as @RequestBody parameter 3.</li> <li>The response marshaller takes the return value and encodes it as the response stream.</li> </ul> <p>A binding can claim multiple features. beforeCall is invoked if any features are claimed, and afterCall is only invoked if the return value is claimed.</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/#creating-bindings","title":"Creating Bindings","text":"<p>Each factory is executed once for each endpoint at service startup time. Factories should interrogate the function and claim whichever features that intend to bind. This happens early so Misk can validate that every feature is bound exactly once.</p> <p>Factories that return null must make no claims. If no claims are made then no binding is executed.</p> <p>Misk will validate that every feature is claimed exactly once. If a feature is unclaimed that is a fatal error and the service will not be started.</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/#binding-execution","title":"Binding Execution","text":"<p>Once a functions bindings have been created and validated, each binding will be executed once before and once after every each HTTP call. In this method it must bind the features it claimed by providing parameters, reading the request body, writing the response body, or taking the return value.</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/#types","title":"Types","text":"Name Summary Claimer [jvm]interface Claimer Factory [jvm]interface Factory Subject [jvm]interface Subject"},{"location":"0.x/misk/misk/misk.web/-feature-binding/#functions","title":"Functions","text":"Name Summary afterCall [jvm]open fun afterCall(subject: FeatureBinding.Subject) beforeCall [jvm]open fun beforeCall(subject: FeatureBinding.Subject)"},{"location":"0.x/misk/misk/misk.web/-feature-binding/after-call/","title":"afterCall - Misk","text":"<p>//misk/misk.web/FeatureBinding/afterCall</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/after-call/#aftercall","title":"afterCall","text":"<p>[jvm]\\ open fun afterCall(subject: FeatureBinding.Subject)</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/before-call/","title":"beforeCall - Misk","text":"<p>//misk/misk.web/FeatureBinding/beforeCall</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/before-call/#beforecall","title":"beforeCall","text":"<p>[jvm]\\ open fun beforeCall(subject: FeatureBinding.Subject)</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-claimer/","title":"Claimer - Misk","text":"<p>//misk/misk.web/FeatureBinding/Claimer</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-claimer/#claimer","title":"Claimer","text":"<p>[jvm]\\ interface Claimer</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-claimer/#functions","title":"Functions","text":"Name Summary claimParameter [jvm]abstract fun claimParameter(index: Int)abstract fun claimParameter(parameter: KParameter) claimRequestBody [jvm]abstract fun claimRequestBody() claimResponseBody [jvm]abstract fun claimResponseBody() claimReturnValue [jvm]abstract fun claimReturnValue()"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-claimer/claim-parameter/","title":"claimParameter - Misk","text":"<p>//misk/misk.web/FeatureBinding/Claimer/claimParameter</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-claimer/claim-parameter/#claimparameter","title":"claimParameter","text":"<p>[jvm]\\ abstract fun claimParameter(index: Int)</p> <p>abstract fun claimParameter(parameter: KParameter)</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-claimer/claim-request-body/","title":"claimRequestBody - Misk","text":"<p>//misk/misk.web/FeatureBinding/Claimer/claimRequestBody</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-claimer/claim-request-body/#claimrequestbody","title":"claimRequestBody","text":"<p>[jvm]\\ abstract fun claimRequestBody()</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-claimer/claim-response-body/","title":"claimResponseBody - Misk","text":"<p>//misk/misk.web/FeatureBinding/Claimer/claimResponseBody</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-claimer/claim-response-body/#claimresponsebody","title":"claimResponseBody","text":"<p>[jvm]\\ abstract fun claimResponseBody()</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-claimer/claim-return-value/","title":"claimReturnValue - Misk","text":"<p>//misk/misk.web/FeatureBinding/Claimer/claimReturnValue</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-claimer/claim-return-value/#claimreturnvalue","title":"claimReturnValue","text":"<p>[jvm]\\ abstract fun claimReturnValue()</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web/FeatureBinding/Factory</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ interface Factory</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]abstract fun create(action: Action, pathPattern: PathPattern, claimer: FeatureBinding.Claimer): FeatureBinding?"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web/FeatureBinding/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-factory/create/#create","title":"create","text":"<p>[jvm]\\ abstract fun create(action: Action, pathPattern: PathPattern, claimer: FeatureBinding.Claimer): FeatureBinding?</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/","title":"Subject - Misk","text":"<p>//misk/misk.web/FeatureBinding/Subject</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/#subject","title":"Subject","text":"<p>[jvm]\\ interface Subject</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/#functions","title":"Functions","text":"Name Summary setParameter [jvm]abstract fun setParameter(index: Int, value: Any?)abstract fun setParameter(parameter: KParameter, value: Any?) takeRequestBody [jvm]abstract fun takeRequestBody(): BufferedSource takeResponseBody [jvm]abstract fun takeResponseBody(): BufferedSink takeReturnValue [jvm]abstract fun takeReturnValue(): Any?"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/#properties","title":"Properties","text":"Name Summary httpCall [jvm]abstract val httpCall: HttpCall pathMatcher [jvm]abstract val pathMatcher: Matcher webAction [jvm]abstract val webAction: WebAction"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/http-call/","title":"httpCall - Misk","text":"<p>//misk/misk.web/FeatureBinding/Subject/httpCall</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/http-call/#httpcall","title":"httpCall","text":"<p>[jvm]\\ abstract val httpCall: HttpCall</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/path-matcher/","title":"pathMatcher - Misk","text":"<p>//misk/misk.web/FeatureBinding/Subject/pathMatcher</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/path-matcher/#pathmatcher","title":"pathMatcher","text":"<p>[jvm]\\ abstract val pathMatcher: Matcher</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/set-parameter/","title":"setParameter - Misk","text":"<p>//misk/misk.web/FeatureBinding/Subject/setParameter</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/set-parameter/#setparameter","title":"setParameter","text":"<p>[jvm]\\ abstract fun setParameter(parameter: KParameter, value: Any?)</p> <p>abstract fun setParameter(index: Int, value: Any?)</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/take-request-body/","title":"takeRequestBody - Misk","text":"<p>//misk/misk.web/FeatureBinding/Subject/takeRequestBody</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/take-request-body/#takerequestbody","title":"takeRequestBody","text":"<p>[jvm]\\ abstract fun takeRequestBody(): BufferedSource</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/take-response-body/","title":"takeResponseBody - Misk","text":"<p>//misk/misk.web/FeatureBinding/Subject/takeResponseBody</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/take-response-body/#takeresponsebody","title":"takeResponseBody","text":"<p>[jvm]\\ abstract fun takeResponseBody(): BufferedSink</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/take-return-value/","title":"takeReturnValue - Misk","text":"<p>//misk/misk.web/FeatureBinding/Subject/takeReturnValue</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/take-return-value/#takereturnvalue","title":"takeReturnValue","text":"<p>[jvm]\\ abstract fun takeReturnValue(): Any?</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/web-action/","title":"webAction - Misk","text":"<p>//misk/misk.web/FeatureBinding/Subject/webAction</p>"},{"location":"0.x/misk/misk/misk.web/-feature-binding/-subject/web-action/#webaction","title":"webAction","text":"<p>[jvm]\\ abstract val webAction: WebAction</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/","title":"HttpCall - Misk","text":"<p>//misk/misk.web/HttpCall</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/#httpcall","title":"HttpCall","text":"<p>[jvm]\\ interface HttpCall</p> <p>A live HTTP call from a client for use by a chain of network interceptors.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/#functions","title":"Functions","text":"Name Summary accepts [jvm]open fun accepts(): List&lt;MediaRange&gt; addResponseHeaders [jvm]abstract fun addResponseHeaders(headers: Headers) asOkHttpRequest [jvm]open fun asOkHttpRequest(): Request computeRequestHeader [jvm]open fun computeRequestHeader(name: String, computeFn: (String?) -&gt; Pair&lt;String, String&gt;?)Set or replaces an existing HTTP request header. contentType [jvm]open fun contentType(): MediaType? initWebSocketListener [jvm]abstract fun initWebSocketListener(webSocketListener: WebSocketListener)Set the call\u2019s web socket listener. This should only be called once, and only for web socket calls. putRequestBody [jvm]abstract fun putRequestBody(requestBody: BufferedSource)Changes this call so that the next call to takeRequestBody returns requestBody. Use this to apply filters such as decompression or metrics. putResponseBody [jvm]abstract fun putResponseBody(responseBody: BufferedSink)Changes this call so that the next call to takeResponseBody returns responseBody. Use this to apply filters such as decompression or metrics. putWebSocket [jvm]abstract fun putWebSocket(webSocket: WebSocket)Changes this call so that the next call to takeWebSocket returns webSocket. Use this to apply filters such as decompression or metrics. requireTrailers [jvm]abstract fun requireTrailers()Call this before the response body is written to make sure it is encoded in a way that\u2019ll permit trailers to be sent. This will do chunked encoding for HTTP/1. For HTTP/2 trailers are always permitted. It is an error to call this for web socket calls. setResponseHeader [jvm]abstract fun setResponseHeader(name: String, value: String) setResponseTrailer [jvm]abstract fun setResponseTrailer(name: String, value: String)Add a trailer. This requires that requireTrailers was called before the response body is written. setStatusCodes [jvm]abstract fun setStatusCodes(statusCode: Int, networkStatusCode: Int)Set both the raw network status code and the meaningful status code that\u2019s recorded in metrics takeRequestBody [jvm]abstract fun takeRequestBody(): BufferedSource?Claim ownership of the request body stream. Returns null if the stream has already been claimed. Callers should read the HTTP request body or call putRequestBody to create a new chain with a request body that is unclaimed. takeResponseBody [jvm]abstract fun takeResponseBody(): BufferedSink?Claim ownership of the response body stream. Returns null if the stream has already been claimed. Callers should write the HTTP response body or call putRequestBody to create a new chain with a response body that is unclaimed. takeWebSocket [jvm]abstract fun takeWebSocket(): WebSocket?Claim ownership of the call\u2019s web socket."},{"location":"0.x/misk/misk/misk.web/-http-call/#properties","title":"Properties","text":"Name Summary cookies [jvm]abstract var cookies: List&lt;Cookie&gt;Cookies derived from request\u2019s \u201cCookie\u201d header, if any dispatchMechanism [jvm]abstract val dispatchMechanism: DispatchMechanism linkLayerLocalAddress [jvm]abstract val linkLayerLocalAddress: SocketAddress? networkStatusCode [jvm]abstract val networkStatusCode: IntThe HTTP status code actually sent over the network. For gRPC, this is always 200, even for errors, per the spec. requestHeaders [jvm]abstract var requestHeaders: HeadersHTTP request headers that may be modified via interception. responseHeaders [jvm]abstract val responseHeaders: Headers statusCode [jvm]abstract var statusCode: IntMeaningful HTTP status about what actually happened. Not sent over the wire in the case of gRPC, which always returns HTTP 200 even for errors. url [jvm]abstract val url: HttpUrlImmutable information about the incoming HTTP request."},{"location":"0.x/misk/misk/misk.web/-http-call/accepts/","title":"accepts - Misk","text":"<p>//misk/misk.web/HttpCall/accepts</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/accepts/#accepts","title":"accepts","text":"<p>[jvm]\\ open fun accepts(): List&lt;MediaRange&gt;</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/add-response-headers/","title":"addResponseHeaders - Misk","text":"<p>//misk/misk.web/HttpCall/addResponseHeaders</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/add-response-headers/#addresponseheaders","title":"addResponseHeaders","text":"<p>[jvm]\\ abstract fun addResponseHeaders(headers: Headers)</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/as-ok-http-request/","title":"asOkHttpRequest - Misk","text":"<p>//misk/misk.web/HttpCall/asOkHttpRequest</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/as-ok-http-request/#asokhttprequest","title":"asOkHttpRequest","text":"<p>[jvm]\\ open fun asOkHttpRequest(): Request</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/compute-request-header/","title":"computeRequestHeader - Misk","text":"<p>//misk/misk.web/HttpCall/computeRequestHeader</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/compute-request-header/#computerequestheader","title":"computeRequestHeader","text":"<p>[jvm]\\ open fun computeRequestHeader(name: String, computeFn: (String?) -&gt; Pair&lt;String, String&gt;?)</p> <p>Set or replaces an existing HTTP request header.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/content-type/","title":"contentType - Misk","text":"<p>//misk/misk.web/HttpCall/contentType</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/content-type/#contenttype","title":"contentType","text":"<p>[jvm]\\ open fun contentType(): MediaType?</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/cookies/","title":"cookies - Misk","text":"<p>//misk/misk.web/HttpCall/cookies</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/cookies/#cookies","title":"cookies","text":"<p>[jvm]\\ abstract var cookies: List&lt;Cookie&gt;</p> <p>Cookies derived from request\u2019s \u201cCookie\u201d header, if any</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/dispatch-mechanism/","title":"dispatchMechanism - Misk","text":"<p>//misk/misk.web/HttpCall/dispatchMechanism</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/dispatch-mechanism/#dispatchmechanism","title":"dispatchMechanism","text":"<p>[jvm]\\ abstract val dispatchMechanism: DispatchMechanism</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/init-web-socket-listener/","title":"initWebSocketListener - Misk","text":"<p>//misk/misk.web/HttpCall/initWebSocketListener</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/init-web-socket-listener/#initwebsocketlistener","title":"initWebSocketListener","text":"<p>[jvm]\\ abstract fun initWebSocketListener(webSocketListener: WebSocketListener)</p> <p>Set the call\u2019s web socket listener. This should only be called once, and only for web socket calls.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/link-layer-local-address/","title":"linkLayerLocalAddress - Misk","text":"<p>//misk/misk.web/HttpCall/linkLayerLocalAddress</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/link-layer-local-address/#linklayerlocaladdress","title":"linkLayerLocalAddress","text":"<p>[jvm]\\ abstract val linkLayerLocalAddress: SocketAddress?</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/network-status-code/","title":"networkStatusCode - Misk","text":"<p>//misk/misk.web/HttpCall/networkStatusCode</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/network-status-code/#networkstatuscode","title":"networkStatusCode","text":"<p>[jvm]\\ abstract val networkStatusCode: Int</p> <p>The HTTP status code actually sent over the network. For gRPC, this is always 200, even for errors, per the spec.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/put-request-body/","title":"putRequestBody - Misk","text":"<p>//misk/misk.web/HttpCall/putRequestBody</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/put-request-body/#putrequestbody","title":"putRequestBody","text":"<p>[jvm]\\ abstract fun putRequestBody(requestBody: BufferedSource)</p> <p>Changes this call so that the next call to takeRequestBody returns requestBody. Use this to apply filters such as decompression or metrics.</p> <p>This may only be called on calls whose request body has been taken. Otherwise that would be leaked.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/put-response-body/","title":"putResponseBody - Misk","text":"<p>//misk/misk.web/HttpCall/putResponseBody</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/put-response-body/#putresponsebody","title":"putResponseBody","text":"<p>[jvm]\\ abstract fun putResponseBody(responseBody: BufferedSink)</p> <p>Changes this call so that the next call to takeResponseBody returns responseBody. Use this to apply filters such as decompression or metrics.</p> <p>This may only be called on calls whose response body has been taken. Otherwise that would be leaked.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/put-web-socket/","title":"putWebSocket - Misk","text":"<p>//misk/misk.web/HttpCall/putWebSocket</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/put-web-socket/#putwebsocket","title":"putWebSocket","text":"<p>[jvm]\\ abstract fun putWebSocket(webSocket: WebSocket)</p> <p>Changes this call so that the next call to takeWebSocket returns webSocket. Use this to apply filters such as decompression or metrics.</p> <p>This may only be called on calls whose web socket has been taken. Otherwise that would be leaked.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/request-headers/","title":"requestHeaders - Misk","text":"<p>//misk/misk.web/HttpCall/requestHeaders</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/request-headers/#requestheaders","title":"requestHeaders","text":"<p>[jvm]\\ abstract var requestHeaders: Headers</p> <p>HTTP request headers that may be modified via interception.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/require-trailers/","title":"requireTrailers - Misk","text":"<p>//misk/misk.web/HttpCall/requireTrailers</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/require-trailers/#requiretrailers","title":"requireTrailers","text":"<p>[jvm]\\ abstract fun requireTrailers()</p> <p>Call this before the response body is written to make sure it is encoded in a way that\u2019ll permit trailers to be sent. This will do chunked encoding for HTTP/1. For HTTP/2 trailers are always permitted. It is an error to call this for web socket calls.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/response-headers/","title":"responseHeaders - Misk","text":"<p>//misk/misk.web/HttpCall/responseHeaders</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/response-headers/#responseheaders","title":"responseHeaders","text":"<p>[jvm]\\ abstract val responseHeaders: Headers</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/set-response-header/","title":"setResponseHeader - Misk","text":"<p>//misk/misk.web/HttpCall/setResponseHeader</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/set-response-header/#setresponseheader","title":"setResponseHeader","text":"<p>[jvm]\\ abstract fun setResponseHeader(name: String, value: String)</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/set-response-trailer/","title":"setResponseTrailer - Misk","text":"<p>//misk/misk.web/HttpCall/setResponseTrailer</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/set-response-trailer/#setresponsetrailer","title":"setResponseTrailer","text":"<p>[jvm]\\ abstract fun setResponseTrailer(name: String, value: String)</p> <p>Add a trailer. This requires that requireTrailers was called before the response body is written.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/set-status-codes/","title":"setStatusCodes - Misk","text":"<p>//misk/misk.web/HttpCall/setStatusCodes</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/set-status-codes/#setstatuscodes","title":"setStatusCodes","text":"<p>[jvm]\\ abstract fun setStatusCodes(statusCode: Int, networkStatusCode: Int)</p> <p>Set both the raw network status code and the meaningful status code that\u2019s recorded in metrics</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/status-code/","title":"statusCode - Misk","text":"<p>//misk/misk.web/HttpCall/statusCode</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/status-code/#statuscode","title":"statusCode","text":"<p>[jvm]\\ abstract var statusCode: Int</p> <p>Meaningful HTTP status about what actually happened. Not sent over the wire in the case of gRPC, which always returns HTTP 200 even for errors.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/take-request-body/","title":"takeRequestBody - Misk","text":"<p>//misk/misk.web/HttpCall/takeRequestBody</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/take-request-body/#takerequestbody","title":"takeRequestBody","text":"<p>[jvm]\\ abstract fun takeRequestBody(): BufferedSource?</p> <p>Claim ownership of the request body stream. Returns null if the stream has already been claimed. Callers should read the HTTP request body or call putRequestBody to create a new chain with a request body that is unclaimed.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/take-response-body/","title":"takeResponseBody - Misk","text":"<p>//misk/misk.web/HttpCall/takeResponseBody</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/take-response-body/#takeresponsebody","title":"takeResponseBody","text":"<p>[jvm]\\ abstract fun takeResponseBody(): BufferedSink?</p> <p>Claim ownership of the response body stream. Returns null if the stream has already been claimed. Callers should write the HTTP response body or call putRequestBody to create a new chain with a response body that is unclaimed.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/take-web-socket/","title":"takeWebSocket - Misk","text":"<p>//misk/misk.web/HttpCall/takeWebSocket</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/take-web-socket/#takewebsocket","title":"takeWebSocket","text":"<p>[jvm]\\ abstract fun takeWebSocket(): WebSocket?</p> <p>Claim ownership of the call\u2019s web socket.</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/url/","title":"url - Misk","text":"<p>//misk/misk.web/HttpCall/url</p>"},{"location":"0.x/misk/misk/misk.web/-http-call/url/#url","title":"url","text":"<p>[jvm]\\ abstract val url: HttpUrl</p> <p>Immutable information about the incoming HTTP request.</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/","title":"MiskWebFormBuilder - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/#miskwebformbuilder","title":"MiskWebFormBuilder","text":"<p>[jvm]\\ class MiskWebFormBuilder</p> <p>Provides a mapping from field name to Type definition given a KType. Useful for processes that want to have a schema definition of a type. For example: used by the WebActions admin dashboard tab to show a statically typed form containing request fields for developers to fill out. Currently only supports Wire request type messages; non-Wire messages return an empty mapping.</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/#constructors","title":"Constructors","text":"MiskWebFormBuilder [jvm]fun MiskWebFormBuilder()"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion Field [jvm]data class Field(name: String, type: String, repeated: Boolean)Akin to a Proto field, a field can be of primitive or another Message type, and can be repeated to become a list. Type [jvm]data class Type(fields: List&lt;MiskWebFormBuilder.Field&gt;)Akin to a Proto Message, a Type has a list of fields"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/#functions","title":"Functions","text":"Name Summary calculateTypes [jvm]fun calculateTypes(requestType: KType?): Map&lt;String, MiskWebFormBuilder.Type&gt;"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-misk-web-form-builder/","title":"MiskWebFormBuilder - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/MiskWebFormBuilder</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-misk-web-form-builder/#miskwebformbuilder","title":"MiskWebFormBuilder","text":"<p>[jvm]\\ fun MiskWebFormBuilder()</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/calculate-types/","title":"calculateTypes - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/calculateTypes</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/calculate-types/#calculatetypes","title":"calculateTypes","text":"<p>[jvm]\\ fun calculateTypes(requestType: KType?): Map&lt;String, MiskWebFormBuilder.Type&gt;</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/Companion</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-companion/#functions","title":"Functions","text":"Name Summary createEnumField [jvm]fun createEnumField(fieldClass: Class&lt;*&gt;, fieldName: String, repeated: Boolean): MiskWebFormBuilder.FieldAdds a field with a type that has the class name and enum values embedded Example: \u201cEnum\u201d createSyntheticEnumField [jvm]fun createSyntheticEnumField(fieldClassName: String, fieldName: String, enumValues: List&lt;String&gt;, repeated: Boolean): MiskWebFormBuilder.FieldAdds a field with a type that has the class name and enum values embedded Example: \u201cEnum\u201d maybeCreatePrimitiveField [jvm]fun maybeCreatePrimitiveField(fieldClass: Class&lt;*&gt;, fieldName: String, repeated: Boolean): MiskWebFormBuilder.Field?Create misk-web Fields for primitives and enum types. Returns null if the type cannot be mapped."},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-companion/create-enum-field/","title":"createEnumField - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/Companion/createEnumField</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-companion/create-enum-field/#createenumfield","title":"createEnumField","text":"<p>[jvm]\\ fun createEnumField(fieldClass: Class&lt;*&gt;, fieldName: String, repeated: Boolean): MiskWebFormBuilder.Field</p> <p>Adds a field with a type that has the class name and enum values embedded Example: \u201cEnum\u201d</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-companion/create-synthetic-enum-field/","title":"createSyntheticEnumField - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/Companion/createSyntheticEnumField</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-companion/create-synthetic-enum-field/#createsyntheticenumfield","title":"createSyntheticEnumField","text":"<p>[jvm]\\ fun createSyntheticEnumField(fieldClassName: String, fieldName: String, enumValues: List&lt;String&gt;, repeated: Boolean): MiskWebFormBuilder.Field</p> <p>Adds a field with a type that has the class name and enum values embedded Example: \u201cEnum\u201d</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-companion/maybe-create-primitive-field/","title":"maybeCreatePrimitiveField - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/Companion/maybeCreatePrimitiveField</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-companion/maybe-create-primitive-field/#maybecreateprimitivefield","title":"maybeCreatePrimitiveField","text":"<p>[jvm]\\ fun maybeCreatePrimitiveField(fieldClass: Class&lt;*&gt;, fieldName: String, repeated: Boolean): MiskWebFormBuilder.Field?</p> <p>Create misk-web Fields for primitives and enum types. Returns null if the type cannot be mapped.</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-field/","title":"Field - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/Field</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-field/#field","title":"Field","text":"<p>[jvm]\\ data class Field(name: String, type: String, repeated: Boolean)</p> <p>Akin to a Proto field, a field can be of primitive or another Message type, and can be repeated to become a list.</p> <p>Enums are encoded to contain their values within their Type definition as opposed to a unique Type.</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-field/#constructors","title":"Constructors","text":"Field [jvm]fun Field(name: String, type: String, repeated: Boolean)"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-field/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String repeated [jvm]val repeated: Boolean type [jvm]val type: String"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-field/-field/","title":"Field - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/Field/Field</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-field/-field/#field","title":"Field","text":"<p>[jvm]\\ fun Field(name: String, type: String, repeated: Boolean)</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-field/name/","title":"name - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/Field/name</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-field/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-field/repeated/","title":"repeated - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/Field/repeated</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-field/repeated/#repeated","title":"repeated","text":"<p>[jvm]\\ val repeated: Boolean</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-field/type/","title":"type - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/Field/type</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-field/type/#type","title":"type","text":"<p>[jvm]\\ val type: String</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-type/","title":"Type - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/Type</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-type/#type","title":"Type","text":"<p>[jvm]\\ data class Type(fields: List&lt;MiskWebFormBuilder.Field&gt;)</p> <p>Akin to a Proto Message, a Type has a list of fields</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-type/#constructors","title":"Constructors","text":"Type [jvm]fun Type(fields: List&lt;MiskWebFormBuilder.Field&gt;)"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-type/#properties","title":"Properties","text":"Name Summary fields [jvm]val fields: List&lt;MiskWebFormBuilder.Field&gt;"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-type/-type/","title":"Type - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/Type/Type</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-type/-type/#type","title":"Type","text":"<p>[jvm]\\ fun Type(fields: List&lt;MiskWebFormBuilder.Field&gt;)</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-type/fields/","title":"fields - Misk","text":"<p>//misk/misk.web/MiskWebFormBuilder/Type/fields</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-form-builder/-type/fields/#fields","title":"fields","text":"<p>[jvm]\\ val fields: List&lt;MiskWebFormBuilder.Field&gt;</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/","title":"MiskWebModule - Misk","text":"<p>//misk/misk.web/MiskWebModule</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/#miskwebmodule","title":"MiskWebModule","text":"<p>[jvm]\\ class MiskWebModule@JvmOverloadsconstructor(config: WebConfig, jettyDependsOn: List&lt;Key&lt;out Service&gt;&gt;) : KAbstractModule</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/#types","title":"Types","text":"Name Summary MiskCallerProvider [jvm]class MiskCallerProvider@Injectconstructor(authenticators: List&lt;MiskCallerAuthenticator&gt;) : ActionScopedProvider&lt;MiskCaller?&gt;"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideGzipHandler [jvm]@Provides@Singletonfun provideGzipHandler(): GzipHandler provideStatisticsHandler [jvm]@Provides@Singletonfun provideStatisticsHandler(): StatisticsHandler readinessRefreshQueue [jvm]@Provides@Singletonfun readinessRefreshQueue(queueFactory: RepeatedTaskQueueFactory, deployment: Deployment): RepeatedTaskQueue requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/-misk-web-module/","title":"MiskWebModule - Misk","text":"<p>//misk/misk.web/MiskWebModule/MiskWebModule</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/-misk-web-module/#miskwebmodule","title":"MiskWebModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun MiskWebModule(config: WebConfig, jettyDependsOn: List&lt;Key&lt;out Service&gt;&gt; = emptyList())</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/provide-gzip-handler/","title":"provideGzipHandler - Misk","text":"<p>//misk/misk.web/MiskWebModule/provideGzipHandler</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/provide-gzip-handler/#providegziphandler","title":"provideGzipHandler","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideGzipHandler(): GzipHandler</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/provide-statistics-handler/","title":"provideStatisticsHandler - Misk","text":"<p>//misk/misk.web/MiskWebModule/provideStatisticsHandler</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/provide-statistics-handler/#providestatisticshandler","title":"provideStatisticsHandler","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideStatisticsHandler(): StatisticsHandler</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/readiness-refresh-queue/","title":"readinessRefreshQueue - Misk","text":"<p>//misk/misk.web/MiskWebModule/readinessRefreshQueue</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/readiness-refresh-queue/#readinessrefreshqueue","title":"readinessRefreshQueue","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun readinessRefreshQueue(queueFactory: RepeatedTaskQueueFactory, deployment: Deployment): RepeatedTaskQueue</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/-misk-caller-provider/","title":"MiskCallerProvider - Misk","text":"<p>//misk/misk.web/MiskWebModule/MiskCallerProvider</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/-misk-caller-provider/#miskcallerprovider","title":"MiskCallerProvider","text":"<p>[jvm]\\ class MiskCallerProvider@Injectconstructor(authenticators: List&lt;MiskCallerAuthenticator&gt;) : ActionScopedProvider&lt;MiskCaller?&gt;</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/-misk-caller-provider/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): MiskCaller?"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/-misk-caller-provider/-misk-caller-provider/","title":"MiskCallerProvider - Misk","text":"<p>//misk/misk.web/MiskWebModule/MiskCallerProvider/MiskCallerProvider</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/-misk-caller-provider/-misk-caller-provider/#miskcallerprovider","title":"MiskCallerProvider","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun MiskCallerProvider(authenticators: List&lt;MiskCallerAuthenticator&gt;)</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/-misk-caller-provider/get/","title":"get - Misk","text":"<p>//misk/misk.web/MiskWebModule/MiskCallerProvider/get</p>"},{"location":"0.x/misk/misk/misk.web/-misk-web-module/-misk-caller-provider/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): MiskCaller?</p>"},{"location":"0.x/misk/misk/misk.web/-network-chain/","title":"NetworkChain - Misk","text":"<p>//misk/misk.web/NetworkChain</p>"},{"location":"0.x/misk/misk/misk.web/-network-chain/#networkchain","title":"NetworkChain","text":"<p>[jvm]\\ interface NetworkChain</p>"},{"location":"0.x/misk/misk/misk.web/-network-chain/#functions","title":"Functions","text":"Name Summary proceed [jvm]abstract fun proceed(httpCall: HttpCall)Invoke the next call in the interceptor chain."},{"location":"0.x/misk/misk/misk.web/-network-chain/#properties","title":"Properties","text":"Name Summary action [jvm]abstract val action: ActionThe action for this call. httpCall [jvm]abstract val httpCall: HttpCallThe live HTTP call. You can access hot streams on this call. webAction [jvm]abstract val webAction: WebActionThe action instance this call is routing to."},{"location":"0.x/misk/misk/misk.web/-network-chain/action/","title":"action - Misk","text":"<p>//misk/misk.web/NetworkChain/action</p>"},{"location":"0.x/misk/misk/misk.web/-network-chain/action/#action","title":"action","text":"<p>[jvm]\\ abstract val action: Action</p> <p>The action for this call.</p>"},{"location":"0.x/misk/misk/misk.web/-network-chain/http-call/","title":"httpCall - Misk","text":"<p>//misk/misk.web/NetworkChain/httpCall</p>"},{"location":"0.x/misk/misk/misk.web/-network-chain/http-call/#httpcall","title":"httpCall","text":"<p>[jvm]\\ abstract val httpCall: HttpCall</p> <p>The live HTTP call. You can access hot streams on this call.</p>"},{"location":"0.x/misk/misk/misk.web/-network-chain/proceed/","title":"proceed - Misk","text":"<p>//misk/misk.web/NetworkChain/proceed</p>"},{"location":"0.x/misk/misk/misk.web/-network-chain/proceed/#proceed","title":"proceed","text":"<p>[jvm]\\ abstract fun proceed(httpCall: HttpCall)</p> <p>Invoke the next call in the interceptor chain.</p>"},{"location":"0.x/misk/misk/misk.web/-network-chain/web-action/","title":"webAction - Misk","text":"<p>//misk/misk.web/NetworkChain/webAction</p>"},{"location":"0.x/misk/misk/misk.web/-network-chain/web-action/#webaction","title":"webAction","text":"<p>[jvm]\\ abstract val webAction: WebAction</p> <p>The action instance this call is routing to.</p>"},{"location":"0.x/misk/misk/misk.web/-network-interceptor/","title":"NetworkInterceptor - Misk","text":"<p>//misk/misk.web/NetworkInterceptor</p>"},{"location":"0.x/misk/misk/misk.web/-network-interceptor/#networkinterceptor","title":"NetworkInterceptor","text":"<p>[jvm]\\ interface NetworkInterceptor</p>"},{"location":"0.x/misk/misk/misk.web/-network-interceptor/#types","title":"Types","text":"Name Summary Factory [jvm]interface Factory"},{"location":"0.x/misk/misk/misk.web/-network-interceptor/#functions","title":"Functions","text":"Name Summary intercept [jvm]abstract fun intercept(chain: NetworkChain)"},{"location":"0.x/misk/misk/misk.web/-network-interceptor/#inheritors","title":"Inheritors","text":"Name ContentSecurityPolicyInterceptor ExceptionHandlingInterceptor RebalancingInterceptor RequestLoggingInterceptor WideOpenDevelopmentInterceptor"},{"location":"0.x/misk/misk/misk.web/-network-interceptor/intercept/","title":"intercept - Misk","text":"<p>//misk/misk.web/NetworkInterceptor/intercept</p>"},{"location":"0.x/misk/misk/misk.web/-network-interceptor/intercept/#intercept","title":"intercept","text":"<p>[jvm]\\ abstract fun intercept(chain: NetworkChain)</p>"},{"location":"0.x/misk/misk/misk.web/-network-interceptor/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web/NetworkInterceptor/Factory</p>"},{"location":"0.x/misk/misk/misk.web/-network-interceptor/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ interface Factory</p>"},{"location":"0.x/misk/misk/misk.web/-network-interceptor/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]abstract fun create(action: Action): NetworkInterceptor?"},{"location":"0.x/misk/misk/misk.web/-network-interceptor/-factory/#inheritors","title":"Inheritors","text":"Name Factory Factory InternalErrorInterceptorFactory Factory Factory WideOpenDevelopmentInterceptorFactory"},{"location":"0.x/misk/misk/misk.web/-network-interceptor/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web/NetworkInterceptor/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web/-network-interceptor/-factory/create/#create","title":"create","text":"<p>[jvm]\\ abstract fun create(action: Action): NetworkInterceptor?</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/","title":"PathPattern - Misk","text":"<p>//misk/misk.web/PathPattern</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/#pathpattern","title":"PathPattern","text":"<p>[jvm]\\ class PathPattern(pattern: String, regex: Pattern, variableNames: List&lt;String&gt;, numRegexVariables: Int, numSegments: Int, matchesWildcardPath: Boolean) : Comparable&lt;PathPattern&gt; </p> <p>A path with placeholders for variables. Paths may be constant like /app/home/ or dynamic like /user/{username}. Variables are delimited by curly braces and may specify an optional regex like this: {username:[a-z]+}. If no regex is specified the variable is a sequence of non-\u2018/\u2019 characters.</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/#constructors","title":"Constructors","text":"PathPattern [jvm]fun PathPattern(pattern: String, regex: Pattern, variableNames: List&lt;String&gt;, numRegexVariables: Int, numSegments: Int, matchesWildcardPath: Boolean)"},{"location":"0.x/misk/misk/misk.web/-path-pattern/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.web/-path-pattern/#functions","title":"Functions","text":"Name Summary compareTo [jvm]open operator override fun compareTo(other: PathPattern): IntCompares path patterns by specificity with the more specific pattern ordered first. equals [jvm]open operator override fun equals(other: Any?): Boolean hashCode [jvm]open override fun hashCode(): Int matcher [jvm]fun matcher(requestUrl: HttpUrl): Matcher?Returns a Matcher if requestUrl can be matched, else null toString [jvm]open override fun toString(): String"},{"location":"0.x/misk/misk/misk.web/-path-pattern/#properties","title":"Properties","text":"Name Summary matchesWildcardPath [jvm]val matchesWildcardPath: Boolean numRegexVariables [jvm]val numRegexVariables: Int numSegments [jvm]val numSegments: Int pattern [jvm]val pattern: String regex [jvm]val regex: Pattern variableNames [jvm]val variableNames: List&lt;String&gt;"},{"location":"0.x/misk/misk/misk.web/-path-pattern/-path-pattern/","title":"PathPattern - Misk","text":"<p>//misk/misk.web/PathPattern/PathPattern</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/-path-pattern/#pathpattern","title":"PathPattern","text":"<p>[jvm]\\ fun PathPattern(pattern: String, regex: Pattern, variableNames: List&lt;String&gt;, numRegexVariables: Int, numSegments: Int, matchesWildcardPath: Boolean)</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/compare-to/","title":"compareTo - Misk","text":"<p>//misk/misk.web/PathPattern/compareTo</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/compare-to/#compareto","title":"compareTo","text":"<p>[jvm]\\ open operator override fun compareTo(other: PathPattern): Int</p> <p>Compares path patterns by specificity with the more specific pattern ordered first.</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/equals/","title":"equals - Misk","text":"<p>//misk/misk.web/PathPattern/equals</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/equals/#equals","title":"equals","text":"<p>[jvm]\\ open operator override fun equals(other: Any?): Boolean</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/hash-code/","title":"hashCode - Misk","text":"<p>//misk/misk.web/PathPattern/hashCode</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open override fun hashCode(): Int</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/matcher/","title":"matcher - Misk","text":"<p>//misk/misk.web/PathPattern/matcher</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/matcher/#matcher","title":"matcher","text":"<p>[jvm]\\ fun matcher(requestUrl: HttpUrl): Matcher?</p> <p>Returns a Matcher if requestUrl can be matched, else null</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/matches-wildcard-path/","title":"matchesWildcardPath - Misk","text":"<p>//misk/misk.web/PathPattern/matchesWildcardPath</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/matches-wildcard-path/#matcheswildcardpath","title":"matchesWildcardPath","text":"<p>[jvm]\\ val matchesWildcardPath: Boolean</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/num-regex-variables/","title":"numRegexVariables - Misk","text":"<p>//misk/misk.web/PathPattern/numRegexVariables</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/num-regex-variables/#numregexvariables","title":"numRegexVariables","text":"<p>[jvm]\\ val numRegexVariables: Int</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/num-segments/","title":"numSegments - Misk","text":"<p>//misk/misk.web/PathPattern/numSegments</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/num-segments/#numsegments","title":"numSegments","text":"<p>[jvm]\\ val numSegments: Int</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/pattern/","title":"pattern - Misk","text":"<p>//misk/misk.web/PathPattern/pattern</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/pattern/#pattern","title":"pattern","text":"<p>[jvm]\\ val pattern: String</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/regex/","title":"regex - Misk","text":"<p>//misk/misk.web/PathPattern/regex</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/regex/#regex","title":"regex","text":"<p>[jvm]\\ val regex: Pattern</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/to-string/","title":"toString - Misk","text":"<p>//misk/misk.web/PathPattern/toString</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/variable-names/","title":"variableNames - Misk","text":"<p>//misk/misk.web/PathPattern/variableNames</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/variable-names/#variablenames","title":"variableNames","text":"<p>[jvm]\\ val variableNames: List&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.web/PathPattern/Companion</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/-companion/#functions","title":"Functions","text":"Name Summary parse [jvm]fun parse(pattern: String): PathPattern"},{"location":"0.x/misk/misk/misk.web/-path-pattern/-companion/parse/","title":"parse - Misk","text":"<p>//misk/misk.web/PathPattern/Companion/parse</p>"},{"location":"0.x/misk/misk/misk.web/-path-pattern/-companion/parse/#parse","title":"parse","text":"<p>[jvm]\\ fun parse(pattern: String): PathPattern</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/","title":"SocketAddress - Misk","text":"<p>//misk/misk.web/SocketAddress</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/#socketaddress","title":"SocketAddress","text":"<p>[jvm]\\ sealed class SocketAddress</p> <p>Information about the socket on which a HTTP call arrived.</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/#types","title":"Types","text":"Name Summary Network [jvm]class Network(ipAddress: String, port: Int) : SocketAddress Unix [jvm]class Unix(path: String) : SocketAddress"},{"location":"0.x/misk/misk/misk.web/-socket-address/#inheritors","title":"Inheritors","text":"Name Network Unix"},{"location":"0.x/misk/misk/misk.web/-socket-address/-network/","title":"Network - Misk","text":"<p>//misk/misk.web/SocketAddress/Network</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/-network/#network","title":"Network","text":"<p>[jvm]\\ class Network(ipAddress: String, port: Int) : SocketAddress</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/-network/#properties","title":"Properties","text":"Name Summary ipAddress [jvm]val ipAddress: String port [jvm]val port: Int"},{"location":"0.x/misk/misk/misk.web/-socket-address/-network/-network/","title":"Network - Misk","text":"<p>//misk/misk.web/SocketAddress/Network/Network</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/-network/-network/#network","title":"Network","text":"<p>[jvm]\\ fun Network(ipAddress: String, port: Int)</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/-network/ip-address/","title":"ipAddress - Misk","text":"<p>//misk/misk.web/SocketAddress/Network/ipAddress</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/-network/ip-address/#ipaddress","title":"ipAddress","text":"<p>[jvm]\\ val ipAddress: String</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/-network/port/","title":"port - Misk","text":"<p>//misk/misk.web/SocketAddress/Network/port</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/-network/port/#port","title":"port","text":"<p>[jvm]\\ val port: Int</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/-unix/","title":"Unix - Misk","text":"<p>//misk/misk.web/SocketAddress/Unix</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/-unix/#unix","title":"Unix","text":"<p>[jvm]\\ class Unix(path: String) : SocketAddress</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/-unix/#properties","title":"Properties","text":"Name Summary path [jvm]val path: String"},{"location":"0.x/misk/misk/misk.web/-socket-address/-unix/-unix/","title":"Unix - Misk","text":"<p>//misk/misk.web/SocketAddress/Unix/Unix</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/-unix/-unix/#unix","title":"Unix","text":"<p>[jvm]\\ fun Unix(path: String)</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/-unix/path/","title":"path - Misk","text":"<p>//misk/misk.web/SocketAddress/Unix/path</p>"},{"location":"0.x/misk/misk/misk.web/-socket-address/-unix/path/#path","title":"path","text":"<p>[jvm]\\ val path: String</p>"},{"location":"0.x/misk/misk/misk.web/-web-action-seed-data-transformer-factory/","title":"WebActionSeedDataTransformerFactory - Misk","text":"<p>//misk/misk.web/WebActionSeedDataTransformerFactory</p>"},{"location":"0.x/misk/misk/misk.web/-web-action-seed-data-transformer-factory/#webactionseeddatatransformerfactory","title":"WebActionSeedDataTransformerFactory","text":"<p>[jvm]\\ interface WebActionSeedDataTransformerFactory</p> <p>Creates a SeedDataTransformer for a specific web Action.</p> <p>This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:</p> <p>multibind&lt;WebActionSeedDataTransformerFactory&gt;().toInstance(WebActionSeedDataTransformerFactory(\u2026))</p>"},{"location":"0.x/misk/misk/misk.web/-web-action-seed-data-transformer-factory/#functions","title":"Functions","text":"Name Summary create [jvm]abstract fun create(pathPattern: PathPattern, action: Action): SeedDataTransformer?Returns null to not transform the map on action."},{"location":"0.x/misk/misk/misk.web/-web-action-seed-data-transformer-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web/WebActionSeedDataTransformerFactory/create</p>"},{"location":"0.x/misk/misk/misk.web/-web-action-seed-data-transformer-factory/create/#create","title":"create","text":"<p>[jvm]\\ abstract fun create(pathPattern: PathPattern, action: Action): SeedDataTransformer?</p> <p>Returns null to not transform the map on action.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/","title":"WebConfig - Misk","text":"<p>//misk/misk.web/WebConfig</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/#webconfig","title":"WebConfig","text":"<p>[jvm]\\ data class WebConfig@JvmOverloadsconstructor(port: Int, idle_timeout: Long, health_port: Int, host: String?, ssl: WebSslConfig?, unix_domain_socket: WebUnixDomainSocketConfig?, http2: Boolean, selectors: Int?, acceptors: Int?, queue_size: Int?, jetty_max_thread_pool_size: Int, jetty_min_thread_pool_size: Int, jetty_max_thread_pool_queue_size: Int, enable_thread_pool_queue_metrics: Boolean, action_exception_log_level: ActionExceptionLogLevelConfig, jetty_max_concurrent_streams: Int?, close_connection_percent: Double, gzip: Boolean, minGzipSize: Int, cors: Map&lt;String, CorsConfig&gt;, concurrency_limiter_disabled: Boolean, concurrency_limiter_log_level: Level, concurrency_limiter: ConcurrencyLimiterConfig?, shutdown_sleep_ms: Int, http_request_header_size: Int?, http_header_cache_size: Int?, override_shutdown_idle_timeout: Long?, readiness_refresh_interval_ms: Int, readiness_max_age_ms: Int, use_virtual_threads: Boolean) : Config</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/#properties","title":"Properties","text":"Name Summary acceptors [jvm]val acceptors: Int? = nullNumber of acceptor threads. action_exception_log_level [jvm]val action_exception_log_level: ActionExceptionLogLevelConfig close_connection_percent [jvm]val close_connection_percent: Double = 0.0A value in 0.0..100.0. Include \u2018Connection: close\u2019 in this percentage of responses. concurrency_limiter [jvm]val concurrency_limiter: ConcurrencyLimiterConfig? concurrency_limiter_disabled [jvm]val concurrency_limiter_disabled: Boolean = falseIf true, disables automatic load shedding when degraded. concurrency_limiter_log_level [jvm]val concurrency_limiter_log_level: LevelThe level of log when concurrency shedding. cors [jvm]val cors: Map&lt;String, CorsConfig&gt; enable_thread_pool_queue_metrics [jvm]val enable_thread_pool_queue_metrics: Boolean = falseFlag to enable thread pool queue metrics gzip [jvm]val gzip: Boolean = trueIf true responses which are larger than the minGzipSize will be compressed. health_port [jvm]val health_port: IntIf &gt;= 0, use a dedicated jetty thread pool for health checking. host [jvm]val host: String? = nullThe network interface to bind to. Null or 0.0.0.0 to bind to all interfaces. http2 [jvm]val http2: Boolean = falseHTTP/2 support is currently opt-in because we can\u2019t load balance it dynamically. http_header_cache_size [jvm]val http_header_cache_size: Int? = nullThe size of Jetty\u2019s header field cache, in terms of unique character branches. http_request_header_size [jvm]val http_request_header_size: Int? = 32768The maximum allowed size in bytes for the HTTP request line and HTTP request headers. idle_timeout [jvm]val idle_timeout: Long = 0If a connection is unused for this many milliseconds, it is closed. If zero, it is not closed. jetty_max_concurrent_streams [jvm]val jetty_max_concurrent_streams: Int? = nullThe maximum number of streams per HTTP/2 connection. jetty_max_thread_pool_queue_size [jvm]val jetty_max_thread_pool_queue_size: Int = 300Maximum number of items in the queue for Jetty\u2019s thread pool. jetty_max_thread_pool_size [jvm]val jetty_max_thread_pool_size: Int = 200Maximum number of threads in Jetty\u2019s thread pool. jetty_min_thread_pool_size [jvm]val jetty_min_thread_pool_size: Int = 8Minimum number of threads in Jetty\u2019s thread pool. minGzipSize [jvm]val minGzipSize: Int = 1024The minimum size in bytes before the response body will be compressed. override_shutdown_idle_timeout [jvm]val override_shutdown_idle_timeout: Long? = nullThe number of milliseconds a connection can be idling before commencing service shutdown. If zero, it is never closed and may cause ungraceful shutdown. port [jvm]val port: IntHTTP port to listen on, or 0 for any available port. queue_size [jvm]val queue_size: Int? = nullThe accept backlog. readiness_max_age_ms [jvm]val readiness_max_age_ms: Int = 10000Maximum age of readiness status. If exceeded readiness will return an error readiness_refresh_interval_ms [jvm]val readiness_refresh_interval_ms: Int = 1000How often readiness will re-run its status check. selectors [jvm]val selectors: Int? = nullNumber of NIO selector threads. shutdown_sleep_ms [jvm]val shutdown_sleep_ms: Int = 0The number of milliseconds to sleep before commencing service shutdown. ssl [jvm]val ssl: WebSslConfig? = null unix_domain_socket [jvm]val unix_domain_socket: WebUnixDomainSocketConfig? = nullConfiguration to enable Jetty to listen for traffic on a unix domain socket being proxied through a sidecar (like Envoy). use_virtual_threads [jvm]val use_virtual_threads: Boolean = falseIf possible (e.g. running on JDK 21) misk will attempt to use a virtual thread executor for jetty."},{"location":"0.x/misk/misk/misk.web/-web-config/-web-config/","title":"WebConfig - Misk","text":"<p>//misk/misk.web/WebConfig/WebConfig</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/-web-config/#webconfig","title":"WebConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun WebConfig(port: Int, idle_timeout: Long = 0, health_port: Int = -1, host: String? = null, ssl: WebSslConfig? = null, unix_domain_socket: WebUnixDomainSocketConfig? = null, http2: Boolean = false, selectors: Int? = null, acceptors: Int? = null, queue_size: Int? = null, jetty_max_thread_pool_size: Int = 200, jetty_min_thread_pool_size: Int = 8, jetty_max_thread_pool_queue_size: Int = 300, enable_thread_pool_queue_metrics: Boolean = false, action_exception_log_level: ActionExceptionLogLevelConfig = ActionExceptionLogLevelConfig(), jetty_max_concurrent_streams: Int? = null, close_connection_percent: Double = 0.0, gzip: Boolean = true, minGzipSize: Int = 1024, cors: Map&lt;String, CorsConfig&gt; = mapOf(), concurrency_limiter_disabled: Boolean = false, concurrency_limiter_log_level: Level = Level.ERROR, concurrency_limiter: ConcurrencyLimiterConfig? = ConcurrencyLimiterConfig(     disabled = concurrency_limiter_disabled,     strategy = ConcurrencyLimiterStrategy.GRADIENT2,     max_concurrency = null,     // 2 is chosen somewhat arbitrarily here. Most services have one or two endpoints that     // receive the majority of traffic (power law, yay!), and those endpoints should start up     // without triggering the concurrency limiter at the parallelism that we configured Jetty     // to support.     initial_limit = jetty_max_thread_pool_size / 2,     log_level = concurrency_limiter_log_level,   ), shutdown_sleep_ms: Int = 0, http_request_header_size: Int? = 32768, http_header_cache_size: Int? = null, override_shutdown_idle_timeout: Long? = null, readiness_refresh_interval_ms: Int = 1000, readiness_max_age_ms: Int = 10000, use_virtual_threads: Boolean = false)</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/acceptors/","title":"acceptors - Misk","text":"<p>//misk/misk.web/WebConfig/acceptors</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/acceptors/#acceptors","title":"acceptors","text":"<p>[jvm]\\ val acceptors: Int? = null</p> <p>Number of acceptor threads.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/action_exception_log_level/","title":"action_exception_log_level - Misk","text":"<p>//misk/misk.web/WebConfig/action_exception_log_level</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/action_exception_log_level/#action_exception_log_level","title":"action_exception_log_level","text":"<p>[jvm]\\ val action_exception_log_level: ActionExceptionLogLevelConfig</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/close_connection_percent/","title":"close_connection_percent - Misk","text":"<p>//misk/misk.web/WebConfig/close_connection_percent</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/close_connection_percent/#close_connection_percent","title":"close_connection_percent","text":"<p>[jvm]\\ val close_connection_percent: Double = 0.0</p> <p>A value in 0.0..100.0. Include \u2018Connection: close\u2019 in this percentage of responses.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/concurrency_limiter/","title":"concurrency_limiter - Misk","text":"<p>//misk/misk.web/WebConfig/concurrency_limiter</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/concurrency_limiter/#concurrency_limiter","title":"concurrency_limiter","text":"<p>[jvm]\\ val concurrency_limiter: ConcurrencyLimiterConfig?</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/concurrency_limiter_disabled/","title":"concurrency_limiter_disabled - Misk","text":"<p>//misk/misk.web/WebConfig/concurrency_limiter_disabled</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/concurrency_limiter_disabled/#concurrency_limiter_disabled","title":"concurrency_limiter_disabled","text":"<p>[jvm]\\ val concurrency_limiter_disabled: Boolean = false</p> <p>If true, disables automatic load shedding when degraded.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/concurrency_limiter_log_level/","title":"concurrency_limiter_log_level - Misk","text":"<p>//misk/misk.web/WebConfig/concurrency_limiter_log_level</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/concurrency_limiter_log_level/#concurrency_limiter_log_level","title":"concurrency_limiter_log_level","text":"<p>[jvm]\\ val concurrency_limiter_log_level: Level</p> <p>The level of log when concurrency shedding.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/cors/","title":"cors - Misk","text":"<p>//misk/misk.web/WebConfig/cors</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/cors/#cors","title":"cors","text":"<p>[jvm]\\ val cors: Map&lt;String, CorsConfig&gt;</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/enable_thread_pool_queue_metrics/","title":"enable_thread_pool_queue_metrics - Misk","text":"<p>//misk/misk.web/WebConfig/enable_thread_pool_queue_metrics</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/enable_thread_pool_queue_metrics/#enable_thread_pool_queue_metrics","title":"enable_thread_pool_queue_metrics","text":"<p>[jvm]\\ val enable_thread_pool_queue_metrics: Boolean = false</p> <p>Flag to enable thread pool queue metrics</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/gzip/","title":"gzip - Misk","text":"<p>//misk/misk.web/WebConfig/gzip</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/gzip/#gzip","title":"gzip","text":"<p>[jvm]\\ val gzip: Boolean = true</p> <p>If true responses which are larger than the minGzipSize will be compressed.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/health_port/","title":"health_port - Misk","text":"<p>//misk/misk.web/WebConfig/health_port</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/health_port/#health_port","title":"health_port","text":"<p>[jvm]\\ val health_port: Int</p> <p>If &gt;= 0, use a dedicated jetty thread pool for health checking.</p> <p>A dedicated thread pool ensures that health checks are not queued or rejected when the service is saturated and queueing requests. If health checks are rejected and/or queued, the health checks may fail and k8s will kill the container, even though it might be perfectly healthy. This can cause cascading failures by sending more requests to other containers, resulting in longer queues and more health checks failures.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/host/","title":"host - Misk","text":"<p>//misk/misk.web/WebConfig/host</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/host/#host","title":"host","text":"<p>[jvm]\\ val host: String? = null</p> <p>The network interface to bind to. Null or 0.0.0.0 to bind to all interfaces.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/http2/","title":"http2 - Misk","text":"<p>//misk/misk.web/WebConfig/http2</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/http2/#http2","title":"http2","text":"<p>[jvm]\\ val http2: Boolean = false</p> <p>HTTP/2 support is currently opt-in because we can\u2019t load balance it dynamically.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/http_header_cache_size/","title":"http_header_cache_size - Misk","text":"<p>//misk/misk.web/WebConfig/http_header_cache_size</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/http_header_cache_size/#http_header_cache_size","title":"http_header_cache_size","text":"<p>[jvm]\\ val http_header_cache_size: Int? = null</p> <p>The size of Jetty\u2019s header field cache, in terms of unique character branches.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/http_request_header_size/","title":"http_request_header_size - Misk","text":"<p>//misk/misk.web/WebConfig/http_request_header_size</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/http_request_header_size/#http_request_header_size","title":"http_request_header_size","text":"<p>[jvm]\\ val http_request_header_size: Int? = 32768</p> <p>The maximum allowed size in bytes for the HTTP request line and HTTP request headers.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/idle_timeout/","title":"idle_timeout - Misk","text":"<p>//misk/misk.web/WebConfig/idle_timeout</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/idle_timeout/#idle_timeout","title":"idle_timeout","text":"<p>[jvm]\\ val idle_timeout: Long = 0</p> <p>If a connection is unused for this many milliseconds, it is closed. If zero, it is not closed.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/jetty_max_concurrent_streams/","title":"jetty_max_concurrent_streams - Misk","text":"<p>//misk/misk.web/WebConfig/jetty_max_concurrent_streams</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/jetty_max_concurrent_streams/#jetty_max_concurrent_streams","title":"jetty_max_concurrent_streams","text":"<p>[jvm]\\ val jetty_max_concurrent_streams: Int? = null</p> <p>The maximum number of streams per HTTP/2 connection.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/jetty_max_thread_pool_queue_size/","title":"jetty_max_thread_pool_queue_size - Misk","text":"<p>//misk/misk.web/WebConfig/jetty_max_thread_pool_queue_size</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/jetty_max_thread_pool_queue_size/#jetty_max_thread_pool_queue_size","title":"jetty_max_thread_pool_queue_size","text":"<p>[jvm]\\ val jetty_max_thread_pool_queue_size: Int = 300</p> <p>Maximum number of items in the queue for Jetty\u2019s thread pool.</p> <p>If 0, no queueing is used and requests are directly handed off to the thread pool. If a thread is not available (i.e max threads in use) the request is rejected. Unfortunately Jetty rejects requests by closing the socket instead of returning a 429. This can lead to confusing EOFExceptions for the client.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/jetty_max_thread_pool_size/","title":"jetty_max_thread_pool_size - Misk","text":"<p>//misk/misk.web/WebConfig/jetty_max_thread_pool_size</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/jetty_max_thread_pool_size/#jetty_max_thread_pool_size","title":"jetty_max_thread_pool_size","text":"<p>[jvm]\\ val jetty_max_thread_pool_size: Int = 200</p> <p>Maximum number of threads in Jetty\u2019s thread pool.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/jetty_min_thread_pool_size/","title":"jetty_min_thread_pool_size - Misk","text":"<p>//misk/misk.web/WebConfig/jetty_min_thread_pool_size</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/jetty_min_thread_pool_size/#jetty_min_thread_pool_size","title":"jetty_min_thread_pool_size","text":"<p>[jvm]\\ val jetty_min_thread_pool_size: Int = 8</p> <p>Minimum number of threads in Jetty\u2019s thread pool.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/min-gzip-size/","title":"minGzipSize - Misk","text":"<p>//misk/misk.web/WebConfig/minGzipSize</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/min-gzip-size/#mingzipsize","title":"minGzipSize","text":"<p>[jvm]\\ val minGzipSize: Int = 1024</p> <p>The minimum size in bytes before the response body will be compressed.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/override_shutdown_idle_timeout/","title":"override_shutdown_idle_timeout - Misk","text":"<p>//misk/misk.web/WebConfig/override_shutdown_idle_timeout</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/override_shutdown_idle_timeout/#override_shutdown_idle_timeout","title":"override_shutdown_idle_timeout","text":"<p>[jvm]\\ val override_shutdown_idle_timeout: Long? = null</p> <p>The number of milliseconds a connection can be idling before commencing service shutdown. If zero, it is never closed and may cause ungraceful shutdown.</p> <p>Note: There is an underlying strategy to determine the default shutdown idle timeout. Use this value only when necessary.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/port/","title":"port - Misk","text":"<p>//misk/misk.web/WebConfig/port</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/port/#port","title":"port","text":"<p>[jvm]\\ val port: Int</p> <p>HTTP port to listen on, or 0 for any available port.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/queue_size/","title":"queue_size - Misk","text":"<p>//misk/misk.web/WebConfig/queue_size</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/queue_size/#queue_size","title":"queue_size","text":"<p>[jvm]\\ val queue_size: Int? = null</p> <p>The accept backlog.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/readiness_max_age_ms/","title":"readiness_max_age_ms - Misk","text":"<p>//misk/misk.web/WebConfig/readiness_max_age_ms</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/readiness_max_age_ms/#readiness_max_age_ms","title":"readiness_max_age_ms","text":"<p>[jvm]\\ val readiness_max_age_ms: Int = 10000</p> <p>Maximum age of readiness status. If exceeded readiness will return an error</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/readiness_refresh_interval_ms/","title":"readiness_refresh_interval_ms - Misk","text":"<p>//misk/misk.web/WebConfig/readiness_refresh_interval_ms</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/readiness_refresh_interval_ms/#readiness_refresh_interval_ms","title":"readiness_refresh_interval_ms","text":"<p>[jvm]\\ val readiness_refresh_interval_ms: Int = 1000</p> <p>How often readiness will re-run its status check.</p> <p>Ensure that readiness_refresh_interval_ms + \u201creadiness latency\u201d is less than readiness_max_age_ms or readiness will fail.\u201d</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/selectors/","title":"selectors - Misk","text":"<p>//misk/misk.web/WebConfig/selectors</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/selectors/#selectors","title":"selectors","text":"<p>[jvm]\\ val selectors: Int? = null</p> <p>Number of NIO selector threads.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/shutdown_sleep_ms/","title":"shutdown_sleep_ms - Misk","text":"<p>//misk/misk.web/WebConfig/shutdown_sleep_ms</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/shutdown_sleep_ms/#shutdown_sleep_ms","title":"shutdown_sleep_ms","text":"<p>[jvm]\\ val shutdown_sleep_ms: Int = 0</p> <p>The number of milliseconds to sleep before commencing service shutdown.</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/ssl/","title":"ssl - Misk","text":"<p>//misk/misk.web/WebConfig/ssl</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/ssl/#ssl","title":"ssl","text":"<p>[jvm]\\ val ssl: WebSslConfig? = null</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/unix_domain_socket/","title":"unix_domain_socket - Misk","text":"<p>//misk/misk.web/WebConfig/unix_domain_socket</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/unix_domain_socket/#unix_domain_socket","title":"unix_domain_socket","text":"<p>[jvm]\\ val unix_domain_socket: WebUnixDomainSocketConfig? = null</p> <p>Configuration to enable Jetty to listen for traffic on a unix domain socket being proxied through a sidecar (like Envoy).</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/use_virtual_threads/","title":"use_virtual_threads - Misk","text":"<p>//misk/misk.web/WebConfig/use_virtual_threads</p>"},{"location":"0.x/misk/misk/misk.web/-web-config/use_virtual_threads/#use_virtual_threads","title":"use_virtual_threads","text":"<p>[jvm]\\ val use_virtual_threads: Boolean = false</p> <p>If possible (e.g. running on JDK 21) misk will attempt to use a virtual thread executor for jetty.</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/","title":"WebSslConfig - Misk","text":"<p>//misk/misk.web/WebSslConfig</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/#websslconfig","title":"WebSslConfig","text":"<p>[jvm]\\ data class WebSslConfig@JvmOverloadsconstructor(port: Int, cert_store: CertStoreConfig, trust_store: TrustStoreConfig?, mutual_auth: WebSslConfig.MutualAuth, cipher_compatibility: WebSslConfig.CipherCompatibility)</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/#types","title":"Types","text":"Name Summary CipherCompatibility [jvm]enum CipherCompatibility : Enum&lt;WebSslConfig.CipherCompatibility&gt; MutualAuth [jvm]enum MutualAuth : Enum&lt;WebSslConfig.MutualAuth&gt;"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/#properties","title":"Properties","text":"Name Summary cert_store [jvm]val cert_store: CertStoreConfig cipher_compatibility [jvm]val cipher_compatibility: WebSslConfig.CipherCompatibility mutual_auth [jvm]val mutual_auth: WebSslConfig.MutualAuth port [jvm]val port: IntHTTPS port to listen on, or 0 for any available port. trust_store [jvm]val trust_store: TrustStoreConfig? = null"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-web-ssl-config/","title":"WebSslConfig - Misk","text":"<p>//misk/misk.web/WebSslConfig/WebSslConfig</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-web-ssl-config/#websslconfig","title":"WebSslConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun WebSslConfig(port: Int, cert_store: CertStoreConfig, trust_store: TrustStoreConfig? = null, mutual_auth: WebSslConfig.MutualAuth = MutualAuth.REQUIRED, cipher_compatibility: WebSslConfig.CipherCompatibility = CipherCompatibility.COMPATIBLE)</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/cert_store/","title":"cert_store - Misk","text":"<p>//misk/misk.web/WebSslConfig/cert_store</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/cert_store/#cert_store","title":"cert_store","text":"<p>[jvm]\\ val cert_store: CertStoreConfig</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/cipher_compatibility/","title":"cipher_compatibility - Misk","text":"<p>//misk/misk.web/WebSslConfig/cipher_compatibility</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/cipher_compatibility/#cipher_compatibility","title":"cipher_compatibility","text":"<p>[jvm]\\ val cipher_compatibility: WebSslConfig.CipherCompatibility</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/mutual_auth/","title":"mutual_auth - Misk","text":"<p>//misk/misk.web/WebSslConfig/mutual_auth</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/mutual_auth/#mutual_auth","title":"mutual_auth","text":"<p>[jvm]\\ val mutual_auth: WebSslConfig.MutualAuth</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/port/","title":"port - Misk","text":"<p>//misk/misk.web/WebSslConfig/port</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/port/#port","title":"port","text":"<p>[jvm]\\ val port: Int</p> <p>HTTPS port to listen on, or 0 for any available port.</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/trust_store/","title":"trust_store - Misk","text":"<p>//misk/misk.web/WebSslConfig/trust_store</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/trust_store/#trust_store","title":"trust_store","text":"<p>[jvm]\\ val trust_store: TrustStoreConfig? = null</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-cipher-compatibility/","title":"CipherCompatibility - Misk","text":"<p>//misk/misk.web/WebSslConfig/CipherCompatibility</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-cipher-compatibility/#ciphercompatibility","title":"CipherCompatibility","text":"<p>[jvm]\\ enum CipherCompatibility : Enum&lt;WebSslConfig.CipherCompatibility&gt;</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-cipher-compatibility/#entries","title":"Entries","text":"RESTRICTED [jvm]RESTRICTED()Supports a reduced set of SSL features, intended to meet stricter compliance requirements. MODERN [jvm]MODERN()Supports a wide set of SSL features, allowing modern clients to negotiate SSL. COMPATIBLE [jvm]COMPATIBLE()Allows the broadest set of clients, including clients that support only out-of-date SSL features."},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-cipher-compatibility/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-cipher-compatibility/-c-o-m-p-a-t-i-b-l-e/","title":"COMPATIBLE - Misk","text":"<p>//misk/misk.web/WebSslConfig/CipherCompatibility/COMPATIBLE</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-cipher-compatibility/-c-o-m-p-a-t-i-b-l-e/#compatible","title":"COMPATIBLE","text":"<p>[jvm]\\ COMPATIBLE()</p> <p>Allows the broadest set of clients, including clients that support only out-of-date SSL features.</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-cipher-compatibility/-c-o-m-p-a-t-i-b-l-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-cipher-compatibility/-m-o-d-e-r-n/","title":"MODERN - Misk","text":"<p>//misk/misk.web/WebSslConfig/CipherCompatibility/MODERN</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-cipher-compatibility/-m-o-d-e-r-n/#modern","title":"MODERN","text":"<p>[jvm]\\ MODERN()</p> <p>Supports a wide set of SSL features, allowing modern clients to negotiate SSL.</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-cipher-compatibility/-m-o-d-e-r-n/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-cipher-compatibility/-r-e-s-t-r-i-c-t-e-d/","title":"RESTRICTED - Misk","text":"<p>//misk/misk.web/WebSslConfig/CipherCompatibility/RESTRICTED</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-cipher-compatibility/-r-e-s-t-r-i-c-t-e-d/#restricted","title":"RESTRICTED","text":"<p>[jvm]\\ RESTRICTED()</p> <p>Supports a reduced set of SSL features, intended to meet stricter compliance requirements.</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-cipher-compatibility/-r-e-s-t-r-i-c-t-e-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-mutual-auth/","title":"MutualAuth - Misk","text":"<p>//misk/misk.web/WebSslConfig/MutualAuth</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-mutual-auth/#mutualauth","title":"MutualAuth","text":"<p>[jvm]\\ enum MutualAuth : Enum&lt;WebSslConfig.MutualAuth&gt;</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-mutual-auth/#entries","title":"Entries","text":"DESIRED [jvm]DESIRED() REQUIRED [jvm]REQUIRED() NONE [jvm]NONE()"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-mutual-auth/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-mutual-auth/-d-e-s-i-r-e-d/","title":"DESIRED - Misk","text":"<p>//misk/misk.web/WebSslConfig/MutualAuth/DESIRED</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-mutual-auth/-d-e-s-i-r-e-d/#desired","title":"DESIRED","text":"<p>[jvm]\\ DESIRED()</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-mutual-auth/-d-e-s-i-r-e-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-mutual-auth/-n-o-n-e/","title":"NONE - Misk","text":"<p>//misk/misk.web/WebSslConfig/MutualAuth/NONE</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-mutual-auth/-n-o-n-e/#none","title":"NONE","text":"<p>[jvm]\\ NONE()</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-mutual-auth/-n-o-n-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-mutual-auth/-r-e-q-u-i-r-e-d/","title":"REQUIRED - Misk","text":"<p>//misk/misk.web/WebSslConfig/MutualAuth/REQUIRED</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-mutual-auth/-r-e-q-u-i-r-e-d/#required","title":"REQUIRED","text":"<p>[jvm]\\ REQUIRED()</p>"},{"location":"0.x/misk/misk/misk.web/-web-ssl-config/-mutual-auth/-r-e-q-u-i-r-e-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web/-web-unix-domain-socket-config/","title":"WebUnixDomainSocketConfig - Misk","text":"<p>//misk/misk.web/WebUnixDomainSocketConfig</p>"},{"location":"0.x/misk/misk/misk.web/-web-unix-domain-socket-config/#webunixdomainsocketconfig","title":"WebUnixDomainSocketConfig","text":"<p>[jvm]\\ data class WebUnixDomainSocketConfig@JvmOverloadsconstructor(path: String, h2c: Boolean?)</p>"},{"location":"0.x/misk/misk/misk.web/-web-unix-domain-socket-config/#properties","title":"Properties","text":"Name Summary h2c [jvm]val h2c: Boolean? = trueIf true, the listener will support H2C. path [jvm]val path: StringThe Unix Domain Socket to listen on."},{"location":"0.x/misk/misk/misk.web/-web-unix-domain-socket-config/-web-unix-domain-socket-config/","title":"WebUnixDomainSocketConfig - Misk","text":"<p>//misk/misk.web/WebUnixDomainSocketConfig/WebUnixDomainSocketConfig</p>"},{"location":"0.x/misk/misk/misk.web/-web-unix-domain-socket-config/-web-unix-domain-socket-config/#webunixdomainsocketconfig","title":"WebUnixDomainSocketConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun WebUnixDomainSocketConfig(path: String, h2c: Boolean? = true)</p>"},{"location":"0.x/misk/misk/misk.web/-web-unix-domain-socket-config/h2c/","title":"h2c - Misk","text":"<p>//misk/misk.web/WebUnixDomainSocketConfig/h2c</p>"},{"location":"0.x/misk/misk/misk.web/-web-unix-domain-socket-config/h2c/#h2c","title":"h2c","text":"<p>[jvm]\\ val h2c: Boolean? = true</p> <p>If true, the listener will support H2C.</p>"},{"location":"0.x/misk/misk/misk.web/-web-unix-domain-socket-config/path/","title":"path - Misk","text":"<p>//misk/misk.web/WebUnixDomainSocketConfig/path</p>"},{"location":"0.x/misk/misk/misk.web/-web-unix-domain-socket-config/path/#path","title":"path","text":"<p>[jvm]\\ val path: String</p> <p>The Unix Domain Socket to listen on.</p>"},{"location":"0.x/misk/misk/misk.web.actions/","title":"Package misk.web.actions - Misk","text":"<p>//misk/misk.web.actions</p>"},{"location":"0.x/misk/misk/misk.web.actions/#package-miskwebactions","title":"Package misk.web.actions","text":""},{"location":"0.x/misk/misk/misk.web.actions/#types","title":"Types","text":"Name Summary InternalErrorAction [jvm]@Singletonclass InternalErrorAction@Injectconstructor : WebAction LivenessCheckAction [jvm]@Singletonclass LivenessCheckAction : WebAction NotFoundAction [jvm]@Singletonclass NotFoundAction : WebAction ReadinessCheckAction [jvm]@Singletonclass ReadinessCheckAction : WebAction StatusAction [jvm]@Singletonclass StatusAction : WebActionReturns the current status of the service for programmatic tools that want to query for the current state of the server"},{"location":"0.x/misk/misk/misk.web.actions/#functions","title":"Functions","text":"Name Summary asChain [jvm]fun WebAction.asChain(function: KFunction&lt;*&gt;, args: List&lt;Any?&gt;, interceptors: List&lt;ApplicationInterceptor&gt;, httpCall: HttpCall): Chain"},{"location":"0.x/misk/misk/misk.web.actions/as-chain/","title":"asChain - Misk","text":"<p>//misk/misk.web.actions/asChain</p>"},{"location":"0.x/misk/misk/misk.web.actions/as-chain/#aschain","title":"asChain","text":"<p>[jvm]\\ fun WebAction.asChain(function: KFunction&lt;*&gt;, args: List&lt;Any?&gt;, interceptors: List&lt;ApplicationInterceptor&gt;, httpCall: HttpCall): Chain</p>"},{"location":"0.x/misk/misk/misk.web.actions/-internal-error-action/","title":"InternalErrorAction - Misk","text":"<p>//misk/misk.web.actions/InternalErrorAction</p>"},{"location":"0.x/misk/misk/misk.web.actions/-internal-error-action/#internalerroraction","title":"InternalErrorAction","text":"<p>[jvm]\\ @Singleton</p> <p>class InternalErrorAction@Injectconstructor : WebAction</p>"},{"location":"0.x/misk/misk/misk.web.actions/-internal-error-action/#functions","title":"Functions","text":"Name Summary error [jvm]fun error(): Nothing"},{"location":"0.x/misk/misk/misk.web.actions/-internal-error-action/-internal-error-action/","title":"InternalErrorAction - Misk","text":"<p>//misk/misk.web.actions/InternalErrorAction/InternalErrorAction</p>"},{"location":"0.x/misk/misk/misk.web.actions/-internal-error-action/-internal-error-action/#internalerroraction","title":"InternalErrorAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun InternalErrorAction()</p>"},{"location":"0.x/misk/misk/misk.web.actions/-internal-error-action/error/","title":"error - Misk","text":"<p>//misk/misk.web.actions/InternalErrorAction/error</p>"},{"location":"0.x/misk/misk/misk.web.actions/-internal-error-action/error/#error","title":"error","text":"<p>[jvm]\\ fun error(): Nothing</p>"},{"location":"0.x/misk/misk/misk.web.actions/-liveness-check-action/","title":"LivenessCheckAction - Misk","text":"<p>//misk/misk.web.actions/LivenessCheckAction</p>"},{"location":"0.x/misk/misk/misk.web.actions/-liveness-check-action/#livenesscheckaction","title":"LivenessCheckAction","text":"<p>[jvm]\\ @Singleton</p> <p>class LivenessCheckAction : WebAction</p>"},{"location":"0.x/misk/misk/misk.web.actions/-liveness-check-action/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.web.actions/-liveness-check-action/#functions","title":"Functions","text":"Name Summary livenessCheck [jvm]fun livenessCheck(): Response&lt;String&gt;"},{"location":"0.x/misk/misk/misk.web.actions/-liveness-check-action/liveness-check/","title":"livenessCheck - Misk","text":"<p>//misk/misk.web.actions/LivenessCheckAction/livenessCheck</p>"},{"location":"0.x/misk/misk/misk.web.actions/-liveness-check-action/liveness-check/#livenesscheck","title":"livenessCheck","text":"<p>[jvm]\\ fun livenessCheck(): Response&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.web.actions/-liveness-check-action/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.web.actions/LivenessCheckAction/Companion</p>"},{"location":"0.x/misk/misk/misk.web.actions/-liveness-check-action/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.web.actions/-not-found-action/","title":"NotFoundAction - Misk","text":"<p>//misk/misk.web.actions/NotFoundAction</p>"},{"location":"0.x/misk/misk/misk.web.actions/-not-found-action/#notfoundaction","title":"NotFoundAction","text":"<p>[jvm]\\ @Singleton</p> <p>class NotFoundAction : WebAction</p>"},{"location":"0.x/misk/misk/misk.web.actions/-not-found-action/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.web.actions/-not-found-action/#functions","title":"Functions","text":"Name Summary notFound [jvm]fun notFound(path: String): Response&lt;ResponseBody&gt;"},{"location":"0.x/misk/misk/misk.web.actions/-not-found-action/not-found/","title":"notFound - Misk","text":"<p>//misk/misk.web.actions/NotFoundAction/notFound</p>"},{"location":"0.x/misk/misk/misk.web.actions/-not-found-action/not-found/#notfound","title":"notFound","text":"<p>[jvm]\\ fun notFound(path: String): Response&lt;ResponseBody&gt;</p>"},{"location":"0.x/misk/misk/misk.web.actions/-not-found-action/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.web.actions/NotFoundAction/Companion</p>"},{"location":"0.x/misk/misk/misk.web.actions/-not-found-action/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.web.actions/-not-found-action/-companion/#functions","title":"Functions","text":"Name Summary response [jvm]fun response(path: String): Response&lt;ResponseBody&gt;"},{"location":"0.x/misk/misk/misk.web.actions/-not-found-action/-companion/response/","title":"response - Misk","text":"<p>//misk/misk.web.actions/NotFoundAction/Companion/response</p>"},{"location":"0.x/misk/misk/misk.web.actions/-not-found-action/-companion/response/#response","title":"response","text":"<p>[jvm]\\ fun response(path: String): Response&lt;ResponseBody&gt;</p>"},{"location":"0.x/misk/misk/misk.web.actions/-readiness-check-action/","title":"ReadinessCheckAction - Misk","text":"<p>//misk/misk.web.actions/ReadinessCheckAction</p>"},{"location":"0.x/misk/misk/misk.web.actions/-readiness-check-action/#readinesscheckaction","title":"ReadinessCheckAction","text":"<p>[jvm]\\ @Singleton</p> <p>class ReadinessCheckAction : WebAction</p>"},{"location":"0.x/misk/misk/misk.web.actions/-readiness-check-action/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.web.actions/-readiness-check-action/#functions","title":"Functions","text":"Name Summary readinessCheck [jvm]fun readinessCheck(): Response&lt;String&gt;"},{"location":"0.x/misk/misk/misk.web.actions/-readiness-check-action/readiness-check/","title":"readinessCheck - Misk","text":"<p>//misk/misk.web.actions/ReadinessCheckAction/readinessCheck</p>"},{"location":"0.x/misk/misk/misk.web.actions/-readiness-check-action/readiness-check/#readinesscheck","title":"readinessCheck","text":"<p>[jvm]\\ fun readinessCheck(): Response&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.web.actions/-readiness-check-action/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.web.actions/ReadinessCheckAction/Companion</p>"},{"location":"0.x/misk/misk/misk.web.actions/-readiness-check-action/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/","title":"StatusAction - Misk","text":"<p>//misk/misk.web.actions/StatusAction</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/#statusaction","title":"StatusAction","text":"<p>[jvm]\\ @Singleton</p> <p>class StatusAction : WebAction</p> <p>Returns the current status of the service for programmatic tools that want to query for the current state of the server</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion ServerStatus [jvm]data class ServerStatus(serviceStatus: Map&lt;String, Service.State&gt;, healthCheckStatus: Map&lt;String, HealthStatus&gt;)"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/#functions","title":"Functions","text":"Name Summary getStatus [jvm]fun getStatus(): StatusAction.ServerStatus"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/get-status/","title":"getStatus - Misk","text":"<p>//misk/misk.web.actions/StatusAction/getStatus</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/get-status/#getstatus","title":"getStatus","text":"<p>[jvm]\\ fun getStatus(): StatusAction.ServerStatus</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.web.actions/StatusAction/Companion</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/-server-status/","title":"ServerStatus - Misk","text":"<p>//misk/misk.web.actions/StatusAction/ServerStatus</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/-server-status/#serverstatus","title":"ServerStatus","text":"<p>[jvm]\\ data class ServerStatus(serviceStatus: Map&lt;String, Service.State&gt;, healthCheckStatus: Map&lt;String, HealthStatus&gt;)</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/-server-status/#properties","title":"Properties","text":"Name Summary healthCheckStatus [jvm]val healthCheckStatus: Map&lt;String, HealthStatus&gt; serviceStatus [jvm]val serviceStatus: Map&lt;String, Service.State&gt;"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/-server-status/-server-status/","title":"ServerStatus - Misk","text":"<p>//misk/misk.web.actions/StatusAction/ServerStatus/ServerStatus</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/-server-status/-server-status/#serverstatus","title":"ServerStatus","text":"<p>[jvm]\\ fun ServerStatus(serviceStatus: Map&lt;String, Service.State&gt;, healthCheckStatus: Map&lt;String, HealthStatus&gt;)</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/-server-status/health-check-status/","title":"healthCheckStatus - Misk","text":"<p>//misk/misk.web.actions/StatusAction/ServerStatus/healthCheckStatus</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/-server-status/health-check-status/#healthcheckstatus","title":"healthCheckStatus","text":"<p>[jvm]\\ val healthCheckStatus: Map&lt;String, HealthStatus&gt;</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/-server-status/service-status/","title":"serviceStatus - Misk","text":"<p>//misk/misk.web.actions/StatusAction/ServerStatus/serviceStatus</p>"},{"location":"0.x/misk/misk/misk.web.actions/-status-action/-server-status/service-status/#servicestatus","title":"serviceStatus","text":"<p>[jvm]\\ val serviceStatus: Map&lt;String, Service.State&gt;</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/","title":"Package misk.web.concurrencylimits - Misk","text":"<p>//misk/misk.web.concurrencylimits</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/#package-miskwebconcurrencylimits","title":"Package misk.web.concurrencylimits","text":""},{"location":"0.x/misk/misk/misk.web.concurrencylimits/#types","title":"Types","text":"Name Summary ConcurrencyLimiterFactory [jvm]interface ConcurrencyLimiterFactoryMultibind an instance to provide a custom Limiter for concurrency shedding. The first instance to return non-null is used. ConcurrencyLimiterStrategy [jvm]enum ConcurrencyLimiterStrategy : Enum&lt;ConcurrencyLimiterStrategy&gt; Per the Netflix library, strategies for calculating concurrency limits based on existing traffic. For more information, please consult the documentation. ConcurrencyLimitsModule [jvm]class ConcurrencyLimitsModule(config: ConcurrencyLimiterConfig) : KAbstractModule"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-factory/","title":"ConcurrencyLimiterFactory - Misk","text":"<p>//misk/misk.web.concurrencylimits/ConcurrencyLimiterFactory</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-factory/#concurrencylimiterfactory","title":"ConcurrencyLimiterFactory","text":"<p>[jvm]\\ interface ConcurrencyLimiterFactory</p> <p>Multibind an instance to provide a custom Limiter for concurrency shedding. The first instance to return non-null is used.</p> <p>Misk\u2019s ConcurrencyLimitsInterceptor honors the Quota-Path HTTP header to give callers control of how their calls are aggregated when computing system throughput. The create function will be called for each unique Quota-Path received from an application. If the same Quota-Path header is used on different actions, create is only called for the first action that uses the header.</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-factory/#functions","title":"Functions","text":"Name Summary create [jvm]abstract fun create(action: Action): Limiter&lt;String&gt;?"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.concurrencylimits/ConcurrencyLimiterFactory/create</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-factory/create/#create","title":"create","text":"<p>[jvm]\\ abstract fun create(action: Action): Limiter&lt;String&gt;?</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/","title":"ConcurrencyLimiterStrategy - Misk","text":"<p>//misk/misk.web.concurrencylimits/ConcurrencyLimiterStrategy</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/#concurrencylimiterstrategy","title":"ConcurrencyLimiterStrategy","text":"<p>[jvm]\\ enum ConcurrencyLimiterStrategy : Enum&lt;ConcurrencyLimiterStrategy&gt; </p> <p>Per the Netflix library, strategies for calculating concurrency limits based on existing traffic. For more information, please consult the documentation.</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/#entries","title":"Entries","text":"FIXED [jvm]FIXED()Non dynamic limit with fixed value. See documentation for more information. SETTABLE [jvm]SETTABLE()Limit to be used mostly for testing where the limit can be manually adjusted. See documentation for more information. AIMD [jvm]AIMD()Loss based dynamic Limit that does an additive increment as long as there are no errors and a multiplicative decrement when there is an error. See documentation for more information. GRADIENT2 [jvm]GRADIENT2()Concurrency limit algorithm that adjusts the limit based on the gradient of change of the current average RTT and a long term exponentially smoothed average RTT. See documentation for more information. GRADIENT [jvm]GRADIENT()Concurrency limit algorithm that adjust the limits based on the gradient of change in the samples minimum RTT and absolute minimum RTT allowing for a queue of square root of the current limit. See documentation for more information. VEGAS [jvm]VEGAS()A limiter based on TCP Vegas where the limit increases by alpha if the queue_use is small (&lt; alpha) and decreases by alpha if the queue_use is large (&gt; beta). See documentation for more information."},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-a-i-m-d/","title":"AIMD - Misk","text":"<p>//misk/misk.web.concurrencylimits/ConcurrencyLimiterStrategy/AIMD</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-a-i-m-d/#aimd","title":"AIMD","text":"<p>[jvm]\\ AIMD()</p> <p>Loss based dynamic Limit that does an additive increment as long as there are no errors and a multiplicative decrement when there is an error. See documentation for more information.</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-a-i-m-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-f-i-x-e-d/","title":"FIXED - Misk","text":"<p>//misk/misk.web.concurrencylimits/ConcurrencyLimiterStrategy/FIXED</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-f-i-x-e-d/#fixed","title":"FIXED","text":"<p>[jvm]\\ FIXED()</p> <p>Non dynamic limit with fixed value. See documentation for more information.</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-f-i-x-e-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-g-r-a-d-i-e-n-t/","title":"GRADIENT - Misk","text":"<p>//misk/misk.web.concurrencylimits/ConcurrencyLimiterStrategy/GRADIENT</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-g-r-a-d-i-e-n-t/#gradient","title":"GRADIENT","text":"<p>[jvm]\\ GRADIENT()</p> <p>Concurrency limit algorithm that adjust the limits based on the gradient of change in the samples minimum RTT and absolute minimum RTT allowing for a queue of square root of the current limit. See documentation for more information.</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-g-r-a-d-i-e-n-t/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-g-r-a-d-i-e-n-t2/","title":"GRADIENT2 - Misk","text":"<p>//misk/misk.web.concurrencylimits/ConcurrencyLimiterStrategy/GRADIENT2</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-g-r-a-d-i-e-n-t2/#gradient2","title":"GRADIENT2","text":"<p>[jvm]\\ GRADIENT2()</p> <p>Concurrency limit algorithm that adjusts the limit based on the gradient of change of the current average RTT and a long term exponentially smoothed average RTT. See documentation for more information.</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-g-r-a-d-i-e-n-t2/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-s-e-t-t-a-b-l-e/","title":"SETTABLE - Misk","text":"<p>//misk/misk.web.concurrencylimits/ConcurrencyLimiterStrategy/SETTABLE</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-s-e-t-t-a-b-l-e/#settable","title":"SETTABLE","text":"<p>[jvm]\\ SETTABLE()</p> <p>Limit to be used mostly for testing where the limit can be manually adjusted. See documentation for more information.</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-s-e-t-t-a-b-l-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-v-e-g-a-s/","title":"VEGAS - Misk","text":"<p>//misk/misk.web.concurrencylimits/ConcurrencyLimiterStrategy/VEGAS</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-v-e-g-a-s/#vegas","title":"VEGAS","text":"<p>[jvm]\\ VEGAS()</p> <p>A limiter based on TCP Vegas where the limit increases by alpha if the queue_use is small (&lt; alpha) and decreases by alpha if the queue_use is large (&gt; beta). See documentation for more information.</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limiter-strategy/-v-e-g-a-s/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limits-module/","title":"ConcurrencyLimitsModule - Misk","text":"<p>//misk/misk.web.concurrencylimits/ConcurrencyLimitsModule</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limits-module/#concurrencylimitsmodule","title":"ConcurrencyLimitsModule","text":"<p>[jvm]\\ class ConcurrencyLimitsModule(config: ConcurrencyLimiterConfig) : KAbstractModule</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limits-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) concurrencyLimiterFactory [jvm]@ProvidesIntoSet@Singletonfun concurrencyLimiterFactory(limit: Provider&lt;Limit&gt;, clock: Clock): ConcurrencyLimiterFactoryThis will create the SimpleLimiter with the same Limit algorithm for each every action. This can be configured per action if needed. configure [jvm]open fun configure()override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limits-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limits-module/-concurrency-limits-module/","title":"ConcurrencyLimitsModule - Misk","text":"<p>//misk/misk.web.concurrencylimits/ConcurrencyLimitsModule/ConcurrencyLimitsModule</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limits-module/-concurrency-limits-module/#concurrencylimitsmodule","title":"ConcurrencyLimitsModule","text":"<p>[jvm]\\ fun ConcurrencyLimitsModule(config: ConcurrencyLimiterConfig)</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limits-module/concurrency-limiter-factory/","title":"concurrencyLimiterFactory - Misk","text":"<p>//misk/misk.web.concurrencylimits/ConcurrencyLimitsModule/concurrencyLimiterFactory</p>"},{"location":"0.x/misk/misk/misk.web.concurrencylimits/-concurrency-limits-module/concurrency-limiter-factory/#concurrencylimiterfactory","title":"concurrencyLimiterFactory","text":"<p>[jvm]\\</p> <p>@ProvidesIntoSet</p> <p>@Singleton</p> <p>fun concurrencyLimiterFactory(limit: Provider&lt;Limit&gt;, clock: Clock): ConcurrencyLimiterFactory</p> <p>This will create the SimpleLimiter with the same Limit algorithm for each every action. This can be configured per action if needed.</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/","title":"Package misk.web.exceptions - Misk","text":"<p>//misk/misk.web.exceptions</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/#package-miskwebexceptions","title":"Package misk.web.exceptions","text":""},{"location":"0.x/misk/misk/misk.web.exceptions/#types","title":"Types","text":"Name Summary ActionExceptionLogLevelConfig [jvm]data class ActionExceptionLogLevelConfig@JvmOverloadsconstructor(client_error_level: Level, server_error_level: Level) : ConfigConfigures the log Level for an ActionException. ExceptionHandlingInterceptor [jvm]class ExceptionHandlingInterceptor(actionName: String, mapperResolver: ExceptionMapperResolver) : NetworkInterceptorConverts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule ExceptionMapper [jvm]interface ExceptionMapper&lt;in T : Throwable&gt;Maps an exception to a Response ExceptionMapperModule [jvm]class ExceptionMapperModule&lt;M : ExceptionMapper&lt;T&gt;, in T : Throwable&gt;(exceptionClass: KClass&lt;T&gt;, mapperClass: KClass&lt;M&gt;) : KAbstractModuleBinds a Throwable to an ExceptionMapper. ExceptionMapperResolver [jvm]@Singletonclass ExceptionMapperResolver GrpcErrorResponse [jvm]data class GrpcErrorResponse@JvmOverloadsconstructor(status: GrpcStatus, message: String?, details: List&lt;AnyMessage&gt;) RequestBodyExceptionMapper [jvm]class RequestBodyExceptionMapper : ExceptionMapper&lt;RequestBodyException&gt;"},{"location":"0.x/misk/misk/misk.web.exceptions/#functions","title":"Functions","text":"Name Summary toGrpcStatus [jvm]fun toGrpcStatus(statusCode: Int): GrpcStatushttps://grpc.github.io/grpc/core/md_doc_http-grpc-status-mapping.html"},{"location":"0.x/misk/misk/misk.web.exceptions/to-grpc-status/","title":"toGrpcStatus - Misk","text":"<p>//misk/misk.web.exceptions/toGrpcStatus</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/to-grpc-status/#togrpcstatus","title":"toGrpcStatus","text":"<p>[jvm]\\ fun toGrpcStatus(statusCode: Int): GrpcStatus</p> <p>https://grpc.github.io/grpc/core/md_doc_http-grpc-status-mapping.html</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-action-exception-log-level-config/","title":"ActionExceptionLogLevelConfig - Misk","text":"<p>//misk/misk.web.exceptions/ActionExceptionLogLevelConfig</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-action-exception-log-level-config/#actionexceptionloglevelconfig","title":"ActionExceptionLogLevelConfig","text":"<p>[jvm]\\ data class ActionExceptionLogLevelConfig@JvmOverloadsconstructor(client_error_level: Level, server_error_level: Level) : Config</p> <p>Configures the log Level for an ActionException.</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-action-exception-log-level-config/#constructors","title":"Constructors","text":"ActionExceptionLogLevelConfig [jvm]@JvmOverloadsfun ActionExceptionLogLevelConfig(client_error_level: Level = Level.WARN, server_error_level: Level = Level.ERROR)"},{"location":"0.x/misk/misk/misk.web.exceptions/-action-exception-log-level-config/#properties","title":"Properties","text":"Name Summary client_error_level [jvm]val client_error_level: Levelthe level used for 4xx error codes server_error_level [jvm]val server_error_level: Levelthe level used for 5xx error codes"},{"location":"0.x/misk/misk/misk.web.exceptions/-action-exception-log-level-config/-action-exception-log-level-config/","title":"ActionExceptionLogLevelConfig - Misk","text":"<p>//misk/misk.web.exceptions/ActionExceptionLogLevelConfig/ActionExceptionLogLevelConfig</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-action-exception-log-level-config/-action-exception-log-level-config/#actionexceptionloglevelconfig","title":"ActionExceptionLogLevelConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun ActionExceptionLogLevelConfig(client_error_level: Level = Level.WARN, server_error_level: Level = Level.ERROR)</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-action-exception-log-level-config/client_error_level/","title":"client_error_level - Misk","text":"<p>//misk/misk.web.exceptions/ActionExceptionLogLevelConfig/client_error_level</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-action-exception-log-level-config/client_error_level/#client_error_level","title":"client_error_level","text":"<p>[jvm]\\ val client_error_level: Level</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-action-exception-log-level-config/server_error_level/","title":"server_error_level - Misk","text":"<p>//misk/misk.web.exceptions/ActionExceptionLogLevelConfig/server_error_level</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-action-exception-log-level-config/server_error_level/#server_error_level","title":"server_error_level","text":"<p>[jvm]\\ val server_error_level: Level</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/","title":"ExceptionHandlingInterceptor - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionHandlingInterceptor</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/#exceptionhandlinginterceptor","title":"ExceptionHandlingInterceptor","text":"<p>[jvm]\\ class ExceptionHandlingInterceptor(actionName: String, mapperResolver: ExceptionMapperResolver) : NetworkInterceptor</p> <p>Converts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule</p> <p>TODO(isabel): Set the response body in a ThreadLocal to log in RequestLoggingInterceptor</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/#constructors","title":"Constructors","text":"ExceptionHandlingInterceptor [jvm]fun ExceptionHandlingInterceptor(actionName: String, mapperResolver: ExceptionMapperResolver)"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/#types","title":"Types","text":"Name Summary Factory [jvm]class Factory : NetworkInterceptor.Factory"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/#functions","title":"Functions","text":"Name Summary intercept [jvm]open override fun intercept(chain: NetworkChain)"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/-exception-handling-interceptor/","title":"ExceptionHandlingInterceptor - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionHandlingInterceptor/ExceptionHandlingInterceptor</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/-exception-handling-interceptor/#exceptionhandlinginterceptor","title":"ExceptionHandlingInterceptor","text":"<p>[jvm]\\ fun ExceptionHandlingInterceptor(actionName: String, mapperResolver: ExceptionMapperResolver)</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/intercept/","title":"intercept - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionHandlingInterceptor/intercept</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/intercept/#intercept","title":"intercept","text":"<p>[jvm]\\ open override fun intercept(chain: NetworkChain)</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionHandlingInterceptor/Factory</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ class Factory : NetworkInterceptor.Factory</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(action: Action): ExceptionHandlingInterceptor"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionHandlingInterceptor/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-handling-interceptor/-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(action: Action): ExceptionHandlingInterceptor</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper/","title":"ExceptionMapper - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionMapper</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper/#exceptionmapper","title":"ExceptionMapper","text":"<p>[jvm]\\ interface ExceptionMapper&lt;in T : Throwable&gt;</p> <p>Maps an exception to a Response</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper/#functions","title":"Functions","text":"Name Summary loggingLevel [jvm]open fun loggingLevel(th: T): Level toGrpcResponse [jvm]open fun toGrpcResponse(th: T): GrpcErrorResponse? toResponse [jvm]abstract fun toResponse(th: T): Response&lt;ResponseBody&gt;"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper/#inheritors","title":"Inheritors","text":"Name RequestBodyExceptionMapper"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper/logging-level/","title":"loggingLevel - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionMapper/loggingLevel</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper/logging-level/#logginglevel","title":"loggingLevel","text":"<p>[jvm]\\ open fun loggingLevel(th: T): Level</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper/logging-level/#return","title":"Return","text":"<p>the level at which the given exception should be logged. defaults to ERROR but can be overridden by the mapper for the given exception</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper/to-grpc-response/","title":"toGrpcResponse - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionMapper/toGrpcResponse</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper/to-grpc-response/#togrpcresponse","title":"toGrpcResponse","text":"<p>[jvm]\\ open fun toGrpcResponse(th: T): GrpcErrorResponse?</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper/to-response/","title":"toResponse - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionMapper/toResponse</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper/to-response/#toresponse","title":"toResponse","text":"<p>[jvm]\\ abstract fun toResponse(th: T): Response&lt;ResponseBody&gt;</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper/to-response/#return","title":"Return","text":"<p>the Response corresponding to the exception.</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/","title":"ExceptionMapperModule - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionMapperModule</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/#exceptionmappermodule","title":"ExceptionMapperModule","text":"<p>[jvm]\\ class ExceptionMapperModule&lt;M : ExceptionMapper&lt;T&gt;, in T : Throwable&gt;(exceptionClass: KClass&lt;T&gt;, mapperClass: KClass&lt;M&gt;) : KAbstractModule</p> <p>Binds a Throwable to an ExceptionMapper.</p> <p>When an Exception occurs dispatching an Action, the bound ExceptionMapper is called to handle the Exception. If there is not an explicit binding for the thrown Exception, the mapper for the closest superclass is used.</p> <p>Given the example code</p> <p>install(ExceptionMapperModule.create&lt;ActionException, ActionExceptionMapper&gt;())\\ install(ExceptionMapperModule.create&lt;MyActionException, MyActionExceptionMapper&gt;())\\ \\ class MyActionException : ActionException {}\\ class MyOtherActionException : ActionException {}</p> <p>MyActionException maps to the specific MyActionExceptionMapper and MyOtherActionException maps to the ActionExceptionMapper since uses the binding of the closest bound superclass.</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/#constructors","title":"Constructors","text":"ExceptionMapperModule [jvm]fun &lt;M : ExceptionMapper&lt;T&gt;, in T : Throwable&gt; ExceptionMapperModule(exceptionClass: KClass&lt;T&gt;, mapperClass: KClass&lt;M&gt;)"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder exceptionClass [jvm]val exceptionClass: KClass&lt;T&gt;"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/-exception-mapper-module/","title":"ExceptionMapperModule - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionMapperModule/ExceptionMapperModule</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/-exception-mapper-module/#exceptionmappermodule","title":"ExceptionMapperModule","text":"<p>[jvm]\\ fun &lt;M : ExceptionMapper&lt;T&gt;, in T : Throwable&gt; ExceptionMapperModule(exceptionClass: KClass&lt;T&gt;, mapperClass: KClass&lt;M&gt;)</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/exception-class/","title":"exceptionClass - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionMapperModule/exceptionClass</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/exception-class/#exceptionclass","title":"exceptionClass","text":"<p>[jvm]\\ val exceptionClass: KClass&lt;T&gt;</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionMapperModule/Companion</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/-companion/#functions","title":"Functions","text":"Name Summary create [jvm]inline fun &lt;T : Throwable, M : ExceptionMapper&lt;T&gt;&gt; create(): ExceptionMapperModule&lt;M, T&gt;"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/-companion/create/","title":"create - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionMapperModule/Companion/create</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-module/-companion/create/#create","title":"create","text":"<p>[jvm]\\ inline fun &lt;T : Throwable, M : ExceptionMapper&lt;T&gt;&gt; create(): ExceptionMapperModule&lt;M, T&gt;</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-resolver/","title":"ExceptionMapperResolver - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionMapperResolver</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-resolver/#exceptionmapperresolver","title":"ExceptionMapperResolver","text":"<p>[jvm]\\ @Singleton</p> <p>class ExceptionMapperResolver</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-resolver/#functions","title":"Functions","text":"Name Summary mapperFor [jvm]fun mapperFor(th: Throwable): ExceptionMapper&lt;Throwable&gt;?"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-resolver/mapper-for/","title":"mapperFor - Misk","text":"<p>//misk/misk.web.exceptions/ExceptionMapperResolver/mapperFor</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-exception-mapper-resolver/mapper-for/#mapperfor","title":"mapperFor","text":"<p>[jvm]\\ fun mapperFor(th: Throwable): ExceptionMapper&lt;Throwable&gt;?</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/","title":"GrpcErrorResponse - Misk","text":"<p>//misk/misk.web.exceptions/GrpcErrorResponse</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/#grpcerrorresponse","title":"GrpcErrorResponse","text":"<p>[jvm]\\ data class GrpcErrorResponse@JvmOverloadsconstructor(status: GrpcStatus, message: String?, details: List&lt;AnyMessage&gt;)</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/#functions","title":"Functions","text":"Name Summary copy [jvm]@JvmOverloadsfun copy(status: GrpcStatus = this.status, message: String? = this.message): GrpcErrorResponse"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/#properties","title":"Properties","text":"Name Summary details [jvm]val details: List&lt;AnyMessage&gt; message [jvm]val message: String? status [jvm]val status: GrpcStatus"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/-grpc-error-response/","title":"GrpcErrorResponse - Misk","text":"<p>//misk/misk.web.exceptions/GrpcErrorResponse/GrpcErrorResponse</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/-grpc-error-response/#grpcerrorresponse","title":"GrpcErrorResponse","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun GrpcErrorResponse(status: GrpcStatus, message: String?, details: List&lt;AnyMessage&gt; = listOf())</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/copy/","title":"copy - Misk","text":"<p>//misk/misk.web.exceptions/GrpcErrorResponse/copy</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/copy/#copy","title":"copy","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun copy(status: GrpcStatus = this.status, message: String? = this.message): GrpcErrorResponse</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/details/","title":"details - Misk","text":"<p>//misk/misk.web.exceptions/GrpcErrorResponse/details</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/details/#details","title":"details","text":"<p>[jvm]\\ val details: List&lt;AnyMessage&gt;</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/message/","title":"message - Misk","text":"<p>//misk/misk.web.exceptions/GrpcErrorResponse/message</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/message/#message","title":"message","text":"<p>[jvm]\\ val message: String?</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/status/","title":"status - Misk","text":"<p>//misk/misk.web.exceptions/GrpcErrorResponse/status</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/status/#status","title":"status","text":"<p>[jvm]\\ val status: GrpcStatus</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.web.exceptions/GrpcErrorResponse/Companion</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/-companion/#properties","title":"Properties","text":"Name Summary INTERNAL_SERVER_ERROR [jvm]val INTERNAL_SERVER_ERROR: GrpcErrorResponse"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/-companion/-i-n-t-e-r-n-a-l_-s-e-r-v-e-r_-e-r-r-o-r/","title":"INTERNAL_SERVER_ERROR - Misk","text":"<p>//misk/misk.web.exceptions/GrpcErrorResponse/Companion/INTERNAL_SERVER_ERROR</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-grpc-error-response/-companion/-i-n-t-e-r-n-a-l_-s-e-r-v-e-r_-e-r-r-o-r/#internal_server_error","title":"INTERNAL_SERVER_ERROR","text":"<p>[jvm]\\ val INTERNAL_SERVER_ERROR: GrpcErrorResponse</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/","title":"RequestBodyExceptionMapper - Misk","text":"<p>//misk/misk.web.exceptions/RequestBodyExceptionMapper</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/#requestbodyexceptionmapper","title":"RequestBodyExceptionMapper","text":"<p>[jvm]\\ class RequestBodyExceptionMapper : ExceptionMapper&lt;RequestBodyException&gt;</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/#functions","title":"Functions","text":"Name Summary loggingLevel [jvm]open override fun loggingLevel(th: RequestBodyException): Level toGrpcResponse [jvm]open fun toGrpcResponse(th: RequestBodyException): GrpcErrorResponse? toResponse [jvm]open override fun toResponse(th: RequestBodyException): Response&lt;ResponseBody&gt;"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/logging-level/","title":"loggingLevel - Misk","text":"<p>//misk/misk.web.exceptions/RequestBodyExceptionMapper/loggingLevel</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/logging-level/#logginglevel","title":"loggingLevel","text":"<p>[jvm]\\ open override fun loggingLevel(th: RequestBodyException): Level</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/logging-level/#return","title":"Return","text":"<p>the level at which the given exception should be logged. defaults to ERROR but can be overridden by the mapper for the given exception</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/to-response/","title":"toResponse - Misk","text":"<p>//misk/misk.web.exceptions/RequestBodyExceptionMapper/toResponse</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/to-response/#toresponse","title":"toResponse","text":"<p>[jvm]\\ open override fun toResponse(th: RequestBodyException): Response&lt;ResponseBody&gt;</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/to-response/#return","title":"Return","text":"<p>the Response corresponding to the exception.</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.web.exceptions/RequestBodyExceptionMapper/Companion</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/-companion/#properties","title":"Properties","text":"Name Summary CLIENT_CLOSED_REQUEST [jvm]val CLIENT_CLOSED_REQUEST: Response&lt;ResponseBody&gt;"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/-companion/-c-l-i-e-n-t_-c-l-o-s-e-d_-r-e-q-u-e-s-t/","title":"CLIENT_CLOSED_REQUEST - Misk","text":"<p>//misk/misk.web.exceptions/RequestBodyExceptionMapper/Companion/CLIENT_CLOSED_REQUEST</p>"},{"location":"0.x/misk/misk/misk.web.exceptions/-request-body-exception-mapper/-companion/-c-l-i-e-n-t_-c-l-o-s-e-d_-r-e-q-u-e-s-t/#client_closed_request","title":"CLIENT_CLOSED_REQUEST","text":"<p>[jvm]\\ val CLIENT_CLOSED_REQUEST: Response&lt;ResponseBody&gt;</p>"},{"location":"0.x/misk/misk/misk.web.extractors/","title":"Package misk.web.extractors - Misk","text":"<p>//misk/misk.web.extractors</p>"},{"location":"0.x/misk/misk/misk.web.extractors/#package-miskwebextractors","title":"Package misk.web.extractors","text":""},{"location":"0.x/misk/misk/misk.web.extractors/#types","title":"Types","text":"Name Summary RequestBodyException [jvm]class RequestBodyException(cause: Throwable) : IOException StringConverter [jvm]typealias StringConverter = (String) -&gt; Any?"},{"location":"0.x/misk/misk/misk.web.extractors/#functions","title":"Functions","text":"Name Summary converterFor [jvm]fun converterFor(type: KType): StringConverter?"},{"location":"0.x/misk/misk/misk.web.extractors/converter-for/","title":"converterFor - Misk","text":"<p>//misk/misk.web.extractors/converterFor</p>"},{"location":"0.x/misk/misk/misk.web.extractors/converter-for/#converterfor","title":"converterFor","text":"<p>[jvm]\\ fun converterFor(type: KType): StringConverter?</p>"},{"location":"0.x/misk/misk/misk.web.extractors/-request-body-exception/","title":"RequestBodyException - Misk","text":"<p>//misk/misk.web.extractors/RequestBodyException</p>"},{"location":"0.x/misk/misk/misk.web.extractors/-request-body-exception/#requestbodyexception","title":"RequestBodyException","text":"<p>[jvm]\\ class RequestBodyException(cause: Throwable) : IOException</p>"},{"location":"0.x/misk/misk/misk.web.extractors/-request-body-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk/misk/misk.web.extractors/-request-body-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk/misk/misk.web.extractors/-request-body-exception/-request-body-exception/","title":"RequestBodyException - Misk","text":"<p>//misk/misk.web.extractors/RequestBodyException/RequestBodyException</p>"},{"location":"0.x/misk/misk/misk.web.extractors/-request-body-exception/-request-body-exception/#requestbodyexception","title":"RequestBodyException","text":"<p>[jvm]\\ fun RequestBodyException(cause: Throwable)</p>"},{"location":"0.x/misk/misk/misk.web.formatter/","title":"Package misk.web.formatter - Misk","text":"<p>//misk/misk.web.formatter</p>"},{"location":"0.x/misk/misk/misk.web.formatter/#package-miskwebformatter","title":"Package misk.web.formatter","text":""},{"location":"0.x/misk/misk/misk.web.formatter/#types","title":"Types","text":"Name Summary ClassNameFormatter [jvm]class ClassNameFormatter@Injectconstructor"},{"location":"0.x/misk/misk/misk.web.formatter/-class-name-formatter/","title":"ClassNameFormatter - Misk","text":"<p>//misk/misk.web.formatter/ClassNameFormatter</p>"},{"location":"0.x/misk/misk/misk.web.formatter/-class-name-formatter/#classnameformatter","title":"ClassNameFormatter","text":"<p>[jvm]\\ class ClassNameFormatter@Injectconstructor</p>"},{"location":"0.x/misk/misk/misk.web.formatter/-class-name-formatter/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.web.formatter/-class-name-formatter/-class-name-formatter/","title":"ClassNameFormatter - Misk","text":"<p>//misk/misk.web.formatter/ClassNameFormatter/ClassNameFormatter</p>"},{"location":"0.x/misk/misk/misk.web.formatter/-class-name-formatter/-class-name-formatter/#classnameformatter","title":"ClassNameFormatter","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ClassNameFormatter()</p>"},{"location":"0.x/misk/misk/misk.web.formatter/-class-name-formatter/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.web.formatter/ClassNameFormatter/Companion</p>"},{"location":"0.x/misk/misk/misk.web.formatter/-class-name-formatter/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.web.formatter/-class-name-formatter/-companion/#functions","title":"Functions","text":"Name Summary format [jvm]fun &lt;T : Any&gt; format(kclass: KClass&lt;T&gt;): String"},{"location":"0.x/misk/misk/misk.web.formatter/-class-name-formatter/-companion/format/","title":"format - Misk","text":"<p>//misk/misk.web.formatter/ClassNameFormatter/Companion/format</p>"},{"location":"0.x/misk/misk/misk.web.formatter/-class-name-formatter/-companion/format/#format","title":"format","text":"<p>[jvm]\\ fun &lt;T : Any&gt; format(kclass: KClass&lt;T&gt;): String</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/","title":"Package misk.web.interceptors - Misk","text":"<p>//misk/misk.web.interceptors</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/#package-miskwebinterceptors","title":"Package misk.web.interceptors","text":""},{"location":"0.x/misk/misk/misk.web.interceptors/#types","title":"Types","text":"Name Summary ActionLoggingConfig [jvm]data class ActionLoggingConfig@JvmOverloadsconstructor(ratePerSecond: Long, errorRatePerSecond: Long, bodySampling: Double, errorBodySampling: Double, excludedEnvironments: List&lt;String&gt;)This class should have all the same config options as LogRequestResponse. See that class for details. BeforeContentEncoding [jvm]@Qualifier@Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE])annotation class BeforeContentEncodingDenotes a target to be in the first order of execution before any content decoding happens. A NetworkInterceptor bound with BeforeContentEncoding is automatically installed before interceptors annotated with ForContentEncoding. InternalErrorInterceptorFactory [jvm]@Singletonclass InternalErrorInterceptorFactory@Injectconstructor : NetworkInterceptor.Factory LogRateLimiter [jvm]@Singletonclass LogRateLimiter@Injectconstructor(rateLimiterFactory: RateLimiter.Factory)Holds rate limiters for logging success and error responses. There is a rate limiter for every action and service that calls it, for both success and error. The rate limiters are created according to the value set in LogRequestResponse annotation. RebalancingInterceptor [jvm]class RebalancingInterceptor@Injectconstructor(random: ThreadLocalRandom, probability: Double) : NetworkInterceptorWhen we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods. RequestBodyLoggingInterceptor [jvm]class RequestBodyLoggingInterceptor : ApplicationInterceptorStores request and response information for an action in a ThreadLocal, to be logged in RequestLoggingInterceptor RequestLoggingConfig [jvm]data class RequestLoggingConfig(actions: Map&lt;String, ActionLoggingConfig&gt;)A set of per-action logging config overrides. RequestLoggingInterceptor [jvm]class RequestLoggingInterceptor : NetworkInterceptorLogs request and response information for an action. Timing information doesn\u2019t count time writing the response to the remote client. RequestLoggingTransformer [jvm]interface RequestLoggingTransformerTransforms request and/or response bodies before they get logged by RequestLoggingInterceptor. Useful for things like stripping out noisy data. RequestResponseBody [jvm]data class RequestResponseBody@JvmOverloadsconstructor(request: Any?, response: Any?, requestHeaders: Any?, responseHeaders: Any?) ResponseBodyMarshallerFactory [jvm]@Singletonclass ResponseBodyMarshallerFactory WideOpenDevelopmentInterceptor [jvm]class WideOpenDevelopmentInterceptor@Injectconstructor : NetworkInterceptor WideOpenDevelopmentInterceptorFactory [jvm]class WideOpenDevelopmentInterceptorFactory@Injectconstructor(wideOpenDevelopmentInterceptor: WideOpenDevelopmentInterceptor, deployment: Deployment) : NetworkInterceptor.Factory"},{"location":"0.x/misk/misk/misk.web.interceptors/#functions","title":"Functions","text":"Name Summary tryTransform [jvm]fun RequestLoggingTransformer.tryTransform(requestResponseBody: RequestResponseBody?): RequestResponseBody?"},{"location":"0.x/misk/misk/misk.web.interceptors/try-transform/","title":"tryTransform - Misk","text":"<p>//misk/misk.web.interceptors/tryTransform</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/try-transform/#trytransform","title":"tryTransform","text":"<p>[jvm]\\ fun RequestLoggingTransformer.tryTransform(requestResponseBody: RequestResponseBody?): RequestResponseBody?</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/","title":"ActionLoggingConfig - Misk","text":"<p>//misk/misk.web.interceptors/ActionLoggingConfig</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/#actionloggingconfig","title":"ActionLoggingConfig","text":"<p>[jvm]\\ data class ActionLoggingConfig@JvmOverloadsconstructor(ratePerSecond: Long, errorRatePerSecond: Long, bodySampling: Double, errorBodySampling: Double, excludedEnvironments: List&lt;String&gt;)</p> <p>This class should have all the same config options as LogRequestResponse. See that class for details.</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/#constructors","title":"Constructors","text":"ActionLoggingConfig [jvm]@JvmOverloadsfun ActionLoggingConfig(ratePerSecond: Long = 10, errorRatePerSecond: Long = 0, bodySampling: Double = 0.0, errorBodySampling: Double = 0.0, excludedEnvironments: List&lt;String&gt; = listOf())"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/#properties","title":"Properties","text":"Name Summary bodySampling [jvm]val bodySampling: Double = 0.0 errorBodySampling [jvm]val errorBodySampling: Double = 0.0 errorRatePerSecond [jvm]val errorRatePerSecond: Long = 0 excludedEnvironments [jvm]val excludedEnvironments: List&lt;String&gt; ratePerSecond [jvm]val ratePerSecond: Long = 10"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/-action-logging-config/","title":"ActionLoggingConfig - Misk","text":"<p>//misk/misk.web.interceptors/ActionLoggingConfig/ActionLoggingConfig</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/-action-logging-config/#actionloggingconfig","title":"ActionLoggingConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun ActionLoggingConfig(ratePerSecond: Long = 10, errorRatePerSecond: Long = 0, bodySampling: Double = 0.0, errorBodySampling: Double = 0.0, excludedEnvironments: List&lt;String&gt; = listOf())</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/body-sampling/","title":"bodySampling - Misk","text":"<p>//misk/misk.web.interceptors/ActionLoggingConfig/bodySampling</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/body-sampling/#bodysampling","title":"bodySampling","text":"<p>[jvm]\\ val bodySampling: Double = 0.0</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/error-body-sampling/","title":"errorBodySampling - Misk","text":"<p>//misk/misk.web.interceptors/ActionLoggingConfig/errorBodySampling</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/error-body-sampling/#errorbodysampling","title":"errorBodySampling","text":"<p>[jvm]\\ val errorBodySampling: Double = 0.0</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/error-rate-per-second/","title":"errorRatePerSecond - Misk","text":"<p>//misk/misk.web.interceptors/ActionLoggingConfig/errorRatePerSecond</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/error-rate-per-second/#errorratepersecond","title":"errorRatePerSecond","text":"<p>[jvm]\\ val errorRatePerSecond: Long = 0</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/excluded-environments/","title":"excludedEnvironments - Misk","text":"<p>//misk/misk.web.interceptors/ActionLoggingConfig/excludedEnvironments</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/excluded-environments/#excludedenvironments","title":"excludedEnvironments","text":"<p>[jvm]\\ val excludedEnvironments: List&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/rate-per-second/","title":"ratePerSecond - Misk","text":"<p>//misk/misk.web.interceptors/ActionLoggingConfig/ratePerSecond</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/rate-per-second/#ratepersecond","title":"ratePerSecond","text":"<p>[jvm]\\ val ratePerSecond: Long = 10</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.web.interceptors/ActionLoggingConfig/Companion</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/-companion/#functions","title":"Functions","text":"Name Summary fromAnnotation [jvm]fun fromAnnotation(logRequestResponse: LogRequestResponse): ActionLoggingConfig fromConfigMapOrAnnotation [jvm]fun fromConfigMapOrAnnotation(action: Action, configs: Set&lt;RequestLoggingConfig&gt;, annotation: LogRequestResponse): ActionLoggingConfig"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/-companion/from-annotation/","title":"fromAnnotation - Misk","text":"<p>//misk/misk.web.interceptors/ActionLoggingConfig/Companion/fromAnnotation</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/-companion/from-annotation/#fromannotation","title":"fromAnnotation","text":"<p>[jvm]\\ fun fromAnnotation(logRequestResponse: LogRequestResponse): ActionLoggingConfig</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/-companion/from-config-map-or-annotation/","title":"fromConfigMapOrAnnotation - Misk","text":"<p>//misk/misk.web.interceptors/ActionLoggingConfig/Companion/fromConfigMapOrAnnotation</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-action-logging-config/-companion/from-config-map-or-annotation/#fromconfigmaporannotation","title":"fromConfigMapOrAnnotation","text":"<p>[jvm]\\ fun fromConfigMapOrAnnotation(action: Action, configs: Set&lt;RequestLoggingConfig&gt;, annotation: LogRequestResponse): ActionLoggingConfig</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-before-content-encoding/","title":"BeforeContentEncoding - Misk","text":"<p>//misk/misk.web.interceptors/BeforeContentEncoding</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-before-content-encoding/#beforecontentencoding","title":"BeforeContentEncoding","text":"<p>[jvm]\\ @Qualifier</p> <p>@Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE])</p> <p>annotation class BeforeContentEncoding</p> <p>Denotes a target to be in the first order of execution before any content decoding happens. A NetworkInterceptor bound with BeforeContentEncoding is automatically installed before interceptors annotated with ForContentEncoding.</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-before-content-encoding/#constructors","title":"Constructors","text":"BeforeContentEncoding [jvm]fun BeforeContentEncoding()"},{"location":"0.x/misk/misk/misk.web.interceptors/-before-content-encoding/-before-content-encoding/","title":"BeforeContentEncoding - Misk","text":"<p>//misk/misk.web.interceptors/BeforeContentEncoding/BeforeContentEncoding</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-before-content-encoding/-before-content-encoding/#beforecontentencoding","title":"BeforeContentEncoding","text":"<p>[jvm]\\ fun BeforeContentEncoding()</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-internal-error-interceptor-factory/","title":"InternalErrorInterceptorFactory - Misk","text":"<p>//misk/misk.web.interceptors/InternalErrorInterceptorFactory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-internal-error-interceptor-factory/#internalerrorinterceptorfactory","title":"InternalErrorInterceptorFactory","text":"<p>[jvm]\\ @Singleton</p> <p>class InternalErrorInterceptorFactory@Injectconstructor : NetworkInterceptor.Factory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-internal-error-interceptor-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(action: Action): NetworkInterceptor?"},{"location":"0.x/misk/misk/misk.web.interceptors/-internal-error-interceptor-factory/-internal-error-interceptor-factory/","title":"InternalErrorInterceptorFactory - Misk","text":"<p>//misk/misk.web.interceptors/InternalErrorInterceptorFactory/InternalErrorInterceptorFactory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-internal-error-interceptor-factory/-internal-error-interceptor-factory/#internalerrorinterceptorfactory","title":"InternalErrorInterceptorFactory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun InternalErrorInterceptorFactory()</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-internal-error-interceptor-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.interceptors/InternalErrorInterceptorFactory/create</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-internal-error-interceptor-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(action: Action): NetworkInterceptor?</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/","title":"LogRateLimiter - Misk","text":"<p>//misk/misk.web.interceptors/LogRateLimiter</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/#logratelimiter","title":"LogRateLimiter","text":"<p>[jvm]\\ @Singleton</p> <p>class LogRateLimiter@Injectconstructor(rateLimiterFactory: RateLimiter.Factory)</p> <p>Holds rate limiters for logging success and error responses. There is a rate limiter for every action and service that calls it, for both success and error. The rate limiters are created according to the value set in LogRequestResponse annotation.</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/#constructors","title":"Constructors","text":"LogRateLimiter [jvm]@Injectfun LogRateLimiter(rateLimiterFactory: RateLimiter.Factory)"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/#types","title":"Types","text":"Name Summary LogBucketId [jvm]data class LogBucketId(actionClass: String, isError: Boolean) : Comparable&lt;LogRateLimiter.LogBucketId&gt;"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/#functions","title":"Functions","text":"Name Summary tryAcquire [jvm]fun tryAcquire(bucketId: LogRateLimiter.LogBucketId, ratePerSecond: Long): Boolean"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-rate-limiter/","title":"LogRateLimiter - Misk","text":"<p>//misk/misk.web.interceptors/LogRateLimiter/LogRateLimiter</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-rate-limiter/#logratelimiter","title":"LogRateLimiter","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun LogRateLimiter(rateLimiterFactory: RateLimiter.Factory)</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/try-acquire/","title":"tryAcquire - Misk","text":"<p>//misk/misk.web.interceptors/LogRateLimiter/tryAcquire</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/try-acquire/#tryacquire","title":"tryAcquire","text":"<p>[jvm]\\ fun tryAcquire(bucketId: LogRateLimiter.LogBucketId, ratePerSecond: Long): Boolean</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/","title":"LogBucketId - Misk","text":"<p>//misk/misk.web.interceptors/LogRateLimiter/LogBucketId</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/#logbucketid","title":"LogBucketId","text":"<p>[jvm]\\ data class LogBucketId(actionClass: String, isError: Boolean) : Comparable&lt;LogRateLimiter.LogBucketId&gt;</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/#functions","title":"Functions","text":"Name Summary compareTo [jvm]open operator override fun compareTo(other: LogRateLimiter.LogBucketId): Int toString [jvm]open override fun toString(): String"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/#properties","title":"Properties","text":"Name Summary actionClass [jvm]val actionClass: StringActionClass from which we can grab the LogRequestResponse isError [jvm]val isError: BooleanIf the response code is error, we look up the errorRateLimiter"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/-log-bucket-id/","title":"LogBucketId - Misk","text":"<p>//misk/misk.web.interceptors/LogRateLimiter/LogBucketId/LogBucketId</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/-log-bucket-id/#logbucketid","title":"LogBucketId","text":"<p>[jvm]\\ fun LogBucketId(actionClass: String, isError: Boolean)</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/action-class/","title":"actionClass - Misk","text":"<p>//misk/misk.web.interceptors/LogRateLimiter/LogBucketId/actionClass</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/action-class/#actionclass","title":"actionClass","text":"<p>[jvm]\\ val actionClass: String</p> <p>ActionClass from which we can grab the LogRequestResponse</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/compare-to/","title":"compareTo - Misk","text":"<p>//misk/misk.web.interceptors/LogRateLimiter/LogBucketId/compareTo</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/compare-to/#compareto","title":"compareTo","text":"<p>[jvm]\\ open operator override fun compareTo(other: LogRateLimiter.LogBucketId): Int</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/is-error/","title":"isError - Misk","text":"<p>//misk/misk.web.interceptors/LogRateLimiter/LogBucketId/isError</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/is-error/#iserror","title":"isError","text":"<p>[jvm]\\ val isError: Boolean</p> <p>If the response code is error, we look up the errorRateLimiter</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/to-string/","title":"toString - Misk","text":"<p>//misk/misk.web.interceptors/LogRateLimiter/LogBucketId/toString</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/","title":"RebalancingInterceptor - Misk","text":"<p>//misk/misk.web.interceptors/RebalancingInterceptor</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/#rebalancinginterceptor","title":"RebalancingInterceptor","text":"<p>[jvm]\\ class RebalancingInterceptor@Injectconstructor(random: ThreadLocalRandom, probability: Double) : NetworkInterceptor</p> <p>When we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods.</p> <p>This does not close Unix domain socket connections. This interceptor is intended to mitigate imbalanced load from long-lived client connections maintained from client apps. Connections over UDS are oriented towards service mesh sidecars that employ sufficient client-side load balancing.</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/#constructors","title":"Constructors","text":"RebalancingInterceptor [jvm]@Injectfun RebalancingInterceptor(random: ThreadLocalRandom, probability: Double)"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/#types","title":"Types","text":"Name Summary Factory [jvm]@Singletonclass Factory : NetworkInterceptor.Factory"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/#functions","title":"Functions","text":"Name Summary intercept [jvm]open override fun intercept(chain: NetworkChain)"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/-rebalancing-interceptor/","title":"RebalancingInterceptor - Misk","text":"<p>//misk/misk.web.interceptors/RebalancingInterceptor/RebalancingInterceptor</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/-rebalancing-interceptor/#rebalancinginterceptor","title":"RebalancingInterceptor","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun RebalancingInterceptor(random: ThreadLocalRandom, probability: Double)</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/intercept/","title":"intercept - Misk","text":"<p>//misk/misk.web.interceptors/RebalancingInterceptor/intercept</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/intercept/#intercept","title":"intercept","text":"<p>[jvm]\\ open override fun intercept(chain: NetworkChain)</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.interceptors/RebalancingInterceptor/Factory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ @Singleton</p> <p>class Factory : NetworkInterceptor.Factory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(action: Action): NetworkInterceptor?"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.interceptors/RebalancingInterceptor/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-rebalancing-interceptor/-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(action: Action): NetworkInterceptor?</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-body-logging-interceptor/","title":"RequestBodyLoggingInterceptor - Misk","text":"<p>//misk/misk.web.interceptors/RequestBodyLoggingInterceptor</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-body-logging-interceptor/#requestbodylogginginterceptor","title":"RequestBodyLoggingInterceptor","text":"<p>[jvm]\\ class RequestBodyLoggingInterceptor : ApplicationInterceptor</p> <p>Stores request and response information for an action in a ThreadLocal, to be logged in RequestLoggingInterceptor</p> <p>Timing information doesn\u2019t count time writing the response to the remote client.</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-body-logging-interceptor/#types","title":"Types","text":"Name Summary Factory [jvm]@Singletonclass Factory : ApplicationInterceptor.Factory"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-body-logging-interceptor/#functions","title":"Functions","text":"Name Summary intercept [jvm]open override fun intercept(chain: Chain): Any"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-body-logging-interceptor/intercept/","title":"intercept - Misk","text":"<p>//misk/misk.web.interceptors/RequestBodyLoggingInterceptor/intercept</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-body-logging-interceptor/intercept/#intercept","title":"intercept","text":"<p>[jvm]\\ open override fun intercept(chain: Chain): Any</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-body-logging-interceptor/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.interceptors/RequestBodyLoggingInterceptor/Factory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-body-logging-interceptor/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ @Singleton</p> <p>class Factory : ApplicationInterceptor.Factory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-body-logging-interceptor/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(action: Action): ApplicationInterceptor?"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-body-logging-interceptor/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.interceptors/RequestBodyLoggingInterceptor/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-body-logging-interceptor/-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(action: Action): ApplicationInterceptor?</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-config/","title":"RequestLoggingConfig - Misk","text":"<p>//misk/misk.web.interceptors/RequestLoggingConfig</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-config/#requestloggingconfig","title":"RequestLoggingConfig","text":"<p>[jvm]\\ data class RequestLoggingConfig(actions: Map&lt;String, ActionLoggingConfig&gt;)</p> <p>A set of per-action logging config overrides.</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-config/#constructors","title":"Constructors","text":"RequestLoggingConfig [jvm]fun RequestLoggingConfig(actions: Map&lt;String, ActionLoggingConfig&gt;)"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-config/#properties","title":"Properties","text":"Name Summary actions [jvm]val actions: Map&lt;String, ActionLoggingConfig&gt;"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-config/-request-logging-config/","title":"RequestLoggingConfig - Misk","text":"<p>//misk/misk.web.interceptors/RequestLoggingConfig/RequestLoggingConfig</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-config/-request-logging-config/#requestloggingconfig","title":"RequestLoggingConfig","text":"<p>[jvm]\\ fun RequestLoggingConfig(actions: Map&lt;String, ActionLoggingConfig&gt;)</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-config/actions/","title":"actions - Misk","text":"<p>//misk/misk.web.interceptors/RequestLoggingConfig/actions</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-config/actions/#actions","title":"actions","text":"<p>[jvm]\\ val actions: Map&lt;String, ActionLoggingConfig&gt;</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-interceptor/","title":"RequestLoggingInterceptor - Misk","text":"<p>//misk/misk.web.interceptors/RequestLoggingInterceptor</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-interceptor/#requestlogginginterceptor","title":"RequestLoggingInterceptor","text":"<p>[jvm]\\ class RequestLoggingInterceptor : NetworkInterceptor</p> <p>Logs request and response information for an action. Timing information doesn\u2019t count time writing the response to the remote client.</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-interceptor/#types","title":"Types","text":"Name Summary Factory [jvm]@Singletonclass Factory : NetworkInterceptor.Factory"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-interceptor/#functions","title":"Functions","text":"Name Summary intercept [jvm]open override fun intercept(chain: NetworkChain) maybeLog [jvm]fun maybeLog(httpCall: HttpCall, stopwatch: Stopwatch, error: Throwable?)"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-interceptor/intercept/","title":"intercept - Misk","text":"<p>//misk/misk.web.interceptors/RequestLoggingInterceptor/intercept</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-interceptor/intercept/#intercept","title":"intercept","text":"<p>[jvm]\\ open override fun intercept(chain: NetworkChain)</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-interceptor/maybe-log/","title":"maybeLog - Misk","text":"<p>//misk/misk.web.interceptors/RequestLoggingInterceptor/maybeLog</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-interceptor/maybe-log/#maybelog","title":"maybeLog","text":"<p>[jvm]\\ fun maybeLog(httpCall: HttpCall, stopwatch: Stopwatch, error: Throwable?)</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-interceptor/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.interceptors/RequestLoggingInterceptor/Factory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-interceptor/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ @Singleton</p> <p>class Factory : NetworkInterceptor.Factory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-interceptor/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(action: Action): NetworkInterceptor?"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-interceptor/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.interceptors/RequestLoggingInterceptor/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-interceptor/-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(action: Action): NetworkInterceptor?</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-transformer/","title":"RequestLoggingTransformer - Misk","text":"<p>//misk/misk.web.interceptors/RequestLoggingTransformer</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-transformer/#requestloggingtransformer","title":"RequestLoggingTransformer","text":"<p>[jvm]\\ interface RequestLoggingTransformer</p> <p>Transforms request and/or response bodies before they get logged by RequestLoggingInterceptor. Useful for things like stripping out noisy data.</p> <p>Note that the order in which RequestLoggingTransformers get applied is considered undefined and cannot be reliably controlled.</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-transformer/#functions","title":"Functions","text":"Name Summary transform [jvm]abstract fun transform(requestResponseBody: RequestResponseBody?): RequestResponseBody?"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-transformer/#extensions","title":"Extensions","text":"Name Summary tryTransform [jvm]fun RequestLoggingTransformer.tryTransform(requestResponseBody: RequestResponseBody?): RequestResponseBody?"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-transformer/transform/","title":"transform - Misk","text":"<p>//misk/misk.web.interceptors/RequestLoggingTransformer/transform</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-logging-transformer/transform/#transform","title":"transform","text":"<p>[jvm]\\ abstract fun transform(requestResponseBody: RequestResponseBody?): RequestResponseBody?</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-response-body/","title":"RequestResponseBody - Misk","text":"<p>//misk/misk.web.interceptors/RequestResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-response-body/#requestresponsebody","title":"RequestResponseBody","text":"<p>[jvm]\\ data class RequestResponseBody@JvmOverloadsconstructor(request: Any?, response: Any?, requestHeaders: Any?, responseHeaders: Any?)</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-response-body/#properties","title":"Properties","text":"Name Summary request [jvm]val request: Any? requestHeaders [jvm]val requestHeaders: Any? = null response [jvm]val response: Any? responseHeaders [jvm]val responseHeaders: Any? = null"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-response-body/-request-response-body/","title":"RequestResponseBody - Misk","text":"<p>//misk/misk.web.interceptors/RequestResponseBody/RequestResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-response-body/-request-response-body/#requestresponsebody","title":"RequestResponseBody","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun RequestResponseBody(request: Any?, response: Any?, requestHeaders: Any? = null, responseHeaders: Any? = null)</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-response-body/request-headers/","title":"requestHeaders - Misk","text":"<p>//misk/misk.web.interceptors/RequestResponseBody/requestHeaders</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-response-body/request-headers/#requestheaders","title":"requestHeaders","text":"<p>[jvm]\\ val requestHeaders: Any? = null</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-response-body/request/","title":"request - Misk","text":"<p>//misk/misk.web.interceptors/RequestResponseBody/request</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-response-body/request/#request","title":"request","text":"<p>[jvm]\\ val request: Any?</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-response-body/response-headers/","title":"responseHeaders - Misk","text":"<p>//misk/misk.web.interceptors/RequestResponseBody/responseHeaders</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-response-body/response-headers/#responseheaders","title":"responseHeaders","text":"<p>[jvm]\\ val responseHeaders: Any? = null</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-response-body/response/","title":"response - Misk","text":"<p>//misk/misk.web.interceptors/RequestResponseBody/response</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-request-response-body/response/#response","title":"response","text":"<p>[jvm]\\ val response: Any?</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-response-body-marshaller-factory/","title":"ResponseBodyMarshallerFactory - Misk","text":"<p>//misk/misk.web.interceptors/ResponseBodyMarshallerFactory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-response-body-marshaller-factory/#responsebodymarshallerfactory","title":"ResponseBodyMarshallerFactory","text":"<p>[jvm]\\ @Singleton</p> <p>class ResponseBodyMarshallerFactory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-response-body-marshaller-factory/#functions","title":"Functions","text":"Name Summary create [jvm]fun create(action: Action): Marshaller&lt;Any&gt;Returns a marshaller for action, or null if it has no response to marshal."},{"location":"0.x/misk/misk/misk.web.interceptors/-response-body-marshaller-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.interceptors/ResponseBodyMarshallerFactory/create</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-response-body-marshaller-factory/create/#create","title":"create","text":"<p>[jvm]\\ fun create(action: Action): Marshaller&lt;Any&gt;</p> <p>Returns a marshaller for action, or null if it has no response to marshal.</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor/","title":"WideOpenDevelopmentInterceptor - Misk","text":"<p>//misk/misk.web.interceptors/WideOpenDevelopmentInterceptor</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor/#wideopendevelopmentinterceptor","title":"WideOpenDevelopmentInterceptor","text":"<p>[jvm]\\ class WideOpenDevelopmentInterceptor@Injectconstructor : NetworkInterceptor</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor/#functions","title":"Functions","text":"Name Summary intercept [jvm]open override fun intercept(chain: NetworkChain)"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor/-wide-open-development-interceptor/","title":"WideOpenDevelopmentInterceptor - Misk","text":"<p>//misk/misk.web.interceptors/WideOpenDevelopmentInterceptor/WideOpenDevelopmentInterceptor</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor/-wide-open-development-interceptor/#wideopendevelopmentinterceptor","title":"WideOpenDevelopmentInterceptor","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun WideOpenDevelopmentInterceptor()</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor/intercept/","title":"intercept - Misk","text":"<p>//misk/misk.web.interceptors/WideOpenDevelopmentInterceptor/intercept</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor/intercept/#intercept","title":"intercept","text":"<p>[jvm]\\ open override fun intercept(chain: NetworkChain)</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor-factory/","title":"WideOpenDevelopmentInterceptorFactory - Misk","text":"<p>//misk/misk.web.interceptors/WideOpenDevelopmentInterceptorFactory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor-factory/#wideopendevelopmentinterceptorfactory","title":"WideOpenDevelopmentInterceptorFactory","text":"<p>[jvm]\\ class WideOpenDevelopmentInterceptorFactory@Injectconstructor(wideOpenDevelopmentInterceptor: WideOpenDevelopmentInterceptor, deployment: Deployment) : NetworkInterceptor.Factory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(action: Action): NetworkInterceptor?"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor-factory/-wide-open-development-interceptor-factory/","title":"WideOpenDevelopmentInterceptorFactory - Misk","text":"<p>//misk/misk.web.interceptors/WideOpenDevelopmentInterceptorFactory/WideOpenDevelopmentInterceptorFactory</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor-factory/-wide-open-development-interceptor-factory/#wideopendevelopmentinterceptorfactory","title":"WideOpenDevelopmentInterceptorFactory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun WideOpenDevelopmentInterceptorFactory(wideOpenDevelopmentInterceptor: WideOpenDevelopmentInterceptor, deployment: Deployment)</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.interceptors/WideOpenDevelopmentInterceptorFactory/create</p>"},{"location":"0.x/misk/misk/misk.web.interceptors/-wide-open-development-interceptor-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(action: Action): NetworkInterceptor?</p>"},{"location":"0.x/misk/misk/misk.web.jetty/","title":"Package misk.web.jetty - Misk","text":"<p>//misk/misk.web.jetty</p>"},{"location":"0.x/misk/misk/misk.web.jetty/#package-miskwebjetty","title":"Package misk.web.jetty","text":""},{"location":"0.x/misk/misk/misk.web.jetty/#types","title":"Types","text":"Name Summary JettyService [jvm]@Singletonclass JettyService : AbstractIdleService MeasuredQueuedThreadPool [jvm]class MeasuredQueuedThreadPool(threadPool: QueuedThreadPool) : MeasuredThreadPoolA MeasuredThreadPool for a QueuedThreadPool MeasuredThreadPool [jvm]interface MeasuredThreadPoolA common interface that can emit metrics about a thread pool. MeasuredThreadPoolExecutor [jvm]class MeasuredThreadPoolExecutor(threadPool: ThreadPoolExecutor) : MeasuredThreadPoolA MeasuredThreadPool for a ThreadPoolExecutor ThreadPoolQueueMetrics [jvm]@Singletonclass ThreadPoolQueueMetrics"},{"location":"0.x/misk/misk/misk.web.jetty/-jetty-service/","title":"JettyService - Misk","text":"<p>//misk/misk.web.jetty/JettyService</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-jetty-service/#jettyservice","title":"JettyService","text":"<p>[jvm]\\ @Singleton</p> <p>class JettyService : AbstractIdleService</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-jetty-service/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk/misk/misk.web.jetty/-jetty-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk/misk/misk.web.jetty/-jetty-service/#properties","title":"Properties","text":"Name Summary healthServerUrl [jvm]val healthServerUrl: HttpUrl? httpServerUrl [jvm]val httpServerUrl: HttpUrl httpsServerUrl [jvm]val httpsServerUrl: HttpUrl?"},{"location":"0.x/misk/misk/misk.web.jetty/-jetty-service/health-server-url/","title":"healthServerUrl - Misk","text":"<p>//misk/misk.web.jetty/JettyService/healthServerUrl</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-jetty-service/health-server-url/#healthserverurl","title":"healthServerUrl","text":"<p>[jvm]\\ val healthServerUrl: HttpUrl?</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-jetty-service/http-server-url/","title":"httpServerUrl - Misk","text":"<p>//misk/misk.web.jetty/JettyService/httpServerUrl</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-jetty-service/http-server-url/#httpserverurl","title":"httpServerUrl","text":"<p>[jvm]\\ val httpServerUrl: HttpUrl</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-jetty-service/https-server-url/","title":"httpsServerUrl - Misk","text":"<p>//misk/misk.web.jetty/JettyService/httpsServerUrl</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-jetty-service/https-server-url/#httpsserverurl","title":"httpsServerUrl","text":"<p>[jvm]\\ val httpsServerUrl: HttpUrl?</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-jetty-service/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.web.jetty/JettyService/Companion</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-jetty-service/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/","title":"MeasuredQueuedThreadPool - Misk","text":"<p>//misk/misk.web.jetty/MeasuredQueuedThreadPool</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/#measuredqueuedthreadpool","title":"MeasuredQueuedThreadPool","text":"<p>[jvm]\\ class MeasuredQueuedThreadPool(threadPool: QueuedThreadPool) : MeasuredThreadPool</p> <p>A MeasuredThreadPool for a QueuedThreadPool</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/#constructors","title":"Constructors","text":"MeasuredQueuedThreadPool [jvm]fun MeasuredQueuedThreadPool(threadPool: QueuedThreadPool)"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/#functions","title":"Functions","text":"Name Summary activeCount [jvm]open override fun activeCount(): IntThe number of active threads. maxPoolSize [jvm]open override fun maxPoolSize(): IntThe maximum size the pool can grow to. poolSize [jvm]open override fun poolSize(): IntThe current size of the thread pool. queueSize [jvm]open override fun queueSize(): IntThe current number of tasks in the queue waiting to be processed by the thread pool."},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/-measured-queued-thread-pool/","title":"MeasuredQueuedThreadPool - Misk","text":"<p>//misk/misk.web.jetty/MeasuredQueuedThreadPool/MeasuredQueuedThreadPool</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/-measured-queued-thread-pool/#measuredqueuedthreadpool","title":"MeasuredQueuedThreadPool","text":"<p>[jvm]\\ fun MeasuredQueuedThreadPool(threadPool: QueuedThreadPool)</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/active-count/","title":"activeCount - Misk","text":"<p>//misk/misk.web.jetty/MeasuredQueuedThreadPool/activeCount</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/active-count/#activecount","title":"activeCount","text":"<p>[jvm]\\ open override fun activeCount(): Int</p> <p>The number of active threads.</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/max-pool-size/","title":"maxPoolSize - Misk","text":"<p>//misk/misk.web.jetty/MeasuredQueuedThreadPool/maxPoolSize</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/max-pool-size/#maxpoolsize","title":"maxPoolSize","text":"<p>[jvm]\\ open override fun maxPoolSize(): Int</p> <p>The maximum size the pool can grow to.</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/pool-size/","title":"poolSize - Misk","text":"<p>//misk/misk.web.jetty/MeasuredQueuedThreadPool/poolSize</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/pool-size/#poolsize","title":"poolSize","text":"<p>[jvm]\\ open override fun poolSize(): Int</p> <p>The current size of the thread pool.</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/queue-size/","title":"queueSize - Misk","text":"<p>//misk/misk.web.jetty/MeasuredQueuedThreadPool/queueSize</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-queued-thread-pool/queue-size/#queuesize","title":"queueSize","text":"<p>[jvm]\\ open override fun queueSize(): Int</p> <p>The current number of tasks in the queue waiting to be processed by the thread pool.</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool/","title":"MeasuredThreadPool - Misk","text":"<p>//misk/misk.web.jetty/MeasuredThreadPool</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool/#measuredthreadpool","title":"MeasuredThreadPool","text":"<p>[jvm]\\ interface MeasuredThreadPool</p> <p>A common interface that can emit metrics about a thread pool.</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool/#functions","title":"Functions","text":"Name Summary activeCount [jvm]abstract fun activeCount(): IntThe number of active threads. maxPoolSize [jvm]abstract fun maxPoolSize(): IntThe maximum size the pool can grow to. poolSize [jvm]abstract fun poolSize(): IntThe current size of the thread pool. queueSize [jvm]abstract fun queueSize(): IntThe current number of tasks in the queue waiting to be processed by the thread pool."},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool/#inheritors","title":"Inheritors","text":"Name MeasuredQueuedThreadPool MeasuredThreadPoolExecutor"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool/active-count/","title":"activeCount - Misk","text":"<p>//misk/misk.web.jetty/MeasuredThreadPool/activeCount</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool/active-count/#activecount","title":"activeCount","text":"<p>[jvm]\\ abstract fun activeCount(): Int</p> <p>The number of active threads.</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool/max-pool-size/","title":"maxPoolSize - Misk","text":"<p>//misk/misk.web.jetty/MeasuredThreadPool/maxPoolSize</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool/max-pool-size/#maxpoolsize","title":"maxPoolSize","text":"<p>[jvm]\\ abstract fun maxPoolSize(): Int</p> <p>The maximum size the pool can grow to.</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool/pool-size/","title":"poolSize - Misk","text":"<p>//misk/misk.web.jetty/MeasuredThreadPool/poolSize</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool/pool-size/#poolsize","title":"poolSize","text":"<p>[jvm]\\ abstract fun poolSize(): Int</p> <p>The current size of the thread pool.</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool/queue-size/","title":"queueSize - Misk","text":"<p>//misk/misk.web.jetty/MeasuredThreadPool/queueSize</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool/queue-size/#queuesize","title":"queueSize","text":"<p>[jvm]\\ abstract fun queueSize(): Int</p> <p>The current number of tasks in the queue waiting to be processed by the thread pool.</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/","title":"MeasuredThreadPoolExecutor - Misk","text":"<p>//misk/misk.web.jetty/MeasuredThreadPoolExecutor</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/#measuredthreadpoolexecutor","title":"MeasuredThreadPoolExecutor","text":"<p>[jvm]\\ class MeasuredThreadPoolExecutor(threadPool: ThreadPoolExecutor) : MeasuredThreadPool</p> <p>A MeasuredThreadPool for a ThreadPoolExecutor</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/#constructors","title":"Constructors","text":"MeasuredThreadPoolExecutor [jvm]fun MeasuredThreadPoolExecutor(threadPool: ThreadPoolExecutor)"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/#functions","title":"Functions","text":"Name Summary activeCount [jvm]open override fun activeCount(): IntThe number of active threads. maxPoolSize [jvm]open override fun maxPoolSize(): IntThe maximum size the pool can grow to. poolSize [jvm]open override fun poolSize(): IntThe current size of the thread pool. queueSize [jvm]open override fun queueSize(): IntThe current number of tasks in the queue waiting to be processed by the thread pool."},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/-measured-thread-pool-executor/","title":"MeasuredThreadPoolExecutor - Misk","text":"<p>//misk/misk.web.jetty/MeasuredThreadPoolExecutor/MeasuredThreadPoolExecutor</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/-measured-thread-pool-executor/#measuredthreadpoolexecutor","title":"MeasuredThreadPoolExecutor","text":"<p>[jvm]\\ fun MeasuredThreadPoolExecutor(threadPool: ThreadPoolExecutor)</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/active-count/","title":"activeCount - Misk","text":"<p>//misk/misk.web.jetty/MeasuredThreadPoolExecutor/activeCount</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/active-count/#activecount","title":"activeCount","text":"<p>[jvm]\\ open override fun activeCount(): Int</p> <p>The number of active threads.</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/max-pool-size/","title":"maxPoolSize - Misk","text":"<p>//misk/misk.web.jetty/MeasuredThreadPoolExecutor/maxPoolSize</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/max-pool-size/#maxpoolsize","title":"maxPoolSize","text":"<p>[jvm]\\ open override fun maxPoolSize(): Int</p> <p>The maximum size the pool can grow to.</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/pool-size/","title":"poolSize - Misk","text":"<p>//misk/misk.web.jetty/MeasuredThreadPoolExecutor/poolSize</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/pool-size/#poolsize","title":"poolSize","text":"<p>[jvm]\\ open override fun poolSize(): Int</p> <p>The current size of the thread pool.</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/queue-size/","title":"queueSize - Misk","text":"<p>//misk/misk.web.jetty/MeasuredThreadPoolExecutor/queueSize</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-measured-thread-pool-executor/queue-size/#queuesize","title":"queueSize","text":"<p>[jvm]\\ open override fun queueSize(): Int</p> <p>The current number of tasks in the queue waiting to be processed by the thread pool.</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-thread-pool-queue-metrics/","title":"ThreadPoolQueueMetrics - Misk","text":"<p>//misk/misk.web.jetty/ThreadPoolQueueMetrics</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-thread-pool-queue-metrics/#threadpoolqueuemetrics","title":"ThreadPoolQueueMetrics","text":"<p>[jvm]\\ @Singleton</p> <p>class ThreadPoolQueueMetrics</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-thread-pool-queue-metrics/#functions","title":"Functions","text":"Name Summary recordQueueLatency [jvm]fun recordQueueLatency(latency: Duration)"},{"location":"0.x/misk/misk/misk.web.jetty/-thread-pool-queue-metrics/record-queue-latency/","title":"recordQueueLatency - Misk","text":"<p>//misk/misk.web.jetty/ThreadPoolQueueMetrics/recordQueueLatency</p>"},{"location":"0.x/misk/misk/misk.web.jetty/-thread-pool-queue-metrics/record-queue-latency/#recordqueuelatency","title":"recordQueueLatency","text":"<p>[jvm]\\ fun recordQueueLatency(latency: Duration)</p>"},{"location":"0.x/misk/misk/misk.web.marshal/","title":"Package misk.web.marshal - Misk","text":"<p>//misk/misk.web.marshal</p>"},{"location":"0.x/misk/misk/misk.web.marshal/#package-miskwebmarshal","title":"Package misk.web.marshal","text":""},{"location":"0.x/misk/misk/misk.web.marshal/#types","title":"Types","text":"Name Summary GenericMarshallers [jvm]object GenericMarshallersHandles generic marshalling, for cases where the action doesn\u2019t explicitly specify return content GenericUnmarshallers [jvm]object GenericUnmarshallersHandles generic unmarshalling, for cases where the action can accept anything JsonMarshaller [jvm]class JsonMarshaller&lt;T&gt;(adapter: JsonAdapter&lt;T&gt;) : Marshaller&lt;T&gt; JsonUnmarshaller [jvm]class JsonUnmarshaller(adapter: JsonAdapter&lt;Any&gt;) : Unmarshaller Marshaller [jvm]interface Marshaller&lt;in T&gt;Marshalls typed kotlin objects into a ResponseBody MultipartUnmarshaller [jvm]object MultipartUnmarshaller : Unmarshaller PlainTextMarshaller [jvm]object PlainTextMarshaller : Marshaller&lt;Any&gt; PlainTextUnmarshaller [jvm]object PlainTextUnmarshaller ProtobufMarshaller [jvm]class ProtobufMarshaller&lt;T&gt;(adapter: ProtoAdapter&lt;T&gt;) : Marshaller&lt;T&gt; ProtobufUnmarshaller [jvm]class ProtobufUnmarshaller(adapter: ProtoAdapter&lt;Any&gt;) : Unmarshaller Unmarshaller [jvm]interface UnmarshallerUnmarshalls a typed object from an incoming source"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/","title":"GenericMarshallers - Misk","text":"<p>//misk/misk.web.marshal/GenericMarshallers</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/#genericmarshallers","title":"GenericMarshallers","text":"<p>[jvm]\\ object GenericMarshallers</p> <p>Handles generic marshalling, for cases where the action doesn\u2019t explicitly specify return content</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/#types","title":"Types","text":"Name Summary FromByteString [jvm]class FromByteString(contentType: MediaType?) : Marshaller&lt;ByteString&gt; ToNothing [jvm]class ToNothing(contentType: MediaType?) : Marshaller&lt;Nothing&gt;"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/#functions","title":"Functions","text":"Name Summary canHandle [jvm]fun canHandle(type: Type): &lt;ERROR CLASS&gt;fun canHandle(type: KType): &lt;ERROR CLASS&gt; from [jvm]fun from(contentType: MediaType?, returnType: KType): Marshaller&lt;Any&gt;?"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/can-handle/","title":"canHandle - Misk","text":"<p>//misk/misk.web.marshal/GenericMarshallers/canHandle</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/can-handle/#canhandle","title":"canHandle","text":"<p>[jvm]\\ fun canHandle(type: KType): &lt;ERROR CLASS&gt;</p> <p>fun canHandle(type: Type): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/from/","title":"from - Misk","text":"<p>//misk/misk.web.marshal/GenericMarshallers/from</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/from/#from","title":"from","text":"<p>[jvm]\\ fun from(contentType: MediaType?, returnType: KType): Marshaller&lt;Any&gt;?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/","title":"FromByteString - Misk","text":"<p>//misk/misk.web.marshal/GenericMarshallers/FromByteString</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/#frombytestring","title":"FromByteString","text":"<p>[jvm]\\ class FromByteString(contentType: MediaType?) : Marshaller&lt;ByteString&gt;</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/#functions","title":"Functions","text":"Name Summary contentType [jvm]open override fun contentType(): MediaType? responseBody [jvm]open override fun responseBody(o: ByteString): ResponseBody"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/-from-byte-string/","title":"FromByteString - Misk","text":"<p>//misk/misk.web.marshal/GenericMarshallers/FromByteString/FromByteString</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/-from-byte-string/#frombytestring","title":"FromByteString","text":"<p>[jvm]\\ fun FromByteString(contentType: MediaType?)</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/content-type/","title":"contentType - Misk","text":"<p>//misk/misk.web.marshal/GenericMarshallers/FromByteString/contentType</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/content-type/#contenttype","title":"contentType","text":"<p>[jvm]\\ open override fun contentType(): MediaType?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/content-type/#return","title":"Return","text":"<p>the media type of the marshalled content, if known to the Marshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/response-body/","title":"responseBody - Misk","text":"<p>//misk/misk.web.marshal/GenericMarshallers/FromByteString/responseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/response-body/#responsebody","title":"responseBody","text":"<p>[jvm]\\ open override fun responseBody(o: ByteString): ResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/response-body/#return","title":"Return","text":"<p>The object marshalled into a ResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-to-nothing/","title":"ToNothing - Misk","text":"<p>//misk/misk.web.marshal/GenericMarshallers/ToNothing</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-to-nothing/#tonothing","title":"ToNothing","text":"<p>[jvm]\\ class ToNothing(contentType: MediaType?) : Marshaller&lt;Nothing&gt;</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-to-nothing/#functions","title":"Functions","text":"Name Summary contentType [jvm]open override fun contentType(): MediaType? responseBody [jvm]open override fun responseBody(o: Nothing): ResponseBody"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-to-nothing/-to-nothing/","title":"ToNothing - Misk","text":"<p>//misk/misk.web.marshal/GenericMarshallers/ToNothing/ToNothing</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-to-nothing/-to-nothing/#tonothing","title":"ToNothing","text":"<p>[jvm]\\ fun ToNothing(contentType: MediaType?)</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-to-nothing/content-type/","title":"contentType - Misk","text":"<p>//misk/misk.web.marshal/GenericMarshallers/ToNothing/contentType</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-to-nothing/content-type/#contenttype","title":"contentType","text":"<p>[jvm]\\ open override fun contentType(): MediaType?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-to-nothing/content-type/#return","title":"Return","text":"<p>the media type of the marshalled content, if known to the Marshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-to-nothing/response-body/","title":"responseBody - Misk","text":"<p>//misk/misk.web.marshal/GenericMarshallers/ToNothing/responseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-to-nothing/response-body/#responsebody","title":"responseBody","text":"<p>[jvm]\\ open override fun responseBody(o: Nothing): ResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-marshallers/-to-nothing/response-body/#return","title":"Return","text":"<p>The object marshalled into a ResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-unmarshallers/","title":"GenericUnmarshallers - Misk","text":"<p>//misk/misk.web.marshal/GenericUnmarshallers</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-unmarshallers/#genericunmarshallers","title":"GenericUnmarshallers","text":"<p>[jvm]\\ object GenericUnmarshallers</p> <p>Handles generic unmarshalling, for cases where the action can accept anything</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-unmarshallers/#functions","title":"Functions","text":"Name Summary canHandle [jvm]fun canHandle(type: Type): &lt;ERROR CLASS&gt;fun canHandle(type: KType): &lt;ERROR CLASS&gt; into [jvm]fun into(parameter: KParameter): Unmarshaller?"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-unmarshallers/can-handle/","title":"canHandle - Misk","text":"<p>//misk/misk.web.marshal/GenericUnmarshallers/canHandle</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-unmarshallers/can-handle/#canhandle","title":"canHandle","text":"<p>[jvm]\\ fun canHandle(type: KType): &lt;ERROR CLASS&gt;</p> <p>fun canHandle(type: Type): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-unmarshallers/into/","title":"into - Misk","text":"<p>//misk/misk.web.marshal/GenericUnmarshallers/into</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-generic-unmarshallers/into/#into","title":"into","text":"<p>[jvm]\\ fun into(parameter: KParameter): Unmarshaller?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/","title":"JsonMarshaller - Misk","text":"<p>//misk/misk.web.marshal/JsonMarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/#jsonmarshaller","title":"JsonMarshaller","text":"<p>[jvm]\\ class JsonMarshaller&lt;T&gt;(adapter: JsonAdapter&lt;T&gt;) : Marshaller&lt;T&gt;</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/#types","title":"Types","text":"Name Summary Factory [jvm]@Singletonclass Factory : Marshaller.Factory"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/#functions","title":"Functions","text":"Name Summary contentType [jvm]open override fun contentType(): MediaType responseBody [jvm]open override fun responseBody(o: T): ResponseBody"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/#properties","title":"Properties","text":"Name Summary adapter [jvm]val adapter: JsonAdapter&lt;T&gt;"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/-json-marshaller/","title":"JsonMarshaller - Misk","text":"<p>//misk/misk.web.marshal/JsonMarshaller/JsonMarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/-json-marshaller/#jsonmarshaller","title":"JsonMarshaller","text":"<p>[jvm]\\ fun &lt;T&gt; JsonMarshaller(adapter: JsonAdapter&lt;T&gt;)</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/adapter/","title":"adapter - Misk","text":"<p>//misk/misk.web.marshal/JsonMarshaller/adapter</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/adapter/#adapter","title":"adapter","text":"<p>[jvm]\\ val adapter: JsonAdapter&lt;T&gt;</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/content-type/","title":"contentType - Misk","text":"<p>//misk/misk.web.marshal/JsonMarshaller/contentType</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/content-type/#contenttype","title":"contentType","text":"<p>[jvm]\\ open override fun contentType(): MediaType</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/content-type/#return","title":"Return","text":"<p>the media type of the marshalled content, if known to the Marshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/response-body/","title":"responseBody - Misk","text":"<p>//misk/misk.web.marshal/JsonMarshaller/responseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/response-body/#responsebody","title":"responseBody","text":"<p>[jvm]\\ open override fun responseBody(o: T): ResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/response-body/#return","title":"Return","text":"<p>The object marshalled into a ResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.marshal/JsonMarshaller/Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ @Singleton</p> <p>class Factory : Marshaller.Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(mediaType: MediaType, type: KType): Marshaller&lt;Any&gt;?"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/-factory/#properties","title":"Properties","text":"Name Summary moshi [jvm]val moshi: Moshi"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.marshal/JsonMarshaller/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(mediaType: MediaType, type: KType): Marshaller&lt;Any&gt;?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/-factory/moshi/","title":"moshi - Misk","text":"<p>//misk/misk.web.marshal/JsonMarshaller/Factory/moshi</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-marshaller/-factory/moshi/#moshi","title":"moshi","text":"<p>[jvm]\\ val moshi: Moshi</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/","title":"JsonUnmarshaller - Misk","text":"<p>//misk/misk.web.marshal/JsonUnmarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/#jsonunmarshaller","title":"JsonUnmarshaller","text":"<p>[jvm]\\ class JsonUnmarshaller(adapter: JsonAdapter&lt;Any&gt;) : Unmarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/#types","title":"Types","text":"Name Summary Factory [jvm]@Singletonclass Factory : Unmarshaller.Factory"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/#functions","title":"Functions","text":"Name Summary unmarshal [jvm]open override fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any?"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/#properties","title":"Properties","text":"Name Summary adapter [jvm]val adapter: JsonAdapter&lt;Any&gt;"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/-json-unmarshaller/","title":"JsonUnmarshaller - Misk","text":"<p>//misk/misk.web.marshal/JsonUnmarshaller/JsonUnmarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/-json-unmarshaller/#jsonunmarshaller","title":"JsonUnmarshaller","text":"<p>[jvm]\\ fun JsonUnmarshaller(adapter: JsonAdapter&lt;Any&gt;)</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/adapter/","title":"adapter - Misk","text":"<p>//misk/misk.web.marshal/JsonUnmarshaller/adapter</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/adapter/#adapter","title":"adapter","text":"<p>[jvm]\\ val adapter: JsonAdapter&lt;Any&gt;</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/unmarshal/","title":"unmarshal - Misk","text":"<p>//misk/misk.web.marshal/JsonUnmarshaller/unmarshal</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/unmarshal/#unmarshal","title":"unmarshal","text":"<p>[jvm]\\ open override fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.marshal/JsonUnmarshaller/Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ @Singleton</p> <p>class Factory : Unmarshaller.Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(mediaType: MediaType, type: KType): Unmarshaller?"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/-factory/#properties","title":"Properties","text":"Name Summary moshi [jvm]val moshi: Moshi"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.marshal/JsonUnmarshaller/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(mediaType: MediaType, type: KType): Unmarshaller?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/-factory/moshi/","title":"moshi - Misk","text":"<p>//misk/misk.web.marshal/JsonUnmarshaller/Factory/moshi</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-json-unmarshaller/-factory/moshi/#moshi","title":"moshi","text":"<p>[jvm]\\ val moshi: Moshi</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/","title":"Marshaller - Misk","text":"<p>//misk/misk.web.marshal/Marshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/#marshaller","title":"Marshaller","text":"<p>[jvm]\\ interface Marshaller&lt;in T&gt;</p> <p>Marshalls typed kotlin objects into a ResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion Factory [jvm]interface FactoryThis interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/#functions","title":"Functions","text":"Name Summary contentType [jvm]abstract fun contentType(): MediaType? responseBody [jvm]abstract fun responseBody(o: T): ResponseBody"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/#inheritors","title":"Inheritors","text":"Name FromByteString ToNothing JsonMarshaller PlainTextMarshaller ProtobufMarshaller"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/content-type/","title":"contentType - Misk","text":"<p>//misk/misk.web.marshal/Marshaller/contentType</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/content-type/#contenttype","title":"contentType","text":"<p>[jvm]\\ abstract fun contentType(): MediaType?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/content-type/#return","title":"Return","text":"<p>the media type of the marshalled content, if known to the Marshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/response-body/","title":"responseBody - Misk","text":"<p>//misk/misk.web.marshal/Marshaller/responseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/response-body/#responsebody","title":"responseBody","text":"<p>[jvm]\\ abstract fun responseBody(o: T): ResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/response-body/#return","title":"Return","text":"<p>The object marshalled into a ResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/-companion/","title":"Companion - Misk","text":"<p>//misk/misk.web.marshal/Marshaller/Companion</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/-companion/#functions","title":"Functions","text":"Name Summary actualResponseType [jvm]fun actualResponseType(type: KType): Type"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/-companion/actual-response-type/","title":"actualResponseType - Misk","text":"<p>//misk/misk.web.marshal/Marshaller/Companion/actualResponseType</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/-companion/actual-response-type/#actualresponsetype","title":"actualResponseType","text":"<p>[jvm]\\ fun actualResponseType(type: KType): Type</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.marshal/Marshaller/Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ interface Factory</p> <p>This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:</p> <p>multibind&lt;Marshaller.Factory&gt;().to&lt;MyFactory&gt;()</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]abstract fun create(mediaType: MediaType, type: KType): Marshaller&lt;Any&gt;?"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/-factory/#inheritors","title":"Inheritors","text":"Name Factory Factory Factory"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.marshal/Marshaller/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-marshaller/-factory/create/#create","title":"create","text":"<p>[jvm]\\ abstract fun create(mediaType: MediaType, type: KType): Marshaller&lt;Any&gt;?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/","title":"MultipartUnmarshaller - Misk","text":"<p>//misk/misk.web.marshal/MultipartUnmarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/#multipartunmarshaller","title":"MultipartUnmarshaller","text":"<p>[jvm]\\ object MultipartUnmarshaller : Unmarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/#types","title":"Types","text":"Name Summary Factory [jvm]@Singletonclass Factory : Unmarshaller.Factory"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/#functions","title":"Functions","text":"Name Summary unmarshal [jvm]open override fun unmarshal(requestHeaders: Headers, source: BufferedSource): MultipartReader"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/unmarshal/","title":"unmarshal - Misk","text":"<p>//misk/misk.web.marshal/MultipartUnmarshaller/unmarshal</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/unmarshal/#unmarshal","title":"unmarshal","text":"<p>[jvm]\\ open override fun unmarshal(requestHeaders: Headers, source: BufferedSource): MultipartReader</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.marshal/MultipartUnmarshaller/Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ @Singleton</p> <p>class Factory : Unmarshaller.Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(mediaType: MediaType, type: KType): Unmarshaller?"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/-factory/#properties","title":"Properties","text":"Name Summary moshi [jvm]val moshi: Moshi"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.marshal/MultipartUnmarshaller/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(mediaType: MediaType, type: KType): Unmarshaller?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/-factory/moshi/","title":"moshi - Misk","text":"<p>//misk/misk.web.marshal/MultipartUnmarshaller/Factory/moshi</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-multipart-unmarshaller/-factory/moshi/#moshi","title":"moshi","text":"<p>[jvm]\\ val moshi: Moshi</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/","title":"PlainTextMarshaller - Misk","text":"<p>//misk/misk.web.marshal/PlainTextMarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/#plaintextmarshaller","title":"PlainTextMarshaller","text":"<p>[jvm]\\ object PlainTextMarshaller : Marshaller&lt;Any&gt;</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/#types","title":"Types","text":"Name Summary Factory [jvm]@Singletonclass Factory@Injectconstructor : Marshaller.Factory"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/#functions","title":"Functions","text":"Name Summary contentType [jvm]open override fun contentType(): MediaType responseBody [jvm]open override fun responseBody(o: Any): ResponseBody"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/content-type/","title":"contentType - Misk","text":"<p>//misk/misk.web.marshal/PlainTextMarshaller/contentType</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/content-type/#contenttype","title":"contentType","text":"<p>[jvm]\\ open override fun contentType(): MediaType</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/content-type/#return","title":"Return","text":"<p>the media type of the marshalled content, if known to the Marshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/response-body/","title":"responseBody - Misk","text":"<p>//misk/misk.web.marshal/PlainTextMarshaller/responseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/response-body/#responsebody","title":"responseBody","text":"<p>[jvm]\\ open override fun responseBody(o: Any): ResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/response-body/#return","title":"Return","text":"<p>The object marshalled into a ResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.marshal/PlainTextMarshaller/Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ @Singleton</p> <p>class Factory@Injectconstructor : Marshaller.Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(mediaType: MediaType, type: KType): Marshaller&lt;Any&gt;?"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/-factory/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.marshal/PlainTextMarshaller/Factory/Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/-factory/-factory/#factory","title":"Factory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun Factory()</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.marshal/PlainTextMarshaller/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-marshaller/-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(mediaType: MediaType, type: KType): Marshaller&lt;Any&gt;?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/","title":"PlainTextUnmarshaller - Misk","text":"<p>//misk/misk.web.marshal/PlainTextUnmarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/#plaintextunmarshaller","title":"PlainTextUnmarshaller","text":"<p>[jvm]\\ object PlainTextUnmarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/#types","title":"Types","text":"Name Summary Factory [jvm]class Factory@Injectconstructor : Unmarshaller.Factory ToByteString [jvm]object ToByteString : Unmarshaller ToString [jvm]object ToString : Unmarshaller"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.marshal/PlainTextUnmarshaller/Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ class Factory@Injectconstructor : Unmarshaller.Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(mediaType: MediaType, type: KType): Unmarshaller?"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.marshal/PlainTextUnmarshaller/Factory/Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/-factory/#factory","title":"Factory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun Factory()</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.marshal/PlainTextUnmarshaller/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(mediaType: MediaType, type: KType): Unmarshaller?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-to-byte-string/","title":"ToByteString - Misk","text":"<p>//misk/misk.web.marshal/PlainTextUnmarshaller/ToByteString</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-to-byte-string/#tobytestring","title":"ToByteString","text":"<p>[jvm]\\ object ToByteString : Unmarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-to-byte-string/#functions","title":"Functions","text":"Name Summary unmarshal [jvm]open override fun unmarshal(requestHeaders: Headers, source: BufferedSource): ByteString"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-to-byte-string/unmarshal/","title":"unmarshal - Misk","text":"<p>//misk/misk.web.marshal/PlainTextUnmarshaller/ToByteString/unmarshal</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-to-byte-string/unmarshal/#unmarshal","title":"unmarshal","text":"<p>[jvm]\\ open override fun unmarshal(requestHeaders: Headers, source: BufferedSource): ByteString</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-to-string/","title":"ToString - Misk","text":"<p>//misk/misk.web.marshal/PlainTextUnmarshaller/ToString</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-to-string/#tostring","title":"ToString","text":"<p>[jvm]\\ object ToString : Unmarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-to-string/#functions","title":"Functions","text":"Name Summary unmarshal [jvm]open override fun unmarshal(requestHeaders: Headers, source: BufferedSource): String"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-to-string/unmarshal/","title":"unmarshal - Misk","text":"<p>//misk/misk.web.marshal/PlainTextUnmarshaller/ToString/unmarshal</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-plain-text-unmarshaller/-to-string/unmarshal/#unmarshal","title":"unmarshal","text":"<p>[jvm]\\ open override fun unmarshal(requestHeaders: Headers, source: BufferedSource): String</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/","title":"ProtobufMarshaller - Misk","text":"<p>//misk/misk.web.marshal/ProtobufMarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/#protobufmarshaller","title":"ProtobufMarshaller","text":"<p>[jvm]\\ class ProtobufMarshaller&lt;T&gt;(adapter: ProtoAdapter&lt;T&gt;) : Marshaller&lt;T&gt;</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/#types","title":"Types","text":"Name Summary Factory [jvm]@Singletonclass Factory@Injectconstructor : Marshaller.Factory"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/#functions","title":"Functions","text":"Name Summary contentType [jvm]open override fun contentType(): MediaType responseBody [jvm]open override fun responseBody(o: T): ResponseBody"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/#properties","title":"Properties","text":"Name Summary adapter [jvm]val adapter: ProtoAdapter&lt;T&gt;"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/-protobuf-marshaller/","title":"ProtobufMarshaller - Misk","text":"<p>//misk/misk.web.marshal/ProtobufMarshaller/ProtobufMarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/-protobuf-marshaller/#protobufmarshaller","title":"ProtobufMarshaller","text":"<p>[jvm]\\ fun &lt;T&gt; ProtobufMarshaller(adapter: ProtoAdapter&lt;T&gt;)</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/adapter/","title":"adapter - Misk","text":"<p>//misk/misk.web.marshal/ProtobufMarshaller/adapter</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/adapter/#adapter","title":"adapter","text":"<p>[jvm]\\ val adapter: ProtoAdapter&lt;T&gt;</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/content-type/","title":"contentType - Misk","text":"<p>//misk/misk.web.marshal/ProtobufMarshaller/contentType</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/content-type/#contenttype","title":"contentType","text":"<p>[jvm]\\ open override fun contentType(): MediaType</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/content-type/#return","title":"Return","text":"<p>the media type of the marshalled content, if known to the Marshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/response-body/","title":"responseBody - Misk","text":"<p>//misk/misk.web.marshal/ProtobufMarshaller/responseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/response-body/#responsebody","title":"responseBody","text":"<p>[jvm]\\ open override fun responseBody(o: T): ResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/response-body/#return","title":"Return","text":"<p>The object marshalled into a ResponseBody</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.marshal/ProtobufMarshaller/Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ @Singleton</p> <p>class Factory@Injectconstructor : Marshaller.Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(mediaType: MediaType, type: KType): Marshaller&lt;Any&gt;?"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/-factory/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.marshal/ProtobufMarshaller/Factory/Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/-factory/-factory/#factory","title":"Factory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun Factory()</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.marshal/ProtobufMarshaller/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-marshaller/-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(mediaType: MediaType, type: KType): Marshaller&lt;Any&gt;?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/","title":"ProtobufUnmarshaller - Misk","text":"<p>//misk/misk.web.marshal/ProtobufUnmarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/#protobufunmarshaller","title":"ProtobufUnmarshaller","text":"<p>[jvm]\\ class ProtobufUnmarshaller(adapter: ProtoAdapter&lt;Any&gt;) : Unmarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/#types","title":"Types","text":"Name Summary Factory [jvm]@Singletonclass Factory@Injectconstructor : Unmarshaller.Factory"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/#functions","title":"Functions","text":"Name Summary unmarshal [jvm]open override fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/#properties","title":"Properties","text":"Name Summary adapter [jvm]val adapter: ProtoAdapter&lt;Any&gt;"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/-protobuf-unmarshaller/","title":"ProtobufUnmarshaller - Misk","text":"<p>//misk/misk.web.marshal/ProtobufUnmarshaller/ProtobufUnmarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/-protobuf-unmarshaller/#protobufunmarshaller","title":"ProtobufUnmarshaller","text":"<p>[jvm]\\ fun ProtobufUnmarshaller(adapter: ProtoAdapter&lt;Any&gt;)</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/adapter/","title":"adapter - Misk","text":"<p>//misk/misk.web.marshal/ProtobufUnmarshaller/adapter</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/adapter/#adapter","title":"adapter","text":"<p>[jvm]\\ val adapter: ProtoAdapter&lt;Any&gt;</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/unmarshal/","title":"unmarshal - Misk","text":"<p>//misk/misk.web.marshal/ProtobufUnmarshaller/unmarshal</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/unmarshal/#unmarshal","title":"unmarshal","text":"<p>[jvm]\\ open override fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.marshal/ProtobufUnmarshaller/Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ @Singleton</p> <p>class Factory@Injectconstructor : Unmarshaller.Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(mediaType: MediaType, type: KType): Unmarshaller?"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.marshal/ProtobufUnmarshaller/Factory/Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/-factory/#factory","title":"Factory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun Factory()</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.marshal/ProtobufUnmarshaller/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(mediaType: MediaType, type: KType): Unmarshaller?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-unmarshaller/","title":"Unmarshaller - Misk","text":"<p>//misk/misk.web.marshal/Unmarshaller</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-unmarshaller/#unmarshaller","title":"Unmarshaller","text":"<p>[jvm]\\ interface Unmarshaller</p> <p>Unmarshalls a typed object from an incoming source</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-unmarshaller/#types","title":"Types","text":"Name Summary Factory [jvm]interface FactoryThis interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:"},{"location":"0.x/misk/misk/misk.web.marshal/-unmarshaller/#functions","title":"Functions","text":"Name Summary unmarshal [jvm]abstract fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any?"},{"location":"0.x/misk/misk/misk.web.marshal/-unmarshaller/#inheritors","title":"Inheritors","text":"Name JsonUnmarshaller MultipartUnmarshaller ToString ToByteString ProtobufUnmarshaller"},{"location":"0.x/misk/misk/misk.web.marshal/-unmarshaller/unmarshal/","title":"unmarshal - Misk","text":"<p>//misk/misk.web.marshal/Unmarshaller/unmarshal</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-unmarshaller/unmarshal/#unmarshal","title":"unmarshal","text":"<p>[jvm]\\ abstract fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any?</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-unmarshaller/-factory/","title":"Factory - Misk","text":"<p>//misk/misk.web.marshal/Unmarshaller/Factory</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-unmarshaller/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ interface Factory</p> <p>This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:</p> <p>multibind&lt;Unmarshaller.Factory&gt;().to&lt;MyFactory&gt;()</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-unmarshaller/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]abstract fun create(mediaType: MediaType, type: KType): Unmarshaller?"},{"location":"0.x/misk/misk/misk.web.marshal/-unmarshaller/-factory/#inheritors","title":"Inheritors","text":"Name Factory Factory Factory Factory"},{"location":"0.x/misk/misk/misk.web.marshal/-unmarshaller/-factory/create/","title":"create - Misk","text":"<p>//misk/misk.web.marshal/Unmarshaller/Factory/create</p>"},{"location":"0.x/misk/misk/misk.web.marshal/-unmarshaller/-factory/create/#create","title":"create","text":"<p>[jvm]\\ abstract fun create(mediaType: MediaType, type: KType): Unmarshaller?</p>"},{"location":"0.x/misk/misk/misk.web.mdc/","title":"Package misk.web.mdc - Misk","text":"<p>//misk/misk.web.mdc</p>"},{"location":"0.x/misk/misk/misk.web.mdc/#package-miskwebmdc","title":"Package misk.web.mdc","text":""},{"location":"0.x/misk/misk/misk.web.mdc/#types","title":"Types","text":"Name Summary LogContextProvider [jvm]interface LogContextProvider"},{"location":"0.x/misk/misk/misk.web.mdc/-log-context-provider/","title":"LogContextProvider - Misk","text":"<p>//misk/misk.web.mdc/LogContextProvider</p>"},{"location":"0.x/misk/misk/misk.web.mdc/-log-context-provider/#logcontextprovider","title":"LogContextProvider","text":"<p>[jvm]\\ interface LogContextProvider</p>"},{"location":"0.x/misk/misk/misk.web.mdc/-log-context-provider/#functions","title":"Functions","text":"Name Summary get [jvm]abstract fun get(request: HttpServletRequest): String?"},{"location":"0.x/misk/misk/misk.web.mdc/-log-context-provider/get/","title":"get - Misk","text":"<p>//misk/misk.web.mdc/LogContextProvider/get</p>"},{"location":"0.x/misk/misk/misk.web.mdc/-log-context-provider/get/#get","title":"get","text":"<p>[jvm]\\ abstract fun get(request: HttpServletRequest): String?</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/","title":"Package misk.web.metadata.webaction - Misk","text":"<p>//misk/misk.web.metadata.webaction</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/#package-miskwebmetadatawebaction","title":"Package misk.web.metadata.webaction","text":""},{"location":"0.x/misk/misk/misk.web.metadata.webaction/#types","title":"Types","text":"Name Summary WebActionMetadata [jvm]data class WebActionMetadata(name: String, function: String, packageName: String?, description: String?, functionAnnotations: List&lt;String&gt;, requestMediaTypes: List&lt;String&gt;, responseMediaType: String?, parameterTypes: List&lt;String&gt;, parameters: List&lt;WebActionMetadata.ParameterMetaData&gt;, requestType: String?, returnType: String, responseType: String, types: Map&lt;String, MiskWebFormBuilder.Type&gt;, responseTypes: Map&lt;String, MiskWebFormBuilder.Type&gt;, pathPattern: String, applicationInterceptors: List&lt;String&gt;, networkInterceptors: List&lt;String&gt;, httpMethod: String, allowedServices: Set&lt;String&gt;, allowedCapabilities: Set&lt;String&gt;)Metadata front end model for Web Action Misk-Web Tab WebActionMetadataList [jvm]@Singletonclass WebActionMetadataList"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/","title":"WebActionMetadata - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/#webactionmetadata","title":"WebActionMetadata","text":"<p>[jvm]\\ data class WebActionMetadata(name: String, function: String, packageName: String?, description: String?, functionAnnotations: List&lt;String&gt;, requestMediaTypes: List&lt;String&gt;, responseMediaType: String?, parameterTypes: List&lt;String&gt;, parameters: List&lt;WebActionMetadata.ParameterMetaData&gt;, requestType: String?, returnType: String, responseType: String, types: Map&lt;String, MiskWebFormBuilder.Type&gt;, responseTypes: Map&lt;String, MiskWebFormBuilder.Type&gt;, pathPattern: String, applicationInterceptors: List&lt;String&gt;, networkInterceptors: List&lt;String&gt;, httpMethod: String, allowedServices: Set&lt;String&gt;, allowedCapabilities: Set&lt;String&gt;)</p> <p>Metadata front end model for Web Action Misk-Web Tab</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/#constructors","title":"Constructors","text":"WebActionMetadata [jvm]fun WebActionMetadata(name: String, function: KFunction&lt;*&gt;, functionAnnotations: List&lt;Annotation&gt;, description: String?, acceptedMediaRanges: List&lt;MediaRange&gt;, responseContentType: MediaType?, parameterTypes: List&lt;KType&gt;, parameters: List&lt;KParameter&gt;, requestType: KType?, returnType: KType, responseType: KType?, pathPattern: PathPattern, applicationInterceptors: List&lt;ApplicationInterceptor&gt;, networkInterceptors: List&lt;NetworkInterceptor&gt;, dispatchMechanism: DispatchMechanism, allowedServices: Set&lt;String&gt;, allowedCapabilities: Set&lt;String&gt;) WebActionMetadata [jvm]fun WebActionMetadata(name: String, function: String, packageName: String?, description: String?, functionAnnotations: List&lt;String&gt;, requestMediaTypes: List&lt;String&gt;, responseMediaType: String?, parameterTypes: List&lt;String&gt;, parameters: List&lt;WebActionMetadata.ParameterMetaData&gt;, requestType: String?, returnType: String, responseType: String, types: Map&lt;String, MiskWebFormBuilder.Type&gt;, responseTypes: Map&lt;String, MiskWebFormBuilder.Type&gt;, pathPattern: String, applicationInterceptors: List&lt;String&gt;, networkInterceptors: List&lt;String&gt;, httpMethod: String, allowedServices: Set&lt;String&gt;, allowedCapabilities: Set&lt;String&gt;)"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/#types","title":"Types","text":"Name Summary ParameterMetaData [jvm]data class ParameterMetaData(name: String?, annotations: List&lt;String&gt;, type: String)"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/#properties","title":"Properties","text":"Name Summary allowedCapabilities [jvm]val allowedCapabilities: Set&lt;String&gt; allowedServices [jvm]val allowedServices: Set&lt;String&gt; applicationInterceptors [jvm]val applicationInterceptors: List&lt;String&gt; description [jvm]val description: String? function [jvm]val function: String functionAnnotations [jvm]val functionAnnotations: List&lt;String&gt; httpMethod [jvm]val httpMethod: String name [jvm]val name: String networkInterceptors [jvm]val networkInterceptors: List&lt;String&gt; packageName [jvm]val packageName: String? parameters [jvm]val parameters: List&lt;WebActionMetadata.ParameterMetaData&gt; parameterTypes [jvm]val parameterTypes: List&lt;String&gt; pathPattern [jvm]val pathPattern: String requestMediaTypes [jvm]val requestMediaTypes: List&lt;String&gt; requestType [jvm]val requestType: String? responseMediaType [jvm]val responseMediaType: String? responseType [jvm]val responseType: String responseTypes [jvm]val responseTypes: Map&lt;String, MiskWebFormBuilder.Type&gt; returnType [jvm]val returnType: String types [jvm]val types: Map&lt;String, MiskWebFormBuilder.Type&gt;"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/-web-action-metadata/","title":"WebActionMetadata - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/WebActionMetadata</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/-web-action-metadata/#webactionmetadata","title":"WebActionMetadata","text":"<p>[jvm]\\ fun WebActionMetadata(name: String, function: KFunction&lt;*&gt;, functionAnnotations: List&lt;Annotation&gt;, description: String?, acceptedMediaRanges: List&lt;MediaRange&gt;, responseContentType: MediaType?, parameterTypes: List&lt;KType&gt;, parameters: List&lt;KParameter&gt;, requestType: KType?, returnType: KType, responseType: KType?, pathPattern: PathPattern, applicationInterceptors: List&lt;ApplicationInterceptor&gt;, networkInterceptors: List&lt;NetworkInterceptor&gt;, dispatchMechanism: DispatchMechanism, allowedServices: Set&lt;String&gt;, allowedCapabilities: Set&lt;String&gt;)</p> <p>fun WebActionMetadata(name: String, function: String, packageName: String?, description: String?, functionAnnotations: List&lt;String&gt;, requestMediaTypes: List&lt;String&gt;, responseMediaType: String?, parameterTypes: List&lt;String&gt;, parameters: List&lt;WebActionMetadata.ParameterMetaData&gt;, requestType: String?, returnType: String, responseType: String, types: Map&lt;String, MiskWebFormBuilder.Type&gt;, responseTypes: Map&lt;String, MiskWebFormBuilder.Type&gt;, pathPattern: String, applicationInterceptors: List&lt;String&gt;, networkInterceptors: List&lt;String&gt;, httpMethod: String, allowedServices: Set&lt;String&gt;, allowedCapabilities: Set&lt;String&gt;)</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/allowed-capabilities/","title":"allowedCapabilities - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/allowedCapabilities</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/allowed-capabilities/#allowedcapabilities","title":"allowedCapabilities","text":"<p>[jvm]\\ val allowedCapabilities: Set&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/allowed-services/","title":"allowedServices - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/allowedServices</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/allowed-services/#allowedservices","title":"allowedServices","text":"<p>[jvm]\\ val allowedServices: Set&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/application-interceptors/","title":"applicationInterceptors - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/applicationInterceptors</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/application-interceptors/#applicationinterceptors","title":"applicationInterceptors","text":"<p>[jvm]\\ val applicationInterceptors: List&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/description/","title":"description - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/description</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/description/#description","title":"description","text":"<p>[jvm]\\ val description: String?</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/function-annotations/","title":"functionAnnotations - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/functionAnnotations</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/function-annotations/#functionannotations","title":"functionAnnotations","text":"<p>[jvm]\\ val functionAnnotations: List&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/function/","title":"function - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/function</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/function/#function","title":"function","text":"<p>[jvm]\\ val function: String</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/http-method/","title":"httpMethod - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/httpMethod</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/http-method/#httpmethod","title":"httpMethod","text":"<p>[jvm]\\ val httpMethod: String</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/name/","title":"name - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/name</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/network-interceptors/","title":"networkInterceptors - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/networkInterceptors</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/network-interceptors/#networkinterceptors","title":"networkInterceptors","text":"<p>[jvm]\\ val networkInterceptors: List&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/package-name/","title":"packageName - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/packageName</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/package-name/#packagename","title":"packageName","text":"<p>[jvm]\\ val packageName: String?</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/parameter-types/","title":"parameterTypes - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/parameterTypes</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/parameter-types/#parametertypes","title":"parameterTypes","text":"<p>[jvm]\\ val parameterTypes: List&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/parameters/","title":"parameters - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/parameters</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/parameters/#parameters","title":"parameters","text":"<p>[jvm]\\ val parameters: List&lt;WebActionMetadata.ParameterMetaData&gt;</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/path-pattern/","title":"pathPattern - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/pathPattern</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/path-pattern/#pathpattern","title":"pathPattern","text":"<p>[jvm]\\ val pathPattern: String</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/request-media-types/","title":"requestMediaTypes - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/requestMediaTypes</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/request-media-types/#requestmediatypes","title":"requestMediaTypes","text":"<p>[jvm]\\ val requestMediaTypes: List&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/request-type/","title":"requestType - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/requestType</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/request-type/#requesttype","title":"requestType","text":"<p>[jvm]\\ val requestType: String?</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/response-media-type/","title":"responseMediaType - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/responseMediaType</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/response-media-type/#responsemediatype","title":"responseMediaType","text":"<p>[jvm]\\ val responseMediaType: String?</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/response-type/","title":"responseType - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/responseType</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/response-type/#responsetype","title":"responseType","text":"<p>[jvm]\\ val responseType: String</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/response-types/","title":"responseTypes - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/responseTypes</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/response-types/#responsetypes","title":"responseTypes","text":"<p>[jvm]\\ val responseTypes: Map&lt;String, MiskWebFormBuilder.Type&gt;</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/return-type/","title":"returnType - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/returnType</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/return-type/#returntype","title":"returnType","text":"<p>[jvm]\\ val returnType: String</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/types/","title":"types - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/types</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/types/#types","title":"types","text":"<p>[jvm]\\ val types: Map&lt;String, MiskWebFormBuilder.Type&gt;</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/","title":"ParameterMetaData - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/ParameterMetaData</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/#parametermetadata","title":"ParameterMetaData","text":"<p>[jvm]\\ data class ParameterMetaData(name: String?, annotations: List&lt;String&gt;, type: String)</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/#properties","title":"Properties","text":"Name Summary annotations [jvm]val annotations: List&lt;String&gt; name [jvm]val name: String? type [jvm]val type: String"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/-parameter-meta-data/","title":"ParameterMetaData - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/ParameterMetaData/ParameterMetaData</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/-parameter-meta-data/#parametermetadata","title":"ParameterMetaData","text":"<p>[jvm]\\ fun ParameterMetaData(name: String?, annotations: List&lt;String&gt;, type: String)</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/annotations/","title":"annotations - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/ParameterMetaData/annotations</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/annotations/#annotations","title":"annotations","text":"<p>[jvm]\\ val annotations: List&lt;String&gt;</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/name/","title":"name - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/ParameterMetaData/name</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/name/#name","title":"name","text":"<p>[jvm]\\ val name: String?</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/type/","title":"type - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadata/ParameterMetaData/type</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/type/#type","title":"type","text":"<p>[jvm]\\ val type: String</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata-list/","title":"WebActionMetadataList - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadataList</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata-list/#webactionmetadatalist","title":"WebActionMetadataList","text":"<p>[jvm]\\ @Singleton</p> <p>class WebActionMetadataList</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata-list/#functions","title":"Functions","text":"Name Summary get [jvm]fun get(): List&lt;WebActionMetadata&gt;"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata-list/get/","title":"get - Misk","text":"<p>//misk/misk.web.metadata.webaction/WebActionMetadataList/get</p>"},{"location":"0.x/misk/misk/misk.web.metadata.webaction/-web-action-metadata-list/get/#get","title":"get","text":"<p>[jvm]\\ fun get(): List&lt;WebActionMetadata&gt;</p>"},{"location":"0.x/misk/misk/misk.web.proxy/","title":"Package misk.web.proxy - Misk","text":"<p>//misk/misk.web.proxy</p>"},{"location":"0.x/misk/misk/misk.web.proxy/#package-miskwebproxy","title":"Package misk.web.proxy","text":""},{"location":"0.x/misk/misk/misk.web.proxy/#types","title":"Types","text":"Name Summary OptionalBinder [jvm]@Singletonclass OptionalBinder@Injectconstructorhttps://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor WebProxyAction [jvm]@Singletonclass WebProxyAction@Injectconstructor(optionalBinder: OptionalBinder, clientHttpCall: ActionScoped&lt;HttpCall&gt;, staticResourceAction: StaticResourceAction, resourceEntryFinder: ResourceEntryFinder) : WebActionWebProxyAction WebProxyEntry [jvm]data class WebProxyEntry@JvmOverloadsconstructor(url_path_prefix: String, web_proxy_url: HttpUrl) : ValidWebEntryMaps URLs requested against this server to URLs of servers to delegate to"},{"location":"0.x/misk/misk/misk.web.proxy/#functions","title":"Functions","text":"Name Summary WebProxyEntry [jvm]fun WebProxyEntry(url_path_prefix: String = \u201c/\u201d, web_proxy_url: String): WebProxyEntry"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-entry/","title":"WebProxyEntry - Misk","text":"<p>//misk/misk.web.proxy/WebProxyEntry</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-entry/#webproxyentry","title":"WebProxyEntry","text":"<p>[jvm]\\ fun WebProxyEntry(url_path_prefix: String = \u201c/\u201d, web_proxy_url: String): WebProxyEntry</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-optional-binder/","title":"OptionalBinder - Misk","text":"<p>//misk/misk.web.proxy/OptionalBinder</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-optional-binder/#optionalbinder","title":"OptionalBinder","text":"<p>[jvm]\\ @Singleton</p> <p>class OptionalBinder@Injectconstructor</p> <p>https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-optional-binder/#constructors","title":"Constructors","text":"OptionalBinder [jvm]@Injectfun OptionalBinder()"},{"location":"0.x/misk/misk/misk.web.proxy/-optional-binder/#properties","title":"Properties","text":"Name Summary proxyClient [jvm]@Inject(optional = true)@Named(value = \u201cweb_proxy_action\u201d)var proxyClient: OkHttpClient"},{"location":"0.x/misk/misk/misk.web.proxy/-optional-binder/-optional-binder/","title":"OptionalBinder - Misk","text":"<p>//misk/misk.web.proxy/OptionalBinder/OptionalBinder</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-optional-binder/-optional-binder/#optionalbinder","title":"OptionalBinder","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun OptionalBinder()</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-optional-binder/proxy-client/","title":"proxyClient - Misk","text":"<p>//misk/misk.web.proxy/OptionalBinder/proxyClient</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-optional-binder/proxy-client/#proxyclient","title":"proxyClient","text":"<p>[jvm]\\</p> <p>@Inject(optional = true)</p> <p>@Named(value = \u201cweb_proxy_action\u201d)</p> <p>var proxyClient: OkHttpClient</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-action/","title":"WebProxyAction - Misk","text":"<p>//misk/misk.web.proxy/WebProxyAction</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-action/#webproxyaction","title":"WebProxyAction","text":"<p>[jvm]\\ @Singleton</p> <p>class WebProxyAction@Injectconstructor(optionalBinder: OptionalBinder, clientHttpCall: ActionScoped&lt;HttpCall&gt;, staticResourceAction: StaticResourceAction, resourceEntryFinder: ResourceEntryFinder) : WebAction</p> <p>WebProxyAction</p> <p>Guidelines</p> <ul> <li>Overlapping entry prefixes will resolve to the longest match     Example     Entries: /_admin/config/, /_admin/config/subtab/     Request: /_admin/config/subtab/app.js will resolve to the /_admin/config/subtab/ entry</li> <li>url_path_prefix starts with \u201c/\u201d</li> <li>url_path_prefix ends with \u201c/\u201d</li> <li>web_proxy_url ends with \u201c/\u201d and doesn\u2019t contain any path segments</li> </ul> <p>Expected Functionality</p> <ul> <li>Entries following above rules are injected into action</li> <li>Action attempts to findEntryFromUrl incoming request paths against entries</li> <li>If findEntryFromUrl found, incoming request path is appended to host + port of StaticResourceEntry.server_url</li> <li>Else, 404</li> </ul>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-action/#constructors","title":"Constructors","text":"WebProxyAction [jvm]@Injectfun WebProxyAction(optionalBinder: OptionalBinder, clientHttpCall: ActionScoped&lt;HttpCall&gt;, staticResourceAction: StaticResourceAction, resourceEntryFinder: ResourceEntryFinder)"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-action/#functions","title":"Functions","text":"Name Summary action [jvm]fun action(): Response&lt;ResponseBody&gt;"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-action/-web-proxy-action/","title":"WebProxyAction - Misk","text":"<p>//misk/misk.web.proxy/WebProxyAction/WebProxyAction</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-action/-web-proxy-action/#webproxyaction","title":"WebProxyAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun WebProxyAction(optionalBinder: OptionalBinder, clientHttpCall: ActionScoped&lt;HttpCall&gt;, staticResourceAction: StaticResourceAction, resourceEntryFinder: ResourceEntryFinder)</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-action/action/","title":"action - Misk","text":"<p>//misk/misk.web.proxy/WebProxyAction/action</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-action/action/#action","title":"action","text":"<p>[jvm]\\ fun action(): Response&lt;ResponseBody&gt;</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-entry/","title":"WebProxyEntry - Misk","text":"<p>//misk/misk.web.proxy/WebProxyEntry</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-entry/#webproxyentry","title":"WebProxyEntry","text":"<p>[jvm]\\ data class WebProxyEntry@JvmOverloadsconstructor(url_path_prefix: String, web_proxy_url: HttpUrl) : ValidWebEntry</p> <p>Maps URLs requested against this server to URLs of servers to delegate to</p> <p>url_path_prefix: /_admin/ web_proxy_url: http://localhost:3000/</p> <p>An incoming request then for /_admin/config.js would route to http://localhost:3000/_admin/config.js.</p> <p>This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:</p> <p>multibind&lt;WebProxyEntry&gt;().toInstance(WebProxyEntry(\u2026))</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-entry/#constructors","title":"Constructors","text":"WebProxyEntry [jvm]@JvmOverloadsfun WebProxyEntry(url_path_prefix: String = \u201c/\u201d, web_proxy_url: HttpUrl)"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-entry/#properties","title":"Properties","text":"Name Summary url_path_prefix [jvm]val url_path_prefix: String valid_slug [jvm]val valid_slug: String valid_url_path_prefix [jvm]val valid_url_path_prefix: String web_proxy_url [jvm]val web_proxy_url: HttpUrl"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-entry/-web-proxy-entry/","title":"WebProxyEntry - Misk","text":"<p>//misk/misk.web.proxy/WebProxyEntry/WebProxyEntry</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-entry/-web-proxy-entry/#webproxyentry","title":"WebProxyEntry","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun WebProxyEntry(url_path_prefix: String = \u201c/\u201d, web_proxy_url: HttpUrl)</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-entry/url_path_prefix/","title":"url_path_prefix - Misk","text":"<p>//misk/misk.web.proxy/WebProxyEntry/url_path_prefix</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-entry/url_path_prefix/#url_path_prefix","title":"url_path_prefix","text":"<p>[jvm]\\ val url_path_prefix: String</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-entry/web_proxy_url/","title":"web_proxy_url - Misk","text":"<p>//misk/misk.web.proxy/WebProxyEntry/web_proxy_url</p>"},{"location":"0.x/misk/misk/misk.web.proxy/-web-proxy-entry/web_proxy_url/#web_proxy_url","title":"web_proxy_url","text":"<p>[jvm]\\ val web_proxy_url: HttpUrl</p>"},{"location":"0.x/misk/misk/misk.web.resources/","title":"Package misk.web.resources - Misk","text":"<p>//misk/misk.web.resources</p>"},{"location":"0.x/misk/misk/misk.web.resources/#package-miskwebresources","title":"Package misk.web.resources","text":""},{"location":"0.x/misk/misk/misk.web.resources/#types","title":"Types","text":"Name Summary ResourceEntryFinder [jvm]class ResourceEntryFinder@Injectconstructor(webProxyEntries: List&lt;WebProxyEntry&gt;, staticResourceEntries: List&lt;StaticResourceEntry&gt;) StaticResourceAction [jvm]@Singletonclass StaticResourceAction@Injectconstructor(clientHttpCall: ActionScoped&lt;HttpCall&gt;, resourceLoader: ResourceLoader, resourceEntryFinder: ResourceEntryFinder) : WebActionStaticResourceAction StaticResourceEntry [jvm]data class StaticResourceEntry@JvmOverloadsconstructor(url_path_prefix: String, resourcePath: String) : ValidWebEntryThis data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:"},{"location":"0.x/misk/misk/misk.web.resources/-resource-entry-finder/","title":"ResourceEntryFinder - Misk","text":"<p>//misk/misk.web.resources/ResourceEntryFinder</p>"},{"location":"0.x/misk/misk/misk.web.resources/-resource-entry-finder/#resourceentryfinder","title":"ResourceEntryFinder","text":"<p>[jvm]\\ class ResourceEntryFinder@Injectconstructor(webProxyEntries: List&lt;WebProxyEntry&gt;, staticResourceEntries: List&lt;StaticResourceEntry&gt;)</p>"},{"location":"0.x/misk/misk/misk.web.resources/-resource-entry-finder/#functions","title":"Functions","text":"Name Summary staticResource [jvm]fun staticResource(url: HttpUrl): ValidWebEntry? webProxy [jvm]fun webProxy(url: HttpUrl): ValidWebEntry?"},{"location":"0.x/misk/misk/misk.web.resources/-resource-entry-finder/-resource-entry-finder/","title":"ResourceEntryFinder - Misk","text":"<p>//misk/misk.web.resources/ResourceEntryFinder/ResourceEntryFinder</p>"},{"location":"0.x/misk/misk/misk.web.resources/-resource-entry-finder/-resource-entry-finder/#resourceentryfinder","title":"ResourceEntryFinder","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ResourceEntryFinder(webProxyEntries: List&lt;WebProxyEntry&gt;, staticResourceEntries: List&lt;StaticResourceEntry&gt;)</p>"},{"location":"0.x/misk/misk/misk.web.resources/-resource-entry-finder/static-resource/","title":"staticResource - Misk","text":"<p>//misk/misk.web.resources/ResourceEntryFinder/staticResource</p>"},{"location":"0.x/misk/misk/misk.web.resources/-resource-entry-finder/static-resource/#staticresource","title":"staticResource","text":"<p>[jvm]\\ fun staticResource(url: HttpUrl): ValidWebEntry?</p>"},{"location":"0.x/misk/misk/misk.web.resources/-resource-entry-finder/static-resource/#return","title":"Return","text":"<p>entry whose url_path_prefix most closely matches given url; longest match wins</p>"},{"location":"0.x/misk/misk/misk.web.resources/-resource-entry-finder/web-proxy/","title":"webProxy - Misk","text":"<p>//misk/misk.web.resources/ResourceEntryFinder/webProxy</p>"},{"location":"0.x/misk/misk/misk.web.resources/-resource-entry-finder/web-proxy/#webproxy","title":"webProxy","text":"<p>[jvm]\\ fun webProxy(url: HttpUrl): ValidWebEntry?</p>"},{"location":"0.x/misk/misk/misk.web.resources/-resource-entry-finder/web-proxy/#return","title":"Return","text":"<p>entry whose url_path_prefix most closely matches given url; longest match wins</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-action/","title":"StaticResourceAction - Misk","text":"<p>//misk/misk.web.resources/StaticResourceAction</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-action/#staticresourceaction","title":"StaticResourceAction","text":"<p>[jvm]\\ @Singleton</p> <p>class StaticResourceAction@Injectconstructor(clientHttpCall: ActionScoped&lt;HttpCall&gt;, resourceLoader: ResourceLoader, resourceEntryFinder: ResourceEntryFinder) : WebAction</p> <p>StaticResourceAction</p> <p>This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:</p> <p>multibind&lt;StaticResourceEntry&gt;()\\   .toInstance(\\     StaticResourceEntry(\\       url_path_prefix = \u201c/static/\u201d,\\       resourcePath = \u201cclasspath:/web/static/\u201d\\     )\\   )\\ install(WebActionModule.createWithPrefix&lt;StaticResourceAction&gt;(url_path_prefix = \u201c/static/\u201d))</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-action/#constructors","title":"Constructors","text":"StaticResourceAction [jvm]@Injectfun StaticResourceAction(clientHttpCall: ActionScoped&lt;HttpCall&gt;, resourceLoader: ResourceLoader, resourceEntryFinder: ResourceEntryFinder)"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-action/#functions","title":"Functions","text":"Name Summary action [jvm]fun action(): Response&lt;ResponseBody&gt; getResponse [jvm]fun getResponse(httpCall: HttpCall): Response&lt;ResponseBody&gt;"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-action/-static-resource-action/","title":"StaticResourceAction - Misk","text":"<p>//misk/misk.web.resources/StaticResourceAction/StaticResourceAction</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-action/-static-resource-action/#staticresourceaction","title":"StaticResourceAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun StaticResourceAction(clientHttpCall: ActionScoped&lt;HttpCall&gt;, resourceLoader: ResourceLoader, resourceEntryFinder: ResourceEntryFinder)</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-action/action/","title":"action - Misk","text":"<p>//misk/misk.web.resources/StaticResourceAction/action</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-action/action/#action","title":"action","text":"<p>[jvm]\\ fun action(): Response&lt;ResponseBody&gt;</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-action/get-response/","title":"getResponse - Misk","text":"<p>//misk/misk.web.resources/StaticResourceAction/getResponse</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-action/get-response/#getresponse","title":"getResponse","text":"<p>[jvm]\\ fun getResponse(httpCall: HttpCall): Response&lt;ResponseBody&gt;</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-entry/","title":"StaticResourceEntry - Misk","text":"<p>//misk/misk.web.resources/StaticResourceEntry</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-entry/#staticresourceentry","title":"StaticResourceEntry","text":"<p>[jvm]\\ data class StaticResourceEntry@JvmOverloadsconstructor(url_path_prefix: String, resourcePath: String) : ValidWebEntry</p> <p>This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:</p> <p>multibind&lt;StaticResourceEntry&gt;().toInstance(StaticResourceEntry(\u2026))</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-entry/#constructors","title":"Constructors","text":"StaticResourceEntry [jvm]@JvmOverloadsfun StaticResourceEntry(url_path_prefix: String = \u201c/\u201d, resourcePath: String)"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-entry/#functions","title":"Functions","text":"Name Summary resourcePath [jvm]fun resourcePath(urlPath: String): String"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-entry/#properties","title":"Properties","text":"Name Summary url_path_prefix [jvm]val url_path_prefix: String valid_slug [jvm]val valid_slug: String valid_url_path_prefix [jvm]val valid_url_path_prefix: String"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-entry/-static-resource-entry/","title":"StaticResourceEntry - Misk","text":"<p>//misk/misk.web.resources/StaticResourceEntry/StaticResourceEntry</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-entry/-static-resource-entry/#staticresourceentry","title":"StaticResourceEntry","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun StaticResourceEntry(url_path_prefix: String = \u201c/\u201d, resourcePath: String)</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-entry/resource-path/","title":"resourcePath - Misk","text":"<p>//misk/misk.web.resources/StaticResourceEntry/resourcePath</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-entry/resource-path/#resourcepath","title":"resourcePath","text":"<p>[jvm]\\ fun resourcePath(urlPath: String): String</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-entry/url_path_prefix/","title":"url_path_prefix - Misk","text":"<p>//misk/misk.web.resources/StaticResourceEntry/url_path_prefix</p>"},{"location":"0.x/misk/misk/misk.web.resources/-static-resource-entry/url_path_prefix/#url_path_prefix","title":"url_path_prefix","text":"<p>[jvm]\\ val url_path_prefix: String</p>"},{"location":"0.x/misk-action-scopes/","title":"misk-action-scopes - Misk","text":"<p>//misk-action-scopes</p>"},{"location":"0.x/misk-action-scopes/#misk-action-scopes","title":"misk-action-scopes","text":""},{"location":"0.x/misk-action-scopes/#packages","title":"Packages","text":"Name misk.concurrent misk.scope misk.scope.executor"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/","title":"Package misk.concurrent - Misk","text":"<p>//misk-action-scopes/misk.concurrent</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/#package-miskconcurrent","title":"Package misk.concurrent","text":""},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/#types","title":"Types","text":"Name Summary WrappingListeningExecutorService [jvm]abstract class WrappingListeningExecutorService : ForwardingListeningExecutorServiceListeningExecutorService which wraps all calls"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/","title":"WrappingListeningExecutorService - Misk","text":"<p>//misk-action-scopes/misk.concurrent/WrappingListeningExecutorService</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/#wrappinglisteningexecutorservice","title":"WrappingListeningExecutorService","text":"<p>[jvm]\\ abstract class WrappingListeningExecutorService : ForwardingListeningExecutorService</p> <p>ListeningExecutorService which wraps all calls</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/#constructors","title":"Constructors","text":"WrappingListeningExecutorService [jvm]fun WrappingListeningExecutorService()"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/#functions","title":"Functions","text":"Name Summary awaitTermination [jvm]open fun awaitTermination(timeout: Duration): Boolean@CheckReturnValueopen override fun awaitTermination(timeout: Long, unit: TimeUnit): Boolean delegate [jvm]abstract override fun delegate(): ListeningExecutorService execute [jvm]open override fun execute(runnable: Runnable) invokeAll [jvm]open override fun &lt;T&gt; invokeAll(callables: Collection&lt;Callable&lt;T&gt;&gt;): List&lt;Future&lt;T&gt;&gt;open fun &lt;T : @NullableAny&gt; invokeAll(tasks: MutableCollection&lt;out Callable&lt;T&gt;&gt;, timeout: Duration): MutableList&lt;Future&lt;T&gt;&gt;open override fun &lt;T&gt; invokeAll(callables: Collection&lt;Callable&lt;T&gt;&gt;, timeout: Long, timeUnit: TimeUnit): List&lt;Future&lt;T&gt;&gt; invokeAny [jvm]open override fun &lt;T&gt; invokeAny(callables: Collection&lt;Callable&lt;T&gt;&gt;): Topen fun &lt;T : @NullableAny&gt; invokeAny(tasks: MutableCollection&lt;out Callable&lt;T&gt;&gt;, timeout: Duration): Topen override fun &lt;T&gt; invokeAny(callables: Collection&lt;Callable&lt;T&gt;&gt;, timeout: Long, timeUnit: TimeUnit): T isShutdown [jvm]open override fun isShutdown(): Boolean isTerminated [jvm]open override fun isTerminated(): Boolean shutdown [jvm]open override fun shutdown() shutdownNow [jvm]@CanIgnoreReturnValueopen override fun shutdownNow(): MutableList&lt;Runnable&gt; submit [jvm]open override fun submit(runnable: Runnable): ListenableFuture&lt;*&gt;open override fun &lt;T&gt; submit(callable: Callable&lt;T&gt;): ListenableFuture&lt;T&gt;open override fun &lt;T&gt; submit(runnable: Runnable, result: T): ListenableFuture&lt;T&gt; toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/#inheritors","title":"Inheritors","text":"Name ActionScopedExecutorService"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/-wrapping-listening-executor-service/","title":"WrappingListeningExecutorService - Misk","text":"<p>//misk-action-scopes/misk.concurrent/WrappingListeningExecutorService/WrappingListeningExecutorService</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/-wrapping-listening-executor-service/#wrappinglisteningexecutorservice","title":"WrappingListeningExecutorService","text":"<p>[jvm]\\ fun WrappingListeningExecutorService()</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/execute/","title":"execute - Misk","text":"<p>//misk-action-scopes/misk.concurrent/WrappingListeningExecutorService/execute</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/execute/#execute","title":"execute","text":"<p>[jvm]\\ open override fun execute(runnable: Runnable)</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/invoke-all/","title":"invokeAll - Misk","text":"<p>//misk-action-scopes/misk.concurrent/WrappingListeningExecutorService/invokeAll</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/invoke-all/#invokeall","title":"invokeAll","text":"<p>[jvm]\\ open override fun &lt;T&gt; invokeAll(callables: Collection&lt;Callable&lt;T&gt;&gt;): List&lt;Future&lt;T&gt;&gt;</p> <p>open override fun &lt;T&gt; invokeAll(callables: Collection&lt;Callable&lt;T&gt;&gt;, timeout: Long, timeUnit: TimeUnit): List&lt;Future&lt;T&gt;&gt;</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/invoke-any/","title":"invokeAny - Misk","text":"<p>//misk-action-scopes/misk.concurrent/WrappingListeningExecutorService/invokeAny</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/invoke-any/#invokeany","title":"invokeAny","text":"<p>[jvm]\\ open override fun &lt;T&gt; invokeAny(callables: Collection&lt;Callable&lt;T&gt;&gt;): T</p> <p>open override fun &lt;T&gt; invokeAny(callables: Collection&lt;Callable&lt;T&gt;&gt;, timeout: Long, timeUnit: TimeUnit): T</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/submit/","title":"submit - Misk","text":"<p>//misk-action-scopes/misk.concurrent/WrappingListeningExecutorService/submit</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.concurrent/-wrapping-listening-executor-service/submit/#submit","title":"submit","text":"<p>[jvm]\\ open override fun &lt;T&gt; submit(callable: Callable&lt;T&gt;): ListenableFuture&lt;T&gt;</p> <p>open override fun &lt;T&gt; submit(runnable: Runnable, result: T): ListenableFuture&lt;T&gt;</p> <p>open override fun submit(runnable: Runnable): ListenableFuture&lt;*&gt;</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/","title":"Package misk.scope - Misk","text":"<p>//misk-action-scopes/misk.scope</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/#package-miskscope","title":"Package misk.scope","text":""},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/#types","title":"Types","text":"Name Summary ActionScope [jvm]@Singletonclass ActionScope : AutoCloseable ActionScoped [jvm]interface ActionScoped&lt;out T&gt;Provides access to a context object specific to the current action ActionScopedProvider [jvm]interface ActionScopedProvider&lt;out T&gt;An ActionScopedProvider is implemented by components and application code that wants provide contextual information based on an incoming request, job data, etc. ActionScopedProviderModule [jvm]abstract class ActionScopedProviderModule : KAbstractModuleModule used by components and applications to provide ActionScoped context objects SeedDataTransformer [jvm]interface SeedDataTransformerWhile executing, actions have ActionScoped values that can be injected by anything running within the action."},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/","title":"ActionScope - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScope</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/#actionscope","title":"ActionScope","text":"<p>[jvm]\\ @Singleton</p> <p>class ActionScope : AutoCloseable</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/#functions","title":"Functions","text":"Name Summary asContextElement [jvm]fun asContextElement(): CoroutineContext.ElementConverts the action scope into a CoroutineContext.Element to maintain the given ActionScope context for coroutines regardless of the actual thread they run on. close [jvm]open override fun close() enter [jvm]fun enter(seedData: Map&lt;Key&lt;*&gt;, Any?&gt;): ActionScopeStarts the scope on a thread with the provided seed data get [jvm]fun &lt;T&gt; get(key: Key&lt;T&gt;): TReturns the action scoped value for the given key inScope [jvm]fun inScope(): BooleanReturns true if currently in the scope propagate [jvm]fun &lt;T&gt; propagate(c: Callable&lt;T&gt;): Callable&lt;T&gt;Wraps a Callable that will be called on another thread, propagating the current scoped data onto that thread[jvm]fun &lt;T&gt; propagate(f: () -&gt; T): () -&gt; TWraps a function or lambda that will be called on another thread, propagating the current scoped data onto that thread[jvm]fun &lt;T&gt; propagate(f: KFunction&lt;T&gt;): KFunction&lt;T&gt;Wraps a KFunction that will be called on another thread, propagating the current scoped data onto that thread snapshotActionScope [jvm]fun snapshotActionScope(): Map&lt;Key&lt;*&gt;, Any?&gt;"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/as-context-element/","title":"asContextElement - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScope/asContextElement</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/as-context-element/#ascontextelement","title":"asContextElement","text":"<p>[jvm]\\ fun asContextElement(): CoroutineContext.Element</p> <p>Converts the action scope into a CoroutineContext.Element to maintain the given ActionScope context for coroutines regardless of the actual thread they run on.</p> <p>Example usage:</p> <p>scope.enter(seedData).use {\\ runBlocking(scope.asContextElement()) {\\ async(Dispatchers.IO) {\\ tester.fooValue()\\ }.await()\\ }\\ }</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/close/","title":"close - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScope/close</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/close/#close","title":"close","text":"<p>[jvm]\\ open override fun close()</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/enter/","title":"enter - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScope/enter</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/enter/#enter","title":"enter","text":"<p>[jvm]\\ fun enter(seedData: Map&lt;Key&lt;*&gt;, Any?&gt;): ActionScope</p> <p>Starts the scope on a thread with the provided seed data</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/get/","title":"get - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScope/get</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/get/#get","title":"get","text":"<p>[jvm]\\ fun &lt;T&gt; get(key: Key&lt;T&gt;): T</p> <p>Returns the action scoped value for the given key</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/in-scope/","title":"inScope - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScope/inScope</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/in-scope/#inscope","title":"inScope","text":"<p>[jvm]\\ fun inScope(): Boolean</p> <p>Returns true if currently in the scope</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/propagate/","title":"propagate - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScope/propagate</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/propagate/#propagate","title":"propagate","text":"<p>[jvm]\\ fun &lt;T&gt; propagate(c: Callable&lt;T&gt;): Callable&lt;T&gt;</p> <p>Wraps a Callable that will be called on another thread, propagating the current scoped data onto that thread</p> <p>[jvm]\\ fun &lt;T&gt; propagate(f: KFunction&lt;T&gt;): KFunction&lt;T&gt;</p> <p>Wraps a KFunction that will be called on another thread, propagating the current scoped data onto that thread</p> <p>[jvm]\\ fun &lt;T&gt; propagate(f: () -&gt; T): () -&gt; T</p> <p>Wraps a function or lambda that will be called on another thread, propagating the current scoped data onto that thread</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/snapshot-action-scope/","title":"snapshotActionScope - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScope/snapshotActionScope</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/snapshot-action-scope/#snapshotactionscope","title":"snapshotActionScope","text":"<p>[jvm]\\ fun snapshotActionScope(): Map&lt;Key&lt;*&gt;, Any?&gt;</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/-companion/","title":"Companion - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScope/Companion</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scope/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped/","title":"ActionScoped - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScoped</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped/#actionscoped","title":"ActionScoped","text":"<p>[jvm]\\ interface ActionScoped&lt;out T&gt;</p> <p>Provides access to a context object specific to the current action</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped/#functions","title":"Functions","text":"Name Summary get [jvm]abstract fun get(): T"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped/get/","title":"get - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScoped/get</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped/get/#get","title":"get","text":"<p>[jvm]\\ abstract fun get(): T</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped/-companion/","title":"Companion - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScoped/Companion</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped/-companion/#functions","title":"Functions","text":"Name Summary of [jvm]fun &lt;T&gt; of(value: T): ActionScoped&lt;T&gt;"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped/-companion/of/","title":"of - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScoped/Companion/of</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped/-companion/of/#of","title":"of","text":"<p>[jvm]\\ fun &lt;T&gt; of(value: T): ActionScoped&lt;T&gt;</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped/-companion/of/#return","title":"Return","text":"<p>an ActionScoped hard-coded to a specific value, useful for tests</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider/","title":"ActionScopedProvider - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScopedProvider</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider/#actionscopedprovider","title":"ActionScopedProvider","text":"<p>[jvm]\\ interface ActionScopedProvider&lt;out T&gt;</p> <p>An ActionScopedProvider is implemented by components and application code that wants provide contextual information based on an incoming request, job data, etc.</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider/#functions","title":"Functions","text":"Name Summary get [jvm]abstract fun get(): T"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider/get/","title":"get - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScopedProvider/get</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider/get/#get","title":"get","text":"<p>[jvm]\\ abstract fun get(): T</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/","title":"ActionScopedProviderModule - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScopedProviderModule</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/#actionscopedprovidermodule","title":"ActionScopedProviderModule","text":"<p>[jvm]\\ abstract class ActionScopedProviderModule : KAbstractModule</p> <p>Module used by components and applications to provide ActionScoped context objects</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/#constructors","title":"Constructors","text":"ActionScopedProviderModule [jvm]fun ActionScopedProviderModule()"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder[jvm]@JvmOverloadsfun &lt;T : Any&gt; bindConstant(type: TypeLiteral&lt;T&gt;, providedValue: T, annotatedBy: Annotation? = null)@JvmOverloadsfun &lt;T : Any&gt; bindConstant(kclass: KClass&lt;T&gt;, providedValue: T, annotatedBy: Annotation? = null)Binds a provider that returns a constant value on every invocation. bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindProvider [jvm]fun &lt;T, A : Annotation&gt; bindProvider(type: TypeLiteral&lt;T&gt;, providerType: KClass&lt;out ActionScopedProvider&lt;T&gt;&gt;, annotatedBy: Class&lt;A&gt;)@JvmOverloadsfun &lt;T&gt; bindProvider(type: TypeLiteral&lt;T&gt;, providerType: KClass&lt;out ActionScopedProvider&lt;T&gt;&gt;, annotatedBy: Annotation? = null)fun &lt;T : Any, A : Annotation&gt; bindProvider(kclass: KClass&lt;T&gt;, providerType: KClass&lt;out ActionScopedProvider&lt;T&gt;&gt;, annotatedBy: Class&lt;A&gt;)@JvmOverloadsfun &lt;T : Any&gt; bindProvider(kclass: KClass&lt;T&gt;, providerType: KClass&lt;out ActionScopedProvider&lt;T&gt;&gt;, annotatedBy: Annotation? = null)Binds an annotation qualified ActionScoped along with its provider bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) bindSeedData [jvm]fun &lt;T : Any&gt; bindSeedData(type: TypeLiteral&lt;T&gt;)fun &lt;T : Any&gt; bindSeedData(kclass: KClass&lt;T&gt;)Binds an ActionScoped which only pulls from data seeded at the scope entry[jvm]fun &lt;T : Any&gt; bindSeedData(type: TypeLiteral&lt;T&gt;, a: Annotation)fun &lt;T : Any&gt; bindSeedData(kclass: KClass&lt;T&gt;, a: Annotation)fun &lt;T : Any, A : Annotation&gt; bindSeedData(kclass: KClass&lt;T&gt;, a: KClass&lt;A&gt;)Binds an annotation qualified ActionScoped which only pulls from data seeded at the scope entry configure [jvm]override fun configure(builder: Binder) configureProviders [jvm]abstract fun configureProviders() convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/-action-scoped-provider-module/","title":"ActionScopedProviderModule - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScopedProviderModule/ActionScopedProviderModule</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/-action-scoped-provider-module/#actionscopedprovidermodule","title":"ActionScopedProviderModule","text":"<p>[jvm]\\ fun ActionScopedProviderModule()</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/bind-constant/","title":"bindConstant - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScopedProviderModule/bindConstant</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/bind-constant/#bindconstant","title":"bindConstant","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun &lt;T : Any&gt; bindConstant(kclass: KClass&lt;T&gt;, providedValue: T, annotatedBy: Annotation? = null)</p> <p>@JvmOverloads</p> <p>fun &lt;T : Any&gt; bindConstant(type: TypeLiteral&lt;T&gt;, providedValue: T, annotatedBy: Annotation? = null)</p> <p>Binds a provider that returns a constant value on every invocation.</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/bind-provider/","title":"bindProvider - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScopedProviderModule/bindProvider</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/bind-provider/#bindprovider","title":"bindProvider","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun &lt;T : Any&gt; bindProvider(kclass: KClass&lt;T&gt;, providerType: KClass&lt;out ActionScopedProvider&lt;T&gt;&gt;, annotatedBy: Annotation? = null)</p> <p>@JvmOverloads</p> <p>fun &lt;T&gt; bindProvider(type: TypeLiteral&lt;T&gt;, providerType: KClass&lt;out ActionScopedProvider&lt;T&gt;&gt;, annotatedBy: Annotation? = null)</p> <p>fun &lt;T : Any, A : Annotation&gt; bindProvider(kclass: KClass&lt;T&gt;, providerType: KClass&lt;out ActionScopedProvider&lt;T&gt;&gt;, annotatedBy: Class&lt;A&gt;)</p> <p>fun &lt;T, A : Annotation&gt; bindProvider(type: TypeLiteral&lt;T&gt;, providerType: KClass&lt;out ActionScopedProvider&lt;T&gt;&gt;, annotatedBy: Class&lt;A&gt;)</p> <p>Binds an annotation qualified ActionScoped along with its provider</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/bind-seed-data/","title":"bindSeedData - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScopedProviderModule/bindSeedData</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/bind-seed-data/#bindseeddata","title":"bindSeedData","text":"<p>[jvm]\\ fun &lt;T : Any&gt; bindSeedData(kclass: KClass&lt;T&gt;)</p> <p>fun &lt;T : Any&gt; bindSeedData(type: TypeLiteral&lt;T&gt;)</p> <p>Binds an ActionScoped which only pulls from data seeded at the scope entry</p> <p>[jvm]\\ fun &lt;T : Any&gt; bindSeedData(kclass: KClass&lt;T&gt;, a: Annotation)</p> <p>fun &lt;T : Any&gt; bindSeedData(type: TypeLiteral&lt;T&gt;, a: Annotation)</p> <p>fun &lt;T : Any, A : Annotation&gt; bindSeedData(kclass: KClass&lt;T&gt;, a: KClass&lt;A&gt;)</p> <p>Binds an annotation qualified ActionScoped which only pulls from data seeded at the scope entry</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/configure-providers/","title":"configureProviders - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScopedProviderModule/configureProviders</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/configure-providers/#configureproviders","title":"configureProviders","text":"<p>[jvm]\\ abstract fun configureProviders()</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/-companion/","title":"Companion - Misk","text":"<p>//misk-action-scopes/misk.scope/ActionScopedProviderModule/Companion</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-action-scoped-provider-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-seed-data-transformer/","title":"SeedDataTransformer - Misk","text":"<p>//misk-action-scopes/misk.scope/SeedDataTransformer</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-seed-data-transformer/#seeddatatransformer","title":"SeedDataTransformer","text":"<p>[jvm]\\ interface SeedDataTransformer</p> <p>While executing, actions have ActionScoped values that can be injected by anything running within the action.</p> <p>For example, these values are seeded by default for web actions:</p> <ul> <li>HttpCall</li> <li>HttpServletRequest</li> </ul> <p>These types are the initial keys in the seedData map; they map to the corresponding instances. Implementations of this interface may modify this map.</p> <p>To add new seed data keys, you must also subclass ActionScopedProviderModule and call ActionScopedProviderModule.bindSeedData. This makes the seed data type injectable by Guice.</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-seed-data-transformer/#functions","title":"Functions","text":"Name Summary transform [jvm]abstract fun transform(seedData: Map&lt;Key&lt;&gt;, Any?&gt;): Map&lt;Key&lt;&gt;, Any?&gt;"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-seed-data-transformer/transform/","title":"transform - Misk","text":"<p>//misk-action-scopes/misk.scope/SeedDataTransformer/transform</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope/-seed-data-transformer/transform/#transform","title":"transform","text":"<p>[jvm]\\ abstract fun transform(seedData: Map&lt;Key&lt;&gt;, Any?&gt;): Map&lt;Key&lt;&gt;, Any?&gt;</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope.executor/","title":"Package misk.scope.executor - Misk","text":"<p>//misk-action-scopes/misk.scope.executor</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope.executor/#package-miskscopeexecutor","title":"Package misk.scope.executor","text":""},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope.executor/#types","title":"Types","text":"Name Summary ActionScopedExecutorService [jvm]class ActionScopedExecutorService(target: ExecutorService, scope: ActionScope) : WrappingListeningExecutorServiceWraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope.executor/-action-scoped-executor-service/","title":"ActionScopedExecutorService - Misk","text":"<p>//misk-action-scopes/misk.scope.executor/ActionScopedExecutorService</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope.executor/-action-scoped-executor-service/#actionscopedexecutorservice","title":"ActionScopedExecutorService","text":"<p>[jvm]\\ class ActionScopedExecutorService(target: ExecutorService, scope: ActionScope) : WrappingListeningExecutorService</p> <p>Wraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope.executor/-action-scoped-executor-service/#constructors","title":"Constructors","text":"ActionScopedExecutorService [jvm]fun ActionScopedExecutorService(target: ExecutorService, scope: ActionScope)"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope.executor/-action-scoped-executor-service/#functions","title":"Functions","text":"Name Summary awaitTermination [jvm]open fun awaitTermination(timeout: Duration): Boolean@CheckReturnValueopen override fun awaitTermination(timeout: Long, unit: TimeUnit): Boolean execute [jvm]open override fun execute(runnable: Runnable) invokeAll [jvm]open override fun &lt;T&gt; invokeAll(callables: Collection&lt;Callable&lt;T&gt;&gt;): List&lt;Future&lt;T&gt;&gt;open fun &lt;T : @NullableAny&gt; invokeAll(tasks: MutableCollection&lt;out Callable&lt;T&gt;&gt;, timeout: Duration): MutableList&lt;Future&lt;T&gt;&gt;open override fun &lt;T&gt; invokeAll(callables: Collection&lt;Callable&lt;T&gt;&gt;, timeout: Long, timeUnit: TimeUnit): List&lt;Future&lt;T&gt;&gt; invokeAny [jvm]open override fun &lt;T&gt; invokeAny(callables: Collection&lt;Callable&lt;T&gt;&gt;): Topen fun &lt;T : @NullableAny&gt; invokeAny(tasks: MutableCollection&lt;out Callable&lt;T&gt;&gt;, timeout: Duration): Topen override fun &lt;T&gt; invokeAny(callables: Collection&lt;Callable&lt;T&gt;&gt;, timeout: Long, timeUnit: TimeUnit): T isShutdown [jvm]open override fun isShutdown(): Boolean isTerminated [jvm]open override fun isTerminated(): Boolean shutdown [jvm]open override fun shutdown() shutdownNow [jvm]@CanIgnoreReturnValueopen override fun shutdownNow(): MutableList&lt;Runnable&gt; submit [jvm]open override fun submit(runnable: Runnable): ListenableFuture&lt;*&gt;open override fun &lt;T&gt; submit(callable: Callable&lt;T&gt;): ListenableFuture&lt;T&gt;open override fun &lt;T&gt; submit(runnable: Runnable, result: T): ListenableFuture&lt;T&gt; toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope.executor/-action-scoped-executor-service/-action-scoped-executor-service/","title":"ActionScopedExecutorService - Misk","text":"<p>//misk-action-scopes/misk.scope.executor/ActionScopedExecutorService/ActionScopedExecutorService</p>"},{"location":"0.x/misk-action-scopes/misk-action-scopes/misk.scope.executor/-action-scoped-executor-service/-action-scoped-executor-service/#actionscopedexecutorservice","title":"ActionScopedExecutorService","text":"<p>[jvm]\\ fun ActionScopedExecutorService(target: ExecutorService, scope: ActionScope)</p>"},{"location":"0.x/misk-actions/","title":"misk-actions - Misk","text":"<p>//misk-actions</p>"},{"location":"0.x/misk-actions/#misk-actions","title":"misk-actions","text":""},{"location":"0.x/misk-actions/#packages","title":"Packages","text":"Name misk misk.exceptions misk.security.authz misk.web misk.web.actions misk.web.dashboard misk.web.interceptors"},{"location":"0.x/misk-actions/misk-actions/misk/","title":"Package misk - Misk","text":"<p>//misk-actions/misk</p>"},{"location":"0.x/misk-actions/misk-actions/misk/#package-misk","title":"Package misk","text":""},{"location":"0.x/misk-actions/misk-actions/misk/#types","title":"Types","text":"Name Summary MiskCaller [jvm]data class MiskCaller@JvmOverloadsconstructor(service: String?, user: String?, capabilities: Set&lt;String&gt;)Information about the authenticated caller of a given action"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/","title":"MiskCaller - Misk","text":"<p>//misk-actions/misk/MiskCaller</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/#miskcaller","title":"MiskCaller","text":"<p>[jvm]\\ data class MiskCaller@JvmOverloadsconstructor(service: String?, user: String?, capabilities: Set&lt;String&gt;)</p> <p>Information about the authenticated caller of a given action</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/#constructors","title":"Constructors","text":"MiskCaller [jvm]@JvmOverloadsfun MiskCaller(service: String? = null, user: String? = null, capabilities: Set&lt;String&gt; = setOf())"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/#functions","title":"Functions","text":"Name Summary hasCapability [jvm]fun hasCapability(allowedCapabilities: Set&lt;String&gt;): &lt;ERROR CLASS&gt;Check whether the caller has one of allowedCapabilities. isService [jvm]fun isService(allowedServices: Set&lt;String&gt;): BooleanCheck whether this is a service-to-service call from one of allowedServices. toString [jvm]open override fun toString(): StringWe don\u2019t like to log usernames."},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/#properties","title":"Properties","text":"Name Summary capabilities [jvm]val capabilities: Set&lt;String&gt;Set of capabilities given to a human user, typically provided by the SSO infrastructure principal [jvm]val principal: StringThe identity of the calling principal, regardless of whether they are a service or a user service [jvm]val service: String? = nullPresent if the caller is an authenticated peer service user [jvm]val user: String? = nullPresent if the caller is a human user, typically from an SSO proxy"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/-misk-caller/","title":"MiskCaller - Misk","text":"<p>//misk-actions/misk/MiskCaller/MiskCaller</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/-misk-caller/#miskcaller","title":"MiskCaller","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun MiskCaller(service: String? = null, user: String? = null, capabilities: Set&lt;String&gt; = setOf())</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/capabilities/","title":"capabilities - Misk","text":"<p>//misk-actions/misk/MiskCaller/capabilities</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/capabilities/#capabilities","title":"capabilities","text":"<p>[jvm]\\ val capabilities: Set&lt;String&gt;</p> <p>Set of capabilities given to a human user, typically provided by the SSO infrastructure</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/has-capability/","title":"hasCapability - Misk","text":"<p>//misk-actions/misk/MiskCaller/hasCapability</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/has-capability/#hascapability","title":"hasCapability","text":"<p>[jvm]\\ fun hasCapability(allowedCapabilities: Set&lt;String&gt;): &lt;ERROR CLASS&gt;</p> <p>Check whether the caller has one of allowedCapabilities.</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/is-service/","title":"isService - Misk","text":"<p>//misk-actions/misk/MiskCaller/isService</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/is-service/#isservice","title":"isService","text":"<p>[jvm]\\ fun isService(allowedServices: Set&lt;String&gt;): Boolean</p> <p>Check whether this is a service-to-service call from one of allowedServices.</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/principal/","title":"principal - Misk","text":"<p>//misk-actions/misk/MiskCaller/principal</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/principal/#principal","title":"principal","text":"<p>[jvm]\\ val principal: String</p> <p>The identity of the calling principal, regardless of whether they are a service or a user</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/service/","title":"service - Misk","text":"<p>//misk-actions/misk/MiskCaller/service</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/service/#service","title":"service","text":"<p>[jvm]\\ val service: String? = null</p> <p>Present if the caller is an authenticated peer service</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/to-string/","title":"toString - Misk","text":"<p>//misk-actions/misk/MiskCaller/toString</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p> <p>We don\u2019t like to log usernames.</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/user/","title":"user - Misk","text":"<p>//misk-actions/misk/MiskCaller/user</p>"},{"location":"0.x/misk-actions/misk-actions/misk/-misk-caller/user/#user","title":"user","text":"<p>[jvm]\\ val user: String? = null</p> <p>Present if the caller is a human user, typically from an SSO proxy</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/","title":"Package misk.exceptions - Misk","text":"<p>//misk-actions/misk.exceptions</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/#package-miskexceptions","title":"Package misk.exceptions","text":""},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/#types","title":"Types","text":"Name Summary BadGatewayException [jvm]open class BadGatewayException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionExceptionBase exception for when a server is acting as a gateway and gets invalid response from upstream. The message is not exposed to the caller. BadRequestException [jvm]open class BadRequestException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionExceptionBase exception for bad client requests ClientClosedRequestException [jvm]open class ClientClosedRequestException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionExceptionThis exception is custom to Misk. ConflictException [jvm]open class ConflictException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionExceptionBase exception for when a request causes a conflict GatewayTimeoutException [jvm]open class GatewayTimeoutException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionExceptionBase exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller. NotFoundException [jvm]open class NotFoundException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionExceptionBase exception for when resources are not found PayloadTooLargeException [jvm]open class PayloadTooLargeException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException ResourceUnavailableException [jvm]open class ResourceUnavailableException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionExceptionBase exception for when a resource is unavailable. The message is not exposed to the caller. TooManyRequestsException [jvm]open class TooManyRequestsException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionExceptionThis exception is custom to Misk. UnauthenticatedException [jvm]open class UnauthenticatedException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionExceptionBase exception for when authentication fails UnauthorizedException [jvm]open class UnauthorizedException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionExceptionBase exception for when authenticated credentials lack access to a resource UnprocessableEntityException [jvm]open class UnprocessableEntityException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionExceptionThis exception is custom to Misk. UnsupportedMediaTypeException [jvm]open class UnsupportedMediaTypeException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException WebActionException [jvm]open class WebActionException(code: Int, responseBody: String, message: String, cause: Throwable?, grpcStatus: GrpcStatus?, details: List&lt;AnyMessage&gt;) : RuntimeExceptionEven though all kotlin exceptions are runtime exceptions. To ensure java inter-op all exception need to extend from RuntimeException."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/#functions","title":"Functions","text":"Name Summary requireRequest [jvm]inline fun requireRequest(check: Boolean, lazyMessage: () -&gt; String)Similar to kotlin.require, but throws BadRequestException if the check fails"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/require-request/","title":"requireRequest - Misk","text":"<p>//misk-actions/misk.exceptions/requireRequest</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/require-request/#requirerequest","title":"requireRequest","text":"<p>[jvm]\\ inline fun requireRequest(check: Boolean, lazyMessage: () -&gt; String)</p> <p>Similar to kotlin.require, but throws BadRequestException if the check fails</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-gateway-exception/","title":"BadGatewayException - Misk","text":"<p>//misk-actions/misk.exceptions/BadGatewayException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-gateway-exception/#badgatewayexception","title":"BadGatewayException","text":"<p>[jvm]\\ open class BadGatewayException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException</p> <p>Base exception for when a server is acting as a gateway and gets invalid response from upstream. The message is not exposed to the caller.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-gateway-exception/#constructors","title":"Constructors","text":"BadGatewayException [jvm]@JvmOverloadsfun BadGatewayException(message: String = \u201c\u201d, cause: Throwable? = null)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-gateway-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-gateway-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-gateway-exception/-bad-gateway-exception/","title":"BadGatewayException - Misk","text":"<p>//misk-actions/misk.exceptions/BadGatewayException/BadGatewayException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-gateway-exception/-bad-gateway-exception/#badgatewayexception","title":"BadGatewayException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun BadGatewayException(message: String = \u201c\u201d, cause: Throwable? = null)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-request-exception/","title":"BadRequestException - Misk","text":"<p>//misk-actions/misk.exceptions/BadRequestException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-request-exception/#badrequestexception","title":"BadRequestException","text":"<p>[jvm]\\ open class BadRequestException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException</p> <p>Base exception for bad client requests</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-request-exception/#constructors","title":"Constructors","text":"BadRequestException [jvm]@JvmOverloadsfun BadRequestException(message: String = \u201c\u201d, cause: Throwable? = null)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-request-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-request-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-request-exception/-bad-request-exception/","title":"BadRequestException - Misk","text":"<p>//misk-actions/misk.exceptions/BadRequestException/BadRequestException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-bad-request-exception/-bad-request-exception/#badrequestexception","title":"BadRequestException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun BadRequestException(message: String = \u201c\u201d, cause: Throwable? = null)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-client-closed-request-exception/","title":"ClientClosedRequestException - Misk","text":"<p>//misk-actions/misk.exceptions/ClientClosedRequestException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-client-closed-request-exception/#clientclosedrequestexception","title":"ClientClosedRequestException","text":"<p>[jvm]\\ open class ClientClosedRequestException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException</p> <p>This exception is custom to Misk.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-client-closed-request-exception/#constructors","title":"Constructors","text":"ClientClosedRequestException [jvm]@JvmOverloadsfun ClientClosedRequestException(message: String = \u201c\u201d, cause: Throwable? = null)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-client-closed-request-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-client-closed-request-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-client-closed-request-exception/-client-closed-request-exception/","title":"ClientClosedRequestException - Misk","text":"<p>//misk-actions/misk.exceptions/ClientClosedRequestException/ClientClosedRequestException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-client-closed-request-exception/-client-closed-request-exception/#clientclosedrequestexception","title":"ClientClosedRequestException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun ClientClosedRequestException(message: String = \u201c\u201d, cause: Throwable? = null)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-conflict-exception/","title":"ConflictException - Misk","text":"<p>//misk-actions/misk.exceptions/ConflictException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-conflict-exception/#conflictexception","title":"ConflictException","text":"<p>[jvm]\\ open class ConflictException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException</p> <p>Base exception for when a request causes a conflict</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-conflict-exception/#constructors","title":"Constructors","text":"ConflictException [jvm]@JvmOverloadsfun ConflictException(message: String = \u201c\u201d, cause: Throwable? = null)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-conflict-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-conflict-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-conflict-exception/-conflict-exception/","title":"ConflictException - Misk","text":"<p>//misk-actions/misk.exceptions/ConflictException/ConflictException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-conflict-exception/-conflict-exception/#conflictexception","title":"ConflictException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun ConflictException(message: String = \u201c\u201d, cause: Throwable? = null)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-gateway-timeout-exception/","title":"GatewayTimeoutException - Misk","text":"<p>//misk-actions/misk.exceptions/GatewayTimeoutException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-gateway-timeout-exception/#gatewaytimeoutexception","title":"GatewayTimeoutException","text":"<p>[jvm]\\ open class GatewayTimeoutException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException</p> <p>Base exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-gateway-timeout-exception/#constructors","title":"Constructors","text":"GatewayTimeoutException [jvm]@JvmOverloadsfun GatewayTimeoutException(message: String = \u201c\u201d, cause: Throwable? = null)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-gateway-timeout-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-gateway-timeout-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-gateway-timeout-exception/-gateway-timeout-exception/","title":"GatewayTimeoutException - Misk","text":"<p>//misk-actions/misk.exceptions/GatewayTimeoutException/GatewayTimeoutException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-gateway-timeout-exception/-gateway-timeout-exception/#gatewaytimeoutexception","title":"GatewayTimeoutException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun GatewayTimeoutException(message: String = \u201c\u201d, cause: Throwable? = null)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-not-found-exception/","title":"NotFoundException - Misk","text":"<p>//misk-actions/misk.exceptions/NotFoundException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-not-found-exception/#notfoundexception","title":"NotFoundException","text":"<p>[jvm]\\ open class NotFoundException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException</p> <p>Base exception for when resources are not found</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-not-found-exception/#constructors","title":"Constructors","text":"NotFoundException [jvm]@JvmOverloadsfun NotFoundException(message: String = \u201c\u201d, cause: Throwable? = null)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-not-found-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-not-found-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-not-found-exception/-not-found-exception/","title":"NotFoundException - Misk","text":"<p>//misk-actions/misk.exceptions/NotFoundException/NotFoundException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-not-found-exception/-not-found-exception/#notfoundexception","title":"NotFoundException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun NotFoundException(message: String = \u201c\u201d, cause: Throwable? = null)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-payload-too-large-exception/","title":"PayloadTooLargeException - Misk","text":"<p>//misk-actions/misk.exceptions/PayloadTooLargeException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-payload-too-large-exception/#payloadtoolargeexception","title":"PayloadTooLargeException","text":"<p>[jvm]\\ open class PayloadTooLargeException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-payload-too-large-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-payload-too-large-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-payload-too-large-exception/-payload-too-large-exception/","title":"PayloadTooLargeException - Misk","text":"<p>//misk-actions/misk.exceptions/PayloadTooLargeException/PayloadTooLargeException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-payload-too-large-exception/-payload-too-large-exception/#payloadtoolargeexception","title":"PayloadTooLargeException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun PayloadTooLargeException(message: String = \u201c\u201d, cause: Throwable? = null)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-resource-unavailable-exception/","title":"ResourceUnavailableException - Misk","text":"<p>//misk-actions/misk.exceptions/ResourceUnavailableException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-resource-unavailable-exception/#resourceunavailableexception","title":"ResourceUnavailableException","text":"<p>[jvm]\\ open class ResourceUnavailableException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException</p> <p>Base exception for when a resource is unavailable. The message is not exposed to the caller.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-resource-unavailable-exception/#constructors","title":"Constructors","text":"ResourceUnavailableException [jvm]@JvmOverloadsfun ResourceUnavailableException(message: String = \u201c\u201d, cause: Throwable? = null)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-resource-unavailable-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-resource-unavailable-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-resource-unavailable-exception/-resource-unavailable-exception/","title":"ResourceUnavailableException - Misk","text":"<p>//misk-actions/misk.exceptions/ResourceUnavailableException/ResourceUnavailableException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-resource-unavailable-exception/-resource-unavailable-exception/#resourceunavailableexception","title":"ResourceUnavailableException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun ResourceUnavailableException(message: String = \u201c\u201d, cause: Throwable? = null)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-too-many-requests-exception/","title":"TooManyRequestsException - Misk","text":"<p>//misk-actions/misk.exceptions/TooManyRequestsException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-too-many-requests-exception/#toomanyrequestsexception","title":"TooManyRequestsException","text":"<p>[jvm]\\ open class TooManyRequestsException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException</p> <p>This exception is custom to Misk.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-too-many-requests-exception/#constructors","title":"Constructors","text":"TooManyRequestsException [jvm]@JvmOverloadsfun TooManyRequestsException(message: String = \u201c\u201d, cause: Throwable? = null)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-too-many-requests-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-too-many-requests-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-too-many-requests-exception/-too-many-requests-exception/","title":"TooManyRequestsException - Misk","text":"<p>//misk-actions/misk.exceptions/TooManyRequestsException/TooManyRequestsException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-too-many-requests-exception/-too-many-requests-exception/#toomanyrequestsexception","title":"TooManyRequestsException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun TooManyRequestsException(message: String = \u201c\u201d, cause: Throwable? = null)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthenticated-exception/","title":"UnauthenticatedException - Misk","text":"<p>//misk-actions/misk.exceptions/UnauthenticatedException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthenticated-exception/#unauthenticatedexception","title":"UnauthenticatedException","text":"<p>[jvm]\\ open class UnauthenticatedException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException</p> <p>Base exception for when authentication fails</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthenticated-exception/#constructors","title":"Constructors","text":"UnauthenticatedException [jvm]@JvmOverloadsfun UnauthenticatedException(message: String = \u201c\u201d, cause: Throwable? = null)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthenticated-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthenticated-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthenticated-exception/-unauthenticated-exception/","title":"UnauthenticatedException - Misk","text":"<p>//misk-actions/misk.exceptions/UnauthenticatedException/UnauthenticatedException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthenticated-exception/-unauthenticated-exception/#unauthenticatedexception","title":"UnauthenticatedException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun UnauthenticatedException(message: String = \u201c\u201d, cause: Throwable? = null)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthorized-exception/","title":"UnauthorizedException - Misk","text":"<p>//misk-actions/misk.exceptions/UnauthorizedException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthorized-exception/#unauthorizedexception","title":"UnauthorizedException","text":"<p>[jvm]\\ open class UnauthorizedException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException</p> <p>Base exception for when authenticated credentials lack access to a resource</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthorized-exception/#constructors","title":"Constructors","text":"UnauthorizedException [jvm]@JvmOverloadsfun UnauthorizedException(message: String = \u201c\u201d, cause: Throwable? = null)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthorized-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthorized-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthorized-exception/-unauthorized-exception/","title":"UnauthorizedException - Misk","text":"<p>//misk-actions/misk.exceptions/UnauthorizedException/UnauthorizedException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unauthorized-exception/-unauthorized-exception/#unauthorizedexception","title":"UnauthorizedException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun UnauthorizedException(message: String = \u201c\u201d, cause: Throwable? = null)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unprocessable-entity-exception/","title":"UnprocessableEntityException - Misk","text":"<p>//misk-actions/misk.exceptions/UnprocessableEntityException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unprocessable-entity-exception/#unprocessableentityexception","title":"UnprocessableEntityException","text":"<p>[jvm]\\ open class UnprocessableEntityException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException</p> <p>This exception is custom to Misk.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unprocessable-entity-exception/#constructors","title":"Constructors","text":"UnprocessableEntityException [jvm]@JvmOverloadsfun UnprocessableEntityException(message: String = \u201c\u201d, cause: Throwable? = null)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unprocessable-entity-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unprocessable-entity-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unprocessable-entity-exception/-unprocessable-entity-exception/","title":"UnprocessableEntityException - Misk","text":"<p>//misk-actions/misk.exceptions/UnprocessableEntityException/UnprocessableEntityException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unprocessable-entity-exception/-unprocessable-entity-exception/#unprocessableentityexception","title":"UnprocessableEntityException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun UnprocessableEntityException(message: String = \u201c\u201d, cause: Throwable? = null)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unsupported-media-type-exception/","title":"UnsupportedMediaTypeException - Misk","text":"<p>//misk-actions/misk.exceptions/UnsupportedMediaTypeException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unsupported-media-type-exception/#unsupportedmediatypeexception","title":"UnsupportedMediaTypeException","text":"<p>[jvm]\\ open class UnsupportedMediaTypeException@JvmOverloadsconstructor(message: String, cause: Throwable?) : WebActionException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unsupported-media-type-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unsupported-media-type-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unsupported-media-type-exception/-unsupported-media-type-exception/","title":"UnsupportedMediaTypeException - Misk","text":"<p>//misk-actions/misk.exceptions/UnsupportedMediaTypeException/UnsupportedMediaTypeException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-unsupported-media-type-exception/-unsupported-media-type-exception/#unsupportedmediatypeexception","title":"UnsupportedMediaTypeException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun UnsupportedMediaTypeException(message: String = \u201c\u201d, cause: Throwable? = null)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/","title":"WebActionException - Misk","text":"<p>//misk-actions/misk.exceptions/WebActionException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/#webactionexception","title":"WebActionException","text":"<p>[jvm]\\ open class WebActionException(code: Int, responseBody: String, message: String, cause: Throwable?, grpcStatus: GrpcStatus?, details: List&lt;AnyMessage&gt;) : RuntimeException</p> <p>Even though all kotlin exceptions are runtime exceptions. To ensure java inter-op all exception need to extend from RuntimeException.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/#constructors","title":"Constructors","text":"WebActionException [jvm]fun WebActionException(code: Int, message: String, cause: Throwable? = null) WebActionException [jvm]fun WebActionException(code: Int, responseBody: String, message: String, cause: Throwable? = null) WebActionException [jvm]fun WebActionException(code: Int, responseBody: String, message: String, cause: Throwable? = null, grpcStatus: GrpcStatus? = null, details: List&lt;AnyMessage&gt; = listOf())"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? code [jvm]val code: IntThe HTTP status code. Should be 400..599. details [jvm]val details: List&lt;AnyMessage&gt;Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses. grpcStatus [jvm]val grpcStatus: GrpcStatus? = nullThe gPRC status code. If unset, it will be inferred from code. isClientError [jvm]val isClientError: &lt;ERROR CLASS&gt; isServerError [jvm]val isServerError: &lt;ERROR CLASS&gt; message [jvm]open val message: String? responseBody [jvm]val responseBody: StringThis is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body."},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/#inheritors","title":"Inheritors","text":"Name NotFoundException UnauthenticatedException UnauthorizedException ResourceUnavailableException BadRequestException ConflictException UnprocessableEntityException TooManyRequestsException ClientClosedRequestException BadGatewayException GatewayTimeoutException PayloadTooLargeException UnsupportedMediaTypeException"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/-web-action-exception/","title":"WebActionException - Misk","text":"<p>//misk-actions/misk.exceptions/WebActionException/WebActionException</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/-web-action-exception/#webactionexception","title":"WebActionException","text":"<p>[jvm]\\ fun WebActionException(code: Int, message: String, cause: Throwable? = null)</p> <p>fun WebActionException(code: Int, responseBody: String, message: String, cause: Throwable? = null)</p> <p>fun WebActionException(code: Int, responseBody: String, message: String, cause: Throwable? = null, grpcStatus: GrpcStatus? = null, details: List&lt;AnyMessage&gt; = listOf())</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/code/","title":"code - Misk","text":"<p>//misk-actions/misk.exceptions/WebActionException/code</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/code/#code","title":"code","text":"<p>[jvm]\\ val code: Int</p> <p>The HTTP status code. Should be 400..599.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/details/","title":"details - Misk","text":"<p>//misk-actions/misk.exceptions/WebActionException/details</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/details/#details","title":"details","text":"<p>[jvm]\\ val details: List&lt;AnyMessage&gt;</p> <p>Details are used to enrich gRPC errors with additional proto-encoded messages. error_details.proto is a well-known collection of details, but clients can define their own. This field is ignored for REST responses.</p> <p>Reference: https://github.com/googleapis/googleapis/blob/master/google/rpc/error_details.proto</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/grpc-status/","title":"grpcStatus - Misk","text":"<p>//misk-actions/misk.exceptions/WebActionException/grpcStatus</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/grpc-status/#grpcstatus","title":"grpcStatus","text":"<p>[jvm]\\ val grpcStatus: GrpcStatus? = null</p> <p>The gPRC status code. If unset, it will be inferred from code.</p> <p>Reference: https://github.com/grpc/grpc/blob/master/doc/statuscodes.md</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/is-client-error/","title":"isClientError - Misk","text":"<p>//misk-actions/misk.exceptions/WebActionException/isClientError</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/is-client-error/#isclienterror","title":"isClientError","text":"<p>[jvm]\\ val isClientError: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/is-server-error/","title":"isServerError - Misk","text":"<p>//misk-actions/misk.exceptions/WebActionException/isServerError</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/is-server-error/#isservererror","title":"isServerError","text":"<p>[jvm]\\ val isServerError: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/response-body/","title":"responseBody - Misk","text":"<p>//misk-actions/misk.exceptions/WebActionException/responseBody</p>"},{"location":"0.x/misk-actions/misk-actions/misk.exceptions/-web-action-exception/response-body/#responsebody","title":"responseBody","text":"<p>[jvm]\\ val responseBody: String</p> <p>This is returned to the caller as is. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/","title":"Package misk.security.authz - Misk","text":"<p>//misk-actions/misk.security.authz</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/#package-misksecurityauthz","title":"Package misk.security.authz","text":""},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/#types","title":"Types","text":"Name Summary AllowAnyService [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class AllowAnyServiceAnnotation indicating that any authenticated service is allowed to access this endpoint. Authenticated [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class Authenticated(services: Array&lt;String&gt;, capabilities: Array&lt;String&gt;)Annotation indicating that a given action requires an authenticated caller - either a human in a specific capability, or one of a set of services Unauthenticated [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class UnauthenticatedAnnotation indicating that a given action supports unauthenticated access"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-allow-any-service/","title":"AllowAnyService - Misk","text":"<p>//misk-actions/misk.security.authz/AllowAnyService</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-allow-any-service/#allowanyservice","title":"AllowAnyService","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class AllowAnyService</p> <p>Annotation indicating that any authenticated service is allowed to access this endpoint.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-allow-any-service/#constructors","title":"Constructors","text":"AllowAnyService [jvm]fun AllowAnyService()"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-allow-any-service/-allow-any-service/","title":"AllowAnyService - Misk","text":"<p>//misk-actions/misk.security.authz/AllowAnyService/AllowAnyService</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-allow-any-service/-allow-any-service/#allowanyservice","title":"AllowAnyService","text":"<p>[jvm]\\ fun AllowAnyService()</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-authenticated/","title":"Authenticated - Misk","text":"<p>//misk-actions/misk.security.authz/Authenticated</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-authenticated/#authenticated","title":"Authenticated","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class Authenticated(services: Array&lt;String&gt;, capabilities: Array&lt;String&gt;)</p> <p>Annotation indicating that a given action requires an authenticated caller - either a human in a specific capability, or one of a set of services</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-authenticated/#constructors","title":"Constructors","text":"Authenticated [jvm]fun Authenticated(services: Array&lt;String&gt; = [], capabilities: Array&lt;String&gt; = [])"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-authenticated/#properties","title":"Properties","text":"Name Summary capabilities [jvm]val capabilities: Array&lt;String&gt;Calling users must have at least one of these capabilities to be authenticated services [jvm]val services: Array&lt;String&gt;Calling services must be listed here to be authenticated"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-authenticated/-authenticated/","title":"Authenticated - Misk","text":"<p>//misk-actions/misk.security.authz/Authenticated/Authenticated</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-authenticated/-authenticated/#authenticated","title":"Authenticated","text":"<p>[jvm]\\ fun Authenticated(services: Array&lt;String&gt; = [], capabilities: Array&lt;String&gt; = [])</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-authenticated/capabilities/","title":"capabilities - Misk","text":"<p>//misk-actions/misk.security.authz/Authenticated/capabilities</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-authenticated/capabilities/#capabilities","title":"capabilities","text":"<p>[jvm]\\ val capabilities: Array&lt;String&gt;</p> <p>Calling users must have at least one of these capabilities to be authenticated</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-authenticated/services/","title":"services - Misk","text":"<p>//misk-actions/misk.security.authz/Authenticated/services</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-authenticated/services/#services","title":"services","text":"<p>[jvm]\\ val services: Array&lt;String&gt;</p> <p>Calling services must be listed here to be authenticated</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-unauthenticated/","title":"Unauthenticated - Misk","text":"<p>//misk-actions/misk.security.authz/Unauthenticated</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-unauthenticated/#unauthenticated","title":"Unauthenticated","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class Unauthenticated</p> <p>Annotation indicating that a given action supports unauthenticated access</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-unauthenticated/#constructors","title":"Constructors","text":"Unauthenticated [jvm]fun Unauthenticated()"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-unauthenticated/-unauthenticated/","title":"Unauthenticated - Misk","text":"<p>//misk-actions/misk.security.authz/Unauthenticated/Unauthenticated</p>"},{"location":"0.x/misk-actions/misk-actions/misk.security.authz/-unauthenticated/-unauthenticated/#unauthenticated","title":"Unauthenticated","text":"<p>[jvm]\\ fun Unauthenticated()</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/","title":"Package misk.web - Misk","text":"<p>//misk-actions/misk.web</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/#package-miskweb","title":"Package misk.web","text":""},{"location":"0.x/misk-actions/misk-actions/misk.web/#types","title":"Types","text":"Name Summary AvailableWhenDegraded [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class AvailableWhenDegradedWhen the service is overloaded Misk will intervene and reject calls by returning \u201cHTTP 503 Service Unavailable\u201d. We call this load shedding and it works similarly to flow control in TCP. ConnectWebSocket [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class ConnectWebSocket(pathPattern: String) Delete [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class Delete(pathPattern: String) Description [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class Description(text: String) FormField [jvm]@Target(allowedTargets = [AnnotationTarget.VALUE_PARAMETER])annotation class FormField(name: String) FormValue [jvm]@Target(allowedTargets = [AnnotationTarget.VALUE_PARAMETER])annotation class FormValue Get [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class Get(pathPattern: String) Grpc [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class Grpc(pathPattern: String) Patch [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class Patch(pathPattern: String) PathParam [jvm]@Target(allowedTargets = [AnnotationTarget.VALUE_PARAMETER])annotation class PathParam(value: String) Post [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class Post(pathPattern: String) Put [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class Put(pathPattern: String) QueryParam [jvm]@Target(allowedTargets = [AnnotationTarget.VALUE_PARAMETER])annotation class QueryParam(value: String) RequestBody [jvm]@Target(allowedTargets = [AnnotationTarget.VALUE_PARAMETER])annotation class RequestBody RequestContentType [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class RequestContentType(value: String) RequestHeaders [jvm]@Target(allowedTargets = [AnnotationTarget.VALUE_PARAMETER])annotation class RequestHeaders Response [jvm]data class Response&lt;out T&gt;@JvmOverloadsconstructor(body: T, headers: Headers, statusCode: Int, trailers: () -&gt; Headers?)An HTTP response body, headers, and status code. ResponseBody [jvm]interface ResponseBody ResponseContentType [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class ResponseContentType(value: String)Indicates what response content types the action can produce. WebActionModule [jvm]class WebActionModule&lt;A : WebAction&gt; : KAbstractModule"},{"location":"0.x/misk-actions/misk-actions/misk.web/-available-when-degraded/","title":"AvailableWhenDegraded - Misk","text":"<p>//misk-actions/misk.web/AvailableWhenDegraded</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-available-when-degraded/#availablewhendegraded","title":"AvailableWhenDegraded","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class AvailableWhenDegraded</p> <p>When the service is overloaded Misk will intervene and reject calls by returning \u201cHTTP 503 Service Unavailable\u201d. We call this load shedding and it works similarly to flow control in TCP.</p> <p>We must not shed calls to status endpoints like health checks as doing so may create cascading failures: overloaded instances that do not respond to health checks will be killed, and this further overloads the remaining peers.</p> <p>Only put this on endpoints that must never be rejected. Such endpoints must not do RPCs, database queries or other I/O because unexpected latency there can take down the entire service.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-available-when-degraded/#constructors","title":"Constructors","text":"AvailableWhenDegraded [jvm]fun AvailableWhenDegraded()"},{"location":"0.x/misk-actions/misk-actions/misk.web/-available-when-degraded/-available-when-degraded/","title":"AvailableWhenDegraded - Misk","text":"<p>//misk-actions/misk.web/AvailableWhenDegraded/AvailableWhenDegraded</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-available-when-degraded/-available-when-degraded/#availablewhendegraded","title":"AvailableWhenDegraded","text":"<p>[jvm]\\ fun AvailableWhenDegraded()</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-connect-web-socket/","title":"ConnectWebSocket - Misk","text":"<p>//misk-actions/misk.web/ConnectWebSocket</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-connect-web-socket/#connectwebsocket","title":"ConnectWebSocket","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class ConnectWebSocket(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-connect-web-socket/#properties","title":"Properties","text":"Name Summary pathPattern [jvm]val pathPattern: String"},{"location":"0.x/misk-actions/misk-actions/misk.web/-connect-web-socket/-connect-web-socket/","title":"ConnectWebSocket - Misk","text":"<p>//misk-actions/misk.web/ConnectWebSocket/ConnectWebSocket</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-connect-web-socket/-connect-web-socket/#connectwebsocket","title":"ConnectWebSocket","text":"<p>[jvm]\\ fun ConnectWebSocket(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-connect-web-socket/path-pattern/","title":"pathPattern - Misk","text":"<p>//misk-actions/misk.web/ConnectWebSocket/pathPattern</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-connect-web-socket/path-pattern/#pathpattern","title":"pathPattern","text":"<p>[jvm]\\ val pathPattern: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-delete/","title":"Delete - Misk","text":"<p>//misk-actions/misk.web/Delete</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-delete/#delete","title":"Delete","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class Delete(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-delete/#properties","title":"Properties","text":"Name Summary pathPattern [jvm]val pathPattern: String"},{"location":"0.x/misk-actions/misk-actions/misk.web/-delete/-delete/","title":"Delete - Misk","text":"<p>//misk-actions/misk.web/Delete/Delete</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-delete/-delete/#delete","title":"Delete","text":"<p>[jvm]\\ fun Delete(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-delete/path-pattern/","title":"pathPattern - Misk","text":"<p>//misk-actions/misk.web/Delete/pathPattern</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-delete/path-pattern/#pathpattern","title":"pathPattern","text":"<p>[jvm]\\ val pathPattern: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-description/","title":"Description - Misk","text":"<p>//misk-actions/misk.web/Description</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-description/#description","title":"Description","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class Description(text: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-description/#properties","title":"Properties","text":"Name Summary text [jvm]val text: String"},{"location":"0.x/misk-actions/misk-actions/misk.web/-description/-description/","title":"Description - Misk","text":"<p>//misk-actions/misk.web/Description/Description</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-description/-description/#description","title":"Description","text":"<p>[jvm]\\ fun Description(text: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-description/text/","title":"text - Misk","text":"<p>//misk-actions/misk.web/Description/text</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-description/text/#text","title":"text","text":"<p>[jvm]\\ val text: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-form-field/","title":"FormField - Misk","text":"<p>//misk-actions/misk.web/FormField</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-form-field/#formfield","title":"FormField","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.VALUE_PARAMETER])</p> <p>annotation class FormField(name: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-form-field/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String"},{"location":"0.x/misk-actions/misk-actions/misk.web/-form-field/-form-field/","title":"FormField - Misk","text":"<p>//misk-actions/misk.web/FormField/FormField</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-form-field/-form-field/#formfield","title":"FormField","text":"<p>[jvm]\\ fun FormField(name: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-form-field/name/","title":"name - Misk","text":"<p>//misk-actions/misk.web/FormField/name</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-form-field/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-form-value/","title":"FormValue - Misk","text":"<p>//misk-actions/misk.web/FormValue</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-form-value/#formvalue","title":"FormValue","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.VALUE_PARAMETER])</p> <p>annotation class FormValue</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-form-value/-form-value/","title":"FormValue - Misk","text":"<p>//misk-actions/misk.web/FormValue/FormValue</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-form-value/-form-value/#formvalue","title":"FormValue","text":"<p>[jvm]\\ fun FormValue()</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-get/","title":"Get - Misk","text":"<p>//misk-actions/misk.web/Get</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-get/#get","title":"Get","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class Get(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-get/#properties","title":"Properties","text":"Name Summary pathPattern [jvm]val pathPattern: String"},{"location":"0.x/misk-actions/misk-actions/misk.web/-get/-get/","title":"Get - Misk","text":"<p>//misk-actions/misk.web/Get/Get</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-get/-get/#get","title":"Get","text":"<p>[jvm]\\ fun Get(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-get/path-pattern/","title":"pathPattern - Misk","text":"<p>//misk-actions/misk.web/Get/pathPattern</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-get/path-pattern/#pathpattern","title":"pathPattern","text":"<p>[jvm]\\ val pathPattern: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-grpc/","title":"Grpc - Misk","text":"<p>//misk-actions/misk.web/Grpc</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-grpc/#grpc","title":"Grpc","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class Grpc(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-grpc/#properties","title":"Properties","text":"Name Summary pathPattern [jvm]val pathPattern: String"},{"location":"0.x/misk-actions/misk-actions/misk.web/-grpc/-grpc/","title":"Grpc - Misk","text":"<p>//misk-actions/misk.web/Grpc/Grpc</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-grpc/-grpc/#grpc","title":"Grpc","text":"<p>[jvm]\\ fun Grpc(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-grpc/path-pattern/","title":"pathPattern - Misk","text":"<p>//misk-actions/misk.web/Grpc/pathPattern</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-grpc/path-pattern/#pathpattern","title":"pathPattern","text":"<p>[jvm]\\ val pathPattern: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-patch/","title":"Patch - Misk","text":"<p>//misk-actions/misk.web/Patch</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-patch/#patch","title":"Patch","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class Patch(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-patch/#properties","title":"Properties","text":"Name Summary pathPattern [jvm]val pathPattern: String"},{"location":"0.x/misk-actions/misk-actions/misk.web/-patch/-patch/","title":"Patch - Misk","text":"<p>//misk-actions/misk.web/Patch/Patch</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-patch/-patch/#patch","title":"Patch","text":"<p>[jvm]\\ fun Patch(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-patch/path-pattern/","title":"pathPattern - Misk","text":"<p>//misk-actions/misk.web/Patch/pathPattern</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-patch/path-pattern/#pathpattern","title":"pathPattern","text":"<p>[jvm]\\ val pathPattern: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-path-param/","title":"PathParam - Misk","text":"<p>//misk-actions/misk.web/PathParam</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-path-param/#pathparam","title":"PathParam","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.VALUE_PARAMETER])</p> <p>annotation class PathParam(value: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-path-param/#properties","title":"Properties","text":"Name Summary value [jvm]val value: String"},{"location":"0.x/misk-actions/misk-actions/misk.web/-path-param/-path-param/","title":"PathParam - Misk","text":"<p>//misk-actions/misk.web/PathParam/PathParam</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-path-param/-path-param/#pathparam","title":"PathParam","text":"<p>[jvm]\\ fun PathParam(value: String = \u201c\u201d)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-path-param/value/","title":"value - Misk","text":"<p>//misk-actions/misk.web/PathParam/value</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-path-param/value/#value","title":"value","text":"<p>[jvm]\\ val value: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-post/","title":"Post - Misk","text":"<p>//misk-actions/misk.web/Post</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-post/#post","title":"Post","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class Post(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-post/#properties","title":"Properties","text":"Name Summary pathPattern [jvm]val pathPattern: String"},{"location":"0.x/misk-actions/misk-actions/misk.web/-post/-post/","title":"Post - Misk","text":"<p>//misk-actions/misk.web/Post/Post</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-post/-post/#post","title":"Post","text":"<p>[jvm]\\ fun Post(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-post/path-pattern/","title":"pathPattern - Misk","text":"<p>//misk-actions/misk.web/Post/pathPattern</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-post/path-pattern/#pathpattern","title":"pathPattern","text":"<p>[jvm]\\ val pathPattern: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-put/","title":"Put - Misk","text":"<p>//misk-actions/misk.web/Put</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-put/#put","title":"Put","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class Put(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-put/#properties","title":"Properties","text":"Name Summary pathPattern [jvm]val pathPattern: String"},{"location":"0.x/misk-actions/misk-actions/misk.web/-put/-put/","title":"Put - Misk","text":"<p>//misk-actions/misk.web/Put/Put</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-put/-put/#put","title":"Put","text":"<p>[jvm]\\ fun Put(pathPattern: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-put/path-pattern/","title":"pathPattern - Misk","text":"<p>//misk-actions/misk.web/Put/pathPattern</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-put/path-pattern/#pathpattern","title":"pathPattern","text":"<p>[jvm]\\ val pathPattern: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-query-param/","title":"QueryParam - Misk","text":"<p>//misk-actions/misk.web/QueryParam</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-query-param/#queryparam","title":"QueryParam","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.VALUE_PARAMETER])</p> <p>annotation class QueryParam(value: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-query-param/#properties","title":"Properties","text":"Name Summary value [jvm]val value: String"},{"location":"0.x/misk-actions/misk-actions/misk.web/-query-param/-query-param/","title":"QueryParam - Misk","text":"<p>//misk-actions/misk.web/QueryParam/QueryParam</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-query-param/-query-param/#queryparam","title":"QueryParam","text":"<p>[jvm]\\ fun QueryParam(value: String = \u201c\u201d)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-query-param/value/","title":"value - Misk","text":"<p>//misk-actions/misk.web/QueryParam/value</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-query-param/value/#value","title":"value","text":"<p>[jvm]\\ val value: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-body/","title":"RequestBody - Misk","text":"<p>//misk-actions/misk.web/RequestBody</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-body/#requestbody","title":"RequestBody","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.VALUE_PARAMETER])</p> <p>annotation class RequestBody</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-body/-request-body/","title":"RequestBody - Misk","text":"<p>//misk-actions/misk.web/RequestBody/RequestBody</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-body/-request-body/#requestbody","title":"RequestBody","text":"<p>[jvm]\\ fun RequestBody()</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-content-type/","title":"RequestContentType - Misk","text":"<p>//misk-actions/misk.web/RequestContentType</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-content-type/#requestcontenttype","title":"RequestContentType","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class RequestContentType(value: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-content-type/#properties","title":"Properties","text":"Name Summary value [jvm]val value: Array&lt;out String&gt;"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-content-type/-request-content-type/","title":"RequestContentType - Misk","text":"<p>//misk-actions/misk.web/RequestContentType/RequestContentType</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-content-type/-request-content-type/#requestcontenttype","title":"RequestContentType","text":"<p>[jvm]\\ fun RequestContentType(vararg value: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-content-type/value/","title":"value - Misk","text":"<p>//misk-actions/misk.web/RequestContentType/value</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-content-type/value/#value","title":"value","text":"<p>[jvm]\\ val value: Array&lt;out String&gt;</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-headers/","title":"RequestHeaders - Misk","text":"<p>//misk-actions/misk.web/RequestHeaders</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-headers/#requestheaders","title":"RequestHeaders","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.VALUE_PARAMETER])</p> <p>annotation class RequestHeaders</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-headers/-request-headers/","title":"RequestHeaders - Misk","text":"<p>//misk-actions/misk.web/RequestHeaders/RequestHeaders</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-request-headers/-request-headers/#requestheaders","title":"RequestHeaders","text":"<p>[jvm]\\ fun RequestHeaders()</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/","title":"Response - Misk","text":"<p>//misk-actions/misk.web/Response</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/#response","title":"Response","text":"<p>[jvm]\\ data class Response&lt;out T&gt;@JvmOverloadsconstructor(body: T, headers: Headers, statusCode: Int, trailers: () -&gt; Headers?)</p> <p>An HTTP response body, headers, and status code.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/#constructors","title":"Constructors","text":"Response [jvm]@JvmOverloadsfun &lt;out T&gt; Response(body: T, headers: Headers = headersOf(), statusCode: Int = 200, trailers: () -&gt; Headers? = { null })"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/#functions","title":"Functions","text":"Name Summary toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/#properties","title":"Properties","text":"Name Summary body [jvm]val body: T headers [jvm]val headers: Headers statusCode [jvm]val statusCode: Int = 200 trailers [jvm]val trailers: () -&gt; Headers?"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/-response/","title":"Response - Misk","text":"<p>//misk-actions/misk.web/Response/Response</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/-response/#response","title":"Response","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun &lt;out T&gt; Response(body: T, headers: Headers = headersOf(), statusCode: Int = 200, trailers: () -&gt; Headers? = { null })</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/body/","title":"body - Misk","text":"<p>//misk-actions/misk.web/Response/body</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/body/#body","title":"body","text":"<p>[jvm]\\ val body: T</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/headers/","title":"headers - Misk","text":"<p>//misk-actions/misk.web/Response/headers</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/headers/#headers","title":"headers","text":"<p>[jvm]\\ val headers: Headers</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/status-code/","title":"statusCode - Misk","text":"<p>//misk-actions/misk.web/Response/statusCode</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/status-code/#statuscode","title":"statusCode","text":"<p>[jvm]\\ val statusCode: Int = 200</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/to-string/","title":"toString - Misk","text":"<p>//misk-actions/misk.web/Response/toString</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/trailers/","title":"trailers - Misk","text":"<p>//misk-actions/misk.web/Response/trailers</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response/trailers/#trailers","title":"trailers","text":"<p>[jvm]\\ val trailers: () -&gt; Headers?</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response-body/","title":"ResponseBody - Misk","text":"<p>//misk-actions/misk.web/ResponseBody</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response-body/#responsebody","title":"ResponseBody","text":"<p>[jvm]\\ interface ResponseBody</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response-body/#functions","title":"Functions","text":"Name Summary writeTo [jvm]abstract fun writeTo(sink: BufferedSink)"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response-body/write-to/","title":"writeTo - Misk","text":"<p>//misk-actions/misk.web/ResponseBody/writeTo</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response-body/write-to/#writeto","title":"writeTo","text":"<p>[jvm]\\ abstract fun writeTo(sink: BufferedSink)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response-content-type/","title":"ResponseContentType - Misk","text":"<p>//misk-actions/misk.web/ResponseContentType</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response-content-type/#responsecontenttype","title":"ResponseContentType","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class ResponseContentType(value: String)</p> <p>Indicates what response content types the action can produce.</p> <p>Clients can specify what content type they prefer by setting the Accept header. If the action supports multiple content types but no Accept header is specified, the first content type is used.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response-content-type/#constructors","title":"Constructors","text":"ResponseContentType [jvm]fun ResponseContentType(vararg value: String)"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response-content-type/#properties","title":"Properties","text":"Name Summary value [jvm]val value: Array&lt;out String&gt;"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response-content-type/-response-content-type/","title":"ResponseContentType - Misk","text":"<p>//misk-actions/misk.web/ResponseContentType/ResponseContentType</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response-content-type/-response-content-type/#responsecontenttype","title":"ResponseContentType","text":"<p>[jvm]\\ fun ResponseContentType(vararg value: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response-content-type/value/","title":"value - Misk","text":"<p>//misk-actions/misk.web/ResponseContentType/value</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-response-content-type/value/#value","title":"value","text":"<p>[jvm]\\ val value: Array&lt;out String&gt;</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/","title":"WebActionModule - Misk","text":"<p>//misk-actions/misk.web/WebActionModule</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/#webactionmodule","title":"WebActionModule","text":"<p>[jvm]\\ class WebActionModule&lt;A : WebAction&gt; : KAbstractModule</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/#properties","title":"Properties","text":"Name Summary actionClass [jvm]val actionClass: KClass&lt;A&gt; binder [jvm]val binder: Binder url_path_prefix [jvm]val url_path_prefix: String"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/action-class/","title":"actionClass - Misk","text":"<p>//misk-actions/misk.web/WebActionModule/actionClass</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/action-class/#actionclass","title":"actionClass","text":"<p>[jvm]\\ val actionClass: KClass&lt;A&gt;</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/url_path_prefix/","title":"url_path_prefix - Misk","text":"<p>//misk-actions/misk.web/WebActionModule/url_path_prefix</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/url_path_prefix/#url_path_prefix","title":"url_path_prefix","text":"<p>[jvm]\\ val url_path_prefix: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/-companion/","title":"Companion - Misk","text":"<p>//misk-actions/misk.web/WebActionModule/Companion</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/-companion/#functions","title":"Functions","text":"Name Summary create [jvm]inline fun &lt;A : WebAction&gt; create(): WebActionModule&lt;A&gt;@JvmStaticfun &lt;A : WebAction&gt; create(actionClass: Class&lt;A&gt;): WebActionModule&lt;A&gt;[jvm]fun &lt;A : WebAction&gt; create(actionClass: KClass&lt;A&gt;): WebActionModule&lt;A&gt;Registers a web action. createWithPrefix [jvm]inline fun &lt;A : WebAction&gt; createWithPrefix(url_path_prefix: String): WebActionModule&lt;A&gt;@JvmStaticfun &lt;A : WebAction&gt; createWithPrefix(actionClass: Class&lt;A&gt;, url_path_prefix: String): WebActionModule&lt;A&gt;[jvm]fun &lt;A : WebAction&gt; createWithPrefix(actionClass: KClass&lt;A&gt;, url_path_prefix: String): WebActionModule&lt;A&gt;Registers a web action with a path prefix."},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/-companion/create-with-prefix/","title":"createWithPrefix - Misk","text":"<p>//misk-actions/misk.web/WebActionModule/Companion/createWithPrefix</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/-companion/create-with-prefix/#createwithprefix","title":"createWithPrefix","text":"<p>[jvm]\\ inline fun &lt;A : WebAction&gt; createWithPrefix(url_path_prefix: String): WebActionModule&lt;A&gt;</p> <p>@JvmStatic</p> <p>fun &lt;A : WebAction&gt; createWithPrefix(actionClass: Class&lt;A&gt;, url_path_prefix: String): WebActionModule&lt;A&gt;</p> <p>[jvm]\\ fun &lt;A : WebAction&gt; createWithPrefix(actionClass: KClass&lt;A&gt;, url_path_prefix: String): WebActionModule&lt;A&gt;</p> <p>Registers a web action with a path prefix.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/-companion/create-with-prefix/#parameters","title":"Parameters","text":"<p>jvm</p> actionClass : The web action to register. url_path_prefix : Defaults to \u201c/\u201d. If not empty, must match pattern requirements:-     must begin with \u201c/\u201d -     any number of non-whitespace characters (including additional path segments or \u201c/\u201d) -     must terminate with a non-\u201c/\u201d because rest of path will start with \u201c/\u201d"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/-companion/create/","title":"create - Misk","text":"<p>//misk-actions/misk.web/WebActionModule/Companion/create</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/-companion/create/#create","title":"create","text":"<p>[jvm]\\ inline fun &lt;A : WebAction&gt; create(): WebActionModule&lt;A&gt;</p> <p>@JvmStatic</p> <p>fun &lt;A : WebAction&gt; create(actionClass: Class&lt;A&gt;): WebActionModule&lt;A&gt;</p> <p>[jvm]\\ fun &lt;A : WebAction&gt; create(actionClass: KClass&lt;A&gt;): WebActionModule&lt;A&gt;</p> <p>Registers a web action.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web/-web-action-module/-companion/create/#parameters","title":"Parameters","text":"<p>jvm</p> actionClass : The web action to register."},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/","title":"Package misk.web.actions - Misk","text":"<p>//misk-actions/misk.web.actions</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/#package-miskwebactions","title":"Package misk.web.actions","text":""},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/#types","title":"Types","text":"Name Summary WebAction [jvm]interface WebAction WebActionEntry [jvm]data class WebActionEntry(actionClass: KClass&lt;out WebAction&gt;, url_path_prefix: String) : ValidWebEntryWebActionEntry WebSocket [jvm]interface WebSocketA non-blocking interface to a web socket. WebSocketListener [jvm]open class WebSocketListener"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action/","title":"WebAction - Misk","text":"<p>//misk-actions/misk.web.actions/WebAction</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action/#webaction","title":"WebAction","text":"<p>[jvm]\\ interface WebAction</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action-entry/","title":"WebActionEntry - Misk","text":"<p>//misk-actions/misk.web.actions/WebActionEntry</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action-entry/#webactionentry","title":"WebActionEntry","text":"<p>[jvm]\\ data class WebActionEntry(actionClass: KClass&lt;out WebAction&gt;, url_path_prefix: String) : ValidWebEntry</p> <p>WebActionEntry</p> <p>A registration of a web action with optional configuration to customize.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action-entry/#parameters","title":"Parameters","text":"<p>jvm</p> actionClass : WebAction to multibind to WebServlet url_path_prefix : Must match pattern requirements:-     must begin with \u201c/\u201d -     any number of non-whitespace characters (including additional path segments or \u201c/\u201d) -     must terminate with a non-\u201c/\u201d because rest of path will start with \u201c/\u201d"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action-entry/#constructors","title":"Constructors","text":"WebActionEntry [jvm]fun WebActionEntry(actionClass: KClass&lt;out WebAction&gt;, url_path_prefix: String)"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action-entry/#properties","title":"Properties","text":"Name Summary actionClass [jvm]val actionClass: KClass&lt;out WebAction&gt; url_path_prefix [jvm]val url_path_prefix: String valid_slug [jvm]val valid_slug: String valid_url_path_prefix [jvm]val valid_url_path_prefix: String"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action-entry/-web-action-entry/","title":"WebActionEntry - Misk","text":"<p>//misk-actions/misk.web.actions/WebActionEntry/WebActionEntry</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action-entry/-web-action-entry/#webactionentry","title":"WebActionEntry","text":"<p>[jvm]\\ fun WebActionEntry(actionClass: KClass&lt;out WebAction&gt;, url_path_prefix: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action-entry/-web-action-entry/#parameters","title":"Parameters","text":"<p>jvm</p> actionClass : WebAction to multibind to WebServlet url_path_prefix : Must match pattern requirements:-     must begin with \u201c/\u201d -     any number of non-whitespace characters (including additional path segments or \u201c/\u201d) -     must terminate with a non-\u201c/\u201d because rest of path will start with \u201c/\u201d"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action-entry/action-class/","title":"actionClass - Misk","text":"<p>//misk-actions/misk.web.actions/WebActionEntry/actionClass</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action-entry/action-class/#actionclass","title":"actionClass","text":"<p>[jvm]\\ val actionClass: KClass&lt;out WebAction&gt;</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action-entry/url_path_prefix/","title":"url_path_prefix - Misk","text":"<p>//misk-actions/misk.web.actions/WebActionEntry/url_path_prefix</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-action-entry/url_path_prefix/#url_path_prefix","title":"url_path_prefix","text":"<p>[jvm]\\ val url_path_prefix: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket/","title":"WebSocket - Misk","text":"<p>//misk-actions/misk.web.actions/WebSocket</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket/#websocket","title":"WebSocket","text":"<p>[jvm]\\ interface WebSocket</p> <p>A non-blocking interface to a web socket.</p> Web Socket Lifecycle <p>Upon normal operation each web socket progresses through a sequence of states:</p> <ul> <li>Connecting: the initial state of each web socket. Messages may be enqueued     but they won't be transmitted until the web socket is open. <li>Open: the web socket has been accepted by the remote peer and is fully     operational. Messages in either direction are enqueued for immediate transmission. <li>Closing: one of the peers on the web socket has initiated a graceful     shutdown. The web socket will continue to transmit already-enqueued messages but will     refuse to enqueue new ones. <li>Closed: the web socket has transmitted all of its messages and has     received all messages from the peer.  <p>Web sockets may fail due to HTTP upgrade problems, connectivity problems, or if either peer chooses to short-circuit the graceful shutdown process:</p> <ul> <li>Canceled: the web socket connection failed. Messages that were     successfully enqueued by either peer may not have been transmitted to the other.  <p>Note that the state progression is independent for each peer. Arriving at a gracefully-closed state indicates that a peer has sent all of its outgoing messages and received all of its incoming messages. But it does not guarantee that the other peer will successfully receive all of its incoming messages.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket/#functions","title":"Functions","text":"Name Summary cancel [jvm]abstract fun cancel()Immediately and violently release resources held by this web socket, discarding any enqueued messages. This does nothing if the web socket has already been closed or canceled. close [jvm]abstract fun close(code: Int, reason: String?): BooleanAttempts to initiate a graceful shutdown of this web socket. Any already-enqueued messages will be transmitted before the close message is sent but subsequent calls to {@link #send} will return false and their messages will not be enqueued. queueSize [jvm]abstract fun queueSize(): LongReturns the size in bytes of all messages enqueued to be transmitted to the server. This doesn\u2019t include framing overhead. It also doesn\u2019t include any bytes buffered by the operating system or network intermediaries. This method returns 0 if no messages are waiting in the queue. If may return a nonzero value after the web socket has been canceled; this indicates that enqueued messages were not transmitted. send [jvm]abstract fun send(text: String): BooleanAttempts to enqueue {@code bytes} to be sent as a the data of a binary (type {@code 0x2}) message.[jvm]abstract fun send(bytes: ByteString): BooleanAttempts to enqueue {@code text} to be UTF-8 encoded and sent as a the data of a text (type {@code 0x1}) message."},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket/cancel/","title":"cancel - Misk","text":"<p>//misk-actions/misk.web.actions/WebSocket/cancel</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket/cancel/#cancel","title":"cancel","text":"<p>[jvm]\\ abstract fun cancel()</p> <p>Immediately and violently release resources held by this web socket, discarding any enqueued messages. This does nothing if the web socket has already been closed or canceled.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket/close/","title":"close - Misk","text":"<p>//misk-actions/misk.web.actions/WebSocket/close</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket/close/#close","title":"close","text":"<p>[jvm]\\ abstract fun close(code: Int, reason: String?): Boolean</p> <p>Attempts to initiate a graceful shutdown of this web socket. Any already-enqueued messages will be transmitted before the close message is sent but subsequent calls to {@link #send} will return false and their messages will not be enqueued.</p> <p>This returns true if a graceful shutdown was initiated by this call. It returns false and if a graceful shutdown was already underway or if the web socket is already closed or canceled.  ## Parameters  jvm  | | | |---|---| | code | Status code as defined by Section 7.4 of RFC 6455. | | reason | Reason for shutting down or {@code null}. |"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket/queue-size/","title":"queueSize - Misk","text":"<p>//misk-actions/misk.web.actions/WebSocket/queueSize</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket/queue-size/#queuesize","title":"queueSize","text":"<p>[jvm]\\ abstract fun queueSize(): Long</p> <p>Returns the size in bytes of all messages enqueued to be transmitted to the server. This doesn\u2019t include framing overhead. It also doesn\u2019t include any bytes buffered by the operating system or network intermediaries. This method returns 0 if no messages are waiting in the queue. If may return a nonzero value after the web socket has been canceled; this indicates that enqueued messages were not transmitted.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket/send/","title":"send - Misk","text":"<p>//misk-actions/misk.web.actions/WebSocket/send</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket/send/#send","title":"send","text":"<p>[jvm]\\ abstract fun send(bytes: ByteString): Boolean</p> <p>Attempts to enqueue {@code text} to be UTF-8 encoded and sent as a the data of a text (type {@code 0x1}) message.</p> <p>This method returns true if the message was enqueued. Messages that would overflow the outgoing message buffer will be rejected and trigger a {@linkplain #close graceful shutdown} of this web socket. This method returns false in that case, and in any other case where this web socket is closing, closed, or canceled.<p>This method returns immediately.  [jvm]\\ abstract fun [send](send.md)(text: [String](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html)): [Boolean](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)  Attempts to enqueue {@code bytes} to be sent as a the data of a binary (type {@code 0x2}) message.  <p>This method returns true if the message was enqueued. Messages that would overflow the outgoing message buffer will be rejected and trigger a {@linkplain #close graceful shutdown} of this web socket. This method returns false in that case, and in any other case where this web socket is closing, closed, or canceled.<p>This method returns immediately."},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket-listener/","title":"WebSocketListener - Misk","text":"<p>//misk-actions/misk.web.actions/WebSocketListener</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket-listener/#websocketlistener","title":"WebSocketListener","text":"<p>[jvm]\\ open class WebSocketListener</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket-listener/#functions","title":"Functions","text":"Name Summary onClosed [jvm]open fun onClosed(webSocket: WebSocket, code: Int, reason: String?)Invoked when both peers have indicated that no more messages will be transmitted and the connection has been successfully released. No further calls to this listener will be made. onClosing [jvm]open fun onClosing(webSocket: WebSocket, code: Int, reason: String?)Invoked when the remote peer has indicated that no more incoming messages will be transmitted. onFailure [jvm]open fun onFailure(webSocket: WebSocket, t: Throwable)Invoked when a web socket has been closed due to an error reading from or writing to the network. Both outgoing and incoming messages may have been lost. No further calls to this listener will be made. onMessage [jvm]open fun onMessage(webSocket: WebSocket, text: String)Invoked when a text (type {@code 0x1}) message has been received.[jvm]open fun onMessage(webSocket: WebSocket, bytes: ByteString)Invoked when a binary (type {@code 0x2}) message has been received."},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket-listener/-web-socket-listener/","title":"WebSocketListener - Misk","text":"<p>//misk-actions/misk.web.actions/WebSocketListener/WebSocketListener</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket-listener/-web-socket-listener/#websocketlistener","title":"WebSocketListener","text":"<p>[jvm]\\ fun WebSocketListener()</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket-listener/on-closed/","title":"onClosed - Misk","text":"<p>//misk-actions/misk.web.actions/WebSocketListener/onClosed</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket-listener/on-closed/#onclosed","title":"onClosed","text":"<p>[jvm]\\ open fun onClosed(webSocket: WebSocket, code: Int, reason: String?)</p> <p>Invoked when both peers have indicated that no more messages will be transmitted and the connection has been successfully released. No further calls to this listener will be made.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket-listener/on-closing/","title":"onClosing - Misk","text":"<p>//misk-actions/misk.web.actions/WebSocketListener/onClosing</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket-listener/on-closing/#onclosing","title":"onClosing","text":"<p>[jvm]\\ open fun onClosing(webSocket: WebSocket, code: Int, reason: String?)</p> <p>Invoked when the remote peer has indicated that no more incoming messages will be transmitted.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket-listener/on-failure/","title":"onFailure - Misk","text":"<p>//misk-actions/misk.web.actions/WebSocketListener/onFailure</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket-listener/on-failure/#onfailure","title":"onFailure","text":"<p>[jvm]\\ open fun onFailure(webSocket: WebSocket, t: Throwable)</p> <p>Invoked when a web socket has been closed due to an error reading from or writing to the network. Both outgoing and incoming messages may have been lost. No further calls to this listener will be made.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket-listener/on-message/","title":"onMessage - Misk","text":"<p>//misk-actions/misk.web.actions/WebSocketListener/onMessage</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.actions/-web-socket-listener/on-message/#onmessage","title":"onMessage","text":"<p>[jvm]\\ open fun onMessage(webSocket: WebSocket, text: String)</p> <p>Invoked when a text (type {@code 0x1}) message has been received.</p> <p>[jvm]\\ open fun onMessage(webSocket: WebSocket, bytes: ByteString)</p> <p>Invoked when a binary (type {@code 0x2}) message has been received.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/","title":"Package misk.web.dashboard - Misk","text":"<p>//misk-actions/misk.web.dashboard</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/#package-miskwebdashboard","title":"Package misk.web.dashboard","text":""},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/#types","title":"Types","text":"Name Summary ValidWebEntry [jvm]open class ValidWebEntry@JvmOverloadsconstructor(valid_slug: String, valid_url_path_prefix: String)"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/","title":"ValidWebEntry - Misk","text":"<p>//misk-actions/misk.web.dashboard/ValidWebEntry</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/#validwebentry","title":"ValidWebEntry","text":"<p>[jvm]\\ open class ValidWebEntry@JvmOverloadsconstructor(valid_slug: String, valid_url_path_prefix: String)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/#properties","title":"Properties","text":"Name Summary valid_slug [jvm]val valid_slug: String valid_url_path_prefix [jvm]val valid_url_path_prefix: String"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/#inheritors","title":"Inheritors","text":"Name WebActionEntry"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/-valid-web-entry/","title":"ValidWebEntry - Misk","text":"<p>//misk-actions/misk.web.dashboard/ValidWebEntry/ValidWebEntry</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/-valid-web-entry/#validwebentry","title":"ValidWebEntry","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun ValidWebEntry(valid_slug: String = \u201c\u201d, valid_url_path_prefix: String = \u201c/\u201d)</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/valid_slug/","title":"valid_slug - Misk","text":"<p>//misk-actions/misk.web.dashboard/ValidWebEntry/valid_slug</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/valid_slug/#valid_slug","title":"valid_slug","text":"<p>[jvm]\\ val valid_slug: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/valid_url_path_prefix/","title":"valid_url_path_prefix - Misk","text":"<p>//misk-actions/misk.web.dashboard/ValidWebEntry/valid_url_path_prefix</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/valid_url_path_prefix/#valid_url_path_prefix","title":"valid_url_path_prefix","text":"<p>[jvm]\\ val valid_url_path_prefix: String</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/-companion/","title":"Companion - Misk","text":"<p>//misk-actions/misk.web.dashboard/ValidWebEntry/Companion</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/-companion/#functions","title":"Functions","text":"Name Summary slugify [jvm]inline fun &lt;A : Annotation&gt; slugify(): &lt;ERROR CLASS&gt;fun slugify(annotation: KClass&lt;out Annotation&gt;): &lt;ERROR CLASS&gt;Generate a valid slug from an Annotation class.[jvm]fun String.slugify(): &lt;ERROR CLASS&gt;Generate a valid slug from a String."},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/-companion/slugify/","title":"slugify - Misk","text":"<p>//misk-actions/misk.web.dashboard/ValidWebEntry/Companion/slugify</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.dashboard/-valid-web-entry/-companion/slugify/#slugify","title":"slugify","text":"<p>[jvm]\\ fun slugify(annotation: KClass&lt;out Annotation&gt;): &lt;ERROR CLASS&gt;</p> <p>inline fun &lt;A : Annotation&gt; slugify(): &lt;ERROR CLASS&gt;</p> <p>Generate a valid slug from an Annotation class.</p> <p>[jvm]\\ fun String.slugify(): &lt;ERROR CLASS&gt;</p> <p>Generate a valid slug from a String.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/","title":"Package misk.web.interceptors - Misk","text":"<p>//misk-actions/misk.web.interceptors</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/#package-miskwebinterceptors","title":"Package misk.web.interceptors","text":""},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/#types","title":"Types","text":"Name Summary LogRequestResponse [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION, AnnotationTarget.CLASS])annotation class LogRequestResponse(ratePerSecond: Long, errorRatePerSecond: Long, bodySampling: Double, errorBodySampling: Double, excludedEnvironments: Array&lt;String&gt;)Annotation indicating that request and response information should be logged."},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/","title":"LogRequestResponse - Misk","text":"<p>//misk-actions/misk.web.interceptors/LogRequestResponse</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/#logrequestresponse","title":"LogRequestResponse","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION, AnnotationTarget.CLASS])</p> <p>annotation class LogRequestResponse(ratePerSecond: Long, errorRatePerSecond: Long, bodySampling: Double, errorBodySampling: Double, excludedEnvironments: Array&lt;String&gt;)</p> <p>Annotation indicating that request and response information should be logged.</p> <p>Rate limiting is used to sample the number of requests logged. The value specified is the log events per sec allotted per action.</p> <p>By default we set rate limiting for successes to 10 log events per second, enough to show things are happening without sending too many logs. By default rate limiting is off for errors, as we would want to surface such logs for investigation.</p> <p>If you would like to turn off rate limiting and emit all logs, set ratePerSecond and/or errorRatePerSecond to 0.</p> <p>Percentage sampling is used to sample request and response bodies, with 0.0 for none and 1.0 for all. Valid values are in the range 0.0, 1.0.</p> <p>You can exclude logging in particular environments by using the all-lowercase names of the environments. See the wisp-deployment module for details of supported environment names.</p> <p>If arguments and responses may include sensitive information, it is expected that the toString() methods of these objects will redact it.</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/#constructors","title":"Constructors","text":"LogRequestResponse [jvm]fun LogRequestResponse(ratePerSecond: Long = 10, errorRatePerSecond: Long = 0, bodySampling: Double = 0.0, errorBodySampling: Double = 0.0, excludedEnvironments: Array&lt;String&gt; = [])"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/#properties","title":"Properties","text":"Name Summary bodySampling [jvm]val bodySampling: Double = 0.0By default do not log request and response bodies errorBodySampling [jvm]val errorBodySampling: Double = 0.0 errorRatePerSecond [jvm]val errorRatePerSecond: Long = 0By default, rate limiting is off for error logs excludedEnvironments [jvm]val excludedEnvironments: Array&lt;String&gt;which deploy environments will not have request/response logging enabled ratePerSecond [jvm]val ratePerSecond: Long = 10"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/-log-request-response/","title":"LogRequestResponse - Misk","text":"<p>//misk-actions/misk.web.interceptors/LogRequestResponse/LogRequestResponse</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/-log-request-response/#logrequestresponse","title":"LogRequestResponse","text":"<p>[jvm]\\ fun LogRequestResponse(ratePerSecond: Long = 10, errorRatePerSecond: Long = 0, bodySampling: Double = 0.0, errorBodySampling: Double = 0.0, excludedEnvironments: Array&lt;String&gt; = [])</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/body-sampling/","title":"bodySampling - Misk","text":"<p>//misk-actions/misk.web.interceptors/LogRequestResponse/bodySampling</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/body-sampling/#bodysampling","title":"bodySampling","text":"<p>[jvm]\\ val bodySampling: Double = 0.0</p> <p>By default do not log request and response bodies</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/error-body-sampling/","title":"errorBodySampling - Misk","text":"<p>//misk-actions/misk.web.interceptors/LogRequestResponse/errorBodySampling</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/error-body-sampling/#errorbodysampling","title":"errorBodySampling","text":"<p>[jvm]\\ val errorBodySampling: Double = 0.0</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/error-rate-per-second/","title":"errorRatePerSecond - Misk","text":"<p>//misk-actions/misk.web.interceptors/LogRequestResponse/errorRatePerSecond</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/error-rate-per-second/#errorratepersecond","title":"errorRatePerSecond","text":"<p>[jvm]\\ val errorRatePerSecond: Long = 0</p> <p>By default, rate limiting is off for error logs</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/excluded-environments/","title":"excludedEnvironments - Misk","text":"<p>//misk-actions/misk.web.interceptors/LogRequestResponse/excludedEnvironments</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/excluded-environments/#excludedenvironments","title":"excludedEnvironments","text":"<p>[jvm]\\ val excludedEnvironments: Array&lt;String&gt;</p> <p>which deploy environments will not have request/response logging enabled</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/rate-per-second/","title":"ratePerSecond - Misk","text":"<p>//misk-actions/misk.web.interceptors/LogRequestResponse/ratePerSecond</p>"},{"location":"0.x/misk-actions/misk-actions/misk.web.interceptors/-log-request-response/rate-per-second/#ratepersecond","title":"ratePerSecond","text":"<p>[jvm]\\ val ratePerSecond: Long = 10</p>"},{"location":"0.x/misk-admin/","title":"misk-admin - Misk","text":"<p>//misk-admin</p>"},{"location":"0.x/misk-admin/#misk-admin","title":"misk-admin","text":""},{"location":"0.x/misk-admin/#packages","title":"Packages","text":"Name misk.web.dashboard misk.web.metadata misk.web.metadata.config misk.web.metadata.database misk.web.metadata.jvm misk.web.metadata.webaction misk.web.v2"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/","title":"Package misk.web.dashboard - Misk","text":"<p>//misk-admin/misk.web.dashboard</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/#package-miskwebdashboard","title":"Package misk.web.dashboard","text":""},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/#types","title":"Types","text":"Name Summary AdminDashboard [jvm]@Qualifier@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.FUNCTION])annotation class AdminDashboardDashboard Annotation used for all tabs bound in the Misk Admin Dashboard AdminDashboardAccess [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class AdminDashboardAccessBind to set access for the Misk Admin Dashboard. AdminDashboardModule [jvm]class AdminDashboardModule@JvmOverloadsconstructor(isDevelopment: Boolean, configTabMode: ConfigMetadataAction.ConfigTabMode) : KAbstractModuleInstalls default Admin Dashboard that runs at multibound DashboardHomeUrl AdminDashboardTestingModule [jvm]class AdminDashboardTestingModule : KAbstractModule BaseDashboardModule [jvm]class BaseDashboardModule(isDevelopment: Boolean) : KAbstractModuleInstalls base functionality for the Admin Dashboard including: ConfigDashboardTabModule [jvm]class ConfigDashboardTabModule@JvmOverloadsconstructor(isDevelopment: Boolean, mode: ConfigMetadataAction.ConfigTabMode) : KAbstractModuleInstalls Config dashboard tab which shows the raw config inputs and the merged runtime config for your Misk service. DashboardHomeUrl [jvm]data class DashboardHomeUrl@JvmOverloadsconstructor(dashboard_slug: String, url: String, dashboardAnnotationKClass: KClass&lt;out Annotation&gt;?) : ValidWebEntryUrl to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard DashboardModule [jvm]class DashboardModule@JvmOverloadsconstructor(dashboardTabProvider: DashboardTabProvider?, dashboardTabLoader: DashboardTabLoader?, webTabResourceModule: WebTabResourceModule?, indexAccessBlocks: List&lt;DashboardIndexAccessBlock&gt;, indexBlocks: List&lt;DashboardIndexBlock&gt;) : KAbstractModuleHandles installation of Misk Dashboard components (admin dashboard or custom\u2026). DashboardTab [jvm]data class DashboardTab@JvmOverloadsconstructor(slug: String, url_path_prefix: String, dashboard_slug: String, menuLabel: String, menuCategory: String, menuUrl: String, capabilities: Set&lt;String&gt;, services: Set&lt;String&gt;, accessAnnotationKClass: KClass&lt;out Annotation&gt;?, dashboardAnnotationKClass: KClass&lt;out Annotation&gt;?) : WebTabA WebTab with additional fields to bind to a specific Dashboard that has a tabs menu DashboardTabLoader [jvm]sealed class DashboardTabLoader DashboardTabLoaderEntry [jvm]data class DashboardTabLoaderEntry(urlPathPrefix: String, loader: DashboardTabLoader) DashboardTabProvider [jvm]class DashboardTabProvider@JvmOverloadsconstructor(slug: String, url_path_prefix: String, menuLabel: String, menuUrl: String, menuCategory: String, dashboard_slug: String, capabilities: Set&lt;String&gt;, services: Set&lt;String&gt;, accessAnnotationKClass: KClass&lt;out Annotation&gt;?, dashboardAnnotationKClass: KClass&lt;out Annotation&gt;) : ValidWebEntry, Provider&lt;DashboardTab&gt; Sets the tab\u2019s authentication capabilities/services by the multibound AccessAnnotationEntry DashboardTheme [jvm]data class DashboardTheme(dashboard_slug: String, theme: MiskWebTheme)Per dashboard customization of the navbar theme DatabaseDashboardTabModule [jvm]class DatabaseDashboardTabModule(isDevelopment: Boolean) : KAbstractModuleInstalls Database dashboard tab which allows querying the database from a UI form. EnvironmentToColorLookup [jvm]data class EnvironmentToColorLookup(default: String, DEVELOPMENT: String, TESTING: String, STAGING: String, PRODUCTION: String) MiskWebColor [jvm]enum MiskWebColor : Enum&lt;MiskWebColor&gt; Matches the Misk-Web Color enum in @misk/core/src/utilities/css.ts MiskWebTabIndexAction [jvm]@Singletonclass MiskWebTabIndexAction@Injectconstructor(dashboardTabs: List&lt;DashboardTab&gt;) : WebActionKotlin backed tab loader, equivalent to /_tab/slug/index.html MiskWebTheme [jvm]data class MiskWebTheme(bannerLinkHover: String, bannerText: String, button: String, buttonHover: String, categoryText: String, environmentToColor: EnvironmentToColorLookup, navbarBackground: String, navbarLinkHover: String, navbarText: String)Matches the Misk-Web Theme interface  in @misk/core/src/utilities/theme.ts WebActionsDashboardTabModule [jvm]class WebActionsDashboardTabModule(isDevelopment: Boolean) : KAbstractModuleInstalls WebActions dashboard tab which allows introspection and exercising actions from a UI form. WebTab [jvm]open class WebTab@JvmOverloadsconstructor(slug: String, url_path_prefix: String, capabilities: Set&lt;String&gt;, services: Set&lt;String&gt;) : ValidWebEntry WebTabResourceModule [jvm]class WebTabResourceModule@JvmOverloadsconstructor(isDevelopment: Boolean, slug: String, web_proxy_url: String?, url_path_prefix: String, resourcePath: String) : KAbstractModuleDeclare how to serve the resources for a WebTab (JS, HTML, CSS\u2026)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/#functions","title":"Functions","text":"Name Summary DashboardHomeUrl [jvm]inline fun &lt;DA : Annotation&gt; DashboardHomeUrl(urlPathPrefix: String): DashboardHomeUrl DashboardTabProvider [jvm]inline fun &lt;DA : Annotation, AA : Annotation&gt; DashboardTabProvider(slug: String, url_path_prefix: String, name: String, menuUrl: String = url_path_prefix, category: String = \u201cAdmin\u201d): DashboardTabProviderBinds a DashboardTab for Dashboard DA with access annotation AA[jvm]inline fun &lt;DA : Annotation&gt; DashboardTabProvider(slug: String, url_path_prefix: String, name: String, menuUrl: String = url_path_prefix, category: String = \u201cAdmin\u201d, capabilities: Set&lt;String&gt; = setOf(), services: Set&lt;String&gt; = setOf()): DashboardTabProviderBinds a DashboardTab for Dashboard DA with optional access capabilities and services DashboardTheme [jvm]inline fun &lt;DA : Annotation&gt; DashboardTheme(theme: MiskWebTheme): DashboardTheme HtmlLayout [jvm]fun TagConsumer&lt;&gt;.HtmlLayout(appRoot: String, title: String, playCdn: Boolean, appCssPath: String? = null, headBlock: TagConsumer&lt;&gt;.() -&gt; Unit = {}, bodyBlock: TagConsumer&lt;*&gt;.() -&gt; Unit)Default setup of HTML for a page including head and install of CSS/JS dependencies."},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/","title":"DashboardHomeUrl - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardHomeUrl</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/#dashboardhomeurl","title":"DashboardHomeUrl","text":"<p>[jvm]\\ inline fun &lt;DA : Annotation&gt; DashboardHomeUrl(urlPathPrefix: String): DashboardHomeUrl</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/","title":"DashboardTabProvider - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/#dashboardtabprovider","title":"DashboardTabProvider","text":"<p>[jvm]\\ inline fun &lt;DA : Annotation&gt; DashboardTabProvider(slug: String, url_path_prefix: String, name: String, menuUrl: String = url_path_prefix, category: String = \u201cAdmin\u201d, capabilities: Set&lt;String&gt; = setOf(), services: Set&lt;String&gt; = setOf()): DashboardTabProvider</p> <p>Binds a DashboardTab for Dashboard DA with optional access capabilities and services</p> <p>[jvm]\\ inline fun &lt;DA : Annotation, AA : Annotation&gt; DashboardTabProvider(slug: String, url_path_prefix: String, name: String, menuUrl: String = url_path_prefix, category: String = \u201cAdmin\u201d): DashboardTabProvider</p> <p>Binds a DashboardTab for Dashboard DA with access annotation AA</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-theme/","title":"DashboardTheme - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTheme</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-theme/#dashboardtheme","title":"DashboardTheme","text":"<p>[jvm]\\ inline fun &lt;DA : Annotation&gt; DashboardTheme(theme: MiskWebTheme): DashboardTheme</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-html-layout/","title":"HtmlLayout - Misk","text":"<p>//misk-admin/misk.web.dashboard/HtmlLayout</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-html-layout/#htmllayout","title":"HtmlLayout","text":"<p>[jvm]\\ fun TagConsumer&lt;&gt;.HtmlLayout(appRoot: String, title: String, playCdn: Boolean, appCssPath: String? = null, headBlock: TagConsumer&lt;&gt;.() -&gt; Unit = {}, bodyBlock: TagConsumer&lt;*&gt;.() -&gt; Unit)</p> <p>Default setup of HTML for a page including head and install of CSS/JS dependencies.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard/","title":"AdminDashboard - Misk","text":"<p>//misk-admin/misk.web.dashboard/AdminDashboard</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard/#admindashboard","title":"AdminDashboard","text":"<p>[jvm]\\ @Qualifier</p> <p>@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.FUNCTION])</p> <p>annotation class AdminDashboard</p> <p>Dashboard Annotation used for all tabs bound in the Misk Admin Dashboard</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard/#constructors","title":"Constructors","text":"AdminDashboard [jvm]fun AdminDashboard()"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard/-admin-dashboard/","title":"AdminDashboard - Misk","text":"<p>//misk-admin/misk.web.dashboard/AdminDashboard/AdminDashboard</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard/-admin-dashboard/#admindashboard","title":"AdminDashboard","text":"<p>[jvm]\\ fun AdminDashboard()</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-access/","title":"AdminDashboardAccess - Misk","text":"<p>//misk-admin/misk.web.dashboard/AdminDashboardAccess</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-access/#admindashboardaccess","title":"AdminDashboardAccess","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class AdminDashboardAccess</p> <p>Bind to set access for the Misk Admin Dashboard.</p> <p>// Give engineers access to the admin dashboard for Exemplar service\\ multibind&lt;AccessAnnotationEntry&gt;().toInstance(\\   AccessAnnotationEntry&lt;AdminDashboardAccess&gt;(\\   capabilities = listOf(\u201cadmin_console\u201d))\\ )</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-access/#constructors","title":"Constructors","text":"AdminDashboardAccess [jvm]fun AdminDashboardAccess()"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-access/-admin-dashboard-access/","title":"AdminDashboardAccess - Misk","text":"<p>//misk-admin/misk.web.dashboard/AdminDashboardAccess/AdminDashboardAccess</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-access/-admin-dashboard-access/#admindashboardaccess","title":"AdminDashboardAccess","text":"<p>[jvm]\\ fun AdminDashboardAccess()</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-module/","title":"AdminDashboardModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/AdminDashboardModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-module/#admindashboardmodule","title":"AdminDashboardModule","text":"<p>[jvm]\\ class AdminDashboardModule@JvmOverloadsconstructor(isDevelopment: Boolean, configTabMode: ConfigMetadataAction.ConfigTabMode) : KAbstractModule</p> <p>Installs default Admin Dashboard that runs at multibound DashboardHomeUrl <p>Each Misk included tab in dashboard is installed with the respective:</p> <ul> <li>Multibindings for API endpoints</li> <li>Multibindings for Dashboard Tab registration</li> <li>WebTabResourceModule that configures location of the tab compiled web code (classpath and web proxy)</li> </ul> <p>To add tabs to the Misk Admin Dashboard, bind the DashboardTab with the Dashboard Annotation AdminDashboard. Tabs are then included in the admin dashboard menu grouping according to the DashboardTab.category field and sorting by DashboardTab.name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-module/#constructors","title":"Constructors","text":"AdminDashboardModule [jvm]@JvmOverloadsfun AdminDashboardModule(isDevelopment: Boolean, configTabMode: ConfigMetadataAction.ConfigTabMode = ConfigMetadataAction.ConfigTabMode.SAFE)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-module/-admin-dashboard-module/","title":"AdminDashboardModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/AdminDashboardModule/AdminDashboardModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-module/-admin-dashboard-module/#admindashboardmodule","title":"AdminDashboardModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun AdminDashboardModule(isDevelopment: Boolean, configTabMode: ConfigMetadataAction.ConfigTabMode = ConfigMetadataAction.ConfigTabMode.SAFE)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-testing-module/","title":"AdminDashboardTestingModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/AdminDashboardTestingModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-testing-module/#admindashboardtestingmodule","title":"AdminDashboardTestingModule","text":"<p>[jvm]\\ class AdminDashboardTestingModule : KAbstractModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-testing-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-testing-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-testing-module/-admin-dashboard-testing-module/","title":"AdminDashboardTestingModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/AdminDashboardTestingModule/AdminDashboardTestingModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-admin-dashboard-testing-module/-admin-dashboard-testing-module/#admindashboardtestingmodule","title":"AdminDashboardTestingModule","text":"<p>[jvm]\\ fun AdminDashboardTestingModule()</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-base-dashboard-module/","title":"BaseDashboardModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/BaseDashboardModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-base-dashboard-module/#basedashboardmodule","title":"BaseDashboardModule","text":"<p>[jvm]\\ class BaseDashboardModule(isDevelopment: Boolean) : KAbstractModule</p> <p>Installs base functionality for the Admin Dashboard including:</p> <ul> <li>multibindings for menu links and other bound in multiple places resources</li> <li>admin-dashboard tab which loads all other tabs and provides navbar, menu links, auth</li> <li>@misk packages used by Misk-Web tabs from window to provide faster tab loads</li> </ul>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-base-dashboard-module/#constructors","title":"Constructors","text":"BaseDashboardModule [jvm]fun BaseDashboardModule(isDevelopment: Boolean)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-base-dashboard-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-base-dashboard-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-base-dashboard-module/-base-dashboard-module/","title":"BaseDashboardModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/BaseDashboardModule/BaseDashboardModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-base-dashboard-module/-base-dashboard-module/#basedashboardmodule","title":"BaseDashboardModule","text":"<p>[jvm]\\ fun BaseDashboardModule(isDevelopment: Boolean)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-config-dashboard-tab-module/","title":"ConfigDashboardTabModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/ConfigDashboardTabModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-config-dashboard-tab-module/#configdashboardtabmodule","title":"ConfigDashboardTabModule","text":"<p>[jvm]\\ class ConfigDashboardTabModule@JvmOverloadsconstructor(isDevelopment: Boolean, mode: ConfigMetadataAction.ConfigTabMode) : KAbstractModule</p> <p>Installs Config dashboard tab which shows the raw config inputs and the merged runtime config for your Misk service.</p> <p>mode If you have config parameters that include secrets, you should only install this tab     in SAFE mode because the Misk secrets will be visible at runtime in the admin dashboard.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-config-dashboard-tab-module/#constructors","title":"Constructors","text":"ConfigDashboardTabModule [jvm]@JvmOverloadsfun ConfigDashboardTabModule(isDevelopment: Boolean, mode: ConfigMetadataAction.ConfigTabMode = SAFE)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-config-dashboard-tab-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-config-dashboard-tab-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-config-dashboard-tab-module/-config-dashboard-tab-module/","title":"ConfigDashboardTabModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/ConfigDashboardTabModule/ConfigDashboardTabModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-config-dashboard-tab-module/-config-dashboard-tab-module/#configdashboardtabmodule","title":"ConfigDashboardTabModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun ConfigDashboardTabModule(isDevelopment: Boolean, mode: ConfigMetadataAction.ConfigTabMode = SAFE)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/","title":"DashboardHomeUrl - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardHomeUrl</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/#dashboardhomeurl","title":"DashboardHomeUrl","text":"<p>[jvm]\\ data class DashboardHomeUrl@JvmOverloadsconstructor(dashboard_slug: String, url: String, dashboardAnnotationKClass: KClass&lt;out Annotation&gt;?) : ValidWebEntry</p> <p>Url to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/#constructors","title":"Constructors","text":"DashboardHomeUrl [jvm]@JvmOverloadsfun DashboardHomeUrl(dashboard_slug: String, url: String, dashboardAnnotationKClass: KClass&lt;out Annotation&gt;? = null)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/#properties","title":"Properties","text":"Name Summary dashboard_slug [jvm]val dashboard_slug: String dashboardAnnotationKClass [jvm]val dashboardAnnotationKClass: KClass&lt;out Annotation&gt;? = null url [jvm]val url: String valid_slug [jvm]val valid_slug: String valid_url_path_prefix [jvm]val valid_url_path_prefix: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/-dashboard-home-url/","title":"DashboardHomeUrl - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardHomeUrl/DashboardHomeUrl</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/-dashboard-home-url/#dashboardhomeurl","title":"DashboardHomeUrl","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun DashboardHomeUrl(dashboard_slug: String, url: String, dashboardAnnotationKClass: KClass&lt;out Annotation&gt;? = null)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/dashboard-annotation-k-class/","title":"dashboardAnnotationKClass - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardHomeUrl/dashboardAnnotationKClass</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/dashboard-annotation-k-class/#dashboardannotationkclass","title":"dashboardAnnotationKClass","text":"<p>[jvm]\\ val dashboardAnnotationKClass: KClass&lt;out Annotation&gt;? = null</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/dashboard_slug/","title":"dashboard_slug - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardHomeUrl/dashboard_slug</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/dashboard_slug/#dashboard_slug","title":"dashboard_slug","text":"<p>[jvm]\\ val dashboard_slug: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/url/","title":"url - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardHomeUrl/url</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-home-url/url/#url","title":"url","text":"<p>[jvm]\\ val url: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/","title":"DashboardModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/#dashboardmodule","title":"DashboardModule","text":"<p>[jvm]\\ class DashboardModule@JvmOverloadsconstructor(dashboardTabProvider: DashboardTabProvider?, dashboardTabLoader: DashboardTabLoader?, webTabResourceModule: WebTabResourceModule?, indexAccessBlocks: List&lt;DashboardIndexAccessBlock&gt;, indexBlocks: List&lt;DashboardIndexBlock&gt;) : KAbstractModule</p> <p>Handles installation of Misk Dashboard components (admin dashboard or custom\u2026).</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/#constructors","title":"Constructors","text":"DashboardModule [jvm]@JvmOverloadsfun DashboardModule(dashboardTabProvider: DashboardTabProvider? = null, dashboardTabLoader: DashboardTabLoader? = null, webTabResourceModule: WebTabResourceModule? = null, indexAccessBlocks: List&lt;DashboardIndexAccessBlock&gt; = listOf(), indexBlocks: List&lt;DashboardIndexBlock&gt; = listOf())"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-dashboard-module/","title":"DashboardModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardModule/DashboardModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-dashboard-module/#dashboardmodule","title":"DashboardModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun DashboardModule(dashboardTabProvider: DashboardTabProvider? = null, dashboardTabLoader: DashboardTabLoader? = null, webTabResourceModule: WebTabResourceModule? = null, indexAccessBlocks: List&lt;DashboardIndexAccessBlock&gt; = listOf(), indexBlocks: List&lt;DashboardIndexBlock&gt; = listOf())</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/","title":"Companion - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardModule/Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/#functions","title":"Functions","text":"Name Summary addIndexAccessBlocks [jvm]fun addIndexAccessBlocks(vararg blocks: DashboardIndexAccessBlock): DashboardModuleAdd access blocks to dashboard index. addIndexBlocks [jvm]fun addIndexBlocks(vararg blocks: DashboardIndexBlock): DashboardModuleAdd access blocks to dashboard index. createHotwireTab [jvm]inline fun &lt;DA : Annotation, AA : Annotation&gt; createHotwireTab(slug: String, urlPathPrefix: String, menuLabel: String, menuUrl: String = urlPathPrefix, menuCategory: String = \u201cAdmin\u201d): DashboardModule createIFrameTab [jvm]inline fun &lt;DA : Annotation, AA : Annotation&gt; createIFrameTab(slug: String, urlPathPrefix: String, resourcePathPrefix: String = \u201c/_tab/\u201d, iframePath: String, menuLabel: String, menuUrl: String = urlPathPrefix, menuCategory: String = \u201cAdmin\u201d): DashboardModule createMenuLink [jvm]inline fun &lt;DA : Annotation, AA : Annotation&gt; createMenuLink(label: String, url: String, category: String = \u201c\u201d): DashboardModuleCreate menu link with label for url under menu category for a dashboard DA with access AA. createMiskWebTab [jvm]inline fun &lt;DA : Annotation, AA : Annotation&gt; createMiskWebTab(isDevelopment: Boolean, slug: String, urlPathPrefix: String, developmentWebProxyUrl: String, resourcePathPrefix: String = \u201c/_tab/\u201d, classpathResourcePathPrefix: String = \u201cclasspath:/web\u201d, iframePath: String = \u201c/\u201d, menuLabel: String, menuUrl: String = urlPathPrefix, menuCategory: String = \u201cAdmin\u201d): DashboardModuleInstalls a Misk-Web tab for a dashboard DA with access AA. The tab is identified by a unique slug and is routed to by match on urlPathPrefix. In local development \u2013 when isDevelopment is true, the developmentWebProxyUrl is used to resolve requests to resourcePathPrefix. In real environments, the classpathResourcePathPrefix is used to resolve resource requests to files in classpath. The tab is included in the dashboard navbar menu with menuLabel and in the menu group menuCategory."},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/add-index-access-blocks/","title":"addIndexAccessBlocks - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardModule/Companion/addIndexAccessBlocks</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/add-index-access-blocks/#addindexaccessblocks","title":"addIndexAccessBlocks","text":"<p>[jvm]\\ fun addIndexAccessBlocks(vararg blocks: DashboardIndexAccessBlock): DashboardModule</p> <p>Add access blocks to dashboard index.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/add-index-blocks/","title":"addIndexBlocks - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardModule/Companion/addIndexBlocks</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/add-index-blocks/#addindexblocks","title":"addIndexBlocks","text":"<p>[jvm]\\ fun addIndexBlocks(vararg blocks: DashboardIndexBlock): DashboardModule</p> <p>Add access blocks to dashboard index.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/create-hotwire-tab/","title":"createHotwireTab - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardModule/Companion/createHotwireTab</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/create-hotwire-tab/#createhotwiretab","title":"createHotwireTab","text":"<p>[jvm]\\ inline fun &lt;DA : Annotation, AA : Annotation&gt; createHotwireTab(slug: String, urlPathPrefix: String, menuLabel: String, menuUrl: String = urlPathPrefix, menuCategory: String = \u201cAdmin\u201d): DashboardModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/create-hotwire-tab/#parameters","title":"Parameters","text":"<p>jvm</p> slug : unique slug to identify the tab namespace, it must match the tab\u2019s corresponding DashboardTab multibinding urlPathPrefix : path prefix which when used in a user\u2019s navigation URL will route to this tab. menuLabel : tab name which appears in the dashboard menu, usually titlecase menuCategory : menu category which the tab appears under"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/create-i-frame-tab/","title":"createIFrameTab - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardModule/Companion/createIFrameTab</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/create-i-frame-tab/#createiframetab","title":"createIFrameTab","text":"<p>[jvm]\\ inline fun &lt;DA : Annotation, AA : Annotation&gt; createIFrameTab(slug: String, urlPathPrefix: String, resourcePathPrefix: String = \u201c/_tab/\u201d, iframePath: String, menuLabel: String, menuUrl: String = urlPathPrefix, menuCategory: String = \u201cAdmin\u201d): DashboardModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/create-i-frame-tab/#parameters","title":"Parameters","text":"<p>jvm</p> slug : unique slug to identify the tab namespace, it must match the tab\u2019s corresponding DashboardTab multibinding urlPathPrefix : path prefix which when used in a user\u2019s navigation URL will route to this tab. resourcePathPrefix : path prefix used for background network requests to get resources (HTML, CSS\u2026) for the tab from a resource provider (classpath, filesystem, web proxy\u2026). iframePath : complete path including file and extension if necessary which is set as the iframe src attribute in the generated HTML. name : tab name which appears in the dashboard menu, usually titlecase category : menu category which the tab appears under"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/create-menu-link/","title":"createMenuLink - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardModule/Companion/createMenuLink</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/create-menu-link/#createmenulink","title":"createMenuLink","text":"<p>[jvm]\\ inline fun &lt;DA : Annotation, AA : Annotation&gt; createMenuLink(label: String, url: String, category: String = \u201c\u201d): DashboardModule</p> <p>Create menu link with label for url under menu category for a dashboard DA with access AA.</p> <p>If category is empty, it will appear at the top of the menu list.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/create-misk-web-tab/","title":"createMiskWebTab - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardModule/Companion/createMiskWebTab</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-module/-companion/create-misk-web-tab/#createmiskwebtab","title":"createMiskWebTab","text":"<p>[jvm]\\ inline fun &lt;DA : Annotation, AA : Annotation&gt; createMiskWebTab(isDevelopment: Boolean, slug: String, urlPathPrefix: String, developmentWebProxyUrl: String, resourcePathPrefix: String = \u201c/_tab/\u201d, classpathResourcePathPrefix: String = \u201cclasspath:/web\u201d, iframePath: String = \u201c/\u201d, menuLabel: String, menuUrl: String = urlPathPrefix, menuCategory: String = \u201cAdmin\u201d): DashboardModule</p> <p>Installs a Misk-Web tab for a dashboard DA with access AA. The tab is identified by a unique slug and is routed to by match on urlPathPrefix. In local development \u2013 when isDevelopment is true, the developmentWebProxyUrl is used to resolve requests to resourcePathPrefix. In real environments, the classpathResourcePathPrefix is used to resolve resource requests to files in classpath. The tab is included in the dashboard navbar menu with menuLabel and in the menu group menuCategory.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/","title":"DashboardTab - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTab</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/#dashboardtab","title":"DashboardTab","text":"<p>[jvm]\\ data class DashboardTab@JvmOverloadsconstructor(slug: String, url_path_prefix: String, dashboard_slug: String, menuLabel: String, menuCategory: String, menuUrl: String, capabilities: Set&lt;String&gt;, services: Set&lt;String&gt;, accessAnnotationKClass: KClass&lt;out Annotation&gt;?, dashboardAnnotationKClass: KClass&lt;out Annotation&gt;?) : WebTab</p> <p>A WebTab with additional fields to bind to a specific Dashboard that has a tabs menu</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/#constructors","title":"Constructors","text":"DashboardTab [jvm]@JvmOverloadsfun DashboardTab(slug: String, url_path_prefix: String, dashboard_slug: String, menuLabel: String, menuCategory: String = \u201c\u201d, menuUrl: String = url_path_prefix, capabilities: Set&lt;String&gt; = setOf(), services: Set&lt;String&gt; = setOf(), accessAnnotationKClass: KClass&lt;out Annotation&gt;? = null, dashboardAnnotationKClass: KClass&lt;out Annotation&gt;? = null)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/#properties","title":"Properties","text":"Name Summary accessAnnotationKClass [jvm]val accessAnnotationKClass: KClass&lt;out Annotation&gt;? = null capabilities [jvm]open override val capabilities: Set&lt;String&gt;Set to show the tab only for authenticated capabilities, else shows always dashboard_slug [jvm]val dashboard_slug: StringA slug that identifies which dashboard the tab is installed to, generated from a slugified Dashboard Annotation class simple name dashboardAnnotationKClass [jvm]val dashboardAnnotationKClass: KClass&lt;out Annotation&gt;? = null menuCategory [jvm]val menuCategory: StringA title case category used to group tabs in the dashboard menu menuLabel [jvm]val menuLabel: StringA title case name used in the dashboard menu for the link to the tab menuUrl [jvm]val menuUrl: StringUrl to the tab, by default url_path_prefix services [jvm]open override val services: Set&lt;String&gt;Set to show the tab only for authenticated services, else shows always slug [jvm]open override val slug: StringA unique slug to identify the tab namespace.     Note: this slug must match the slug for the tab\u2019s corresponding WebTabResourceModule url_path_prefix [jvm]open override val url_path_prefix: StringA unique url path prefix to namespace tab URLs valid_slug [jvm]val valid_slug: String valid_url_path_prefix [jvm]val valid_url_path_prefix: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/#extensions","title":"Extensions","text":"Name Summary toMetadata [jvm]fun DashboardTab.toMetadata(): DashboardMetadataAction.DashboardTabMetadata"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/-dashboard-tab/","title":"DashboardTab - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTab/DashboardTab</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/-dashboard-tab/#dashboardtab","title":"DashboardTab","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun DashboardTab(slug: String, url_path_prefix: String, dashboard_slug: String, menuLabel: String, menuCategory: String = \u201c\u201d, menuUrl: String = url_path_prefix, capabilities: Set&lt;String&gt; = setOf(), services: Set&lt;String&gt; = setOf(), accessAnnotationKClass: KClass&lt;out Annotation&gt;? = null, dashboardAnnotationKClass: KClass&lt;out Annotation&gt;? = null)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/access-annotation-k-class/","title":"accessAnnotationKClass - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTab/accessAnnotationKClass</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/access-annotation-k-class/#accessannotationkclass","title":"accessAnnotationKClass","text":"<p>[jvm]\\ val accessAnnotationKClass: KClass&lt;out Annotation&gt;? = null</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/capabilities/","title":"capabilities - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTab/capabilities</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/capabilities/#capabilities","title":"capabilities","text":"<p>[jvm]\\ open override val capabilities: Set&lt;String&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/dashboard-annotation-k-class/","title":"dashboardAnnotationKClass - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTab/dashboardAnnotationKClass</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/dashboard-annotation-k-class/#dashboardannotationkclass","title":"dashboardAnnotationKClass","text":"<p>[jvm]\\ val dashboardAnnotationKClass: KClass&lt;out Annotation&gt;? = null</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/dashboard_slug/","title":"dashboard_slug - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTab/dashboard_slug</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/dashboard_slug/#dashboard_slug","title":"dashboard_slug","text":"<p>[jvm]\\ val dashboard_slug: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/menu-category/","title":"menuCategory - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTab/menuCategory</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/menu-category/#menucategory","title":"menuCategory","text":"<p>[jvm]\\ val menuCategory: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/menu-label/","title":"menuLabel - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTab/menuLabel</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/menu-label/#menulabel","title":"menuLabel","text":"<p>[jvm]\\ val menuLabel: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/menu-url/","title":"menuUrl - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTab/menuUrl</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/menu-url/#menuurl","title":"menuUrl","text":"<p>[jvm]\\ val menuUrl: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/services/","title":"services - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTab/services</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/services/#services","title":"services","text":"<p>[jvm]\\ open override val services: Set&lt;String&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/slug/","title":"slug - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTab/slug</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/slug/#slug","title":"slug","text":"<p>[jvm]\\ open override val slug: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/url_path_prefix/","title":"url_path_prefix - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTab/url_path_prefix</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab/url_path_prefix/#url_path_prefix","title":"url_path_prefix","text":"<p>[jvm]\\ open override val url_path_prefix: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/","title":"DashboardTabLoader - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabLoader</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/#dashboardtabloader","title":"DashboardTabLoader","text":"<p>[jvm]\\ sealed class DashboardTabLoader</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/#types","title":"Types","text":"Name Summary HotwireTab [jvm]data class HotwireTab(urlPathPrefix: String) : DashboardTabLoader IframeTab [jvm]data class IframeTab(urlPathPrefix: String, iframePath: String) : DashboardTabLoader"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/#properties","title":"Properties","text":"Name Summary urlPathPrefix [jvm]abstract val urlPathPrefix: StringPath prefix which resolves to the tab when visited in the browser."},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/#inheritors","title":"Inheritors","text":"Name HotwireTab IframeTab"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/url-path-prefix/","title":"urlPathPrefix - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabLoader/urlPathPrefix</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/url-path-prefix/#urlpathprefix","title":"urlPathPrefix","text":"<p>[jvm]\\ abstract val urlPathPrefix: String</p> <p>Path prefix which resolves to the tab when visited in the browser.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-hotwire-tab/","title":"HotwireTab - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabLoader/HotwireTab</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-hotwire-tab/#hotwiretab","title":"HotwireTab","text":"<p>[jvm]\\ data class HotwireTab(urlPathPrefix: String) : DashboardTabLoader</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-hotwire-tab/#properties","title":"Properties","text":"Name Summary urlPathPrefix [jvm]open override val urlPathPrefix: StringPath prefix which resolves to the tab when visited in the browser."},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-hotwire-tab/-hotwire-tab/","title":"HotwireTab - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabLoader/HotwireTab/HotwireTab</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-hotwire-tab/-hotwire-tab/#hotwiretab","title":"HotwireTab","text":"<p>[jvm]\\ fun HotwireTab(urlPathPrefix: String)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-hotwire-tab/url-path-prefix/","title":"urlPathPrefix - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabLoader/HotwireTab/urlPathPrefix</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-hotwire-tab/url-path-prefix/#urlpathprefix","title":"urlPathPrefix","text":"<p>[jvm]\\ open override val urlPathPrefix: String</p> <p>Path prefix which resolves to the tab when visited in the browser.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-iframe-tab/","title":"IframeTab - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabLoader/IframeTab</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-iframe-tab/#iframetab","title":"IframeTab","text":"<p>[jvm]\\ data class IframeTab(urlPathPrefix: String, iframePath: String) : DashboardTabLoader</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-iframe-tab/#properties","title":"Properties","text":"Name Summary iframePath [jvm]val iframePath: String urlPathPrefix [jvm]open override val urlPathPrefix: StringPath prefix which resolves to the tab when visited in the browser."},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-iframe-tab/-iframe-tab/","title":"IframeTab - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabLoader/IframeTab/IframeTab</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-iframe-tab/-iframe-tab/#iframetab","title":"IframeTab","text":"<p>[jvm]\\ fun IframeTab(urlPathPrefix: String, iframePath: String)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-iframe-tab/iframe-path/","title":"iframePath - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabLoader/IframeTab/iframePath</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-iframe-tab/iframe-path/#iframepath","title":"iframePath","text":"<p>[jvm]\\ val iframePath: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-iframe-tab/url-path-prefix/","title":"urlPathPrefix - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabLoader/IframeTab/urlPathPrefix</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader/-iframe-tab/url-path-prefix/#urlpathprefix","title":"urlPathPrefix","text":"<p>[jvm]\\ open override val urlPathPrefix: String</p> <p>Path prefix which resolves to the tab when visited in the browser.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader-entry/","title":"DashboardTabLoaderEntry - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabLoaderEntry</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader-entry/#dashboardtabloaderentry","title":"DashboardTabLoaderEntry","text":"<p>[jvm]\\ data class DashboardTabLoaderEntry(urlPathPrefix: String, loader: DashboardTabLoader)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader-entry/#properties","title":"Properties","text":"Name Summary loader [jvm]val loader: DashboardTabLoader urlPathPrefix [jvm]val urlPathPrefix: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader-entry/-dashboard-tab-loader-entry/","title":"DashboardTabLoaderEntry - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabLoaderEntry/DashboardTabLoaderEntry</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader-entry/-dashboard-tab-loader-entry/#dashboardtabloaderentry","title":"DashboardTabLoaderEntry","text":"<p>[jvm]\\ fun DashboardTabLoaderEntry(urlPathPrefix: String, loader: DashboardTabLoader)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader-entry/loader/","title":"loader - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabLoaderEntry/loader</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader-entry/loader/#loader","title":"loader","text":"<p>[jvm]\\ val loader: DashboardTabLoader</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader-entry/url-path-prefix/","title":"urlPathPrefix - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabLoaderEntry/urlPathPrefix</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-loader-entry/url-path-prefix/#urlpathprefix","title":"urlPathPrefix","text":"<p>[jvm]\\ val urlPathPrefix: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/","title":"DashboardTabProvider - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/#dashboardtabprovider","title":"DashboardTabProvider","text":"<p>[jvm]\\ class DashboardTabProvider@JvmOverloadsconstructor(slug: String, url_path_prefix: String, menuLabel: String, menuUrl: String, menuCategory: String, dashboard_slug: String, capabilities: Set&lt;String&gt;, services: Set&lt;String&gt;, accessAnnotationKClass: KClass&lt;out Annotation&gt;?, dashboardAnnotationKClass: KClass&lt;out Annotation&gt;) : ValidWebEntry, Provider&lt;DashboardTab&gt; </p> <p>Sets the tab\u2019s authentication capabilities/services by the multibound AccessAnnotationEntry</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/#constructors","title":"Constructors","text":"DashboardTabProvider [jvm]@JvmOverloadsfun DashboardTabProvider(slug: String, url_path_prefix: String, menuLabel: String, menuUrl: String = url_path_prefix, menuCategory: String = \u201cAdmin\u201d, dashboard_slug: String, capabilities: Set&lt;String&gt; = setOf(), services: Set&lt;String&gt; = setOf(), accessAnnotationKClass: KClass&lt;out Annotation&gt;? = null, dashboardAnnotationKClass: KClass&lt;out Annotation&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): DashboardTab"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/#properties","title":"Properties","text":"Name Summary accessAnnotationEntries [jvm]@Injectlateinit var accessAnnotationEntries: List&lt;AccessAnnotationEntry&gt; accessAnnotationKClass [jvm]val accessAnnotationKClass: KClass&lt;out Annotation&gt;? = null capabilities [jvm]val capabilities: Set&lt;String&gt; dashboard_slug [jvm]val dashboard_slug: String dashboardAnnotationKClass [jvm]val dashboardAnnotationKClass: KClass&lt;out Annotation&gt; menuCategory [jvm]val menuCategory: String menuLabel [jvm]val menuLabel: String menuUrl [jvm]val menuUrl: String services [jvm]val services: Set&lt;String&gt; slug [jvm]val slug: String url_path_prefix [jvm]val url_path_prefix: String valid_slug [jvm]val valid_slug: String valid_url_path_prefix [jvm]val valid_url_path_prefix: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/-dashboard-tab-provider/","title":"DashboardTabProvider - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider/DashboardTabProvider</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/-dashboard-tab-provider/#dashboardtabprovider","title":"DashboardTabProvider","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun DashboardTabProvider(slug: String, url_path_prefix: String, menuLabel: String, menuUrl: String = url_path_prefix, menuCategory: String = \u201cAdmin\u201d, dashboard_slug: String, capabilities: Set&lt;String&gt; = setOf(), services: Set&lt;String&gt; = setOf(), accessAnnotationKClass: KClass&lt;out Annotation&gt;? = null, dashboardAnnotationKClass: KClass&lt;out Annotation&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/access-annotation-entries/","title":"accessAnnotationEntries - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider/accessAnnotationEntries</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/access-annotation-entries/#accessannotationentries","title":"accessAnnotationEntries","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var accessAnnotationEntries: List&lt;AccessAnnotationEntry&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/access-annotation-k-class/","title":"accessAnnotationKClass - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider/accessAnnotationKClass</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/access-annotation-k-class/#accessannotationkclass","title":"accessAnnotationKClass","text":"<p>[jvm]\\ val accessAnnotationKClass: KClass&lt;out Annotation&gt;? = null</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/capabilities/","title":"capabilities - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider/capabilities</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/capabilities/#capabilities","title":"capabilities","text":"<p>[jvm]\\ val capabilities: Set&lt;String&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/dashboard-annotation-k-class/","title":"dashboardAnnotationKClass - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider/dashboardAnnotationKClass</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/dashboard-annotation-k-class/#dashboardannotationkclass","title":"dashboardAnnotationKClass","text":"<p>[jvm]\\ val dashboardAnnotationKClass: KClass&lt;out Annotation&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/dashboard_slug/","title":"dashboard_slug - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider/dashboard_slug</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/dashboard_slug/#dashboard_slug","title":"dashboard_slug","text":"<p>[jvm]\\ val dashboard_slug: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/get/","title":"get - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider/get</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): DashboardTab</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/menu-category/","title":"menuCategory - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider/menuCategory</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/menu-category/#menucategory","title":"menuCategory","text":"<p>[jvm]\\ val menuCategory: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/menu-label/","title":"menuLabel - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider/menuLabel</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/menu-label/#menulabel","title":"menuLabel","text":"<p>[jvm]\\ val menuLabel: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/menu-url/","title":"menuUrl - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider/menuUrl</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/menu-url/#menuurl","title":"menuUrl","text":"<p>[jvm]\\ val menuUrl: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/services/","title":"services - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider/services</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/services/#services","title":"services","text":"<p>[jvm]\\ val services: Set&lt;String&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/slug/","title":"slug - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider/slug</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/slug/#slug","title":"slug","text":"<p>[jvm]\\ val slug: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/url_path_prefix/","title":"url_path_prefix - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTabProvider/url_path_prefix</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-tab-provider/url_path_prefix/#url_path_prefix","title":"url_path_prefix","text":"<p>[jvm]\\ val url_path_prefix: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-theme/","title":"DashboardTheme - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTheme</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-theme/#dashboardtheme","title":"DashboardTheme","text":"<p>[jvm]\\ data class DashboardTheme(dashboard_slug: String, theme: MiskWebTheme)</p> <p>Per dashboard customization of the navbar theme</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-theme/#constructors","title":"Constructors","text":"DashboardTheme [jvm]fun DashboardTheme(dashboard_slug: String, theme: MiskWebTheme)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-theme/#properties","title":"Properties","text":"Name Summary dashboard_slug [jvm]val dashboard_slug: String theme [jvm]val theme: MiskWebTheme"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-theme/-dashboard-theme/","title":"DashboardTheme - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTheme/DashboardTheme</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-theme/-dashboard-theme/#dashboardtheme","title":"DashboardTheme","text":"<p>[jvm]\\ fun DashboardTheme(dashboard_slug: String, theme: MiskWebTheme)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-theme/dashboard_slug/","title":"dashboard_slug - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTheme/dashboard_slug</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-theme/dashboard_slug/#dashboard_slug","title":"dashboard_slug","text":"<p>[jvm]\\ val dashboard_slug: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-theme/theme/","title":"theme - Misk","text":"<p>//misk-admin/misk.web.dashboard/DashboardTheme/theme</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-dashboard-theme/theme/#theme","title":"theme","text":"<p>[jvm]\\ val theme: MiskWebTheme</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-database-dashboard-tab-module/","title":"DatabaseDashboardTabModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/DatabaseDashboardTabModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-database-dashboard-tab-module/#databasedashboardtabmodule","title":"DatabaseDashboardTabModule","text":"<p>[jvm]\\ class DatabaseDashboardTabModule(isDevelopment: Boolean) : KAbstractModule</p> <p>Installs Database dashboard tab which allows querying the database from a UI form.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-database-dashboard-tab-module/#constructors","title":"Constructors","text":"DatabaseDashboardTabModule [jvm]fun DatabaseDashboardTabModule(isDevelopment: Boolean)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-database-dashboard-tab-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-database-dashboard-tab-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-database-dashboard-tab-module/-database-dashboard-tab-module/","title":"DatabaseDashboardTabModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/DatabaseDashboardTabModule/DatabaseDashboardTabModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-database-dashboard-tab-module/-database-dashboard-tab-module/#databasedashboardtabmodule","title":"DatabaseDashboardTabModule","text":"<p>[jvm]\\ fun DatabaseDashboardTabModule(isDevelopment: Boolean)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/","title":"EnvironmentToColorLookup - Misk","text":"<p>//misk-admin/misk.web.dashboard/EnvironmentToColorLookup</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/#environmenttocolorlookup","title":"EnvironmentToColorLookup","text":"<p>[jvm]\\ data class EnvironmentToColorLookup(default: String, DEVELOPMENT: String, TESTING: String, STAGING: String, PRODUCTION: String)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/#properties","title":"Properties","text":"Name Summary default [jvm]val default: String DEVELOPMENT [jvm]val DEVELOPMENT: String PRODUCTION [jvm]val PRODUCTION: String STAGING [jvm]val STAGING: String TESTING [jvm]val TESTING: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/-d-e-v-e-l-o-p-m-e-n-t/","title":"DEVELOPMENT - Misk","text":"<p>//misk-admin/misk.web.dashboard/EnvironmentToColorLookup/DEVELOPMENT</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/-d-e-v-e-l-o-p-m-e-n-t/#development","title":"DEVELOPMENT","text":"<p>[jvm]\\ val DEVELOPMENT: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/-environment-to-color-lookup/","title":"EnvironmentToColorLookup - Misk","text":"<p>//misk-admin/misk.web.dashboard/EnvironmentToColorLookup/EnvironmentToColorLookup</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/-environment-to-color-lookup/#environmenttocolorlookup","title":"EnvironmentToColorLookup","text":"<p>[jvm]\\ fun EnvironmentToColorLookup(default: String, DEVELOPMENT: String, TESTING: String, STAGING: String, PRODUCTION: String)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/-p-r-o-d-u-c-t-i-o-n/","title":"PRODUCTION - Misk","text":"<p>//misk-admin/misk.web.dashboard/EnvironmentToColorLookup/PRODUCTION</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/-p-r-o-d-u-c-t-i-o-n/#production","title":"PRODUCTION","text":"<p>[jvm]\\ val PRODUCTION: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/-s-t-a-g-i-n-g/","title":"STAGING - Misk","text":"<p>//misk-admin/misk.web.dashboard/EnvironmentToColorLookup/STAGING</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/-s-t-a-g-i-n-g/#staging","title":"STAGING","text":"<p>[jvm]\\ val STAGING: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/-t-e-s-t-i-n-g/","title":"TESTING - Misk","text":"<p>//misk-admin/misk.web.dashboard/EnvironmentToColorLookup/TESTING</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/-t-e-s-t-i-n-g/#testing","title":"TESTING","text":"<p>[jvm]\\ val TESTING: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/default/","title":"default - Misk","text":"<p>//misk-admin/misk.web.dashboard/EnvironmentToColorLookup/default</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-environment-to-color-lookup/default/#default","title":"default","text":"<p>[jvm]\\ val default: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/","title":"MiskWebColor - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/#miskwebcolor","title":"MiskWebColor","text":"<p>[jvm]\\ enum MiskWebColor : Enum&lt;MiskWebColor&gt; </p> <p>Matches the Misk-Web Color enum in @misk/core/src/utilities/css.ts</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/#entries","title":"Entries","text":"PLATINUM [jvm]PLATINUM(\u201c#cecece\u201d) SILVER [jvm]SILVER(\u201c#9da2a6\u201d) CADET [jvm]CADET(\u201c#29333a\u201d) WHITE [jvm]WHITE(\u201cwhite\u201d) ACCENT [jvm]ACCENT(\u201c#eceef1\u201d) GRAY [jvm]GRAY(\u201c#7a7e82\u201d) TEXT [jvm]TEXT(\u201c#3e4348\u201d) CHARCOAL [jvm]CHARCOAL(\u201c#1b2126\u201d) ROSE [jvm]ROSE(\u201c#c14f70\u201d) PLUM [jvm]PLUM(\u201c#a1499c\u201d) PURPLE [jvm]PURPLE(\u201c#7250a1\u201d) INDIGO [jvm]INDIGO(\u201c#5174d1\u201d) BLUE [jvm]BLUE(\u201c#49a4d5\u201d) TEAL [jvm]TEAL(\u201c#00c1ae\u201d) GREEN [jvm]GREEN(\u201c#0bb634\u201d) LIME [jvm]LIME(\u201c#77ba1b\u201d) YELLOW [jvm]YELLOW(\u201c#edb312\u201d) ORANGE [jvm]ORANGE(\u201c#f86932\u201d) RED [jvm]RED(\u201c#df3320\u201d)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/hex-color/","title":"hexColor - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/hexColor</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/hex-color/#hexcolor","title":"hexColor","text":"<p>[jvm]\\ val hexColor: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-a-c-c-e-n-t/","title":"ACCENT - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/ACCENT</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-a-c-c-e-n-t/#accent","title":"ACCENT","text":"<p>[jvm]\\ ACCENT(\u201c#eceef1\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-a-c-c-e-n-t/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-b-l-u-e/","title":"BLUE - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/BLUE</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-b-l-u-e/#blue","title":"BLUE","text":"<p>[jvm]\\ BLUE(\u201c#49a4d5\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-b-l-u-e/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-c-a-d-e-t/","title":"CADET - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/CADET</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-c-a-d-e-t/#cadet","title":"CADET","text":"<p>[jvm]\\ CADET(\u201c#29333a\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-c-a-d-e-t/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-c-h-a-r-c-o-a-l/","title":"CHARCOAL - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/CHARCOAL</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-c-h-a-r-c-o-a-l/#charcoal","title":"CHARCOAL","text":"<p>[jvm]\\ CHARCOAL(\u201c#1b2126\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-c-h-a-r-c-o-a-l/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-g-r-a-y/","title":"GRAY - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/GRAY</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-g-r-a-y/#gray","title":"GRAY","text":"<p>[jvm]\\ GRAY(\u201c#7a7e82\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-g-r-a-y/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-g-r-e-e-n/","title":"GREEN - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/GREEN</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-g-r-e-e-n/#green","title":"GREEN","text":"<p>[jvm]\\ GREEN(\u201c#0bb634\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-g-r-e-e-n/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-i-n-d-i-g-o/","title":"INDIGO - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/INDIGO</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-i-n-d-i-g-o/#indigo","title":"INDIGO","text":"<p>[jvm]\\ INDIGO(\u201c#5174d1\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-i-n-d-i-g-o/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-l-i-m-e/","title":"LIME - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/LIME</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-l-i-m-e/#lime","title":"LIME","text":"<p>[jvm]\\ LIME(\u201c#77ba1b\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-l-i-m-e/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-o-r-a-n-g-e/","title":"ORANGE - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/ORANGE</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-o-r-a-n-g-e/#orange","title":"ORANGE","text":"<p>[jvm]\\ ORANGE(\u201c#f86932\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-o-r-a-n-g-e/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-p-l-a-t-i-n-u-m/","title":"PLATINUM - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/PLATINUM</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-p-l-a-t-i-n-u-m/#platinum","title":"PLATINUM","text":"<p>[jvm]\\ PLATINUM(\u201c#cecece\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-p-l-a-t-i-n-u-m/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-p-l-u-m/","title":"PLUM - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/PLUM</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-p-l-u-m/#plum","title":"PLUM","text":"<p>[jvm]\\ PLUM(\u201c#a1499c\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-p-l-u-m/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-p-u-r-p-l-e/","title":"PURPLE - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/PURPLE</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-p-u-r-p-l-e/#purple","title":"PURPLE","text":"<p>[jvm]\\ PURPLE(\u201c#7250a1\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-p-u-r-p-l-e/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-r-e-d/","title":"RED - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/RED</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-r-e-d/#red","title":"RED","text":"<p>[jvm]\\ RED(\u201c#df3320\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-r-e-d/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-r-o-s-e/","title":"ROSE - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/ROSE</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-r-o-s-e/#rose","title":"ROSE","text":"<p>[jvm]\\ ROSE(\u201c#c14f70\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-r-o-s-e/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-s-i-l-v-e-r/","title":"SILVER - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/SILVER</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-s-i-l-v-e-r/#silver","title":"SILVER","text":"<p>[jvm]\\ SILVER(\u201c#9da2a6\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-s-i-l-v-e-r/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-t-e-a-l/","title":"TEAL - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/TEAL</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-t-e-a-l/#teal","title":"TEAL","text":"<p>[jvm]\\ TEAL(\u201c#00c1ae\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-t-e-a-l/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-t-e-x-t/","title":"TEXT - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/TEXT</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-t-e-x-t/#text","title":"TEXT","text":"<p>[jvm]\\ TEXT(\u201c#3e4348\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-t-e-x-t/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-w-h-i-t-e/","title":"WHITE - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/WHITE</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-w-h-i-t-e/#white","title":"WHITE","text":"<p>[jvm]\\ WHITE(\u201cwhite\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-w-h-i-t-e/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-y-e-l-l-o-w/","title":"YELLOW - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebColor/YELLOW</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-y-e-l-l-o-w/#yellow","title":"YELLOW","text":"<p>[jvm]\\ YELLOW(\u201c#edb312\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-color/-y-e-l-l-o-w/#properties","title":"Properties","text":"Name Summary hexColor [jvm]val hexColor: String name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/","title":"MiskWebTabIndexAction - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTabIndexAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/#miskwebtabindexaction","title":"MiskWebTabIndexAction","text":"<p>[jvm]\\ @Singleton</p> <p>class MiskWebTabIndexAction@Injectconstructor(dashboardTabs: List&lt;DashboardTab&gt;) : WebAction</p> <p>Kotlin backed tab loader, equivalent to /_tab/slug/index.html</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/#constructors","title":"Constructors","text":"MiskWebTabIndexAction [jvm]@Injectfun MiskWebTabIndexAction(dashboardTabs: List&lt;DashboardTab&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/#functions","title":"Functions","text":"Name Summary get [jvm]fun get(slug: String?, rest: String?): String"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/-misk-web-tab-index-action/","title":"MiskWebTabIndexAction - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTabIndexAction/MiskWebTabIndexAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/-misk-web-tab-index-action/#miskwebtabindexaction","title":"MiskWebTabIndexAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun MiskWebTabIndexAction(dashboardTabs: List&lt;DashboardTab&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/get/","title":"get - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTabIndexAction/get</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/get/#get","title":"get","text":"<p>[jvm]\\ fun get(slug: String?, rest: String?): String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/-companion/","title":"Companion - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTabIndexAction/Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/-companion/#properties","title":"Properties","text":"Name Summary PATH [jvm]const val PATH: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/-companion/-p-a-t-h/","title":"PATH - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTabIndexAction/Companion/PATH</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-tab-index-action/-companion/-p-a-t-h/#path","title":"PATH","text":"<p>[jvm]\\ const val PATH: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/","title":"MiskWebTheme - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTheme</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/#miskwebtheme","title":"MiskWebTheme","text":"<p>[jvm]\\ data class MiskWebTheme(bannerLinkHover: String, bannerText: String, button: String, buttonHover: String, categoryText: String, environmentToColor: EnvironmentToColorLookup, navbarBackground: String, navbarLinkHover: String, navbarText: String)</p> <p>Matches the Misk-Web Theme interface  in @misk/core/src/utilities/theme.ts</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/#constructors","title":"Constructors","text":"MiskWebTheme [jvm]fun MiskWebTheme(bannerLinkHover: String, bannerText: String, button: String, buttonHover: String, categoryText: String, environmentToColor: EnvironmentToColorLookup, navbarBackground: String, navbarLinkHover: String, navbarText: String)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/#properties","title":"Properties","text":"Name Summary bannerLinkHover [jvm]val bannerLinkHover: String bannerText [jvm]val bannerText: String button [jvm]val button: String buttonHover [jvm]val buttonHover: String categoryText [jvm]val categoryText: String environmentToColor [jvm]val environmentToColor: EnvironmentToColorLookup navbarBackground [jvm]val navbarBackground: String navbarLinkHover [jvm]val navbarLinkHover: String navbarText [jvm]val navbarText: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/-misk-web-theme/","title":"MiskWebTheme - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTheme/MiskWebTheme</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/-misk-web-theme/#miskwebtheme","title":"MiskWebTheme","text":"<p>[jvm]\\ fun MiskWebTheme(bannerLinkHover: String, bannerText: String, button: String, buttonHover: String, categoryText: String, environmentToColor: EnvironmentToColorLookup, navbarBackground: String, navbarLinkHover: String, navbarText: String)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/banner-link-hover/","title":"bannerLinkHover - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTheme/bannerLinkHover</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/banner-link-hover/#bannerlinkhover","title":"bannerLinkHover","text":"<p>[jvm]\\ val bannerLinkHover: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/banner-text/","title":"bannerText - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTheme/bannerText</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/banner-text/#bannertext","title":"bannerText","text":"<p>[jvm]\\ val bannerText: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/button-hover/","title":"buttonHover - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTheme/buttonHover</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/button-hover/#buttonhover","title":"buttonHover","text":"<p>[jvm]\\ val buttonHover: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/button/","title":"button - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTheme/button</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/button/#button","title":"button","text":"<p>[jvm]\\ val button: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/category-text/","title":"categoryText - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTheme/categoryText</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/category-text/#categorytext","title":"categoryText","text":"<p>[jvm]\\ val categoryText: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/environment-to-color/","title":"environmentToColor - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTheme/environmentToColor</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/environment-to-color/#environmenttocolor","title":"environmentToColor","text":"<p>[jvm]\\ val environmentToColor: EnvironmentToColorLookup</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/navbar-background/","title":"navbarBackground - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTheme/navbarBackground</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/navbar-background/#navbarbackground","title":"navbarBackground","text":"<p>[jvm]\\ val navbarBackground: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/navbar-link-hover/","title":"navbarLinkHover - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTheme/navbarLinkHover</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/navbar-link-hover/#navbarlinkhover","title":"navbarLinkHover","text":"<p>[jvm]\\ val navbarLinkHover: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/navbar-text/","title":"navbarText - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTheme/navbarText</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/navbar-text/#navbartext","title":"navbarText","text":"<p>[jvm]\\ val navbarText: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/-companion/","title":"Companion - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTheme/Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/-companion/#properties","title":"Properties","text":"Name Summary DEFAULT_THEME [jvm]val DEFAULT_THEME: MiskWebTheme"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/-companion/-d-e-f-a-u-l-t_-t-h-e-m-e/","title":"DEFAULT_THEME - Misk","text":"<p>//misk-admin/misk.web.dashboard/MiskWebTheme/Companion/DEFAULT_THEME</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-misk-web-theme/-companion/-d-e-f-a-u-l-t_-t-h-e-m-e/#default_theme","title":"DEFAULT_THEME","text":"<p>[jvm]\\ val DEFAULT_THEME: MiskWebTheme</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-actions-dashboard-tab-module/","title":"WebActionsDashboardTabModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebActionsDashboardTabModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-actions-dashboard-tab-module/#webactionsdashboardtabmodule","title":"WebActionsDashboardTabModule","text":"<p>[jvm]\\ class WebActionsDashboardTabModule(isDevelopment: Boolean) : KAbstractModule</p> <p>Installs WebActions dashboard tab which allows introspection and exercising actions from a UI form.</p> <p>This installs both versions of the WebActions tab, v1 and v2.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-actions-dashboard-tab-module/#constructors","title":"Constructors","text":"WebActionsDashboardTabModule [jvm]fun WebActionsDashboardTabModule(isDevelopment: Boolean)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-actions-dashboard-tab-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-actions-dashboard-tab-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-actions-dashboard-tab-module/-web-actions-dashboard-tab-module/","title":"WebActionsDashboardTabModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebActionsDashboardTabModule/WebActionsDashboardTabModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-actions-dashboard-tab-module/-web-actions-dashboard-tab-module/#webactionsdashboardtabmodule","title":"WebActionsDashboardTabModule","text":"<p>[jvm]\\ fun WebActionsDashboardTabModule(isDevelopment: Boolean)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/","title":"WebTab - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebTab</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/#webtab","title":"WebTab","text":"<p>[jvm]\\ open class WebTab@JvmOverloadsconstructor(slug: String, url_path_prefix: String, capabilities: Set&lt;String&gt;, services: Set&lt;String&gt;) : ValidWebEntry</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/#properties","title":"Properties","text":"Name Summary capabilities [jvm]open val capabilities: Set&lt;String&gt; services [jvm]open val services: Set&lt;String&gt; slug [jvm]open val slug: String url_path_prefix [jvm]open val url_path_prefix: String valid_slug [jvm]val valid_slug: String valid_url_path_prefix [jvm]val valid_url_path_prefix: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/#inheritors","title":"Inheritors","text":"Name DashboardTab"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/-web-tab/","title":"WebTab - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebTab/WebTab</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/-web-tab/#webtab","title":"WebTab","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun WebTab(slug: String, url_path_prefix: String, capabilities: Set&lt;String&gt; = setOf(), services: Set&lt;String&gt; = setOf())</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/capabilities/","title":"capabilities - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebTab/capabilities</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/capabilities/#capabilities","title":"capabilities","text":"<p>[jvm]\\ open val capabilities: Set&lt;String&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/services/","title":"services - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebTab/services</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/services/#services","title":"services","text":"<p>[jvm]\\ open val services: Set&lt;String&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/slug/","title":"slug - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebTab/slug</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/slug/#slug","title":"slug","text":"<p>[jvm]\\ open val slug: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/url_path_prefix/","title":"url_path_prefix - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebTab/url_path_prefix</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab/url_path_prefix/#url_path_prefix","title":"url_path_prefix","text":"<p>[jvm]\\ open val url_path_prefix: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/","title":"WebTabResourceModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebTabResourceModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/#webtabresourcemodule","title":"WebTabResourceModule","text":"<p>[jvm]\\ class WebTabResourceModule@JvmOverloadsconstructor(isDevelopment: Boolean, slug: String, web_proxy_url: String?, url_path_prefix: String, resourcePath: String) : KAbstractModule</p> <p>Declare how to serve the resources for a WebTab (JS, HTML, CSS\u2026)</p> <p>In Development environment, requests are proxied through to a local running build server. In all other environments, resource requests are served from the classpath.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/#constructors","title":"Constructors","text":"WebTabResourceModule [jvm]fun WebTabResourceModule(deployment: Deployment, slug: String, web_proxy_url: String, url_path_prefix: String = \u201c/_tab/\u201d, resourcePath: String = \u201cclasspath:/web/_tab/\u201d) WebTabResourceModule [jvm]@JvmOverloadsfun WebTabResourceModule(isDevelopment: Boolean = false, slug: String, web_proxy_url: String? = null, url_path_prefix: String = \u201c/_tab/\u201d, resourcePath: String = \u201cclasspath:/web/_tab/\u201d)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder resourcePath [jvm]val resourcePath: StringJVM path for non-Development environment static resources (includes classpath:/ prefix) slug [jvm]val slug: StringA unique slug to identify the tab namespace, it must match the tab\u2019s corresponding DashboardTab multibinding url_path_prefix [jvm]val url_path_prefix: StringURL namespace used to determine where to route requests with that url prefix     By Misk-Web convention, the prefix for tabs is /_tab/{slug}/ to prevent namespace collisions with     dashboard urls such as /_admin/ or /app/ since path routing is by url prefix. web_proxy_url [jvm]val web_proxy_url: String? = nulla fully qualified url for the development build server (includes http:// prefix)"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/-web-tab-resource-module/","title":"WebTabResourceModule - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebTabResourceModule/WebTabResourceModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/-web-tab-resource-module/#webtabresourcemodule","title":"WebTabResourceModule","text":"<p>[jvm]\\ fun WebTabResourceModule(deployment: Deployment, slug: String, web_proxy_url: String, url_path_prefix: String = \u201c/_tab/\u201d, resourcePath: String = \u201cclasspath:/web/_tab/\u201d)</p> <p>@JvmOverloads</p> <p>fun WebTabResourceModule(isDevelopment: Boolean = false, slug: String, web_proxy_url: String? = null, url_path_prefix: String = \u201c/_tab/\u201d, resourcePath: String = \u201cclasspath:/web/_tab/\u201d)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/resource-path/","title":"resourcePath - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebTabResourceModule/resourcePath</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/resource-path/#resourcepath","title":"resourcePath","text":"<p>[jvm]\\ val resourcePath: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/slug/","title":"slug - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebTabResourceModule/slug</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/slug/#slug","title":"slug","text":"<p>[jvm]\\ val slug: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/url_path_prefix/","title":"url_path_prefix - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebTabResourceModule/url_path_prefix</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/url_path_prefix/#url_path_prefix","title":"url_path_prefix","text":"<p>[jvm]\\ val url_path_prefix: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/web_proxy_url/","title":"web_proxy_url - Misk","text":"<p>//misk-admin/misk.web.dashboard/WebTabResourceModule/web_proxy_url</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.dashboard/-web-tab-resource-module/web_proxy_url/#web_proxy_url","title":"web_proxy_url","text":"<p>[jvm]\\ val web_proxy_url: String? = null</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/","title":"Package misk.web.metadata - Misk","text":"<p>//misk-admin/misk.web.metadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/#package-miskwebmetadata","title":"Package misk.web.metadata","text":""},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/#types","title":"Types","text":"Name Summary DashboardMetadataAction [jvm]@Singletonclass DashboardMetadataAction@Injectconstructor(allTabs: List&lt;DashboardTab&gt;, allNavbarItems: List&lt;DashboardNavbarItem&gt;, allNavbarStatus: List&lt;DashboardNavbarStatus&gt;, allHomeUrls: List&lt;DashboardHomeUrl&gt;, allThemes: List&lt;DashboardTheme&gt;, callerProvider: ActionScoped&lt;MiskCaller?&gt;) : WebActionServe metadata related to a Misk-Web Dashboard ServiceMetadataAction [jvm]@Singletonclass ServiceMetadataAction@Injectconstructor(optionalBinder: ServiceMetadataAction.OptionalBinder) : WebActionService Metadata used for front end dashboards including App Name and Misk.Deployment name"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/","title":"DashboardMetadataAction - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/#dashboardmetadataaction","title":"DashboardMetadataAction","text":"<p>[jvm]\\ @Singleton</p> <p>class DashboardMetadataAction@Injectconstructor(allTabs: List&lt;DashboardTab&gt;, allNavbarItems: List&lt;DashboardNavbarItem&gt;, allNavbarStatus: List&lt;DashboardNavbarStatus&gt;, allHomeUrls: List&lt;DashboardHomeUrl&gt;, allThemes: List&lt;DashboardTheme&gt;, callerProvider: ActionScoped&lt;MiskCaller?&gt;) : WebAction</p> <p>Serve metadata related to a Misk-Web Dashboard</p> <p>Multiple dashboards with Misk-Web tabs can be bound by binding tabs to a different Dashboard Annotation. For example, all tabs used in the Misk Admin Dashboard are bound with the AdminDashboard annotation; tabs used in a service front end app, like Backfila, would be bound with a \u201cBackfilaApp\u201d annotation.</p> <p>Dashboard related metadata is multibound with the slug that corresponds to a Dashboard Annotation. DashboardMetadataAction returns only the metadata for the requested dashboard.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/#constructors","title":"Constructors","text":"DashboardMetadataAction [jvm]@Injectfun DashboardMetadataAction(allTabs: List&lt;DashboardTab&gt;, allNavbarItems: List&lt;DashboardNavbarItem&gt;, allNavbarStatus: List&lt;DashboardNavbarStatus&gt;, allHomeUrls: List&lt;DashboardHomeUrl&gt;, allThemes: List&lt;DashboardTheme&gt;, callerProvider: ActionScoped&lt;MiskCaller?&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/#types","title":"Types","text":"Name Summary DashboardMetadata [jvm]data class DashboardMetadata@JvmOverloadsconstructor(home_url: String, navbar_items: List&lt;String&gt;, navbar_status: String, tabs: List&lt;DashboardMetadataAction.DashboardTabMetadata&gt;, theme: MiskWebTheme?) DashboardTabMetadata [jvm]data class DashboardTabMetadata@JvmOverloadsconstructor(slug: String, url_path_prefix: String, dashboard_slug: String, name: String, category: String, capabilities: Set&lt;String&gt;, services: Set&lt;String&gt;) Response [jvm]data class Response@JvmOverloadsconstructor(dashboardMetadata: DashboardMetadataAction.DashboardMetadata)"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/#functions","title":"Functions","text":"Name Summary getAll [jvm]fun getAll(dashboard_slug: String): DashboardMetadataAction.Response getDashboardMetadata [jvm]fun getDashboardMetadata(caller: MiskCaller?, dashboardSlug: String): DashboardMetadataAction.DashboardMetadata"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata-action/","title":"DashboardMetadataAction - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardMetadataAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata-action/#dashboardmetadataaction","title":"DashboardMetadataAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun DashboardMetadataAction(allTabs: List&lt;DashboardTab&gt;, allNavbarItems: List&lt;DashboardNavbarItem&gt;, allNavbarStatus: List&lt;DashboardNavbarStatus&gt;, allHomeUrls: List&lt;DashboardHomeUrl&gt;, allThemes: List&lt;DashboardTheme&gt;, callerProvider: ActionScoped&lt;MiskCaller?&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/get-all/","title":"getAll - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/getAll</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/get-all/#getall","title":"getAll","text":"<p>[jvm]\\ fun getAll(dashboard_slug: String): DashboardMetadataAction.Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/get-dashboard-metadata/","title":"getDashboardMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/getDashboardMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/get-dashboard-metadata/#getdashboardmetadata","title":"getDashboardMetadata","text":"<p>[jvm]\\ fun getDashboardMetadata(caller: MiskCaller?, dashboardSlug: String): DashboardMetadataAction.DashboardMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/","title":"DashboardMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/#dashboardmetadata","title":"DashboardMetadata","text":"<p>[jvm]\\ data class DashboardMetadata@JvmOverloadsconstructor(home_url: String, navbar_items: List&lt;String&gt;, navbar_status: String, tabs: List&lt;DashboardMetadataAction.DashboardTabMetadata&gt;, theme: MiskWebTheme?)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/#properties","title":"Properties","text":"Name Summary home_url [jvm]val home_url: String navbar_items [jvm]val navbar_items: List&lt;String&gt; navbar_status [jvm]val navbar_status: String tabs [jvm]val tabs: List&lt;DashboardMetadataAction.DashboardTabMetadata&gt; theme [jvm]val theme: MiskWebTheme? = nullIf null, uses default theme that ships with Misk-Web"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/-dashboard-metadata/","title":"DashboardMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardMetadata/DashboardMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/-dashboard-metadata/#dashboardmetadata","title":"DashboardMetadata","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun DashboardMetadata(home_url: String = \u201c\u201d, navbar_items: List&lt;String&gt; = listOf(), navbar_status: String = \u201c\u201d, tabs: List&lt;DashboardMetadataAction.DashboardTabMetadata&gt; = listOf(), theme: MiskWebTheme? = null)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/home_url/","title":"home_url - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardMetadata/home_url</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/home_url/#home_url","title":"home_url","text":"<p>[jvm]\\ val home_url: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/navbar_items/","title":"navbar_items - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardMetadata/navbar_items</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/navbar_items/#navbar_items","title":"navbar_items","text":"<p>[jvm]\\ val navbar_items: List&lt;String&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/navbar_status/","title":"navbar_status - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardMetadata/navbar_status</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/navbar_status/#navbar_status","title":"navbar_status","text":"<p>[jvm]\\ val navbar_status: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/tabs/","title":"tabs - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardMetadata/tabs</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/tabs/#tabs","title":"tabs","text":"<p>[jvm]\\ val tabs: List&lt;DashboardMetadataAction.DashboardTabMetadata&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/theme/","title":"theme - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardMetadata/theme</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/theme/#theme","title":"theme","text":"<p>[jvm]\\ val theme: MiskWebTheme? = null</p> <p>If null, uses default theme that ships with Misk-Web</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/","title":"DashboardTabMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardTabMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/#dashboardtabmetadata","title":"DashboardTabMetadata","text":"<p>[jvm]\\ data class DashboardTabMetadata@JvmOverloadsconstructor(slug: String, url_path_prefix: String, dashboard_slug: String, name: String, category: String, capabilities: Set&lt;String&gt;, services: Set&lt;String&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/#properties","title":"Properties","text":"Name Summary capabilities [jvm]val capabilities: Set&lt;String&gt; category [jvm]val category: String dashboard_slug [jvm]val dashboard_slug: String name [jvm]val name: String services [jvm]val services: Set&lt;String&gt; slug [jvm]val slug: String url_path_prefix [jvm]val url_path_prefix: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/-dashboard-tab-metadata/","title":"DashboardTabMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardTabMetadata/DashboardTabMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/-dashboard-tab-metadata/#dashboardtabmetadata","title":"DashboardTabMetadata","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun DashboardTabMetadata(slug: String, url_path_prefix: String, dashboard_slug: String, name: String, category: String = \u201c\u201d, capabilities: Set&lt;String&gt; = setOf(), services: Set&lt;String&gt; = setOf())</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/capabilities/","title":"capabilities - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardTabMetadata/capabilities</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/capabilities/#capabilities","title":"capabilities","text":"<p>[jvm]\\ val capabilities: Set&lt;String&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/category/","title":"category - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardTabMetadata/category</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/category/#category","title":"category","text":"<p>[jvm]\\ val category: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/dashboard_slug/","title":"dashboard_slug - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardTabMetadata/dashboard_slug</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/dashboard_slug/#dashboard_slug","title":"dashboard_slug","text":"<p>[jvm]\\ val dashboard_slug: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/name/","title":"name - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardTabMetadata/name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/services/","title":"services - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardTabMetadata/services</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/services/#services","title":"services","text":"<p>[jvm]\\ val services: Set&lt;String&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/slug/","title":"slug - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardTabMetadata/slug</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/slug/#slug","title":"slug","text":"<p>[jvm]\\ val slug: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/url_path_prefix/","title":"url_path_prefix - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardTabMetadata/url_path_prefix</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/url_path_prefix/#url_path_prefix","title":"url_path_prefix","text":"<p>[jvm]\\ val url_path_prefix: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/-companion/","title":"Companion - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardTabMetadata/Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/-companion/#functions","title":"Functions","text":"Name Summary toMetadata [jvm]fun DashboardTab.toMetadata(): DashboardMetadataAction.DashboardTabMetadata"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/-companion/to-metadata/","title":"toMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/DashboardTabMetadata/Companion/toMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-dashboard-tab-metadata/-companion/to-metadata/#tometadata","title":"toMetadata","text":"<p>[jvm]\\ fun DashboardTab.toMetadata(): DashboardMetadataAction.DashboardTabMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-response/","title":"Response - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-response/#response","title":"Response","text":"<p>[jvm]\\ data class Response@JvmOverloadsconstructor(dashboardMetadata: DashboardMetadataAction.DashboardMetadata)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-response/#properties","title":"Properties","text":"Name Summary dashboardMetadata [jvm]val dashboardMetadata: DashboardMetadataAction.DashboardMetadata"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-response/-response/","title":"Response - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/Response/Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-response/-response/#response","title":"Response","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun Response(dashboardMetadata: DashboardMetadataAction.DashboardMetadata = DashboardMetadata())</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-response/dashboard-metadata/","title":"dashboardMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata/DashboardMetadataAction/Response/dashboardMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-dashboard-metadata-action/-response/dashboard-metadata/#dashboardmetadata","title":"dashboardMetadata","text":"<p>[jvm]\\ val dashboardMetadata: DashboardMetadataAction.DashboardMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/","title":"ServiceMetadataAction - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/#servicemetadataaction","title":"ServiceMetadataAction","text":"<p>[jvm]\\ @Singleton</p> <p>class ServiceMetadataAction@Injectconstructor(optionalBinder: ServiceMetadataAction.OptionalBinder) : WebAction</p> <p>Service Metadata used for front end dashboards including App Name and Misk.Deployment name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/#constructors","title":"Constructors","text":"ServiceMetadataAction [jvm]@Injectfun ServiceMetadataAction(optionalBinder: ServiceMetadataAction.OptionalBinder)"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/#types","title":"Types","text":"Name Summary OptionalBinder [jvm]@Singletonclass OptionalBinder@Injectconstructor(appName: String, deployment: Deployment)https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor Response [jvm]data class Response(serviceMetadata: ServiceMetadataAction.ServiceMetadata) ServiceMetadata [jvm]data class ServiceMetadata(app_name: String, environment: String)"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/#functions","title":"Functions","text":"Name Summary getAll [jvm]fun getAll(): ServiceMetadataAction.Response"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-service-metadata-action/","title":"ServiceMetadataAction - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction/ServiceMetadataAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-service-metadata-action/#servicemetadataaction","title":"ServiceMetadataAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ServiceMetadataAction(optionalBinder: ServiceMetadataAction.OptionalBinder)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/get-all/","title":"getAll - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction/getAll</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/get-all/#getall","title":"getAll","text":"<p>[jvm]\\ fun getAll(): ServiceMetadataAction.Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-optional-binder/","title":"OptionalBinder - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction/OptionalBinder</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-optional-binder/#optionalbinder","title":"OptionalBinder","text":"<p>[jvm]\\ @Singleton</p> <p>class OptionalBinder@Injectconstructor(appName: String, deployment: Deployment)</p> <p>https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-optional-binder/#constructors","title":"Constructors","text":"OptionalBinder [jvm]@Injectfun OptionalBinder(appName: String, deployment: Deployment)"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-optional-binder/#properties","title":"Properties","text":"Name Summary appName [jvm]val appName: String serviceMetadata [jvm]@Inject(optional = true)var serviceMetadata: ServiceMetadataAction.ServiceMetadata"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-optional-binder/-optional-binder/","title":"OptionalBinder - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction/OptionalBinder/OptionalBinder</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-optional-binder/-optional-binder/#optionalbinder","title":"OptionalBinder","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun OptionalBinder(appName: String, deployment: Deployment)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-optional-binder/app-name/","title":"appName - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction/OptionalBinder/appName</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-optional-binder/app-name/#appname","title":"appName","text":"<p>[jvm]\\ val appName: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-optional-binder/service-metadata/","title":"serviceMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction/OptionalBinder/serviceMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-optional-binder/service-metadata/#servicemetadata","title":"serviceMetadata","text":"<p>[jvm]\\</p> <p>@Inject(optional = true)</p> <p>var serviceMetadata: ServiceMetadataAction.ServiceMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-response/","title":"Response - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction/Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-response/#response","title":"Response","text":"<p>[jvm]\\ data class Response(serviceMetadata: ServiceMetadataAction.ServiceMetadata)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-response/#properties","title":"Properties","text":"Name Summary serviceMetadata [jvm]val serviceMetadata: ServiceMetadataAction.ServiceMetadata"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-response/-response/","title":"Response - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction/Response/Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-response/-response/#response","title":"Response","text":"<p>[jvm]\\ fun Response(serviceMetadata: ServiceMetadataAction.ServiceMetadata)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-response/service-metadata/","title":"serviceMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction/Response/serviceMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-response/service-metadata/#servicemetadata","title":"serviceMetadata","text":"<p>[jvm]\\ val serviceMetadata: ServiceMetadataAction.ServiceMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-service-metadata/","title":"ServiceMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction/ServiceMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-service-metadata/#servicemetadata","title":"ServiceMetadata","text":"<p>[jvm]\\ data class ServiceMetadata(app_name: String, environment: String)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-service-metadata/#properties","title":"Properties","text":"Name Summary app_name [jvm]val app_name: String environment [jvm]val environment: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-service-metadata/-service-metadata/","title":"ServiceMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction/ServiceMetadata/ServiceMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-service-metadata/-service-metadata/#servicemetadata","title":"ServiceMetadata","text":"<p>[jvm]\\ fun ServiceMetadata(app_name: String, environment: String)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-service-metadata/app_name/","title":"app_name - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction/ServiceMetadata/app_name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-service-metadata/app_name/#app_name","title":"app_name","text":"<p>[jvm]\\ val app_name: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-service-metadata/environment/","title":"environment - Misk","text":"<p>//misk-admin/misk.web.metadata/ServiceMetadataAction/ServiceMetadata/environment</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata/-service-metadata-action/-service-metadata/environment/#environment","title":"environment","text":"<p>[jvm]\\ val environment: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/","title":"Package misk.web.metadata.config - Misk","text":"<p>//misk-admin/misk.web.metadata.config</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/#package-miskwebmetadataconfig","title":"Package misk.web.metadata.config","text":""},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/#types","title":"Types","text":"Name Summary ConfigMetadataAction [jvm]@Singletonclass ConfigMetadataAction@Injectconstructor(appName: String, deployment: Deployment, config: Config, jvmMetadataAction: JvmMetadataAction, mode: ConfigMetadataAction.ConfigTabMode) : WebAction"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/","title":"ConfigMetadataAction - Misk","text":"<p>//misk-admin/misk.web.metadata.config/ConfigMetadataAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/#configmetadataaction","title":"ConfigMetadataAction","text":"<p>[jvm]\\ @Singleton</p> <p>class ConfigMetadataAction@Injectconstructor(appName: String, deployment: Deployment, config: Config, jvmMetadataAction: JvmMetadataAction, mode: ConfigMetadataAction.ConfigTabMode) : WebAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/#types","title":"Types","text":"Name Summary ConfigTabMode [jvm]enum ConfigTabMode : Enum&lt;ConfigMetadataAction.ConfigTabMode&gt; Response [jvm]data class Response(resources: Map&lt;String, String?&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/#functions","title":"Functions","text":"Name Summary getAll [jvm]fun getAll(): ConfigMetadataAction.Response"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-metadata-action/","title":"ConfigMetadataAction - Misk","text":"<p>//misk-admin/misk.web.metadata.config/ConfigMetadataAction/ConfigMetadataAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-metadata-action/#configmetadataaction","title":"ConfigMetadataAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ConfigMetadataAction(appName: String, deployment: Deployment, config: Config, jvmMetadataAction: JvmMetadataAction, mode: ConfigMetadataAction.ConfigTabMode)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/get-all/","title":"getAll - Misk","text":"<p>//misk-admin/misk.web.metadata.config/ConfigMetadataAction/getAll</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/get-all/#getall","title":"getAll","text":"<p>[jvm]\\ fun getAll(): ConfigMetadataAction.Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-tab-mode/","title":"ConfigTabMode - Misk","text":"<p>//misk-admin/misk.web.metadata.config/ConfigMetadataAction/ConfigTabMode</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-tab-mode/#configtabmode","title":"ConfigTabMode","text":"<p>[jvm]\\ enum ConfigTabMode : Enum&lt;ConfigMetadataAction.ConfigTabMode&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-tab-mode/#entries","title":"Entries","text":"UNSAFE_LEAK_MISK_SECRETS [jvm]UNSAFE_LEAK_MISK_SECRETS()Shows all possible resources, YAML files are not redacted SHOW_REDACTED_EFFECTIVE_CONFIG [jvm]SHOW_REDACTED_EFFECTIVE_CONFIG()Show redacted effective config loaded into application, risk of leak if sensitive non-Secret fields don\u2019t have @misk.config.Redact annotation manually added. SAFE [jvm]SAFE()Only show safe content which will not leak Misk secrets"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-tab-mode/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-tab-mode/-s-a-f-e/","title":"SAFE - Misk","text":"<p>//misk-admin/misk.web.metadata.config/ConfigMetadataAction/ConfigTabMode/SAFE</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-tab-mode/-s-a-f-e/#safe","title":"SAFE","text":"<p>[jvm]\\ SAFE()</p> <p>Only show safe content which will not leak Misk secrets</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-tab-mode/-s-a-f-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-tab-mode/-s-h-o-w_-r-e-d-a-c-t-e-d_-e-f-f-e-c-t-i-v-e_-c-o-n-f-i-g/","title":"SHOW_REDACTED_EFFECTIVE_CONFIG - Misk","text":"<p>//misk-admin/misk.web.metadata.config/ConfigMetadataAction/ConfigTabMode/SHOW_REDACTED_EFFECTIVE_CONFIG</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-tab-mode/-s-h-o-w_-r-e-d-a-c-t-e-d_-e-f-f-e-c-t-i-v-e_-c-o-n-f-i-g/#show_redacted_effective_config","title":"SHOW_REDACTED_EFFECTIVE_CONFIG","text":"<p>[jvm]\\ SHOW_REDACTED_EFFECTIVE_CONFIG()</p> <p>Show redacted effective config loaded into application, risk of leak if sensitive non-Secret fields don\u2019t have @misk.config.Redact annotation manually added.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-tab-mode/-s-h-o-w_-r-e-d-a-c-t-e-d_-e-f-f-e-c-t-i-v-e_-c-o-n-f-i-g/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-tab-mode/-u-n-s-a-f-e_-l-e-a-k_-m-i-s-k_-s-e-c-r-e-t-s/","title":"UNSAFE_LEAK_MISK_SECRETS - Misk","text":"<p>//misk-admin/misk.web.metadata.config/ConfigMetadataAction/ConfigTabMode/UNSAFE_LEAK_MISK_SECRETS</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-tab-mode/-u-n-s-a-f-e_-l-e-a-k_-m-i-s-k_-s-e-c-r-e-t-s/#unsafe_leak_misk_secrets","title":"UNSAFE_LEAK_MISK_SECRETS","text":"<p>[jvm]\\ UNSAFE_LEAK_MISK_SECRETS()</p> <p>Shows all possible resources, YAML files are not redacted</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-config-tab-mode/-u-n-s-a-f-e_-l-e-a-k_-m-i-s-k_-s-e-c-r-e-t-s/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-response/","title":"Response - Misk","text":"<p>//misk-admin/misk.web.metadata.config/ConfigMetadataAction/Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-response/#response","title":"Response","text":"<p>[jvm]\\ data class Response(resources: Map&lt;String, String?&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-response/#properties","title":"Properties","text":"Name Summary resources [jvm]val resources: Map&lt;String, String?&gt;"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-response/-response/","title":"Response - Misk","text":"<p>//misk-admin/misk.web.metadata.config/ConfigMetadataAction/Response/Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-response/-response/#response","title":"Response","text":"<p>[jvm]\\ fun Response(resources: Map&lt;String, String?&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-response/resources/","title":"resources - Misk","text":"<p>//misk-admin/misk.web.metadata.config/ConfigMetadataAction/Response/resources</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.config/-config-metadata-action/-response/resources/#resources","title":"resources","text":"<p>[jvm]\\ val resources: Map&lt;String, String?&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/","title":"Package misk.web.metadata.database - Misk","text":"<p>//misk-admin/misk.web.metadata.database</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/#package-miskwebmetadatadatabase","title":"Package misk.web.metadata.database","text":""},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/#types","title":"Types","text":"Name Summary DatabaseQueryFunctionMetadata [jvm]interface DatabaseQueryFunctionMetadata DatabaseQueryMetadata [jvm]data class DatabaseQueryMetadata@JvmOverloadsconstructor(queryWebActionPath: String, allowedCapabilities: Set&lt;String&gt;, allowedServices: Set&lt;String&gt;, accessAnnotation: String?, table: String, entityClass: String, entitySchema: Map&lt;String, String&gt;, queryClass: String, constraints: List&lt;DatabaseQueryMetadata.ConstraintMetadata&gt;, orders: List&lt;DatabaseQueryMetadata.OrderMetadata&gt;, selects: List&lt;DatabaseQueryMetadata.SelectMetadata&gt;, types: Map&lt;String, MiskWebFormBuilder.Type&gt;)Metadata front end model for Database Query Misk-Web Tab DatabaseQueryMetadataAction [jvm]@Singletonclass DatabaseQueryMetadataAction@Injectconstructor(metadata: List&lt;DatabaseQueryMetadata&gt;) : WebActionDisplay available queries and their types NoAdminDashboardDatabaseAccess [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])annotation class NoAdminDashboardDatabaseAccess"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-function-metadata/","title":"DatabaseQueryFunctionMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryFunctionMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-function-metadata/#databasequeryfunctionmetadata","title":"DatabaseQueryFunctionMetadata","text":"<p>[jvm]\\ interface DatabaseQueryFunctionMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-function-metadata/#properties","title":"Properties","text":"Name Summary name [jvm]abstract val name: StringFunction simple name parametersTypeName [jvm]abstract val parametersTypeName: StringString Type that identifies the parameters signature for the function"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-function-metadata/#inheritors","title":"Inheritors","text":"Name ConstraintMetadata OrderMetadata SelectMetadata"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-function-metadata/name/","title":"name - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryFunctionMetadata/name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-function-metadata/name/#name","title":"name","text":"<p>[jvm]\\ abstract val name: String</p> <p>Function simple name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-function-metadata/parameters-type-name/","title":"parametersTypeName - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryFunctionMetadata/parametersTypeName</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-function-metadata/parameters-type-name/#parameterstypename","title":"parametersTypeName","text":"<p>[jvm]\\ abstract val parametersTypeName: String</p> <p>String Type that identifies the parameters signature for the function</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/","title":"DatabaseQueryMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/#databasequerymetadata","title":"DatabaseQueryMetadata","text":"<p>[jvm]\\ data class DatabaseQueryMetadata@JvmOverloadsconstructor(queryWebActionPath: String, allowedCapabilities: Set&lt;String&gt;, allowedServices: Set&lt;String&gt;, accessAnnotation: String?, table: String, entityClass: String, entitySchema: Map&lt;String, String&gt;, queryClass: String, constraints: List&lt;DatabaseQueryMetadata.ConstraintMetadata&gt;, orders: List&lt;DatabaseQueryMetadata.OrderMetadata&gt;, selects: List&lt;DatabaseQueryMetadata.SelectMetadata&gt;, types: Map&lt;String, MiskWebFormBuilder.Type&gt;)</p> <p>Metadata front end model for Database Query Misk-Web Tab</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/#constructors","title":"Constructors","text":"DatabaseQueryMetadata [jvm]fun DatabaseQueryMetadata(queryWebActionPath: String, allowedCapabilities: Set&lt;String&gt; = setOf(), allowedServices: Set&lt;String&gt; = setOf(), accessAnnotation: KClass&lt;out Annotation&gt;? = null, table: String, entityClass: KClass&lt;&gt;, entitySchema: Map&lt;String, KType&gt;, queryClass: KClass&lt;&gt;?, constraints: List&lt;DatabaseQueryMetadata.ConstraintMetadata&gt;, orders: List&lt;DatabaseQueryMetadata.OrderMetadata&gt;, selects: List&lt;DatabaseQueryMetadata.SelectMetadata&gt;, types: Map&lt;String, MiskWebFormBuilder.Type&gt;) DatabaseQueryMetadata [jvm]@JvmOverloadsfun DatabaseQueryMetadata(queryWebActionPath: String, allowedCapabilities: Set&lt;String&gt; = setOf(), allowedServices: Set&lt;String&gt; = setOf(), accessAnnotation: String?, table: String, entityClass: String, entitySchema: Map&lt;String, String&gt;, queryClass: String, constraints: List&lt;DatabaseQueryMetadata.ConstraintMetadata&gt;, orders: List&lt;DatabaseQueryMetadata.OrderMetadata&gt;, selects: List&lt;DatabaseQueryMetadata.SelectMetadata&gt;, types: Map&lt;String, MiskWebFormBuilder.Type&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion ConstraintMetadata [jvm]data class ConstraintMetadata(name: String, parametersTypeName: String, path: String, operator: String) : DatabaseQueryFunctionMetadata OrderMetadata [jvm]data class OrderMetadata(name: String, parametersTypeName: String, path: String, ascending: Boolean) : DatabaseQueryFunctionMetadata SelectMetadata [jvm]data class SelectMetadata(name: String, parametersTypeName: String, paths: List&lt;String&gt;) : DatabaseQueryFunctionMetadata"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/#properties","title":"Properties","text":"Name Summary accessAnnotation [jvm]val accessAnnotation: String? allowedCapabilities [jvm]val allowedCapabilities: Set&lt;String&gt; allowedServices [jvm]val allowedServices: Set&lt;String&gt; constraints [jvm]val constraints: List&lt;DatabaseQueryMetadata.ConstraintMetadata&gt; entityClass [jvm]val entityClass: StringDbTable entity class entitySchema [jvm]val entitySchema: Map&lt;String, String&gt;Describe the DbEntity with types orders [jvm]val orders: List&lt;DatabaseQueryMetadata.OrderMetadata&gt; queryClass [jvm]val queryClass: StringQuery class queryWebActionPath [jvm]val queryWebActionPath: String selects [jvm]val selects: List&lt;DatabaseQueryMetadata.SelectMetadata&gt; table [jvm]val table: StringSQL table name types [jvm]val types: Map&lt;String, MiskWebFormBuilder.Type&gt;Contains all Types across all queries"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-database-query-metadata/","title":"DatabaseQueryMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/DatabaseQueryMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-database-query-metadata/#databasequerymetadata","title":"DatabaseQueryMetadata","text":"<p>[jvm]\\ fun DatabaseQueryMetadata(queryWebActionPath: String, allowedCapabilities: Set&lt;String&gt; = setOf(), allowedServices: Set&lt;String&gt; = setOf(), accessAnnotation: KClass&lt;out Annotation&gt;? = null, table: String, entityClass: KClass&lt;&gt;, entitySchema: Map&lt;String, KType&gt;, queryClass: KClass&lt;&gt;?, constraints: List&lt;DatabaseQueryMetadata.ConstraintMetadata&gt;, orders: List&lt;DatabaseQueryMetadata.OrderMetadata&gt;, selects: List&lt;DatabaseQueryMetadata.SelectMetadata&gt;, types: Map&lt;String, MiskWebFormBuilder.Type&gt;)</p> <p>@JvmOverloads</p> <p>fun DatabaseQueryMetadata(queryWebActionPath: String, allowedCapabilities: Set&lt;String&gt; = setOf(), allowedServices: Set&lt;String&gt; = setOf(), accessAnnotation: String?, table: String, entityClass: String, entitySchema: Map&lt;String, String&gt;, queryClass: String, constraints: List&lt;DatabaseQueryMetadata.ConstraintMetadata&gt;, orders: List&lt;DatabaseQueryMetadata.OrderMetadata&gt;, selects: List&lt;DatabaseQueryMetadata.SelectMetadata&gt;, types: Map&lt;String, MiskWebFormBuilder.Type&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/access-annotation/","title":"accessAnnotation - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/accessAnnotation</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/access-annotation/#accessannotation","title":"accessAnnotation","text":"<p>[jvm]\\ val accessAnnotation: String?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/allowed-capabilities/","title":"allowedCapabilities - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/allowedCapabilities</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/allowed-capabilities/#allowedcapabilities","title":"allowedCapabilities","text":"<p>[jvm]\\ val allowedCapabilities: Set&lt;String&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/allowed-services/","title":"allowedServices - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/allowedServices</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/allowed-services/#allowedservices","title":"allowedServices","text":"<p>[jvm]\\ val allowedServices: Set&lt;String&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/constraints/","title":"constraints - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/constraints</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/constraints/#constraints","title":"constraints","text":"<p>[jvm]\\ val constraints: List&lt;DatabaseQueryMetadata.ConstraintMetadata&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/entity-class/","title":"entityClass - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/entityClass</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/entity-class/#entityclass","title":"entityClass","text":"<p>[jvm]\\ val entityClass: String</p> <p>DbTable entity class</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/entity-schema/","title":"entitySchema - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/entitySchema</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/entity-schema/#entityschema","title":"entitySchema","text":"<p>[jvm]\\ val entitySchema: Map&lt;String, String&gt;</p> <p>Describe the DbEntity with types</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/orders/","title":"orders - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/orders</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/orders/#orders","title":"orders","text":"<p>[jvm]\\ val orders: List&lt;DatabaseQueryMetadata.OrderMetadata&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/query-class/","title":"queryClass - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/queryClass</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/query-class/#queryclass","title":"queryClass","text":"<p>[jvm]\\ val queryClass: String</p> <p>Query class</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/query-web-action-path/","title":"queryWebActionPath - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/queryWebActionPath</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/query-web-action-path/#querywebactionpath","title":"queryWebActionPath","text":"<p>[jvm]\\ val queryWebActionPath: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/selects/","title":"selects - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/selects</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/selects/#selects","title":"selects","text":"<p>[jvm]\\ val selects: List&lt;DatabaseQueryMetadata.SelectMetadata&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/table/","title":"table - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/table</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/table/#table","title":"table","text":"<p>[jvm]\\ val table: String</p> <p>SQL table name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/types/","title":"types - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/types</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/types/#types","title":"types","text":"<p>[jvm]\\ val types: Map&lt;String, MiskWebFormBuilder.Type&gt;</p> <p>Contains all Types across all queries</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-companion/","title":"Companion - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-companion/#properties","title":"Properties","text":"Name Summary DYNAMIC_QUERY_KCLASS_SUFFIX [jvm]const val DYNAMIC_QUERY_KCLASS_SUFFIX: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-companion/-d-y-n-a-m-i-c_-q-u-e-r-y_-k-c-l-a-s-s_-s-u-f-f-i-x/","title":"DYNAMIC_QUERY_KCLASS_SUFFIX - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/Companion/DYNAMIC_QUERY_KCLASS_SUFFIX</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-companion/-d-y-n-a-m-i-c_-q-u-e-r-y_-k-c-l-a-s-s_-s-u-f-f-i-x/#dynamic_query_kclass_suffix","title":"DYNAMIC_QUERY_KCLASS_SUFFIX","text":"<p>[jvm]\\ const val DYNAMIC_QUERY_KCLASS_SUFFIX: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/","title":"ConstraintMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/ConstraintMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/#constraintmetadata","title":"ConstraintMetadata","text":"<p>[jvm]\\ data class ConstraintMetadata(name: String, parametersTypeName: String, path: String, operator: String) : DatabaseQueryFunctionMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/#properties","title":"Properties","text":"Name Summary name [jvm]open override val name: StringFunction simple name operator [jvm]val operator: String parametersTypeName [jvm]open override val parametersTypeName: StringString Type that identifies the parameters signature for the function path [jvm]val path: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/-constraint-metadata/","title":"ConstraintMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/ConstraintMetadata/ConstraintMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/-constraint-metadata/#constraintmetadata","title":"ConstraintMetadata","text":"<p>[jvm]\\ fun ConstraintMetadata(name: String, parametersTypeName: String, path: String, operator: String)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/name/","title":"name - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/ConstraintMetadata/name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/name/#name","title":"name","text":"<p>[jvm]\\ open override val name: String</p> <p>Function simple name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/operator/","title":"operator - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/ConstraintMetadata/operator</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/operator/#operator","title":"operator","text":"<p>[jvm]\\ val operator: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/parameters-type-name/","title":"parametersTypeName - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/ConstraintMetadata/parametersTypeName</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/parameters-type-name/#parameterstypename","title":"parametersTypeName","text":"<p>[jvm]\\ open override val parametersTypeName: String</p> <p>String Type that identifies the parameters signature for the function</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/path/","title":"path - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/ConstraintMetadata/path</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/path/#path","title":"path","text":"<p>[jvm]\\ val path: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-order-metadata/","title":"OrderMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/OrderMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-order-metadata/#ordermetadata","title":"OrderMetadata","text":"<p>[jvm]\\ data class OrderMetadata(name: String, parametersTypeName: String, path: String, ascending: Boolean) : DatabaseQueryFunctionMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-order-metadata/#properties","title":"Properties","text":"Name Summary ascending [jvm]val ascending: Boolean name [jvm]open override val name: StringFunction simple name parametersTypeName [jvm]open override val parametersTypeName: StringString Type that identifies the parameters signature for the function path [jvm]val path: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-order-metadata/-order-metadata/","title":"OrderMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/OrderMetadata/OrderMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-order-metadata/-order-metadata/#ordermetadata","title":"OrderMetadata","text":"<p>[jvm]\\ fun OrderMetadata(name: String, parametersTypeName: String, path: String, ascending: Boolean)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-order-metadata/ascending/","title":"ascending - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/OrderMetadata/ascending</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-order-metadata/ascending/#ascending","title":"ascending","text":"<p>[jvm]\\ val ascending: Boolean</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-order-metadata/name/","title":"name - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/OrderMetadata/name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-order-metadata/name/#name","title":"name","text":"<p>[jvm]\\ open override val name: String</p> <p>Function simple name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-order-metadata/parameters-type-name/","title":"parametersTypeName - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/OrderMetadata/parametersTypeName</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-order-metadata/parameters-type-name/#parameterstypename","title":"parametersTypeName","text":"<p>[jvm]\\ open override val parametersTypeName: String</p> <p>String Type that identifies the parameters signature for the function</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-order-metadata/path/","title":"path - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/OrderMetadata/path</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-order-metadata/path/#path","title":"path","text":"<p>[jvm]\\ val path: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-select-metadata/","title":"SelectMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/SelectMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-select-metadata/#selectmetadata","title":"SelectMetadata","text":"<p>[jvm]\\ data class SelectMetadata(name: String, parametersTypeName: String, paths: List&lt;String&gt;) : DatabaseQueryFunctionMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-select-metadata/#properties","title":"Properties","text":"Name Summary name [jvm]open override val name: StringFunction simple name parametersTypeName [jvm]open override val parametersTypeName: StringString Type that identifies the parameters signature for the function paths [jvm]val paths: List&lt;String&gt;"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-select-metadata/-select-metadata/","title":"SelectMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/SelectMetadata/SelectMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-select-metadata/-select-metadata/#selectmetadata","title":"SelectMetadata","text":"<p>[jvm]\\ fun SelectMetadata(name: String, parametersTypeName: String, paths: List&lt;String&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-select-metadata/name/","title":"name - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/SelectMetadata/name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-select-metadata/name/#name","title":"name","text":"<p>[jvm]\\ open override val name: String</p> <p>Function simple name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-select-metadata/parameters-type-name/","title":"parametersTypeName - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/SelectMetadata/parametersTypeName</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-select-metadata/parameters-type-name/#parameterstypename","title":"parametersTypeName","text":"<p>[jvm]\\ open override val parametersTypeName: String</p> <p>String Type that identifies the parameters signature for the function</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-select-metadata/paths/","title":"paths - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadata/SelectMetadata/paths</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata/-select-metadata/paths/#paths","title":"paths","text":"<p>[jvm]\\ val paths: List&lt;String&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/","title":"DatabaseQueryMetadataAction - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadataAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/#databasequerymetadataaction","title":"DatabaseQueryMetadataAction","text":"<p>[jvm]\\ @Singleton</p> <p>class DatabaseQueryMetadataAction@Injectconstructor(metadata: List&lt;DatabaseQueryMetadata&gt;) : WebAction</p> <p>Display available queries and their types</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/#constructors","title":"Constructors","text":"DatabaseQueryMetadataAction [jvm]@Injectfun DatabaseQueryMetadataAction(metadata: List&lt;DatabaseQueryMetadata&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/#types","title":"Types","text":"Name Summary Response [jvm]data class Response(databaseQueryMetadata: List&lt;DatabaseQueryMetadata&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/#functions","title":"Functions","text":"Name Summary getAll [jvm]fun getAll(): DatabaseQueryMetadataAction.Response"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/#properties","title":"Properties","text":"Name Summary metadata [jvm]val metadata: List&lt;DatabaseQueryMetadata&gt;"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/-database-query-metadata-action/","title":"DatabaseQueryMetadataAction - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadataAction/DatabaseQueryMetadataAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/-database-query-metadata-action/#databasequerymetadataaction","title":"DatabaseQueryMetadataAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun DatabaseQueryMetadataAction(metadata: List&lt;DatabaseQueryMetadata&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/get-all/","title":"getAll - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadataAction/getAll</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/get-all/#getall","title":"getAll","text":"<p>[jvm]\\ fun getAll(): DatabaseQueryMetadataAction.Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/metadata/","title":"metadata - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadataAction/metadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/metadata/#metadata","title":"metadata","text":"<p>[jvm]\\ val metadata: List&lt;DatabaseQueryMetadata&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/-response/","title":"Response - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadataAction/Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/-response/#response","title":"Response","text":"<p>[jvm]\\ data class Response(databaseQueryMetadata: List&lt;DatabaseQueryMetadata&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/-response/#properties","title":"Properties","text":"Name Summary databaseQueryMetadata [jvm]val databaseQueryMetadata: List&lt;DatabaseQueryMetadata&gt;"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/-response/-response/","title":"Response - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadataAction/Response/Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/-response/-response/#response","title":"Response","text":"<p>[jvm]\\ fun Response(databaseQueryMetadata: List&lt;DatabaseQueryMetadata&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/-response/database-query-metadata/","title":"databaseQueryMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata.database/DatabaseQueryMetadataAction/Response/databaseQueryMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-database-query-metadata-action/-response/database-query-metadata/#databasequerymetadata","title":"databaseQueryMetadata","text":"<p>[jvm]\\ val databaseQueryMetadata: List&lt;DatabaseQueryMetadata&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-no-admin-dashboard-database-access/","title":"NoAdminDashboardDatabaseAccess - Misk","text":"<p>//misk-admin/misk.web.metadata.database/NoAdminDashboardDatabaseAccess</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-no-admin-dashboard-database-access/#noadmindashboarddatabaseaccess","title":"NoAdminDashboardDatabaseAccess","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>annotation class NoAdminDashboardDatabaseAccess</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-no-admin-dashboard-database-access/-no-admin-dashboard-database-access/","title":"NoAdminDashboardDatabaseAccess - Misk","text":"<p>//misk-admin/misk.web.metadata.database/NoAdminDashboardDatabaseAccess/NoAdminDashboardDatabaseAccess</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.database/-no-admin-dashboard-database-access/-no-admin-dashboard-database-access/#noadmindashboarddatabaseaccess","title":"NoAdminDashboardDatabaseAccess","text":"<p>[jvm]\\ fun NoAdminDashboardDatabaseAccess()</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/","title":"Package misk.web.metadata.jvm - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/#package-miskwebmetadatajvm","title":"Package misk.web.metadata.jvm","text":""},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/#types","title":"Types","text":"Name Summary JvmMetadataAction [jvm]@Singletonclass JvmMetadataAction@Injectconstructor(runtimeMxBean: RuntimeMXBean, moshi: Moshi) : WebActionConveys information about the current JVM JvmMetadataModule [jvm]class JvmMetadataModule : KAbstractModule"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/","title":"JvmMetadataAction - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/#jvmmetadataaction","title":"JvmMetadataAction","text":"<p>[jvm]\\ @Singleton</p> <p>class JvmMetadataAction@Injectconstructor(runtimeMxBean: RuntimeMXBean, moshi: Moshi) : WebAction</p> <p>Conveys information about the current JVM</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/#constructors","title":"Constructors","text":"JvmMetadataAction [jvm]@Injectfun JvmMetadataAction(runtimeMxBean: RuntimeMXBean, moshi: Moshi)"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/#types","title":"Types","text":"Name Summary JvmRuntimeResponse [jvm]data class JvmRuntimeResponse(pid: Long?, name: String?, vm_name: String?, vm_vendor: String?, vm_version: String?, spec_name: String?, spec_vendor: String?, spec_version: String?, management_spec_version: String?, class_path: String?, library_path: String?, is_boot_class_path_supported: Boolean?, boot_class_path: String?, input_arguments: List&lt;String&gt;?, uptime_millis: Long?, start_time_millis: Long?, system_properties: Map&lt;String, String&gt;?)A data class for serializing information from java.lang.management.RuntimeMxBean"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/#functions","title":"Functions","text":"Name Summary getRuntime [jvm]fun getRuntime(): String"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-metadata-action/","title":"JvmMetadataAction - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmMetadataAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-metadata-action/#jvmmetadataaction","title":"JvmMetadataAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun JvmMetadataAction(runtimeMxBean: RuntimeMXBean, moshi: Moshi)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/get-runtime/","title":"getRuntime - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/getRuntime</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/get-runtime/#getruntime","title":"getRuntime","text":"<p>[jvm]\\ fun getRuntime(): String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/","title":"JvmRuntimeResponse - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/#jvmruntimeresponse","title":"JvmRuntimeResponse","text":"<p>[jvm]\\ data class JvmRuntimeResponse(pid: Long?, name: String?, vm_name: String?, vm_vendor: String?, vm_version: String?, spec_name: String?, spec_vendor: String?, spec_version: String?, management_spec_version: String?, class_path: String?, library_path: String?, is_boot_class_path_supported: Boolean?, boot_class_path: String?, input_arguments: List&lt;String&gt;?, uptime_millis: Long?, start_time_millis: Long?, system_properties: Map&lt;String, String&gt;?)</p> <p>A data class for serializing information from java.lang.management.RuntimeMxBean</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/#constructors","title":"Constructors","text":"JvmRuntimeResponse [jvm]fun JvmRuntimeResponse(pid: Long?, name: String?, vm_name: String?, vm_vendor: String?, vm_version: String?, spec_name: String?, spec_vendor: String?, spec_version: String?, management_spec_version: String?, class_path: String?, library_path: String?, is_boot_class_path_supported: Boolean?, boot_class_path: String?, input_arguments: List&lt;String&gt;?, uptime_millis: Long?, start_time_millis: Long?, system_properties: Map&lt;String, String&gt;?)"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/#properties","title":"Properties","text":"Name Summary boot_class_path [jvm]val boot_class_path: String? class_path [jvm]val class_path: String? input_arguments [jvm]val input_arguments: List&lt;String&gt;? is_boot_class_path_supported [jvm]val is_boot_class_path_supported: Boolean? library_path [jvm]val library_path: String? management_spec_version [jvm]val management_spec_version: String? name [jvm]val name: String? pid [jvm]val pid: Long? spec_name [jvm]val spec_name: String? spec_vendor [jvm]val spec_vendor: String? spec_version [jvm]val spec_version: String? start_time_millis [jvm]val start_time_millis: Long? system_properties [jvm]val system_properties: Map&lt;String, String&gt;? uptime_millis [jvm]val uptime_millis: Long? vm_name [jvm]val vm_name: String? vm_vendor [jvm]val vm_vendor: String? vm_version [jvm]val vm_version: String?"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/-jvm-runtime-response/","title":"JvmRuntimeResponse - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/JvmRuntimeResponse</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/-jvm-runtime-response/#jvmruntimeresponse","title":"JvmRuntimeResponse","text":"<p>[jvm]\\ fun JvmRuntimeResponse(pid: Long?, name: String?, vm_name: String?, vm_vendor: String?, vm_version: String?, spec_name: String?, spec_vendor: String?, spec_version: String?, management_spec_version: String?, class_path: String?, library_path: String?, is_boot_class_path_supported: Boolean?, boot_class_path: String?, input_arguments: List&lt;String&gt;?, uptime_millis: Long?, start_time_millis: Long?, system_properties: Map&lt;String, String&gt;?)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/boot_class_path/","title":"boot_class_path - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/boot_class_path</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/boot_class_path/#boot_class_path","title":"boot_class_path","text":"<p>[jvm]\\ val boot_class_path: String?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/class_path/","title":"class_path - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/class_path</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/class_path/#class_path","title":"class_path","text":"<p>[jvm]\\ val class_path: String?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/input_arguments/","title":"input_arguments - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/input_arguments</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/input_arguments/#input_arguments","title":"input_arguments","text":"<p>[jvm]\\ val input_arguments: List&lt;String&gt;?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/is_boot_class_path_supported/","title":"is_boot_class_path_supported - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/is_boot_class_path_supported</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/is_boot_class_path_supported/#is_boot_class_path_supported","title":"is_boot_class_path_supported","text":"<p>[jvm]\\ val is_boot_class_path_supported: Boolean?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/library_path/","title":"library_path - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/library_path</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/library_path/#library_path","title":"library_path","text":"<p>[jvm]\\ val library_path: String?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/management_spec_version/","title":"management_spec_version - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/management_spec_version</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/management_spec_version/#management_spec_version","title":"management_spec_version","text":"<p>[jvm]\\ val management_spec_version: String?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/name/","title":"name - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/name/#name","title":"name","text":"<p>[jvm]\\ val name: String?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/pid/","title":"pid - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/pid</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/pid/#pid","title":"pid","text":"<p>[jvm]\\ val pid: Long?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/spec_name/","title":"spec_name - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/spec_name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/spec_name/#spec_name","title":"spec_name","text":"<p>[jvm]\\ val spec_name: String?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/spec_vendor/","title":"spec_vendor - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/spec_vendor</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/spec_vendor/#spec_vendor","title":"spec_vendor","text":"<p>[jvm]\\ val spec_vendor: String?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/spec_version/","title":"spec_version - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/spec_version</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/spec_version/#spec_version","title":"spec_version","text":"<p>[jvm]\\ val spec_version: String?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/start_time_millis/","title":"start_time_millis - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/start_time_millis</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/start_time_millis/#start_time_millis","title":"start_time_millis","text":"<p>[jvm]\\ val start_time_millis: Long?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/system_properties/","title":"system_properties - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/system_properties</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/system_properties/#system_properties","title":"system_properties","text":"<p>[jvm]\\ val system_properties: Map&lt;String, String&gt;?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/uptime_millis/","title":"uptime_millis - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/uptime_millis</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/uptime_millis/#uptime_millis","title":"uptime_millis","text":"<p>[jvm]\\ val uptime_millis: Long?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/vm_name/","title":"vm_name - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/vm_name</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/vm_name/#vm_name","title":"vm_name","text":"<p>[jvm]\\ val vm_name: String?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/vm_vendor/","title":"vm_vendor - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/vm_vendor</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/vm_vendor/#vm_vendor","title":"vm_vendor","text":"<p>[jvm]\\ val vm_vendor: String?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/vm_version/","title":"vm_version - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/vm_version</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/vm_version/#vm_version","title":"vm_version","text":"<p>[jvm]\\ val vm_version: String?</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/-companion/","title":"Companion - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/-companion/#functions","title":"Functions","text":"Name Summary create [jvm]fun create(runtimeMxBean: RuntimeMXBean): JvmMetadataAction.JvmRuntimeResponse"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/-companion/create/","title":"create - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataAction/JvmRuntimeResponse/Companion/create</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-action/-jvm-runtime-response/-companion/create/#create","title":"create","text":"<p>[jvm]\\ fun create(runtimeMxBean: RuntimeMXBean): JvmMetadataAction.JvmRuntimeResponse</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-module/","title":"JvmMetadataModule - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-module/#jvmmetadatamodule","title":"JvmMetadataModule","text":"<p>[jvm]\\ class JvmMetadataModule : KAbstractModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-module/-jvm-metadata-module/","title":"JvmMetadataModule - Misk","text":"<p>//misk-admin/misk.web.metadata.jvm/JvmMetadataModule/JvmMetadataModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.jvm/-jvm-metadata-module/-jvm-metadata-module/#jvmmetadatamodule","title":"JvmMetadataModule","text":"<p>[jvm]\\ fun JvmMetadataModule()</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/","title":"Package misk.web.metadata.webaction - Misk","text":"<p>//misk-admin/misk.web.metadata.webaction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/#package-miskwebmetadatawebaction","title":"Package misk.web.metadata.webaction","text":""},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/#types","title":"Types","text":"Name Summary WebActionMetadataAction [jvm]@Singletonclass WebActionMetadataAction@Injectconstructor(webActionMetadataList: WebActionMetadataList) : WebAction"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/","title":"WebActionMetadataAction - Misk","text":"<p>//misk-admin/misk.web.metadata.webaction/WebActionMetadataAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/#webactionmetadataaction","title":"WebActionMetadataAction","text":"<p>[jvm]\\ @Singleton</p> <p>class WebActionMetadataAction@Injectconstructor(webActionMetadataList: WebActionMetadataList) : WebAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/#types","title":"Types","text":"Name Summary Response [jvm]data class Response(webActionMetadata: List&lt;WebActionMetadata&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/#functions","title":"Functions","text":"Name Summary getAll [jvm]fun getAll(): WebActionMetadataAction.Response"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/#properties","title":"Properties","text":"Name Summary webActionMetadataList [jvm]val webActionMetadataList: WebActionMetadataList"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/-web-action-metadata-action/","title":"WebActionMetadataAction - Misk","text":"<p>//misk-admin/misk.web.metadata.webaction/WebActionMetadataAction/WebActionMetadataAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/-web-action-metadata-action/#webactionmetadataaction","title":"WebActionMetadataAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun WebActionMetadataAction(webActionMetadataList: WebActionMetadataList)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/get-all/","title":"getAll - Misk","text":"<p>//misk-admin/misk.web.metadata.webaction/WebActionMetadataAction/getAll</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/get-all/#getall","title":"getAll","text":"<p>[jvm]\\ fun getAll(): WebActionMetadataAction.Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/web-action-metadata-list/","title":"webActionMetadataList - Misk","text":"<p>//misk-admin/misk.web.metadata.webaction/WebActionMetadataAction/webActionMetadataList</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/web-action-metadata-list/#webactionmetadatalist","title":"webActionMetadataList","text":"<p>[jvm]\\ val webActionMetadataList: WebActionMetadataList</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/-response/","title":"Response - Misk","text":"<p>//misk-admin/misk.web.metadata.webaction/WebActionMetadataAction/Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/-response/#response","title":"Response","text":"<p>[jvm]\\ data class Response(webActionMetadata: List&lt;WebActionMetadata&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/-response/#properties","title":"Properties","text":"Name Summary webActionMetadata [jvm]val webActionMetadata: List&lt;WebActionMetadata&gt;"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/-response/-response/","title":"Response - Misk","text":"<p>//misk-admin/misk.web.metadata.webaction/WebActionMetadataAction/Response/Response</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/-response/-response/#response","title":"Response","text":"<p>[jvm]\\ fun Response(webActionMetadata: List&lt;WebActionMetadata&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/-response/web-action-metadata/","title":"webActionMetadata - Misk","text":"<p>//misk-admin/misk.web.metadata.webaction/WebActionMetadataAction/Response/webActionMetadata</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.metadata.webaction/-web-action-metadata-action/-response/web-action-metadata/#webactionmetadata","title":"webActionMetadata","text":"<p>[jvm]\\ val webActionMetadata: List&lt;WebActionMetadata&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/","title":"Package misk.web.v2 - Misk","text":"<p>//misk-admin/misk.web.v2</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/#package-miskwebv2","title":"Package misk.web.v2","text":""},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/#types","title":"Types","text":"Name Summary BaseDashboardV2Module [jvm]class BaseDashboardV2Module : KAbstractModule DashboardHotwireTabAction [jvm]@Singletonclass DashboardHotwireTabAction@Injectconstructor(clientHttpCall: ActionScoped&lt;HttpCall&gt;, dashboardPageLayout: DashboardPageLayout, entries: List&lt;DashboardTabLoaderEntry&gt;) : WebActionBuilds dashboard UI and loads Hotwire tab. DashboardIFrameTabAction [jvm]@Singletonclass DashboardIFrameTabAction@Injectconstructor(clientHttpCall: ActionScoped&lt;HttpCall&gt;, dashboardPageLayout: DashboardPageLayout, entries: List&lt;DashboardTabLoaderEntry&gt;) : WebActionBuilds dashboard UI and loads IFrame tab. DashboardIndexAccessBlock [jvm]data class DashboardIndexAccessBlock@JvmOverloadsconstructor(annotation: KClass&lt;out Annotation&gt;, block: TagConsumer&lt;*&gt;.(appName: String, caller: MiskCaller?, authenticatedTabs: List&lt;DashboardTab&gt;, dashboardTabs: List&lt;DashboardTab&gt;) -&gt; Unit)Bind to set custom access notice for the dashboard home page. DashboardIndexAction [jvm]@Singletonclass DashboardIndexAction@Injectconstructor(callerProvider: ActionScoped&lt;MiskCaller?&gt;, dashboardPageLayout: DashboardPageLayout, allTabs: List&lt;DashboardTab&gt;, allDashboardIndexAccessBlocks: List&lt;DashboardIndexAccessBlock&gt;, allDashboardIndexBlocks: List&lt;DashboardIndexBlock&gt;) : WebActionBuilds dashboard UI for index homepage. DashboardIndexBlock [jvm]data class DashboardIndexBlock@JvmOverloadsconstructor(annotation: KClass&lt;out Annotation&gt;, block: TagConsumer&lt;*&gt;.() -&gt; Unit)Bind to set custom content for the dashboard home page. DashboardPageLayout [jvm]class DashboardPageLayout@Injectconstructor(allHomeUrls: List&lt;DashboardHomeUrl&gt;, appName: String, allNavbarItem: List&lt;DashboardNavbarItem&gt;, allTabs: List&lt;DashboardTab&gt;, deployment: Deployment, clientHttpCall: ActionScoped&lt;HttpCall&gt;)Builds dashboard UI for index homepage."},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/#functions","title":"Functions","text":"Name Summary DashboardIndexAccessBlock [jvm]inline fun &lt;T : Annotation&gt; DashboardIndexAccessBlock(noinline block: TagConsumer&lt;*&gt;.(appName: String, caller: MiskCaller?, authenticatedTabs: List&lt;DashboardTab&gt;, dashboardTabs: List&lt;DashboardTab&gt;) -&gt; Unit): DashboardIndexAccessBlock DashboardIndexBlock [jvm]inline fun &lt;T : Annotation&gt; DashboardIndexBlock(noinline block: TagConsumer&lt;*&gt;.() -&gt; Unit): DashboardIndexBlock HtmlLayout [jvm]fun TagConsumer&lt;&gt;.HtmlLayout(appRoot: String, title: String, playCdn: Boolean, headBlock: TagConsumer&lt;&gt;.() -&gt; Unit = {}, bodyBlock: TagConsumer&lt;*&gt;.() -&gt; Unit)Default setup of HTML for a page including head and install of CSS/JS dependencies."},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-access-block/","title":"DashboardIndexAccessBlock - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexAccessBlock</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-access-block/#dashboardindexaccessblock","title":"DashboardIndexAccessBlock","text":"<p>[jvm]\\ inline fun &lt;T : Annotation&gt; DashboardIndexAccessBlock(noinline block: TagConsumer&lt;*&gt;.(appName: String, caller: MiskCaller?, authenticatedTabs: List&lt;DashboardTab&gt;, dashboardTabs: List&lt;DashboardTab&gt;) -&gt; Unit): DashboardIndexAccessBlock</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-block/","title":"DashboardIndexBlock - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexBlock</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-block/#dashboardindexblock","title":"DashboardIndexBlock","text":"<p>[jvm]\\ inline fun &lt;T : Annotation&gt; DashboardIndexBlock(noinline block: TagConsumer&lt;*&gt;.() -&gt; Unit): DashboardIndexBlock</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-html-layout/","title":"HtmlLayout - Misk","text":"<p>//misk-admin/misk.web.v2/HtmlLayout</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-html-layout/#htmllayout","title":"HtmlLayout","text":"<p>[jvm]\\ fun TagConsumer&lt;&gt;.HtmlLayout(appRoot: String, title: String, playCdn: Boolean, headBlock: TagConsumer&lt;&gt;.() -&gt; Unit = {}, bodyBlock: TagConsumer&lt;*&gt;.() -&gt; Unit)</p> <p>Default setup of HTML for a page including head and install of CSS/JS dependencies.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-base-dashboard-v2-module/","title":"BaseDashboardV2Module - Misk","text":"<p>//misk-admin/misk.web.v2/BaseDashboardV2Module</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-base-dashboard-v2-module/#basedashboardv2module","title":"BaseDashboardV2Module","text":"<p>[jvm]\\ class BaseDashboardV2Module : KAbstractModule</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-base-dashboard-v2-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-base-dashboard-v2-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-base-dashboard-v2-module/-base-dashboard-v2-module/","title":"BaseDashboardV2Module - Misk","text":"<p>//misk-admin/misk.web.v2/BaseDashboardV2Module/BaseDashboardV2Module</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-base-dashboard-v2-module/-base-dashboard-v2-module/#basedashboardv2module","title":"BaseDashboardV2Module","text":"<p>[jvm]\\ fun BaseDashboardV2Module()</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-hotwire-tab-action/","title":"DashboardHotwireTabAction - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardHotwireTabAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-hotwire-tab-action/#dashboardhotwiretabaction","title":"DashboardHotwireTabAction","text":"<p>[jvm]\\ @Singleton</p> <p>class DashboardHotwireTabAction@Injectconstructor(clientHttpCall: ActionScoped&lt;HttpCall&gt;, dashboardPageLayout: DashboardPageLayout, entries: List&lt;DashboardTabLoaderEntry&gt;) : WebAction</p> <p>Builds dashboard UI and loads Hotwire tab.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-hotwire-tab-action/#constructors","title":"Constructors","text":"DashboardHotwireTabAction [jvm]@Injectfun DashboardHotwireTabAction(clientHttpCall: ActionScoped&lt;HttpCall&gt;, dashboardPageLayout: DashboardPageLayout, entries: List&lt;DashboardTabLoaderEntry&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-hotwire-tab-action/#functions","title":"Functions","text":"Name Summary get [jvm]fun get(suffix: String?): String"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-hotwire-tab-action/-dashboard-hotwire-tab-action/","title":"DashboardHotwireTabAction - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardHotwireTabAction/DashboardHotwireTabAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-hotwire-tab-action/-dashboard-hotwire-tab-action/#dashboardhotwiretabaction","title":"DashboardHotwireTabAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun DashboardHotwireTabAction(clientHttpCall: ActionScoped&lt;HttpCall&gt;, dashboardPageLayout: DashboardPageLayout, entries: List&lt;DashboardTabLoaderEntry&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-hotwire-tab-action/get/","title":"get - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardHotwireTabAction/get</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-hotwire-tab-action/get/#get","title":"get","text":"<p>[jvm]\\ fun get(suffix: String?): String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-i-frame-tab-action/","title":"DashboardIFrameTabAction - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIFrameTabAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-i-frame-tab-action/#dashboardiframetabaction","title":"DashboardIFrameTabAction","text":"<p>[jvm]\\ @Singleton</p> <p>class DashboardIFrameTabAction@Injectconstructor(clientHttpCall: ActionScoped&lt;HttpCall&gt;, dashboardPageLayout: DashboardPageLayout, entries: List&lt;DashboardTabLoaderEntry&gt;) : WebAction</p> <p>Builds dashboard UI and loads IFrame tab.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-i-frame-tab-action/#constructors","title":"Constructors","text":"DashboardIFrameTabAction [jvm]@Injectfun DashboardIFrameTabAction(clientHttpCall: ActionScoped&lt;HttpCall&gt;, dashboardPageLayout: DashboardPageLayout, entries: List&lt;DashboardTabLoaderEntry&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-i-frame-tab-action/#functions","title":"Functions","text":"Name Summary get [jvm]fun get(suffix: String?): String"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-i-frame-tab-action/-dashboard-i-frame-tab-action/","title":"DashboardIFrameTabAction - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIFrameTabAction/DashboardIFrameTabAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-i-frame-tab-action/-dashboard-i-frame-tab-action/#dashboardiframetabaction","title":"DashboardIFrameTabAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun DashboardIFrameTabAction(clientHttpCall: ActionScoped&lt;HttpCall&gt;, dashboardPageLayout: DashboardPageLayout, entries: List&lt;DashboardTabLoaderEntry&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-i-frame-tab-action/get/","title":"get - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIFrameTabAction/get</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-i-frame-tab-action/get/#get","title":"get","text":"<p>[jvm]\\ fun get(suffix: String?): String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-access-block/","title":"DashboardIndexAccessBlock - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexAccessBlock</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-access-block/#dashboardindexaccessblock","title":"DashboardIndexAccessBlock","text":"<p>[jvm]\\ data class DashboardIndexAccessBlock@JvmOverloadsconstructor(annotation: KClass&lt;out Annotation&gt;, block: TagConsumer&lt;*&gt;.(appName: String, caller: MiskCaller?, authenticatedTabs: List&lt;DashboardTab&gt;, dashboardTabs: List&lt;DashboardTab&gt;) -&gt; Unit)</p> <p>Bind to set custom access notice for the dashboard home page.</p> <p>multibind&lt;DashboardIndexAccessBlock&gt;().toInstance(\\   DashboardIndexAccessBlock(\\     p { +\u201d\u201c\u201dYou have access to ${authenticatedTabs.size} / ${dashboardTabs.size} tabs.\u201d\u201c\u201d }\\     p { +\u201d\u201c\u201dAdd the necessary permissions to your user in the company registry.\u201d\u201c\u201d }\\   )\\ )</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-access-block/#constructors","title":"Constructors","text":"DashboardIndexAccessBlock [jvm]@JvmOverloadsfun DashboardIndexAccessBlock(annotation: KClass&lt;out Annotation&gt;, block: TagConsumer&lt;*&gt;.(appName: String, caller: MiskCaller?, authenticatedTabs: List&lt;DashboardTab&gt;, dashboardTabs: List&lt;DashboardTab&gt;) -&gt; Unit)"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-access-block/#properties","title":"Properties","text":"Name Summary annotation [jvm]val annotation: KClass&lt;out Annotation&gt; block [jvm]val block: TagConsumer&lt;*&gt;.(appName: String, caller: MiskCaller?, authenticatedTabs: List&lt;DashboardTab&gt;, dashboardTabs: List&lt;DashboardTab&gt;) -&gt; Unit"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-access-block/-dashboard-index-access-block/","title":"DashboardIndexAccessBlock - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexAccessBlock/DashboardIndexAccessBlock</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-access-block/-dashboard-index-access-block/#dashboardindexaccessblock","title":"DashboardIndexAccessBlock","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun DashboardIndexAccessBlock(annotation: KClass&lt;out Annotation&gt;, block: TagConsumer&lt;*&gt;.(appName: String, caller: MiskCaller?, authenticatedTabs: List&lt;DashboardTab&gt;, dashboardTabs: List&lt;DashboardTab&gt;) -&gt; Unit)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-access-block/annotation/","title":"annotation - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexAccessBlock/annotation</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-access-block/annotation/#annotation","title":"annotation","text":"<p>[jvm]\\ val annotation: KClass&lt;out Annotation&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-access-block/block/","title":"block - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexAccessBlock/block</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-access-block/block/#block","title":"block","text":"<p>[jvm]\\ val block: TagConsumer&lt;*&gt;.(appName: String, caller: MiskCaller?, authenticatedTabs: List&lt;DashboardTab&gt;, dashboardTabs: List&lt;DashboardTab&gt;) -&gt; Unit</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/","title":"DashboardIndexAction - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/#dashboardindexaction","title":"DashboardIndexAction","text":"<p>[jvm]\\ @Singleton</p> <p>class DashboardIndexAction@Injectconstructor(callerProvider: ActionScoped&lt;MiskCaller?&gt;, dashboardPageLayout: DashboardPageLayout, allTabs: List&lt;DashboardTab&gt;, allDashboardIndexAccessBlocks: List&lt;DashboardIndexAccessBlock&gt;, allDashboardIndexBlocks: List&lt;DashboardIndexBlock&gt;) : WebAction</p> <p>Builds dashboard UI for index homepage.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/#constructors","title":"Constructors","text":"DashboardIndexAction [jvm]@Injectfun DashboardIndexAction(callerProvider: ActionScoped&lt;MiskCaller?&gt;, dashboardPageLayout: DashboardPageLayout, allTabs: List&lt;DashboardTab&gt;, allDashboardIndexAccessBlocks: List&lt;DashboardIndexAccessBlock&gt;, allDashboardIndexBlocks: List&lt;DashboardIndexBlock&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/#functions","title":"Functions","text":"Name Summary get [jvm]fun get(): String"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/-dashboard-index-action/","title":"DashboardIndexAction - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexAction/DashboardIndexAction</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/-dashboard-index-action/#dashboardindexaction","title":"DashboardIndexAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun DashboardIndexAction(callerProvider: ActionScoped&lt;MiskCaller?&gt;, dashboardPageLayout: DashboardPageLayout, allTabs: List&lt;DashboardTab&gt;, allDashboardIndexAccessBlocks: List&lt;DashboardIndexAccessBlock&gt;, allDashboardIndexBlocks: List&lt;DashboardIndexBlock&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/get/","title":"get - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexAction/get</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/get/#get","title":"get","text":"<p>[jvm]\\ fun get(): String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/-companion/","title":"Companion - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexAction/Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/-companion/#functions","title":"Functions","text":"Name Summary titlecase [jvm]fun KClass&lt;out Annotation&gt;.titlecase(): String"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/-companion/titlecase/","title":"titlecase - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexAction/Companion/titlecase</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-action/-companion/titlecase/#titlecase","title":"titlecase","text":"<p>[jvm]\\ fun KClass&lt;out Annotation&gt;.titlecase(): String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-block/","title":"DashboardIndexBlock - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexBlock</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-block/#dashboardindexblock","title":"DashboardIndexBlock","text":"<p>[jvm]\\ data class DashboardIndexBlock@JvmOverloadsconstructor(annotation: KClass&lt;out Annotation&gt;, block: TagConsumer&lt;*&gt;.() -&gt; Unit)</p> <p>Bind to set custom content for the dashboard home page.</p> <p>multibind&lt;DashboardIndexBlock&gt;().toInstance(\\   DashboardIndexBlock(\\     p { +\u201d\u201c\u201dThis content will show up on the dashboard homepage.\u201d\u201c\u201d }\\   )\\ )</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-block/#constructors","title":"Constructors","text":"DashboardIndexBlock [jvm]@JvmOverloadsfun DashboardIndexBlock(annotation: KClass&lt;out Annotation&gt;, block: TagConsumer&lt;*&gt;.() -&gt; Unit)"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-block/#properties","title":"Properties","text":"Name Summary annotation [jvm]val annotation: KClass&lt;out Annotation&gt; block [jvm]val block: TagConsumer&lt;*&gt;.() -&gt; Unit"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-block/-dashboard-index-block/","title":"DashboardIndexBlock - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexBlock/DashboardIndexBlock</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-block/-dashboard-index-block/#dashboardindexblock","title":"DashboardIndexBlock","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun DashboardIndexBlock(annotation: KClass&lt;out Annotation&gt;, block: TagConsumer&lt;*&gt;.() -&gt; Unit)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-block/annotation/","title":"annotation - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexBlock/annotation</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-block/annotation/#annotation","title":"annotation","text":"<p>[jvm]\\ val annotation: KClass&lt;out Annotation&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-block/block/","title":"block - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardIndexBlock/block</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-index-block/block/#block","title":"block","text":"<p>[jvm]\\ val block: TagConsumer&lt;*&gt;.() -&gt; Unit</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/","title":"DashboardPageLayout - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardPageLayout</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/#dashboardpagelayout","title":"DashboardPageLayout","text":"<p>[jvm]\\ class DashboardPageLayout@Injectconstructor(allHomeUrls: List&lt;DashboardHomeUrl&gt;, appName: String, allNavbarItem: List&lt;DashboardNavbarItem&gt;, allTabs: List&lt;DashboardTab&gt;, deployment: Deployment, clientHttpCall: ActionScoped&lt;HttpCall&gt;)</p> <p>Builds dashboard UI for index homepage.</p> <p>Must be called within a Web Action.</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/#constructors","title":"Constructors","text":"DashboardPageLayout [jvm]@Injectfun DashboardPageLayout(allHomeUrls: List&lt;DashboardHomeUrl&gt;, appName: String, allNavbarItem: List&lt;DashboardNavbarItem&gt;, allTabs: List&lt;DashboardTab&gt;, deployment: Deployment, clientHttpCall: ActionScoped&lt;HttpCall&gt;)"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/#functions","title":"Functions","text":"Name Summary build [jvm]@JvmOverloadsfun build(tabBlock: TagConsumer&lt;*&gt;.(appName: String, dashboardHomeUrl: DashboardHomeUrl?, dashboardTab: DashboardTab?) -&gt; Unit = { _, _, _ -&gt; Unit }): String headBlock [jvm]fun headBlock(block: TagConsumer&lt;*&gt;.() -&gt; Unit): &lt;ERROR CLASS&gt; newBuilder [jvm]fun newBuilder(): DashboardPageLayout path [jvm]fun path(path: String): &lt;ERROR CLASS&gt; title [jvm]fun title(title: (appName: String, dashboardHomeUrl: DashboardHomeUrl?, dashboardTab: DashboardTab?) -&gt; String): &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/-dashboard-page-layout/","title":"DashboardPageLayout - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardPageLayout/DashboardPageLayout</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/-dashboard-page-layout/#dashboardpagelayout","title":"DashboardPageLayout","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun DashboardPageLayout(allHomeUrls: List&lt;DashboardHomeUrl&gt;, appName: String, allNavbarItem: List&lt;DashboardNavbarItem&gt;, allTabs: List&lt;DashboardTab&gt;, deployment: Deployment, clientHttpCall: ActionScoped&lt;HttpCall&gt;)</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/build/","title":"build - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardPageLayout/build</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/build/#build","title":"build","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun build(tabBlock: TagConsumer&lt;*&gt;.(appName: String, dashboardHomeUrl: DashboardHomeUrl?, dashboardTab: DashboardTab?) -&gt; Unit = { _, _, _ -&gt; Unit }): String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/head-block/","title":"headBlock - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardPageLayout/headBlock</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/head-block/#headblock","title":"headBlock","text":"<p>[jvm]\\ fun headBlock(block: TagConsumer&lt;*&gt;.() -&gt; Unit): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/new-builder/","title":"newBuilder - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardPageLayout/newBuilder</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/new-builder/#newbuilder","title":"newBuilder","text":"<p>[jvm]\\ fun newBuilder(): DashboardPageLayout</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/path/","title":"path - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardPageLayout/path</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/path/#path","title":"path","text":"<p>[jvm]\\ fun path(path: String): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/title/","title":"title - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardPageLayout/title</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/title/#title","title":"title","text":"<p>[jvm]\\ fun title(title: (appName: String, dashboardHomeUrl: DashboardHomeUrl?, dashboardTab: DashboardTab?) -&gt; String): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/-companion/","title":"Companion - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardPageLayout/Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/-companion/#properties","title":"Properties","text":"Name Summary ADMIN_DASHBOARD_PATH [jvm]const val ADMIN_DASHBOARD_PATH: String BETA_PREFIX [jvm]const val BETA_PREFIX: String"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/-companion/-a-d-m-i-n_-d-a-s-h-b-o-a-r-d_-p-a-t-h/","title":"ADMIN_DASHBOARD_PATH - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardPageLayout/Companion/ADMIN_DASHBOARD_PATH</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/-companion/-a-d-m-i-n_-d-a-s-h-b-o-a-r-d_-p-a-t-h/#admin_dashboard_path","title":"ADMIN_DASHBOARD_PATH","text":"<p>[jvm]\\ const val ADMIN_DASHBOARD_PATH: String</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/-companion/-b-e-t-a_-p-r-e-f-i-x/","title":"BETA_PREFIX - Misk","text":"<p>//misk-admin/misk.web.v2/DashboardPageLayout/Companion/BETA_PREFIX</p>"},{"location":"0.x/misk-admin/misk-admin/misk.web.v2/-dashboard-page-layout/-companion/-b-e-t-a_-p-r-e-f-i-x/#beta_prefix","title":"BETA_PREFIX","text":"<p>[jvm]\\ const val BETA_PREFIX: String</p>"},{"location":"0.x/misk-aws/","title":"misk-aws - Misk","text":"<p>//misk-aws</p>"},{"location":"0.x/misk-aws/#misk-aws","title":"misk-aws","text":""},{"location":"0.x/misk-aws/#packages","title":"Packages","text":"Name misk.cloud.aws misk.jobqueue.sqs misk.s3"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/","title":"Package misk.cloud.aws - Misk","text":"<p>//misk-aws/misk.cloud.aws</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/#package-miskcloudaws","title":"Package misk.cloud.aws","text":""},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/#types","title":"Types","text":"Name Summary AwsAccountId [jvm]data class AwsAccountId(value: String)AwsAccountId is the id of the account in which the service is running AwsEnvironmentModule [jvm]class AwsEnvironmentModule : KAbstractModuleAwsEnvironmentModule pulls region and account information from installed env vars AwsRegion [jvm]data class AwsRegion(name: String)AwsRegion is the region in which the service is running FakeAwsEnvironmentModule [jvm]class FakeAwsEnvironmentModule : KAbstractModuleFakeAwsEnvironmentModule pulls region and account information from an in memory map."},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/#functions","title":"Functions","text":"Name Summary toMiskAwsAccountId [jvm]fun AwsAccountId.toMiskAwsAccountId(): AwsAccountId toMiskAwsRegion [jvm]fun AwsRegion.toMiskAwsRegion(): AwsRegion"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/to-misk-aws-account-id/","title":"toMiskAwsAccountId - Misk","text":"<p>//misk-aws/misk.cloud.aws/toMiskAwsAccountId</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/to-misk-aws-account-id/#tomiskawsaccountid","title":"toMiskAwsAccountId","text":"<p>[jvm]\\ fun AwsAccountId.toMiskAwsAccountId(): AwsAccountId</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/to-misk-aws-region/","title":"toMiskAwsRegion - Misk","text":"<p>//misk-aws/misk.cloud.aws/toMiskAwsRegion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/to-misk-aws-region/#tomiskawsregion","title":"toMiskAwsRegion","text":"<p>[jvm]\\ fun AwsRegion.toMiskAwsRegion(): AwsRegion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-account-id/","title":"AwsAccountId - Misk","text":"<p>//misk-aws/misk.cloud.aws/AwsAccountId</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-account-id/#awsaccountid","title":"AwsAccountId","text":"<p>[jvm]\\ data class AwsAccountId(value: String)</p> <p>AwsAccountId is the id of the account in which the service is running</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-account-id/#constructors","title":"Constructors","text":"AwsAccountId [jvm]fun AwsAccountId(value: String)"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-account-id/#properties","title":"Properties","text":"Name Summary value [jvm]val value: String"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-account-id/-aws-account-id/","title":"AwsAccountId - Misk","text":"<p>//misk-aws/misk.cloud.aws/AwsAccountId/AwsAccountId</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-account-id/-aws-account-id/#awsaccountid","title":"AwsAccountId","text":"<p>[jvm]\\ fun AwsAccountId(value: String)</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-account-id/value/","title":"value - Misk","text":"<p>//misk-aws/misk.cloud.aws/AwsAccountId/value</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-account-id/value/#value","title":"value","text":"<p>[jvm]\\ val value: String</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-environment-module/","title":"AwsEnvironmentModule - Misk","text":"<p>//misk-aws/misk.cloud.aws/AwsEnvironmentModule</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-environment-module/#awsenvironmentmodule","title":"AwsEnvironmentModule","text":"<p>[jvm]\\ class AwsEnvironmentModule : KAbstractModule</p> <p>AwsEnvironmentModule pulls region and account information from installed env vars</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-environment-module/#constructors","title":"Constructors","text":"AwsEnvironmentModule [jvm]fun AwsEnvironmentModule()"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-environment-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) awsAccountId [jvm]@Providesfun awsAccountId(envVarLoader: EnvVarLoader): AwsAccountId awsRegion [jvm]@Providesfun awsRegion(envVarLoader: EnvVarLoader): AwsRegion bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]open fun configure()override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-environment-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-environment-module/-aws-environment-module/","title":"AwsEnvironmentModule - Misk","text":"<p>//misk-aws/misk.cloud.aws/AwsEnvironmentModule/AwsEnvironmentModule</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-environment-module/-aws-environment-module/#awsenvironmentmodule","title":"AwsEnvironmentModule","text":"<p>[jvm]\\ fun AwsEnvironmentModule()</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-environment-module/aws-account-id/","title":"awsAccountId - Misk","text":"<p>//misk-aws/misk.cloud.aws/AwsEnvironmentModule/awsAccountId</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-environment-module/aws-account-id/#awsaccountid","title":"awsAccountId","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>fun awsAccountId(envVarLoader: EnvVarLoader): AwsAccountId</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-environment-module/aws-region/","title":"awsRegion - Misk","text":"<p>//misk-aws/misk.cloud.aws/AwsEnvironmentModule/awsRegion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-environment-module/aws-region/#awsregion","title":"awsRegion","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>fun awsRegion(envVarLoader: EnvVarLoader): AwsRegion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-region/","title":"AwsRegion - Misk","text":"<p>//misk-aws/misk.cloud.aws/AwsRegion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-region/#awsregion","title":"AwsRegion","text":"<p>[jvm]\\ data class AwsRegion(name: String)</p> <p>AwsRegion is the region in which the service is running</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-region/#constructors","title":"Constructors","text":"AwsRegion [jvm]fun AwsRegion(name: String)"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-region/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-region/-aws-region/","title":"AwsRegion - Misk","text":"<p>//misk-aws/misk.cloud.aws/AwsRegion/AwsRegion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-region/-aws-region/#awsregion","title":"AwsRegion","text":"<p>[jvm]\\ fun AwsRegion(name: String)</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-region/name/","title":"name - Misk","text":"<p>//misk-aws/misk.cloud.aws/AwsRegion/name</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-aws-region/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-fake-aws-environment-module/","title":"FakeAwsEnvironmentModule - Misk","text":"<p>//misk-aws/misk.cloud.aws/FakeAwsEnvironmentModule</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-fake-aws-environment-module/#fakeawsenvironmentmodule","title":"FakeAwsEnvironmentModule","text":"<p>[jvm]\\ class FakeAwsEnvironmentModule : KAbstractModule</p> <p>FakeAwsEnvironmentModule pulls region and account information from an in memory map.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-fake-aws-environment-module/#constructors","title":"Constructors","text":"FakeAwsEnvironmentModule [jvm]fun FakeAwsEnvironmentModule()"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-fake-aws-environment-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-fake-aws-environment-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-fake-aws-environment-module/-fake-aws-environment-module/","title":"FakeAwsEnvironmentModule - Misk","text":"<p>//misk-aws/misk.cloud.aws/FakeAwsEnvironmentModule/FakeAwsEnvironmentModule</p>"},{"location":"0.x/misk-aws/misk-aws/misk.cloud.aws/-fake-aws-environment-module/-fake-aws-environment-module/#fakeawsenvironmentmodule","title":"FakeAwsEnvironmentModule","text":"<p>[jvm]\\ fun FakeAwsEnvironmentModule()</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/","title":"Package misk.jobqueue.sqs - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/#package-miskjobqueuesqs","title":"Package misk.jobqueue.sqs","text":""},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/#types","title":"Types","text":"Name Summary AwsSqsJobHandlerModule [jvm]class AwsSqsJobHandlerModule&lt;T : JobHandler&gt; : KAbstractModuleInstall this module to register a handler for an SQS queue, and if specified, registers its corresponding retry queue. AwsSqsJobQueueConfig [jvm]class AwsSqsJobQueueConfig@JvmOverloadsconstructor(external_queues: Map&lt;String, AwsSqsQueueConfig&gt;, message_batch_size: Int, task_queue: RepeatedTaskQueueConfig?, queue_attribute_importer_frequency_ms: Long, sqs_sending_socket_timeout_ms: Int, sqs_sending_connect_timeout_ms: Int, sqs_sending_request_timeout_ms: Int, aws_sqs_job_receiver_policy: AwsSqsJobReceiverPolicy, safe_shutdown: Boolean) : ConfigAwsSqsJobQueueConfig is the configuration for job queueing backed by Amazon\u2019s Simple Queuing Service AwsSqsJobQueueModule [jvm]open class AwsSqsJobQueueModule(config: AwsSqsJobQueueConfig) : KAbstractModuleAwsSqsJobQueueModule installs job queue support provided by SQS. AwsSqsJobReceiverPolicy [jvm]enum AwsSqsJobReceiverPolicy : Enum&lt;AwsSqsJobReceiverPolicy&gt; AWS SQS consumers are spun by each of a service\u2019s pods. Each pod is responsible for running some number on consumers and making sure they are within the parameters of the feature-flags used. AwsSqsQueueConfig [jvm]data class AwsSqsQueueConfig@JvmOverloadsconstructor(region: String?, account_id: String?, sqs_queue_name: String?)An AwsSqsQueueConfig tells misk about a queue, potentially in another region and/or another account. If the queue is in another account, it will require an IAM policy enabling cross account access DeadLetterQueueProvider [jvm]interface DeadLetterQueueProviderInterface for a provider of dead-letter queue names. DefaultDeadLetterQueueProvider [jvm]@Singletonclass DefaultDeadLetterQueueProvider@Injectconstructor : DeadLetterQueueProviderDefault provider of dead-letter QueueName. Returns the name of the main queue suffixed with \u201c_dlq\u201d. FlaggedBufferedSqsClient [jvm]class FlaggedBufferedSqsClient(unbufferedSqs: AmazonSQS, bufferedSqs: AmazonSQS, appName: String, featureFlags: FeatureFlags) : AmazonSQSTemporary shim for buffered and unbuffered AmazonSQS implementations, for feature-flagged rollout of buffered SQS operations across cash cloud apps. SqsConsumerAllocator [jvm]@Singletonclass SqsConsumerAllocator@Injectconstructor(leaseManager: LeaseManager, featureFlags: FeatureFlags)Uses a LeaseManager and FeatureFlags to calculate the number of sqs consumers a pods should have. This computation is based off of the AwsSqsJobReceiverPolicy specification. StaticDeadLetterQueueProvider [jvm]class StaticDeadLetterQueueProvider(queue: String) : DeadLetterQueueProviderProvider of dead-letter QueueName that always returns the same value, no matter the supplied queue."},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/#functions","title":"Functions","text":"Name Summary withNoPrefetching [jvm]fun QueueBufferConfig.withNoPrefetching(): QueueBufferConfigModify a QueueBufferConfig to disable all receive pre-fetching settings."},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/#properties","title":"Properties","text":"Name Summary isRetryQueue [jvm]val QueueName.isRetryQueue: &lt;ERROR CLASS&gt; parentQueue [jvm]val QueueName.parentQueue: QueueName retryQueue [jvm]val QueueName.retryQueue: QueueName"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/is-retry-queue/","title":"isRetryQueue - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/isRetryQueue</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/is-retry-queue/#isretryqueue","title":"isRetryQueue","text":"<p>[jvm]\\ val QueueName.isRetryQueue: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/parent-queue/","title":"parentQueue - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/parentQueue</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/parent-queue/#parentqueue","title":"parentQueue","text":"<p>[jvm]\\ val QueueName.parentQueue: QueueName</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/retry-queue/","title":"retryQueue - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/retryQueue</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/retry-queue/#retryqueue","title":"retryQueue","text":"<p>[jvm]\\ val QueueName.retryQueue: QueueName</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/with-no-prefetching/","title":"withNoPrefetching - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/withNoPrefetching</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/with-no-prefetching/#withnoprefetching","title":"withNoPrefetching","text":"<p>[jvm]\\ fun QueueBufferConfig.withNoPrefetching(): QueueBufferConfig</p> <p>Modify a QueueBufferConfig to disable all receive pre-fetching settings.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/","title":"AwsSqsJobHandlerModule - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobHandlerModule</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/#awssqsjobhandlermodule","title":"AwsSqsJobHandlerModule","text":"<p>[jvm]\\ class AwsSqsJobHandlerModule&lt;T : JobHandler&gt; : KAbstractModule</p> <p>Install this module to register a handler for an SQS queue, and if specified, registers its corresponding retry queue.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/-companion/","title":"Companion - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobHandlerModule/Companion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/-companion/#functions","title":"Functions","text":"Name Summary create [jvm]@JvmOverloadsinline fun &lt;T : JobHandler&gt; create(queueName: QueueName, installRetryQueue: Boolean = true, dependsOn: List&lt;Key&lt;out Service&gt;&gt; = emptyList()): AwsSqsJobHandlerModule&lt;T&gt;@JvmStatic@JvmOverloadsfun &lt;T : JobHandler&gt; create(queueName: QueueName, handlerClass: Class&lt;T&gt;, installRetryQueue: Boolean = true, dependsOn: List&lt;Key&lt;out Service&gt;&gt; = emptyList()): AwsSqsJobHandlerModule&lt;T&gt;[jvm]@JvmOverloadsfun &lt;T : JobHandler&gt; create(queueName: QueueName, handlerClass: KClass&lt;T&gt;, installRetryQueue: Boolean = true, dependsOn: List&lt;Key&lt;out Service&gt;&gt; = emptyList()): AwsSqsJobHandlerModule&lt;T&gt;Returns a module that registers a handler for an SQS queue."},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/-companion/create/","title":"create - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobHandlerModule/Companion/create</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/-companion/create/#create","title":"create","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>inline fun &lt;T : JobHandler&gt; create(queueName: QueueName, installRetryQueue: Boolean = true, dependsOn: List&lt;Key&lt;out Service&gt;&gt; = emptyList()): AwsSqsJobHandlerModule&lt;T&gt;</p> <p>@JvmStatic</p> <p>@JvmOverloads</p> <p>fun &lt;T : JobHandler&gt; create(queueName: QueueName, handlerClass: Class&lt;T&gt;, installRetryQueue: Boolean = true, dependsOn: List&lt;Key&lt;out Service&gt;&gt; = emptyList()): AwsSqsJobHandlerModule&lt;T&gt;</p> <p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun &lt;T : JobHandler&gt; create(queueName: QueueName, handlerClass: KClass&lt;T&gt;, installRetryQueue: Boolean = true, dependsOn: List&lt;Key&lt;out Service&gt;&gt; = emptyList()): AwsSqsJobHandlerModule&lt;T&gt;</p> <p>Returns a module that registers a handler for an SQS queue.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/","title":"AwsSqsJobQueueConfig - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueConfig</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/#awssqsjobqueueconfig","title":"AwsSqsJobQueueConfig","text":"<p>[jvm]\\ class AwsSqsJobQueueConfig@JvmOverloadsconstructor(external_queues: Map&lt;String, AwsSqsQueueConfig&gt;, message_batch_size: Int, task_queue: RepeatedTaskQueueConfig?, queue_attribute_importer_frequency_ms: Long, sqs_sending_socket_timeout_ms: Int, sqs_sending_connect_timeout_ms: Int, sqs_sending_request_timeout_ms: Int, aws_sqs_job_receiver_policy: AwsSqsJobReceiverPolicy, safe_shutdown: Boolean) : Config</p> <p>AwsSqsJobQueueConfig is the configuration for job queueing backed by Amazon\u2019s Simple Queuing Service</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/#constructors","title":"Constructors","text":"AwsSqsJobQueueConfig [jvm]@JvmOverloadsfun AwsSqsJobQueueConfig(external_queues: Map&lt;String, AwsSqsQueueConfig&gt; = mapOf(), message_batch_size: Int = 10, task_queue: RepeatedTaskQueueConfig? = null, queue_attribute_importer_frequency_ms: Long = 1000, sqs_sending_socket_timeout_ms: Int = 5000, sqs_sending_connect_timeout_ms: Int = 1000, sqs_sending_request_timeout_ms: Int = 5000, aws_sqs_job_receiver_policy: AwsSqsJobReceiverPolicy = AwsSqsJobReceiverPolicy.ONE_FLAG_ONLY, safe_shutdown: Boolean = true)"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/#properties","title":"Properties","text":"Name Summary aws_sqs_job_receiver_policy [jvm]val aws_sqs_job_receiver_policy: AwsSqsJobReceiverPolicy external_queues [jvm]val external_queues: Map&lt;String, AwsSqsQueueConfig&gt;External queues is a set of externally owned SQS queues accessed by this service, mapping an internal queue name to the (account ID, region, name) of the queue in the external account queue_attribute_importer_frequency_ms [jvm]val queue_attribute_importer_frequency_ms: Long = 1000Frequency used to import Queue Attributes in milliseconds. safe_shutdown [jvm]val safe_shutdown: Boolean = trueTemporary flag to test new shutdown behavior. This flag will eventually be removed and incorporated as the default behavior of the library. sqs_sending_connect_timeout_ms [jvm]val sqs_sending_connect_timeout_ms: Int = 1000Connect timeout to reach SQS with for sending. sqs_sending_request_timeout_ms [jvm]val sqs_sending_request_timeout_ms: Int = 5000Request timeout to reach SQS with for sending, not including retries. We only apply this for sending because receiving uses long-polling, which explicitly leverages a longer request time. We use the default retry strategy with SQS, which retries 3 times. As a result, your app could potentially spend 3 x this timeout talking to SQS. sqs_sending_socket_timeout_ms [jvm]val sqs_sending_socket_timeout_ms: Int = 5000Socket timeout to reach SQS with for sending, not including retries. We only apply this for sending because receiving uses long-polling, which explicitly leverages a longer request time. We use the default retry strategy with SQS, which retries 3 times. As a result, your app could potentially spend 3 x this timeout talking to SQS. task_queue [jvm]val task_queue: RepeatedTaskQueueConfig? = nullTask queue configuration, which should have a num_parallel_tasks equal or greater than the number of consumed queues. If undefined, an unbounded number of parallel tasks will be used."},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/-aws-sqs-job-queue-config/","title":"AwsSqsJobQueueConfig - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueConfig/AwsSqsJobQueueConfig</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/-aws-sqs-job-queue-config/#awssqsjobqueueconfig","title":"AwsSqsJobQueueConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun AwsSqsJobQueueConfig(external_queues: Map&lt;String, AwsSqsQueueConfig&gt; = mapOf(), message_batch_size: Int = 10, task_queue: RepeatedTaskQueueConfig? = null, queue_attribute_importer_frequency_ms: Long = 1000, sqs_sending_socket_timeout_ms: Int = 5000, sqs_sending_connect_timeout_ms: Int = 1000, sqs_sending_request_timeout_ms: Int = 5000, aws_sqs_job_receiver_policy: AwsSqsJobReceiverPolicy = AwsSqsJobReceiverPolicy.ONE_FLAG_ONLY, safe_shutdown: Boolean = true)</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/aws_sqs_job_receiver_policy/","title":"aws_sqs_job_receiver_policy - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueConfig/aws_sqs_job_receiver_policy</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/aws_sqs_job_receiver_policy/#aws_sqs_job_receiver_policy","title":"aws_sqs_job_receiver_policy","text":"<p>[jvm]\\ val aws_sqs_job_receiver_policy: AwsSqsJobReceiverPolicy</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/external_queues/","title":"external_queues - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueConfig/external_queues</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/external_queues/#external_queues","title":"external_queues","text":"<p>[jvm]\\ val external_queues: Map&lt;String, AwsSqsQueueConfig&gt;</p> <p>External queues is a set of externally owned SQS queues accessed by this service, mapping an internal queue name to the (account ID, region, name) of the queue in the external account</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/queue_attribute_importer_frequency_ms/","title":"queue_attribute_importer_frequency_ms - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueConfig/queue_attribute_importer_frequency_ms</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/queue_attribute_importer_frequency_ms/#queue_attribute_importer_frequency_ms","title":"queue_attribute_importer_frequency_ms","text":"<p>[jvm]\\ val queue_attribute_importer_frequency_ms: Long = 1000</p> <p>Frequency used to import Queue Attributes in milliseconds.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/safe_shutdown/","title":"safe_shutdown - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueConfig/safe_shutdown</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/safe_shutdown/#safe_shutdown","title":"safe_shutdown","text":"<p>[jvm]\\ val safe_shutdown: Boolean = true</p> <p>Temporary flag to test new shutdown behavior. This flag will eventually be removed and incorporated as the default behavior of the library.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/sqs_sending_connect_timeout_ms/","title":"sqs_sending_connect_timeout_ms - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueConfig/sqs_sending_connect_timeout_ms</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/sqs_sending_connect_timeout_ms/#sqs_sending_connect_timeout_ms","title":"sqs_sending_connect_timeout_ms","text":"<p>[jvm]\\ val sqs_sending_connect_timeout_ms: Int = 1000</p> <p>Connect timeout to reach SQS with for sending.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/sqs_sending_request_timeout_ms/","title":"sqs_sending_request_timeout_ms - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueConfig/sqs_sending_request_timeout_ms</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/sqs_sending_request_timeout_ms/#sqs_sending_request_timeout_ms","title":"sqs_sending_request_timeout_ms","text":"<p>[jvm]\\ val sqs_sending_request_timeout_ms: Int = 5000</p> <p>Request timeout to reach SQS with for sending, not including retries. We only apply this for sending because receiving uses long-polling, which explicitly leverages a longer request time. We use the default retry strategy with SQS, which retries 3 times. As a result, your app could potentially spend 3 x this timeout talking to SQS.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/sqs_sending_socket_timeout_ms/","title":"sqs_sending_socket_timeout_ms - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueConfig/sqs_sending_socket_timeout_ms</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/sqs_sending_socket_timeout_ms/#sqs_sending_socket_timeout_ms","title":"sqs_sending_socket_timeout_ms","text":"<p>[jvm]\\ val sqs_sending_socket_timeout_ms: Int = 5000</p> <p>Socket timeout to reach SQS with for sending, not including retries. We only apply this for sending because receiving uses long-polling, which explicitly leverages a longer request time. We use the default retry strategy with SQS, which retries 3 times. As a result, your app could potentially spend 3 x this timeout talking to SQS.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/task_queue/","title":"task_queue - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueConfig/task_queue</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/task_queue/#task_queue","title":"task_queue","text":"<p>[jvm]\\ val task_queue: RepeatedTaskQueueConfig? = null</p> <p>Task queue configuration, which should have a num_parallel_tasks equal or greater than the number of consumed queues. If undefined, an unbounded number of parallel tasks will be used.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/","title":"AwsSqsJobQueueModule - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueModule</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/#awssqsjobqueuemodule","title":"AwsSqsJobQueueModule","text":"<p>[jvm]\\ open class AwsSqsJobQueueModule(config: AwsSqsJobQueueConfig) : KAbstractModule</p> <p>AwsSqsJobQueueModule installs job queue support provided by SQS.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/#constructors","title":"Constructors","text":"AwsSqsJobQueueModule [jvm]fun AwsSqsJobQueueModule(config: AwsSqsJobQueueConfig)"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) configureClient [jvm]open fun &lt;BuilderT : AwsClientBuilder&lt;BuilderT, ClientT&gt;, ClientT&gt; configureClient(builder: BuilderT) consumerRepeatedTaskQueue [jvm]@Provides@Singletonfun consumerRepeatedTaskQueue(queueFactory: RepeatedTaskQueueFactory, config: AwsSqsJobQueueConfig): RepeatedTaskQueue convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideSQSClient [jvm]@Provides@Singletonfun provideSQSClient(appName: String, region: AwsRegion, credentials: AWSCredentialsProvider, features: FeatureFlags): AmazonSQS provideSQSClientForReceiving [jvm]@Provides@Singletonfun provideSQSClientForReceiving(region: AwsRegion, credentials: AWSCredentialsProvider): AmazonSQS requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/-aws-sqs-job-queue-module/","title":"AwsSqsJobQueueModule - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueModule/AwsSqsJobQueueModule</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/-aws-sqs-job-queue-module/#awssqsjobqueuemodule","title":"AwsSqsJobQueueModule","text":"<p>[jvm]\\ fun AwsSqsJobQueueModule(config: AwsSqsJobQueueConfig)</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/configure-client/","title":"configureClient - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueModule/configureClient</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/configure-client/#configureclient","title":"configureClient","text":"<p>[jvm]\\ open fun &lt;BuilderT : AwsClientBuilder&lt;BuilderT, ClientT&gt;, ClientT&gt; configureClient(builder: BuilderT)</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/consumer-repeated-task-queue/","title":"consumerRepeatedTaskQueue - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueModule/consumerRepeatedTaskQueue</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/consumer-repeated-task-queue/#consumerrepeatedtaskqueue","title":"consumerRepeatedTaskQueue","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun consumerRepeatedTaskQueue(queueFactory: RepeatedTaskQueueFactory, config: AwsSqsJobQueueConfig): RepeatedTaskQueue</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/provide-s-q-s-client-for-receiving/","title":"provideSQSClientForReceiving - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueModule/provideSQSClientForReceiving</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/provide-s-q-s-client-for-receiving/#providesqsclientforreceiving","title":"provideSQSClientForReceiving","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideSQSClientForReceiving(region: AwsRegion, credentials: AWSCredentialsProvider): AmazonSQS</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/provide-s-q-s-client/","title":"provideSQSClient - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueModule/provideSQSClient</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/provide-s-q-s-client/#providesqsclient","title":"provideSQSClient","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideSQSClient(appName: String, region: AwsRegion, credentials: AWSCredentialsProvider, features: FeatureFlags): AmazonSQS</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/-companion/","title":"Companion - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobQueueModule/Companion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-receiver-policy/","title":"AwsSqsJobReceiverPolicy - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobReceiverPolicy</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-receiver-policy/#awssqsjobreceiverpolicy","title":"AwsSqsJobReceiverPolicy","text":"<p>[jvm]\\ enum AwsSqsJobReceiverPolicy : Enum&lt;AwsSqsJobReceiverPolicy&gt; </p> <p>AWS SQS consumers are spun by each of a service\u2019s pods. Each pod is responsible for running some number on consumers and making sure they are within the parameters of the feature-flags used.</p> <p>Which flags?</p> <ul> <li>CONSUMERS_PER_QUEUE: This flag specifies the total number of consumers across the entire     cluster.</li> <li>POD_CONSUMERS_PER_QUEUE: This flag specifies the number of consumers a single pod should     have.</li> </ul> <p>The AwsSqsJobReceiverPolicy gives two options for how consumers are created based on the flags.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-receiver-policy/#entries","title":"Entries","text":"BALANCED_MAX [jvm]BALANCED_MAX()This policy uses a combination of these two flags to avoid the worst of both as used in ONE_FLAG_ONLY above. ONE_FLAG_ONLY [jvm]ONE_FLAG_ONLY()This is the original policy. Naming is hard, but this policy will compute receivers as follows. First we choose one flag. If there is a configuration in POD_CONSUMERS_PER_QUEUE, choose that flag; otherwise choose the CONSUMERS_PER_QUEUE flag."},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-receiver-policy/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-receiver-policy/-b-a-l-a-n-c-e-d_-m-a-x/","title":"BALANCED_MAX - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobReceiverPolicy/BALANCED_MAX</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-receiver-policy/-b-a-l-a-n-c-e-d_-m-a-x/#balanced_max","title":"BALANCED_MAX","text":"<p>[jvm]\\ BALANCED_MAX()</p> <p>This policy uses a combination of these two flags to avoid the worst of both as used in ONE_FLAG_ONLY above.</p> <p>The POD_CONSUMERS_PER_QUEUE is subject to DOS a service when it scales up. This is especially problematic with auto scaling.</p> <p>The CONSUMERS_PER_QUEUE leads to really unbalanced nodes. Throughput suffers and it is really difficult to process high backlogs of messages since usually very few nodes have enough consumers.</p> <p>With this policy, as pods come online they take as many leases as are available OR until they hit the max configured per pod limit. In the interest of not overloading the flag names this max per pod is configured with POD_MAX_JOBQUEUE_CONSUMERS</p> <p>This means that the SQS consumers can scale up as the services scales up, but will hit a ceiling specified by the CONSUMERS_PER_QUEUE flag. It also means that no pod takes on all the work of processing the SQS jobs.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-receiver-policy/-b-a-l-a-n-c-e-d_-m-a-x/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-receiver-policy/-o-n-e_-f-l-a-g_-o-n-l-y/","title":"ONE_FLAG_ONLY - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsJobReceiverPolicy/ONE_FLAG_ONLY</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-receiver-policy/-o-n-e_-f-l-a-g_-o-n-l-y/#one_flag_only","title":"ONE_FLAG_ONLY","text":"<p>[jvm]\\ ONE_FLAG_ONLY()</p> <p>This is the original policy. Naming is hard, but this policy will compute receivers as follows. First we choose one flag. If there is a configuration in POD_CONSUMERS_PER_QUEUE, choose that flag; otherwise choose the CONSUMERS_PER_QUEUE flag.</p> <p>If the POD_CONSUMERS_PER_QUEUE is chosen, ALL pods will spin up the configured number of consumers. Imagine the flag is configured for 5 consumers, then 5 pods =&gt; 25 sqs consumers 10 pods =&gt; 50 sqs consumers 100 pods =&gt; 500 sqs consumers</p> <p>If the CONSUMERS_PER_QUEUE is chosen then we use leases. Consider that the flag is configured with m consumers (globally) so that m leases are available. As the pods come online, they will eagerly spin up consumers until leases run out\u2026 they race! Once m leases are handed out any pods that didn\u2019t spin up a receiver will not participate in SQS consumption and those that won the race might have up to m receivers.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-receiver-policy/-o-n-e_-f-l-a-g_-o-n-l-y/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/","title":"AwsSqsQueueConfig - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsQueueConfig</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/#awssqsqueueconfig","title":"AwsSqsQueueConfig","text":"<p>[jvm]\\ data class AwsSqsQueueConfig@JvmOverloadsconstructor(region: String?, account_id: String?, sqs_queue_name: String?)</p> <p>An AwsSqsQueueConfig tells misk about a queue, potentially in another region and/or another account. If the queue is in another account, it will require an IAM policy enabling cross account access</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/#constructors","title":"Constructors","text":"AwsSqsQueueConfig [jvm]@JvmOverloadsfun AwsSqsQueueConfig(region: String? = null, account_id: String? = null, sqs_queue_name: String? = null)"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/#properties","title":"Properties","text":"Name Summary account_id [jvm]val account_id: String? = null region [jvm]val region: String? = null sqs_queue_name [jvm]val sqs_queue_name: String? = null"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/-aws-sqs-queue-config/","title":"AwsSqsQueueConfig - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsQueueConfig/AwsSqsQueueConfig</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/-aws-sqs-queue-config/#awssqsqueueconfig","title":"AwsSqsQueueConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun AwsSqsQueueConfig(region: String? = null, account_id: String? = null, sqs_queue_name: String? = null)</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/account_id/","title":"account_id - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsQueueConfig/account_id</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/account_id/#account_id","title":"account_id","text":"<p>[jvm]\\ val account_id: String? = null</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/region/","title":"region - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsQueueConfig/region</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/region/#region","title":"region","text":"<p>[jvm]\\ val region: String? = null</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/sqs_queue_name/","title":"sqs_queue_name - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/AwsSqsQueueConfig/sqs_queue_name</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/sqs_queue_name/#sqs_queue_name","title":"sqs_queue_name","text":"<p>[jvm]\\ val sqs_queue_name: String? = null</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-dead-letter-queue-provider/","title":"DeadLetterQueueProvider - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/DeadLetterQueueProvider</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-dead-letter-queue-provider/#deadletterqueueprovider","title":"DeadLetterQueueProvider","text":"<p>[jvm]\\ interface DeadLetterQueueProvider</p> <p>Interface for a provider of dead-letter queue names.</p> <p>Returns the name of the appropriate dead-letter QueueName for a given QueueName.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-dead-letter-queue-provider/#functions","title":"Functions","text":"Name Summary deadLetterQueueFor [jvm]abstract fun deadLetterQueueFor(queue: QueueName): QueueName"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-dead-letter-queue-provider/#inheritors","title":"Inheritors","text":"Name DefaultDeadLetterQueueProvider StaticDeadLetterQueueProvider"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-dead-letter-queue-provider/dead-letter-queue-for/","title":"deadLetterQueueFor - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/DeadLetterQueueProvider/deadLetterQueueFor</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-dead-letter-queue-provider/dead-letter-queue-for/#deadletterqueuefor","title":"deadLetterQueueFor","text":"<p>[jvm]\\ abstract fun deadLetterQueueFor(queue: QueueName): QueueName</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/","title":"DefaultDeadLetterQueueProvider - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/DefaultDeadLetterQueueProvider</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/#defaultdeadletterqueueprovider","title":"DefaultDeadLetterQueueProvider","text":"<p>[jvm]\\ @Singleton</p> <p>class DefaultDeadLetterQueueProvider@Injectconstructor : DeadLetterQueueProvider</p> <p>Default provider of dead-letter QueueName. Returns the name of the main queue suffixed with \u201c_dlq\u201d.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/#constructors","title":"Constructors","text":"DefaultDeadLetterQueueProvider [jvm]@Injectfun DefaultDeadLetterQueueProvider()"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/#functions","title":"Functions","text":"Name Summary deadLetterQueueFor [jvm]open override fun deadLetterQueueFor(queue: QueueName): QueueName"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/-default-dead-letter-queue-provider/","title":"DefaultDeadLetterQueueProvider - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/DefaultDeadLetterQueueProvider/DefaultDeadLetterQueueProvider</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/-default-dead-letter-queue-provider/#defaultdeadletterqueueprovider","title":"DefaultDeadLetterQueueProvider","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun DefaultDeadLetterQueueProvider()</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/dead-letter-queue-for/","title":"deadLetterQueueFor - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/DefaultDeadLetterQueueProvider/deadLetterQueueFor</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/dead-letter-queue-for/#deadletterqueuefor","title":"deadLetterQueueFor","text":"<p>[jvm]\\ open override fun deadLetterQueueFor(queue: QueueName): QueueName</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/","title":"FlaggedBufferedSqsClient - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/FlaggedBufferedSqsClient</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/#flaggedbufferedsqsclient","title":"FlaggedBufferedSqsClient","text":"<p>[jvm]\\ class FlaggedBufferedSqsClient(unbufferedSqs: AmazonSQS, bufferedSqs: AmazonSQS, appName: String, featureFlags: FeatureFlags) : AmazonSQS</p> <p>Temporary shim for buffered and unbuffered AmazonSQS implementations, for feature-flagged rollout of buffered SQS operations across cash cloud apps.</p> <p>Flag allows gates functionality on a per-service basis.</p> <p>Calls to sendMessage and deleteMessage will be routed to either buffered or unbuffered clients depending on the state of the feature flag for this service. All other operations are delegated to the unbufferd implementation.</p> <p>Once usage of the buffered client is proven safe, this shim should be deleted and substituted with AmazonSQSBufferedAsyncClient.</p> <p>Flag: https://app.launchdarkly.com/cash/production/features/jobqueue-buffered-sqs-client/targeting</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/#constructors","title":"Constructors","text":"FlaggedBufferedSqsClient [jvm]fun FlaggedBufferedSqsClient(unbufferedSqs: AmazonSQS, bufferedSqs: AmazonSQS, appName: String, featureFlags: FeatureFlags)"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/#functions","title":"Functions","text":"Name Summary addPermission [jvm]open override fun addPermission(p0: AddPermissionRequest): AddPermissionResultopen override fun addPermission(p0: String, p1: String, p2: MutableList&lt;String&gt;, p3: MutableList&lt;String&gt;): AddPermissionResult cancelMessageMoveTask [jvm]open override fun cancelMessageMoveTask(p0: CancelMessageMoveTaskRequest): CancelMessageMoveTaskResult changeMessageVisibility [jvm]open override fun changeMessageVisibility(p0: ChangeMessageVisibilityRequest): ChangeMessageVisibilityResultopen override fun changeMessageVisibility(p0: String, p1: String, p2: Int): ChangeMessageVisibilityResult changeMessageVisibilityBatch [jvm]open override fun changeMessageVisibilityBatch(p0: ChangeMessageVisibilityBatchRequest): ChangeMessageVisibilityBatchResultopen override fun changeMessageVisibilityBatch(p0: String, p1: MutableList&lt;ChangeMessageVisibilityBatchRequestEntry&gt;): ChangeMessageVisibilityBatchResult createQueue [jvm]open override fun createQueue(p0: CreateQueueRequest): CreateQueueResultopen override fun createQueue(p0: String): CreateQueueResult deleteMessage [jvm]open override fun deleteMessage(deleteMessageRequest: DeleteMessageRequest): DeleteMessageResultopen override fun deleteMessage(queueUrl: String, receiptHandle: String): DeleteMessageResult deleteMessageBatch [jvm]open override fun deleteMessageBatch(p0: DeleteMessageBatchRequest): DeleteMessageBatchResultopen override fun deleteMessageBatch(p0: String, p1: MutableList&lt;DeleteMessageBatchRequestEntry&gt;): DeleteMessageBatchResult deleteQueue [jvm]open override fun deleteQueue(p0: DeleteQueueRequest): DeleteQueueResultopen override fun deleteQueue(p0: String): DeleteQueueResult getCachedResponseMetadata [jvm]open override fun getCachedResponseMetadata(p0: AmazonWebServiceRequest): ResponseMetadata getQueueAttributes [jvm]open override fun getQueueAttributes(p0: GetQueueAttributesRequest): GetQueueAttributesResultopen override fun getQueueAttributes(p0: String, p1: MutableList&lt;String&gt;): GetQueueAttributesResult getQueueUrl [jvm]open override fun getQueueUrl(p0: GetQueueUrlRequest): GetQueueUrlResultopen override fun getQueueUrl(p0: String): GetQueueUrlResult listDeadLetterSourceQueues [jvm]open override fun listDeadLetterSourceQueues(p0: ListDeadLetterSourceQueuesRequest): ListDeadLetterSourceQueuesResult listMessageMoveTasks [jvm]open override fun listMessageMoveTasks(p0: ListMessageMoveTasksRequest): ListMessageMoveTasksResult listQueues [jvm]open override fun listQueues(): ListQueuesResultopen override fun listQueues(p0: ListQueuesRequest): ListQueuesResultopen override fun listQueues(p0: String): ListQueuesResult listQueueTags [jvm]open override fun listQueueTags(p0: ListQueueTagsRequest): ListQueueTagsResultopen override fun listQueueTags(p0: String): ListQueueTagsResult purgeQueue [jvm]open override fun purgeQueue(p0: PurgeQueueRequest): PurgeQueueResult receiveMessage [jvm]open override fun receiveMessage(p0: ReceiveMessageRequest): ReceiveMessageResultopen override fun receiveMessage(p0: String): ReceiveMessageResult removePermission [jvm]open override fun removePermission(p0: RemovePermissionRequest): RemovePermissionResultopen override fun removePermission(p0: String, p1: String): RemovePermissionResult sendMessage [jvm]open override fun sendMessage(sendMessageRequest: SendMessageRequest): SendMessageResultopen override fun sendMessage(queueUrl: String, messageBody: String): SendMessageResult sendMessageBatch [jvm]open override fun sendMessageBatch(p0: SendMessageBatchRequest): SendMessageBatchResultopen override fun sendMessageBatch(p0: String, p1: MutableList&lt;SendMessageBatchRequestEntry&gt;): SendMessageBatchResult setQueueAttributes [jvm]open override fun setQueueAttributes(p0: SetQueueAttributesRequest): SetQueueAttributesResultopen override fun setQueueAttributes(p0: String, p1: MutableMap&lt;String, String&gt;): SetQueueAttributesResult shutdown [jvm]open override fun shutdown() startMessageMoveTask [jvm]open override fun startMessageMoveTask(p0: StartMessageMoveTaskRequest): StartMessageMoveTaskResult tagQueue [jvm]open override fun tagQueue(p0: TagQueueRequest): TagQueueResultopen override fun tagQueue(p0: String, p1: MutableMap&lt;String, String&gt;): TagQueueResult untagQueue [jvm]open override fun untagQueue(p0: UntagQueueRequest): UntagQueueResultopen override fun untagQueue(p0: String, p1: MutableList&lt;String&gt;): UntagQueueResult"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/-flagged-buffered-sqs-client/","title":"FlaggedBufferedSqsClient - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/FlaggedBufferedSqsClient/FlaggedBufferedSqsClient</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/-flagged-buffered-sqs-client/#flaggedbufferedsqsclient","title":"FlaggedBufferedSqsClient","text":"<p>[jvm]\\ fun FlaggedBufferedSqsClient(unbufferedSqs: AmazonSQS, bufferedSqs: AmazonSQS, appName: String, featureFlags: FeatureFlags)</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/delete-message/","title":"deleteMessage - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/FlaggedBufferedSqsClient/deleteMessage</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/delete-message/#deletemessage","title":"deleteMessage","text":"<p>[jvm]\\ open override fun deleteMessage(deleteMessageRequest: DeleteMessageRequest): DeleteMessageResult</p> <p>open override fun deleteMessage(queueUrl: String, receiptHandle: String): DeleteMessageResult</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/send-message/","title":"sendMessage - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/FlaggedBufferedSqsClient/sendMessage</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/send-message/#sendmessage","title":"sendMessage","text":"<p>[jvm]\\ open override fun sendMessage(sendMessageRequest: SendMessageRequest): SendMessageResult</p> <p>open override fun sendMessage(queueUrl: String, messageBody: String): SendMessageResult</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/shutdown/","title":"shutdown - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/FlaggedBufferedSqsClient/shutdown</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/shutdown/#shutdown","title":"shutdown","text":"<p>[jvm]\\ open override fun shutdown()</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/-companion/","title":"Companion - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/FlaggedBufferedSqsClient/Companion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/-companion/#properties","title":"Properties","text":"Name Summary FEATURE [jvm]val FEATURE: Feature"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/-companion/-f-e-a-t-u-r-e/","title":"FEATURE - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/FlaggedBufferedSqsClient/Companion/FEATURE</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/-companion/-f-e-a-t-u-r-e/#feature","title":"FEATURE","text":"<p>[jvm]\\ val FEATURE: Feature</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/","title":"SqsConsumerAllocator - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/SqsConsumerAllocator</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/#sqsconsumerallocator","title":"SqsConsumerAllocator","text":"<p>[jvm]\\ @Singleton</p> <p>class SqsConsumerAllocator@Injectconstructor(leaseManager: LeaseManager, featureFlags: FeatureFlags)</p> <p>Uses a LeaseManager and FeatureFlags to calculate the number of sqs consumers a pods should have. This computation is based off of the AwsSqsJobReceiverPolicy specification.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/#constructors","title":"Constructors","text":"SqsConsumerAllocator [jvm]@Injectfun SqsConsumerAllocator(leaseManager: LeaseManager, featureFlags: FeatureFlags)"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/#functions","title":"Functions","text":"Name Summary computeSqsConsumersForPod [jvm]fun computeSqsConsumersForPod(queueName: QueueName, receiverPolicy: AwsSqsJobReceiverPolicy): Int"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/-sqs-consumer-allocator/","title":"SqsConsumerAllocator - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/SqsConsumerAllocator/SqsConsumerAllocator</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/-sqs-consumer-allocator/#sqsconsumerallocator","title":"SqsConsumerAllocator","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun SqsConsumerAllocator(leaseManager: LeaseManager, featureFlags: FeatureFlags)</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/compute-sqs-consumers-for-pod/","title":"computeSqsConsumersForPod - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/SqsConsumerAllocator/computeSqsConsumersForPod</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/compute-sqs-consumers-for-pod/#computesqsconsumersforpod","title":"computeSqsConsumersForPod","text":"<p>[jvm]\\ fun computeSqsConsumersForPod(queueName: QueueName, receiverPolicy: AwsSqsJobReceiverPolicy): Int</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/-companion/","title":"Companion - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/SqsConsumerAllocator/Companion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/-companion/#functions","title":"Functions","text":"Name Summary leaseName [jvm]fun leaseName(queueName: QueueName, candidate: Int): String"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/-companion/lease-name/","title":"leaseName - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/SqsConsumerAllocator/Companion/leaseName</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-sqs-consumer-allocator/-companion/lease-name/#leasename","title":"leaseName","text":"<p>[jvm]\\ fun leaseName(queueName: QueueName, candidate: Int): String</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/","title":"StaticDeadLetterQueueProvider - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/StaticDeadLetterQueueProvider</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/#staticdeadletterqueueprovider","title":"StaticDeadLetterQueueProvider","text":"<p>[jvm]\\ class StaticDeadLetterQueueProvider(queue: String) : DeadLetterQueueProvider</p> <p>Provider of dead-letter QueueName that always returns the same value, no matter the supplied queue.</p> <p>For apps with queues that share a single dead-letter queue.</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/#constructors","title":"Constructors","text":"StaticDeadLetterQueueProvider [jvm]fun StaticDeadLetterQueueProvider(queue: String)"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/#functions","title":"Functions","text":"Name Summary deadLetterQueueFor [jvm]open override fun deadLetterQueueFor(queue: QueueName): QueueName"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/-static-dead-letter-queue-provider/","title":"StaticDeadLetterQueueProvider - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/StaticDeadLetterQueueProvider/StaticDeadLetterQueueProvider</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/-static-dead-letter-queue-provider/#staticdeadletterqueueprovider","title":"StaticDeadLetterQueueProvider","text":"<p>[jvm]\\ fun StaticDeadLetterQueueProvider(queue: String)</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/dead-letter-queue-for/","title":"deadLetterQueueFor - Misk","text":"<p>//misk-aws/misk.jobqueue.sqs/StaticDeadLetterQueueProvider/deadLetterQueueFor</p>"},{"location":"0.x/misk-aws/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/dead-letter-queue-for/#deadletterqueuefor","title":"deadLetterQueueFor","text":"<p>[jvm]\\ open override fun deadLetterQueueFor(queue: QueueName): QueueName</p>"},{"location":"0.x/misk-aws/misk-aws/misk.s3/","title":"Package misk.s3 - Misk","text":"<p>//misk-aws/misk.s3</p>"},{"location":"0.x/misk-aws/misk-aws/misk.s3/#package-misks3","title":"Package misk.s3","text":""},{"location":"0.x/misk-aws/misk-aws/misk.s3/#types","title":"Types","text":"Name Summary RealS3Module [jvm]open class RealS3Module : KAbstractModule"},{"location":"0.x/misk-aws/misk-aws/misk.s3/-real-s3-module/","title":"RealS3Module - Misk","text":"<p>//misk-aws/misk.s3/RealS3Module</p>"},{"location":"0.x/misk-aws/misk-aws/misk.s3/-real-s3-module/#reals3module","title":"RealS3Module","text":"<p>[jvm]\\ open class RealS3Module : KAbstractModule</p>"},{"location":"0.x/misk-aws/misk-aws/misk.s3/-real-s3-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) configureClient [jvm]open fun configureClient(builder: AmazonS3ClientBuilder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideS3 [jvm]@Provides@Singletonfun provideS3(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonS3 requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-aws/misk-aws/misk.s3/-real-s3-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-aws/misk-aws/misk.s3/-real-s3-module/-real-s3-module/","title":"RealS3Module - Misk","text":"<p>//misk-aws/misk.s3/RealS3Module/RealS3Module</p>"},{"location":"0.x/misk-aws/misk-aws/misk.s3/-real-s3-module/-real-s3-module/#reals3module","title":"RealS3Module","text":"<p>[jvm]\\ fun RealS3Module()</p>"},{"location":"0.x/misk-aws/misk-aws/misk.s3/-real-s3-module/configure-client/","title":"configureClient - Misk","text":"<p>//misk-aws/misk.s3/RealS3Module/configureClient</p>"},{"location":"0.x/misk-aws/misk-aws/misk.s3/-real-s3-module/configure-client/#configureclient","title":"configureClient","text":"<p>[jvm]\\ open fun configureClient(builder: AmazonS3ClientBuilder)</p>"},{"location":"0.x/misk-aws/misk-aws/misk.s3/-real-s3-module/provide-s3/","title":"provideS3 - Misk","text":"<p>//misk-aws/misk.s3/RealS3Module/provideS3</p>"},{"location":"0.x/misk-aws/misk-aws/misk.s3/-real-s3-module/provide-s3/#provides3","title":"provideS3","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideS3(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonS3</p>"},{"location":"0.x/misk-aws-dynamodb/","title":"misk-aws-dynamodb - Misk","text":"<p>//misk-aws-dynamodb</p>"},{"location":"0.x/misk-aws-dynamodb/#misk-aws-dynamodb","title":"misk-aws-dynamodb","text":""},{"location":"0.x/misk-aws-dynamodb/#packages","title":"Packages","text":"Name misk.dynamodb"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/","title":"Package misk.dynamodb - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/#package-miskdynamodb","title":"Package misk.dynamodb","text":""},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/#types","title":"Types","text":"Name Summary DynamoDbService [jvm]interface DynamoDbService : ServiceService that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb. DyTimestampedEntity [jvm]interface DyTimestampedEntityInterface for a timestamped entity. DyVersionedEntity [jvm]interface DyVersionedEntityThis version field is used for optimistic locking. RealDynamoDbModule [jvm]open class RealDynamoDbModule@JvmOverloadsconstructor(clientConfig: ClientConfiguration, requiredTableTypes: KClass&lt;*&gt;) : KAbstractModuleInstall this module to have access to an AmazonDynamoDB client. This can be used to create a DynamoDbMapper for querying of a DynamoDb table. RealDynamoDbService [jvm]@Singletonclass RealDynamoDbService@Injectconstructor(dynamoDb: AmazonDynamoDB, requiredTables: List&lt;RequiredDynamoDbTable&gt;) : AbstractIdleService, DynamoDbService RequiredDynamoDbTable [jvm]data class RequiredDynamoDbTable(name: String)A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up."},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/","title":"DyTimestampedEntity - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/DyTimestampedEntity</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/#dytimestampedentity","title":"DyTimestampedEntity","text":"<p>[jvm]\\ interface DyTimestampedEntity</p> <p>Interface for a timestamped entity.</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/#properties","title":"Properties","text":"Name Summary created_at [jvm]abstract var created_at: DateUse the below annotations on the implementations. This will automatically set field to be when the entity is created. This will save the Date as a Long (epoch milliseconds). updated_at [jvm]abstract var updated_at: DateUse the below annotations on the implementations. This will automatically set field every time entity is saved. This will save the Date as a Long (epoch milliseconds)."},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/created_at/","title":"created_at - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/DyTimestampedEntity/created_at</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/created_at/#created_at","title":"created_at","text":"<p>[jvm]\\ abstract var created_at: Date</p> <p>Use the below annotations on the implementations. This will automatically set field to be when the entity is created. This will save the Date as a Long (epoch milliseconds).</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/updated_at/","title":"updated_at - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/DyTimestampedEntity/updated_at</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/updated_at/#updated_at","title":"updated_at","text":"<p>[jvm]\\ abstract var updated_at: Date</p> <p>Use the below annotations on the implementations. This will automatically set field every time entity is saved. This will save the Date as a Long (epoch milliseconds).</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dy-versioned-entity/","title":"DyVersionedEntity - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/DyVersionedEntity</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dy-versioned-entity/#dyversionedentity","title":"DyVersionedEntity","text":"<p>[jvm]\\ interface DyVersionedEntity</p> <p>This version field is used for optimistic locking.</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dy-versioned-entity/#properties","title":"Properties","text":"Name Summary version [jvm]abstract var version: LongThis version field can be used to do optimistic locking on updates. Note that the DynamoDbMapper will need to be in save mode DynamoDBMapperConfig.SaveBehavior.CLOBBER"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dy-versioned-entity/version/","title":"version - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/DyVersionedEntity/version</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dy-versioned-entity/version/#version","title":"version","text":"<p>[jvm]\\ abstract var version: Long</p> <p>This version field can be used to do optimistic locking on updates. Note that the DynamoDbMapper will need to be in save mode DynamoDBMapperConfig.SaveBehavior.CLOBBER</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-service/","title":"DynamoDbService - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/DynamoDbService</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-service/#dynamodbservice","title":"DynamoDbService","text":"<p>[jvm]\\ interface DynamoDbService : Service</p> <p>Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb.</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]abstract fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]abstract fun awaitRunning()open fun awaitRunning(timeout: Duration)abstract fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]abstract fun awaitTerminated()open fun awaitTerminated(timeout: Duration)abstract fun awaitTerminated(timeout: Long, unit: TimeUnit) failureCause [jvm]abstract fun failureCause(): Throwable isRunning [jvm]abstract fun isRunning(): Boolean startAsync [jvm]@CanIgnoreReturnValueabstract fun startAsync(): Service state [jvm]abstract fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueabstract fun stopAsync(): Service"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-service/#inheritors","title":"Inheritors","text":"Name RealDynamoDbService"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/","title":"RealDynamoDbModule - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/RealDynamoDbModule</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/#realdynamodbmodule","title":"RealDynamoDbModule","text":"<p>[jvm]\\ open class RealDynamoDbModule@JvmOverloadsconstructor(clientConfig: ClientConfiguration, requiredTableTypes: KClass&lt;*&gt;) : KAbstractModule</p> <p>Install this module to have access to an AmazonDynamoDB client. This can be used to create a DynamoDbMapper for querying of a DynamoDb table.</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/#parameters","title":"Parameters","text":"<p>jvm</p> requiredTableTypes a list of mapper classes annotated DynamoDBTable."},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/#constructors","title":"Constructors","text":"RealDynamoDbModule [jvm]@JvmOverloadsfun RealDynamoDbModule(clientConfig: ClientConfiguration = ClientConfiguration(), vararg requiredTableTypes: KClass&lt;*&gt;)"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) configureClient [jvm]open fun configureClient(builder: AmazonDynamoDBClientBuilder) configureStreamsClient [jvm]open fun configureStreamsClient(builder: AmazonDynamoDBStreamsClientBuilder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideRequiredTables [jvm]@Provides@Singletonfun provideRequiredTables(): List&lt;RequiredDynamoDbTable&gt; providesAmazonDynamoDB [jvm]@Provides@Singletonfun providesAmazonDynamoDB(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonDynamoDB providesAmazonDynamoDBStreams [jvm]@Provides@Singletonfun providesAmazonDynamoDBStreams(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonDynamoDBStreams requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/-real-dynamo-db-module/","title":"RealDynamoDbModule - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/RealDynamoDbModule/RealDynamoDbModule</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/-real-dynamo-db-module/#realdynamodbmodule","title":"RealDynamoDbModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun RealDynamoDbModule(clientConfig: ClientConfiguration = ClientConfiguration(), vararg requiredTableTypes: KClass&lt;*&gt;)</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/-real-dynamo-db-module/#parameters","title":"Parameters","text":"<p>jvm</p> requiredTableTypes a list of mapper classes annotated DynamoDBTable."},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/configure-client/","title":"configureClient - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/RealDynamoDbModule/configureClient</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/configure-client/#configureclient","title":"configureClient","text":"<p>[jvm]\\ open fun configureClient(builder: AmazonDynamoDBClientBuilder)</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/configure-streams-client/","title":"configureStreamsClient - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/RealDynamoDbModule/configureStreamsClient</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/configure-streams-client/#configurestreamsclient","title":"configureStreamsClient","text":"<p>[jvm]\\ open fun configureStreamsClient(builder: AmazonDynamoDBStreamsClientBuilder)</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/provide-required-tables/","title":"provideRequiredTables - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/RealDynamoDbModule/provideRequiredTables</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/provide-required-tables/#providerequiredtables","title":"provideRequiredTables","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideRequiredTables(): List&lt;RequiredDynamoDbTable&gt;</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/provides-amazon-dynamo-d-b-streams/","title":"providesAmazonDynamoDBStreams - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/RealDynamoDbModule/providesAmazonDynamoDBStreams</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/provides-amazon-dynamo-d-b-streams/#providesamazondynamodbstreams","title":"providesAmazonDynamoDBStreams","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun providesAmazonDynamoDBStreams(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonDynamoDBStreams</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/provides-amazon-dynamo-d-b/","title":"providesAmazonDynamoDB - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/RealDynamoDbModule/providesAmazonDynamoDB</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/provides-amazon-dynamo-d-b/#providesamazondynamodb","title":"providesAmazonDynamoDB","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun providesAmazonDynamoDB(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonDynamoDB</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-service/","title":"RealDynamoDbService - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/RealDynamoDbService</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-service/#realdynamodbservice","title":"RealDynamoDbService","text":"<p>[jvm]\\ @Singleton</p> <p>class RealDynamoDbService@Injectconstructor(dynamoDb: AmazonDynamoDB, requiredTables: List&lt;RequiredDynamoDbTable&gt;) : AbstractIdleService, DynamoDbService</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-service/-real-dynamo-db-service/","title":"RealDynamoDbService - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/RealDynamoDbService/RealDynamoDbService</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-service/-real-dynamo-db-service/#realdynamodbservice","title":"RealDynamoDbService","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun RealDynamoDbService(dynamoDb: AmazonDynamoDB, requiredTables: List&lt;RequiredDynamoDbTable&gt;)</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/","title":"RequiredDynamoDbTable - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/RequiredDynamoDbTable</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/#requireddynamodbtable","title":"RequiredDynamoDbTable","text":"<p>[jvm]\\ data class RequiredDynamoDbTable(name: String)</p> <p>A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up.</p> <p>The table name is sometimes prefixed with the service name, like \u201curlshortener.urls\u201d.</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/#constructors","title":"Constructors","text":"RequiredDynamoDbTable [jvm]fun RequiredDynamoDbTable(name: String)"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/-required-dynamo-db-table/","title":"RequiredDynamoDbTable - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/RequiredDynamoDbTable/RequiredDynamoDbTable</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/-required-dynamo-db-table/#requireddynamodbtable","title":"RequiredDynamoDbTable","text":"<p>[jvm]\\ fun RequiredDynamoDbTable(name: String)</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/name/","title":"name - Misk","text":"<p>//misk-aws-dynamodb/misk.dynamodb/RequiredDynamoDbTable/name</p>"},{"location":"0.x/misk-aws-dynamodb/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-aws2-dynamodb/","title":"misk-aws2-dynamodb - Misk","text":"<p>//misk-aws2-dynamodb</p>"},{"location":"0.x/misk-aws2-dynamodb/#misk-aws2-dynamodb","title":"misk-aws2-dynamodb","text":""},{"location":"0.x/misk-aws2-dynamodb/#packages","title":"Packages","text":"Name misk.aws2.dynamodb"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/","title":"Package misk.aws2.dynamodb - Misk","text":"<p>//misk-aws2-dynamodb/misk.aws2.dynamodb</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/#package-miskaws2dynamodb","title":"Package misk.aws2.dynamodb","text":""},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/#types","title":"Types","text":"Name Summary DynamoDbService [jvm]interface DynamoDbService : ServiceService that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb. RealDynamoDbModule [jvm]open class RealDynamoDbModule@JvmOverloadsconstructor(clientOverrideConfig: ClientOverrideConfiguration, requiredTables: List&lt;RequiredDynamoDbTable&gt;, endpointOverride: URI?) : KAbstractModuleInstall this module to have access to a DynamoDbClient. RealDynamoDbService [jvm]@Singletonclass RealDynamoDbService@Injectconstructor(dynamoDb: DynamoDbClient, requiredTables: List&lt;RequiredDynamoDbTable&gt;) : AbstractIdleService, DynamoDbService RequiredDynamoDbTable [jvm]data class RequiredDynamoDbTable(name: String)A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up."},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-service/","title":"DynamoDbService - Misk","text":"<p>//misk-aws2-dynamodb/misk.aws2.dynamodb/DynamoDbService</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-service/#dynamodbservice","title":"DynamoDbService","text":"<p>[jvm]\\ interface DynamoDbService : Service</p> <p>Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb.</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]abstract fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]abstract fun awaitRunning()open fun awaitRunning(timeout: Duration)abstract fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]abstract fun awaitTerminated()open fun awaitTerminated(timeout: Duration)abstract fun awaitTerminated(timeout: Long, unit: TimeUnit) failureCause [jvm]abstract fun failureCause(): Throwable isRunning [jvm]abstract fun isRunning(): Boolean startAsync [jvm]@CanIgnoreReturnValueabstract fun startAsync(): Service state [jvm]abstract fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueabstract fun stopAsync(): Service"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-service/#inheritors","title":"Inheritors","text":"Name RealDynamoDbService"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/","title":"RealDynamoDbModule - Misk","text":"<p>//misk-aws2-dynamodb/misk.aws2.dynamodb/RealDynamoDbModule</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/#realdynamodbmodule","title":"RealDynamoDbModule","text":"<p>[jvm]\\ open class RealDynamoDbModule@JvmOverloadsconstructor(clientOverrideConfig: ClientOverrideConfiguration, requiredTables: List&lt;RequiredDynamoDbTable&gt;, endpointOverride: URI?) : KAbstractModule</p> <p>Install this module to have access to a DynamoDbClient.</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/#constructors","title":"Constructors","text":"RealDynamoDbModule [jvm]@JvmOverloadsfun RealDynamoDbModule(clientOverrideConfig: ClientOverrideConfiguration = ClientOverrideConfiguration.builder().build(), requiredTables: List&lt;RequiredDynamoDbTable&gt; = listOf(), endpointOverride: URI? = null)"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) configureClient [jvm]open fun configureClient(builder: DynamoDbClientBuilder)open fun configureClient(builder: DynamoDbStreamsClientBuilder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideRequiredTables [jvm]@Provides@Singletonfun provideRequiredTables(): List&lt;RequiredDynamoDbTable&gt; providesDynamoDbClient [jvm]@Provides@Singletonfun providesDynamoDbClient(awsRegion: AwsRegion, awsCredentialsProvider: AwsCredentialsProvider): DynamoDbClient providesDynamoDbStreamsClient [jvm]@Provides@Singletonfun providesDynamoDbStreamsClient(awsRegion: AwsRegion, awsCredentialsProvider: AwsCredentialsProvider): DynamoDbStreamsClient requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/-real-dynamo-db-module/","title":"RealDynamoDbModule - Misk","text":"<p>//misk-aws2-dynamodb/misk.aws2.dynamodb/RealDynamoDbModule/RealDynamoDbModule</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/-real-dynamo-db-module/#realdynamodbmodule","title":"RealDynamoDbModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun RealDynamoDbModule(clientOverrideConfig: ClientOverrideConfiguration = ClientOverrideConfiguration.builder().build(), requiredTables: List&lt;RequiredDynamoDbTable&gt; = listOf(), endpointOverride: URI? = null)</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/configure-client/","title":"configureClient - Misk","text":"<p>//misk-aws2-dynamodb/misk.aws2.dynamodb/RealDynamoDbModule/configureClient</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/configure-client/#configureclient","title":"configureClient","text":"<p>[jvm]\\ open fun configureClient(builder: DynamoDbClientBuilder)</p> <p>open fun configureClient(builder: DynamoDbStreamsClientBuilder)</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/provide-required-tables/","title":"provideRequiredTables - Misk","text":"<p>//misk-aws2-dynamodb/misk.aws2.dynamodb/RealDynamoDbModule/provideRequiredTables</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/provide-required-tables/#providerequiredtables","title":"provideRequiredTables","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideRequiredTables(): List&lt;RequiredDynamoDbTable&gt;</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/provides-dynamo-db-client/","title":"providesDynamoDbClient - Misk","text":"<p>//misk-aws2-dynamodb/misk.aws2.dynamodb/RealDynamoDbModule/providesDynamoDbClient</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/provides-dynamo-db-client/#providesdynamodbclient","title":"providesDynamoDbClient","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun providesDynamoDbClient(awsRegion: AwsRegion, awsCredentialsProvider: AwsCredentialsProvider): DynamoDbClient</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/provides-dynamo-db-streams-client/","title":"providesDynamoDbStreamsClient - Misk","text":"<p>//misk-aws2-dynamodb/misk.aws2.dynamodb/RealDynamoDbModule/providesDynamoDbStreamsClient</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/provides-dynamo-db-streams-client/#providesdynamodbstreamsclient","title":"providesDynamoDbStreamsClient","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun providesDynamoDbStreamsClient(awsRegion: AwsRegion, awsCredentialsProvider: AwsCredentialsProvider): DynamoDbStreamsClient</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-service/","title":"RealDynamoDbService - Misk","text":"<p>//misk-aws2-dynamodb/misk.aws2.dynamodb/RealDynamoDbService</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-service/#realdynamodbservice","title":"RealDynamoDbService","text":"<p>[jvm]\\ @Singleton</p> <p>class RealDynamoDbService@Injectconstructor(dynamoDb: DynamoDbClient, requiredTables: List&lt;RequiredDynamoDbTable&gt;) : AbstractIdleService, DynamoDbService</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-service/-real-dynamo-db-service/","title":"RealDynamoDbService - Misk","text":"<p>//misk-aws2-dynamodb/misk.aws2.dynamodb/RealDynamoDbService/RealDynamoDbService</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-service/-real-dynamo-db-service/#realdynamodbservice","title":"RealDynamoDbService","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun RealDynamoDbService(dynamoDb: DynamoDbClient, requiredTables: List&lt;RequiredDynamoDbTable&gt;)</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/","title":"RequiredDynamoDbTable - Misk","text":"<p>//misk-aws2-dynamodb/misk.aws2.dynamodb/RequiredDynamoDbTable</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/#requireddynamodbtable","title":"RequiredDynamoDbTable","text":"<p>[jvm]\\ data class RequiredDynamoDbTable(name: String)</p> <p>A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up.</p> <p>The table name is sometimes prefixed with the service name, like \u201curlshortener.urls\u201d.</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/#constructors","title":"Constructors","text":"RequiredDynamoDbTable [jvm]fun RequiredDynamoDbTable(name: String)"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/-required-dynamo-db-table/","title":"RequiredDynamoDbTable - Misk","text":"<p>//misk-aws2-dynamodb/misk.aws2.dynamodb/RequiredDynamoDbTable/RequiredDynamoDbTable</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/-required-dynamo-db-table/#requireddynamodbtable","title":"RequiredDynamoDbTable","text":"<p>[jvm]\\ fun RequiredDynamoDbTable(name: String)</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/name/","title":"name - Misk","text":"<p>//misk-aws2-dynamodb/misk.aws2.dynamodb/RequiredDynamoDbTable/name</p>"},{"location":"0.x/misk-aws2-dynamodb/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-clustering/","title":"misk-clustering - Misk","text":"<p>//misk-clustering</p>"},{"location":"0.x/misk-clustering/#misk-clustering","title":"misk-clustering","text":""},{"location":"0.x/misk-clustering/#packages","title":"Packages","text":"Name misk.clustering misk.clustering.fake misk.clustering.fake.lease misk.clustering.kubernetes misk.clustering.weights"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/","title":"Package misk.clustering - Misk","text":"<p>//misk-clustering/misk.clustering</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/#package-miskclustering","title":"Package misk.clustering","text":""},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/#types","title":"Types","text":"Name Summary Cluster [jvm]interface ClusterA Cluster provides access to cluster membership for a service, allowing instances of a service to monitor the state of its peers ClusterHashRing [jvm]class ClusterHashRing@JvmOverloadsconstructor(members: Collection&lt;Cluster.Member&gt;, hashFn: HashFunction, vnodesCount: Int) : ClusterResourceMapperA ClusterHashRing maps resources to cluster members based on a consistent hash ClusterResourceMapper [jvm]interface ClusterResourceMapperA ClusterResourceMapper maps string based resource IDs onto members of a cluster for the purposes of resource ownership. The default ClusterResourceMapper is a ClusterHashRing which performs a consistent hash across the cluster member, but Clusters can supply their own mappings if there is a mechanism specific to that cluster (or to supply a fake) ClusterService [jvm]interface ClusterService : ServiceMarker interface for the service that produces a Cluster. ClusterWatch [jvm]typealias ClusterWatch = (Cluster.Changes) -&gt; UnitA ClusterWatch is a callback function triggered when cluster membership changes DefaultCluster [jvm]@Singletonclass DefaultCluster@JvmOverloadsconstructor(self: Cluster.Member, newResourceMapperFn: (members: Set&lt;Cluster.Member&gt;) -&gt; ClusterResourceMapper) : AbstractExecutionThreadService, Cluster, ClusterServiceA DefaultCluster is the default implementation of the Cluster, which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes. NoMembersAvailableException [jvm]class NoMembersAvailableException(resourceId: String) : ExceptionThrown if the cluster does not have any members available."},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/","title":"Cluster - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/#cluster","title":"Cluster","text":"<p>[jvm]\\ interface Cluster</p> <p>A Cluster provides access to cluster membership for a service, allowing instances of a service to monitor the state of its peers</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/#types","title":"Types","text":"Name Summary Changes [jvm]data class Changes@JvmOverloadsconstructor(snapshot: Cluster.Snapshot, added: Set&lt;Cluster.Member&gt;, removed: Set&lt;Cluster.Member&gt;) Member [jvm]data class Member(name: String, ipAddress: String) Snapshot [jvm]data class Snapshot@JvmOverloadsconstructor(self: Cluster.Member, readyMembers: Set&lt;Cluster.Member&gt;, selfReady: Boolean, resourceMapper: ClusterResourceMapper)Snapshot is a consistent moment-in-time view of the cluster state"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/#functions","title":"Functions","text":"Name Summary newResourceMapper [jvm]open fun newResourceMapper(readyMembers: Set&lt;Cluster.Member&gt;): ClusterResourceMapper watch [jvm]abstract fun watch(watch: ClusterWatch)Registers interest in cluster changes"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/#properties","title":"Properties","text":"Name Summary snapshot [jvm]abstract val snapshot: Cluster.SnapshotThe current moment-in-time view of the cluster state"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/#inheritors","title":"Inheritors","text":"Name DefaultCluster FakeCluster"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/new-resource-mapper/","title":"newResourceMapper - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/newResourceMapper</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/new-resource-mapper/#newresourcemapper","title":"newResourceMapper","text":"<p>[jvm]\\ open fun newResourceMapper(readyMembers: Set&lt;Cluster.Member&gt;): ClusterResourceMapper</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/new-resource-mapper/#return","title":"Return","text":"<p>A new ClusterResourceMapper for the given set of ready members</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/snapshot/","title":"snapshot - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/snapshot</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/snapshot/#snapshot","title":"snapshot","text":"<p>[jvm]\\ abstract val snapshot: Cluster.Snapshot</p> <p>The current moment-in-time view of the cluster state</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/watch/","title":"watch - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/watch</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/watch/#watch","title":"watch","text":"<p>[jvm]\\ abstract fun watch(watch: ClusterWatch)</p> <p>Registers interest in cluster changes</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-changes/","title":"Changes - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Changes</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-changes/#changes","title":"Changes","text":"<p>[jvm]\\ data class Changes@JvmOverloadsconstructor(snapshot: Cluster.Snapshot, added: Set&lt;Cluster.Member&gt;, removed: Set&lt;Cluster.Member&gt;)</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-changes/#properties","title":"Properties","text":"Name Summary added [jvm]val added: Set&lt;Cluster.Member&gt; hasDiffs [jvm]val hasDiffs: Boolean removed [jvm]val removed: Set&lt;Cluster.Member&gt; snapshot [jvm]val snapshot: Cluster.Snapshot"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-changes/-changes/","title":"Changes - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Changes/Changes</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-changes/-changes/#changes","title":"Changes","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun Changes(snapshot: Cluster.Snapshot, added: Set&lt;Cluster.Member&gt; = setOf(), removed: Set&lt;Cluster.Member&gt; = setOf())</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-changes/added/","title":"added - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Changes/added</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-changes/added/#added","title":"added","text":"<p>[jvm]\\ val added: Set&lt;Cluster.Member&gt;</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-changes/has-diffs/","title":"hasDiffs - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Changes/hasDiffs</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-changes/has-diffs/#hasdiffs","title":"hasDiffs","text":"<p>[jvm]\\ val hasDiffs: Boolean</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-changes/removed/","title":"removed - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Changes/removed</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-changes/removed/#removed","title":"removed","text":"<p>[jvm]\\ val removed: Set&lt;Cluster.Member&gt;</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-changes/snapshot/","title":"snapshot - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Changes/snapshot</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-changes/snapshot/#snapshot","title":"snapshot","text":"<p>[jvm]\\ val snapshot: Cluster.Snapshot</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-member/","title":"Member - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Member</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-member/#member","title":"Member","text":"<p>[jvm]\\ data class Member(name: String, ipAddress: String)</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-member/#properties","title":"Properties","text":"Name Summary ipAddress [jvm]val ipAddress: String name [jvm]val name: String"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-member/-member/","title":"Member - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Member/Member</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-member/-member/#member","title":"Member","text":"<p>[jvm]\\ fun Member(name: String, ipAddress: String)</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-member/ip-address/","title":"ipAddress - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Member/ipAddress</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-member/ip-address/#ipaddress","title":"ipAddress","text":"<p>[jvm]\\ val ipAddress: String</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-member/name/","title":"name - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Member/name</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-member/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/","title":"Snapshot - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Snapshot</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/#snapshot","title":"Snapshot","text":"<p>[jvm]\\ data class Snapshot@JvmOverloadsconstructor(self: Cluster.Member, readyMembers: Set&lt;Cluster.Member&gt;, selfReady: Boolean, resourceMapper: ClusterResourceMapper)</p> <p>Snapshot is a consistent moment-in-time view of the cluster state</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/#constructors","title":"Constructors","text":"Snapshot [jvm]@JvmOverloadsfun Snapshot(self: Cluster.Member, readyMembers: Set&lt;Cluster.Member&gt;, selfReady: Boolean = readyMembers.any { it.name == self.name }, resourceMapper: ClusterResourceMapper)"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/#properties","title":"Properties","text":"Name Summary readyMembers [jvm]val readyMembers: Set&lt;Cluster.Member&gt;All of the members of the cluster that are up and reporting as ready to handle traffic readyPeers [jvm]val readyPeers: Set&lt;Cluster.Member&gt;The of the ready peers; basically all of the ready cluster members except sel resourceMapper [jvm]val resourceMapper: ClusterResourceMapperA ClusterResourceMapper built from the ready members of this cluster self [jvm]val self: Cluster.MemberThe member representing this instance of the service selfReady [jvm]val selfReady: Booleantrue if the current service instance is ready as perceived by the cluster manager"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/-snapshot/","title":"Snapshot - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Snapshot/Snapshot</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/-snapshot/#snapshot","title":"Snapshot","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun Snapshot(self: Cluster.Member, readyMembers: Set&lt;Cluster.Member&gt;, selfReady: Boolean = readyMembers.any { it.name == self.name }, resourceMapper: ClusterResourceMapper)</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/ready-members/","title":"readyMembers - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Snapshot/readyMembers</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/ready-members/#readymembers","title":"readyMembers","text":"<p>[jvm]\\ val readyMembers: Set&lt;Cluster.Member&gt;</p> <p>All of the members of the cluster that are up and reporting as ready to handle traffic</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/ready-peers/","title":"readyPeers - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Snapshot/readyPeers</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/ready-peers/#readypeers","title":"readyPeers","text":"<p>[jvm]\\ val readyPeers: Set&lt;Cluster.Member&gt;</p> <p>The of the ready peers; basically all of the ready cluster members except sel</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/resource-mapper/","title":"resourceMapper - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Snapshot/resourceMapper</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/resource-mapper/#resourcemapper","title":"resourceMapper","text":"<p>[jvm]\\ val resourceMapper: ClusterResourceMapper</p> <p>A ClusterResourceMapper built from the ready members of this cluster</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/self-ready/","title":"selfReady - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Snapshot/selfReady</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/self-ready/#selfready","title":"selfReady","text":"<p>[jvm]\\ val selfReady: Boolean</p> <p>true if the current service instance is ready as perceived by the cluster manager</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/self/","title":"self - Misk","text":"<p>//misk-clustering/misk.clustering/Cluster/Snapshot/self</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster/-snapshot/self/#self","title":"self","text":"<p>[jvm]\\ val self: Cluster.Member</p> <p>The member representing this instance of the service</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-hash-ring/","title":"ClusterHashRing - Misk","text":"<p>//misk-clustering/misk.clustering/ClusterHashRing</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-hash-ring/#clusterhashring","title":"ClusterHashRing","text":"<p>[jvm]\\ class ClusterHashRing@JvmOverloadsconstructor(members: Collection&lt;Cluster.Member&gt;, hashFn: HashFunction, vnodesCount: Int) : ClusterResourceMapper</p> <p>A ClusterHashRing maps resources to cluster members based on a consistent hash</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-hash-ring/#constructors","title":"Constructors","text":"ClusterHashRing [jvm]@JvmOverloadsfun ClusterHashRing(members: Collection&lt;Cluster.Member&gt;, hashFn: HashFunction = Hashing.murmur3_32(), vnodesCount: Int = 16)"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-hash-ring/#functions","title":"Functions","text":"Name Summary equals [jvm]open operator override fun equals(other: Any?): Boolean get [jvm]open operator override fun get(resourceId: String): Cluster.Member hashCode [jvm]open override fun hashCode(): Int"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-hash-ring/-cluster-hash-ring/","title":"ClusterHashRing - Misk","text":"<p>//misk-clustering/misk.clustering/ClusterHashRing/ClusterHashRing</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-hash-ring/-cluster-hash-ring/#clusterhashring","title":"ClusterHashRing","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun ClusterHashRing(members: Collection&lt;Cluster.Member&gt;, hashFn: HashFunction = Hashing.murmur3_32(), vnodesCount: Int = 16)</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-hash-ring/equals/","title":"equals - Misk","text":"<p>//misk-clustering/misk.clustering/ClusterHashRing/equals</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-hash-ring/equals/#equals","title":"equals","text":"<p>[jvm]\\ open operator override fun equals(other: Any?): Boolean</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-hash-ring/get/","title":"get - Misk","text":"<p>//misk-clustering/misk.clustering/ClusterHashRing/get</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-hash-ring/get/#get","title":"get","text":"<p>[jvm]\\ open operator override fun get(resourceId: String): Cluster.Member</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-hash-ring/get/#return","title":"Return","text":"<p>The Cluster.Member that should own the given resource id</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-hash-ring/hash-code/","title":"hashCode - Misk","text":"<p>//misk-clustering/misk.clustering/ClusterHashRing/hashCode</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-hash-ring/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open override fun hashCode(): Int</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-resource-mapper/","title":"ClusterResourceMapper - Misk","text":"<p>//misk-clustering/misk.clustering/ClusterResourceMapper</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-resource-mapper/#clusterresourcemapper","title":"ClusterResourceMapper","text":"<p>[jvm]\\ interface ClusterResourceMapper</p> <p>A ClusterResourceMapper maps string based resource IDs onto members of a cluster for the purposes of resource ownership. The default ClusterResourceMapper is a ClusterHashRing which performs a consistent hash across the cluster member, but Clusters can supply their own mappings if there is a mechanism specific to that cluster (or to supply a fake)</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-resource-mapper/#functions","title":"Functions","text":"Name Summary get [jvm]abstract operator fun get(resourceId: String): Cluster.Member"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-resource-mapper/#inheritors","title":"Inheritors","text":"Name ClusterHashRing ExplicitClusterResourceMapper"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-resource-mapper/get/","title":"get - Misk","text":"<p>//misk-clustering/misk.clustering/ClusterResourceMapper/get</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-resource-mapper/get/#get","title":"get","text":"<p>[jvm]\\ abstract operator fun get(resourceId: String): Cluster.Member</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-resource-mapper/get/#return","title":"Return","text":"<p>The Cluster.Member that should own the given resource id</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-resource-mapper/get/#throws","title":"Throws","text":"misk.clustering.NoMembersAvailableException if there are no members in the cluster"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-service/","title":"ClusterService - Misk","text":"<p>//misk-clustering/misk.clustering/ClusterService</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-service/#clusterservice","title":"ClusterService","text":"<p>[jvm]\\ interface ClusterService : Service</p> <p>Marker interface for the service that produces a Cluster.</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]abstract fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]abstract fun awaitRunning()open fun awaitRunning(timeout: Duration)abstract fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]abstract fun awaitTerminated()open fun awaitTerminated(timeout: Duration)abstract fun awaitTerminated(timeout: Long, unit: TimeUnit) failureCause [jvm]abstract fun failureCause(): Throwable isRunning [jvm]abstract fun isRunning(): Boolean startAsync [jvm]@CanIgnoreReturnValueabstract fun startAsync(): Service state [jvm]abstract fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueabstract fun stopAsync(): Service"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-cluster-service/#inheritors","title":"Inheritors","text":"Name DefaultCluster FakeCluster"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/","title":"DefaultCluster - Misk","text":"<p>//misk-clustering/misk.clustering/DefaultCluster</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/#defaultcluster","title":"DefaultCluster","text":"<p>[jvm]\\ @Singleton</p> <p>class DefaultCluster@JvmOverloadsconstructor(self: Cluster.Member, newResourceMapperFn: (members: Set&lt;Cluster.Member&gt;) -&gt; ClusterResourceMapper) : AbstractExecutionThreadService, Cluster, ClusterService</p> <p>A DefaultCluster is the default implementation of the Cluster, which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes.</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/#constructors","title":"Constructors","text":"DefaultCluster [jvm]@JvmOverloadsfun DefaultCluster(self: Cluster.Member, newResourceMapperFn: (members: Set&lt;Cluster.Member&gt;) -&gt; ClusterResourceMapper = { ClusterHashRing(it) })"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) clusterChanged [jvm]@JvmOverloadsfun clusterChanged(membersBecomingReady: Set&lt;Cluster.Member&gt; = setOf(), membersBecomingNotReady: Set&lt;Cluster.Member&gt; = setOf())Triggers a change to the cluster in response members becoming ready or not ready executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean newResourceMapper [jvm]open override fun newResourceMapper(readyMembers: Set&lt;Cluster.Member&gt;): ClusterResourceMapper serviceName [jvm]open fun serviceName(): String shutDown [jvm]open fun shutDown() startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service syncPoint [jvm]fun syncPoint(callback: () -&gt; Unit)Triggers a callback once all of the actions on the queue have been processed. Useful for writing deterministic tests toString [jvm]open override fun toString(): String watch [jvm]open override fun watch(watch: ClusterWatch)Adds a new cluster watch"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/#properties","title":"Properties","text":"Name Summary snapshot [jvm]open override val snapshot: Cluster.SnapshotThe current moment-in-time view of the cluster state"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/-default-cluster/","title":"DefaultCluster - Misk","text":"<p>//misk-clustering/misk.clustering/DefaultCluster/DefaultCluster</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/-default-cluster/#defaultcluster","title":"DefaultCluster","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun DefaultCluster(self: Cluster.Member, newResourceMapperFn: (members: Set&lt;Cluster.Member&gt;) -&gt; ClusterResourceMapper = { ClusterHashRing(it) })</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/cluster-changed/","title":"clusterChanged - Misk","text":"<p>//misk-clustering/misk.clustering/DefaultCluster/clusterChanged</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/cluster-changed/#clusterchanged","title":"clusterChanged","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun clusterChanged(membersBecomingReady: Set&lt;Cluster.Member&gt; = setOf(), membersBecomingNotReady: Set&lt;Cluster.Member&gt; = setOf())</p> <p>Triggers a change to the cluster in response members becoming ready or not ready</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/new-resource-mapper/","title":"newResourceMapper - Misk","text":"<p>//misk-clustering/misk.clustering/DefaultCluster/newResourceMapper</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/new-resource-mapper/#newresourcemapper","title":"newResourceMapper","text":"<p>[jvm]\\ open override fun newResourceMapper(readyMembers: Set&lt;Cluster.Member&gt;): ClusterResourceMapper</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/new-resource-mapper/#return","title":"Return","text":"<p>A new ClusterResourceMapper for the given set of ready members</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/snapshot/","title":"snapshot - Misk","text":"<p>//misk-clustering/misk.clustering/DefaultCluster/snapshot</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/snapshot/#snapshot","title":"snapshot","text":"<p>[jvm]\\ open override val snapshot: Cluster.Snapshot</p> <p>The current moment-in-time view of the cluster state</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/sync-point/","title":"syncPoint - Misk","text":"<p>//misk-clustering/misk.clustering/DefaultCluster/syncPoint</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/sync-point/#syncpoint","title":"syncPoint","text":"<p>[jvm]\\ fun syncPoint(callback: () -&gt; Unit)</p> <p>Triggers a callback once all of the actions on the queue have been processed. Useful for writing deterministic tests</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/watch/","title":"watch - Misk","text":"<p>//misk-clustering/misk.clustering/DefaultCluster/watch</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/watch/#watch","title":"watch","text":"<p>[jvm]\\ open override fun watch(watch: ClusterWatch)</p> <p>Adds a new cluster watch</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/-companion/","title":"Companion - Misk","text":"<p>//misk-clustering/misk.clustering/DefaultCluster/Companion</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/-companion/#properties","title":"Properties","text":"Name Summary log [jvm]val log: &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/-companion/log/","title":"log - Misk","text":"<p>//misk-clustering/misk.clustering/DefaultCluster/Companion/log</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-default-cluster/-companion/log/#log","title":"log","text":"<p>[jvm]\\ val log: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-no-members-available-exception/","title":"NoMembersAvailableException - Misk","text":"<p>//misk-clustering/misk.clustering/NoMembersAvailableException</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-no-members-available-exception/#nomembersavailableexception","title":"NoMembersAvailableException","text":"<p>[jvm]\\ class NoMembersAvailableException(resourceId: String) : Exception</p> <p>Thrown if the cluster does not have any members available.</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-no-members-available-exception/#constructors","title":"Constructors","text":"NoMembersAvailableException [jvm]fun NoMembersAvailableException(resourceId: String)"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-no-members-available-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-no-members-available-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String? resourceId [jvm]val resourceId: String"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-no-members-available-exception/-no-members-available-exception/","title":"NoMembersAvailableException - Misk","text":"<p>//misk-clustering/misk.clustering/NoMembersAvailableException/NoMembersAvailableException</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-no-members-available-exception/-no-members-available-exception/#nomembersavailableexception","title":"NoMembersAvailableException","text":"<p>[jvm]\\ fun NoMembersAvailableException(resourceId: String)</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-no-members-available-exception/resource-id/","title":"resourceId - Misk","text":"<p>//misk-clustering/misk.clustering/NoMembersAvailableException/resourceId</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering/-no-members-available-exception/resource-id/#resourceid","title":"resourceId","text":"<p>[jvm]\\ val resourceId: String</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/","title":"Package misk.clustering.fake - Misk","text":"<p>//misk-clustering/misk.clustering.fake</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/#package-miskclusteringfake","title":"Package misk.clustering.fake","text":""},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/#types","title":"Types","text":"Name Summary ExplicitClusterResourceMapper [jvm]class ExplicitClusterResourceMapper : ClusterResourceMapperAn ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed. FakeCluster [jvm]@Singletonclass FakeCluster : ClusterService, ClusterA FakeCluster is a Cluster that is a fake. It delegates entirely to DefaultCluster, but allows us to keep DefaultCluster internal and make it clear that FakeCluster is only intended to be used for fakes. FakeClusterModule [jvm]class FakeClusterModule : KAbstractModuleFakeClusterModule installs fake implementations of the clustering primitives for use in tests"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/","title":"ExplicitClusterResourceMapper - Misk","text":"<p>//misk-clustering/misk.clustering.fake/ExplicitClusterResourceMapper</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/#explicitclusterresourcemapper","title":"ExplicitClusterResourceMapper","text":"<p>[jvm]\\ class ExplicitClusterResourceMapper : ClusterResourceMapper</p> <p>An ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed.</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/#constructors","title":"Constructors","text":"ExplicitClusterResourceMapper [jvm]fun ExplicitClusterResourceMapper()"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/#functions","title":"Functions","text":"Name Summary addMapping [jvm]fun addMapping(resourceId: String, member: Cluster.Member) clearDefaultMapping [jvm]fun clearDefaultMapping() get [jvm]open operator override fun get(resourceId: String): Cluster.Member removeMapping [jvm]fun removeMapping(resourceId: String) setDefaultMapping [jvm]fun setDefaultMapping(member: Cluster.Member)"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/-explicit-cluster-resource-mapper/","title":"ExplicitClusterResourceMapper - Misk","text":"<p>//misk-clustering/misk.clustering.fake/ExplicitClusterResourceMapper/ExplicitClusterResourceMapper</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/-explicit-cluster-resource-mapper/#explicitclusterresourcemapper","title":"ExplicitClusterResourceMapper","text":"<p>[jvm]\\ fun ExplicitClusterResourceMapper()</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/add-mapping/","title":"addMapping - Misk","text":"<p>//misk-clustering/misk.clustering.fake/ExplicitClusterResourceMapper/addMapping</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/add-mapping/#addmapping","title":"addMapping","text":"<p>[jvm]\\ fun addMapping(resourceId: String, member: Cluster.Member)</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/clear-default-mapping/","title":"clearDefaultMapping - Misk","text":"<p>//misk-clustering/misk.clustering.fake/ExplicitClusterResourceMapper/clearDefaultMapping</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/clear-default-mapping/#cleardefaultmapping","title":"clearDefaultMapping","text":"<p>[jvm]\\ fun clearDefaultMapping()</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/get/","title":"get - Misk","text":"<p>//misk-clustering/misk.clustering.fake/ExplicitClusterResourceMapper/get</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/get/#get","title":"get","text":"<p>[jvm]\\ open operator override fun get(resourceId: String): Cluster.Member</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/get/#return","title":"Return","text":"<p>The Cluster.Member that should own the given resource id</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/get/#throws","title":"Throws","text":"misk.clustering.NoMembersAvailableException if there are no members in the cluster"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/remove-mapping/","title":"removeMapping - Misk","text":"<p>//misk-clustering/misk.clustering.fake/ExplicitClusterResourceMapper/removeMapping</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/remove-mapping/#removemapping","title":"removeMapping","text":"<p>[jvm]\\ fun removeMapping(resourceId: String)</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/set-default-mapping/","title":"setDefaultMapping - Misk","text":"<p>//misk-clustering/misk.clustering.fake/ExplicitClusterResourceMapper/setDefaultMapping</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-explicit-cluster-resource-mapper/set-default-mapping/#setdefaultmapping","title":"setDefaultMapping","text":"<p>[jvm]\\ fun setDefaultMapping(member: Cluster.Member)</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/","title":"FakeCluster - Misk","text":"<p>//misk-clustering/misk.clustering.fake/FakeCluster</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/#fakecluster","title":"FakeCluster","text":"<p>[jvm]\\ @Singleton</p> <p>class FakeCluster : ClusterService, Cluster</p> <p>A FakeCluster is a Cluster that is a fake. It delegates entirely to DefaultCluster, but allows us to keep DefaultCluster internal and make it clear that FakeCluster is only intended to be used for fakes.</p> <p>NB(mmihic): I\u2019d prefer for this to be in the misk-testing module, but it can\u2019t since it relies on DefaultCluster and we want to leave DefaultCluster internal</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/#constructors","title":"Constructors","text":"FakeCluster [jvm]fun FakeCluster(resourceMapper: ExplicitClusterResourceMapper) FakeCluster [jvm]@Injectfun FakeCluster()"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/#functions","title":"Functions","text":"Name Summary addListener [jvm]open override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]open override fun awaitRunning()open fun awaitRunning(timeout: Duration)open override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]open override fun awaitTerminated()open fun awaitTerminated(timeout: Duration)open override fun awaitTerminated(timeout: Long, unit: TimeUnit) clusterChanged [jvm]@JvmOverloadsfun clusterChanged(membersBecomingReady: Set&lt;Cluster.Member&gt; = setOf(), membersBecomingNotReady: Set&lt;Cluster.Member&gt; = setOf()) failureCause [jvm]open override fun failureCause(): Throwable isRunning [jvm]open override fun isRunning(): Boolean newResourceMapper [jvm]open override fun newResourceMapper(readyMembers: Set&lt;Cluster.Member&gt;): ClusterResourceMapper startAsync [jvm]@CanIgnoreReturnValueopen override fun startAsync(): Service state [jvm]open override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueopen override fun stopAsync(): Service watch [jvm]open override fun watch(watch: ClusterWatch)Registers interest in cluster changes"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/#properties","title":"Properties","text":"Name Summary resourceMapper [jvm]val resourceMapper: ExplicitClusterResourceMapper snapshot [jvm]open override val snapshot: Cluster.SnapshotThe current moment-in-time view of the cluster state"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/-fake-cluster/","title":"FakeCluster - Misk","text":"<p>//misk-clustering/misk.clustering.fake/FakeCluster/FakeCluster</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/-fake-cluster/#fakecluster","title":"FakeCluster","text":"<p>[jvm]\\ fun FakeCluster(resourceMapper: ExplicitClusterResourceMapper)</p> <p>@Inject</p> <p>fun FakeCluster()</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/cluster-changed/","title":"clusterChanged - Misk","text":"<p>//misk-clustering/misk.clustering.fake/FakeCluster/clusterChanged</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/cluster-changed/#clusterchanged","title":"clusterChanged","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun clusterChanged(membersBecomingReady: Set&lt;Cluster.Member&gt; = setOf(), membersBecomingNotReady: Set&lt;Cluster.Member&gt; = setOf())</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/resource-mapper/","title":"resourceMapper - Misk","text":"<p>//misk-clustering/misk.clustering.fake/FakeCluster/resourceMapper</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/resource-mapper/#resourcemapper","title":"resourceMapper","text":"<p>[jvm]\\ val resourceMapper: ExplicitClusterResourceMapper</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/watch/","title":"watch - Misk","text":"<p>//misk-clustering/misk.clustering.fake/FakeCluster/watch</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/watch/#watch","title":"watch","text":"<p>[jvm]\\ open override fun watch(watch: ClusterWatch)</p> <p>Registers interest in cluster changes</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/-companion/","title":"Companion - Misk","text":"<p>//misk-clustering/misk.clustering.fake/FakeCluster/Companion</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/-companion/#properties","title":"Properties","text":"Name Summary self [jvm]@JvmStaticval self: Cluster.Member SELF_IP [jvm]const val SELF_IP: String SELF_NAME [jvm]const val SELF_NAME: String"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/-companion/-s-e-l-f_-i-p/","title":"SELF_IP - Misk","text":"<p>//misk-clustering/misk.clustering.fake/FakeCluster/Companion/SELF_IP</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/-companion/-s-e-l-f_-i-p/#self_ip","title":"SELF_IP","text":"<p>[jvm]\\ const val SELF_IP: String</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/-companion/-s-e-l-f_-n-a-m-e/","title":"SELF_NAME - Misk","text":"<p>//misk-clustering/misk.clustering.fake/FakeCluster/Companion/SELF_NAME</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/-companion/-s-e-l-f_-n-a-m-e/#self_name","title":"SELF_NAME","text":"<p>[jvm]\\ const val SELF_NAME: String</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/-companion/self/","title":"self - Misk","text":"<p>//misk-clustering/misk.clustering.fake/FakeCluster/Companion/self</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster/-companion/self/#self","title":"self","text":"<p>[jvm]\\</p> <p>@JvmStatic</p> <p>val self: Cluster.Member</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster-module/","title":"FakeClusterModule - Misk","text":"<p>//misk-clustering/misk.clustering.fake/FakeClusterModule</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster-module/#fakeclustermodule","title":"FakeClusterModule","text":"<p>[jvm]\\ class FakeClusterModule : KAbstractModule</p> <p>FakeClusterModule installs fake implementations of the clustering primitives for use in tests</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster-module/#constructors","title":"Constructors","text":"FakeClusterModule [jvm]fun FakeClusterModule()"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster-module/-fake-cluster-module/","title":"FakeClusterModule - Misk","text":"<p>//misk-clustering/misk.clustering.fake/FakeClusterModule/FakeClusterModule</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake/-fake-cluster-module/-fake-cluster-module/#fakeclustermodule","title":"FakeClusterModule","text":"<p>[jvm]\\ fun FakeClusterModule()</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/","title":"Package misk.clustering.fake.lease - Misk","text":"<p>//misk-clustering/misk.clustering.fake.lease</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/#package-miskclusteringfakelease","title":"Package misk.clustering.fake.lease","text":""},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/#types","title":"Types","text":"Name Summary FakeLeaseManager [jvm]@Singletonclass FakeLeaseManager@Injectconstructor : FakeLeaseManagerA FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired FakeLeaseModule [jvm]class FakeLeaseModule : KAbstractModuleFakeLeaseModule installs support for leasing using fakes"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/-fake-lease-manager/","title":"FakeLeaseManager - Misk","text":"<p>//misk-clustering/misk.clustering.fake.lease/FakeLeaseManager</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/-fake-lease-manager/#fakeleasemanager","title":"FakeLeaseManager","text":"<p>[jvm]\\ @Singleton</p> <p>class FakeLeaseManager@Injectconstructor : FakeLeaseManager</p> <p>A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/-fake-lease-manager/#constructors","title":"Constructors","text":"FakeLeaseManager [jvm]@Injectfun FakeLeaseManager()"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/-fake-lease-manager/#functions","title":"Functions","text":"Name Summary isLeaseHeld [jvm]fun isLeaseHeld(name: String): Boolean markLeaseHeld [jvm]fun markLeaseHeld(name: String) markLeaseHeldElsewhere [jvm]fun markLeaseHeldElsewhere(name: String) releaseAll [jvm]open override fun releaseAll() requestLease [jvm]open override fun requestLease(name: String): Lease"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/-fake-lease-manager/-fake-lease-manager/","title":"FakeLeaseManager - Misk","text":"<p>//misk-clustering/misk.clustering.fake.lease/FakeLeaseManager/FakeLeaseManager</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/-fake-lease-manager/-fake-lease-manager/#fakeleasemanager","title":"FakeLeaseManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun FakeLeaseManager()</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/-fake-lease-module/","title":"FakeLeaseModule - Misk","text":"<p>//misk-clustering/misk.clustering.fake.lease/FakeLeaseModule</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/-fake-lease-module/#fakeleasemodule","title":"FakeLeaseModule","text":"<p>[jvm]\\ class FakeLeaseModule : KAbstractModule</p> <p>FakeLeaseModule installs support for leasing using fakes</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/-fake-lease-module/#constructors","title":"Constructors","text":"FakeLeaseModule [jvm]fun FakeLeaseModule()"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/-fake-lease-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/-fake-lease-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/-fake-lease-module/-fake-lease-module/","title":"FakeLeaseModule - Misk","text":"<p>//misk-clustering/misk.clustering.fake.lease/FakeLeaseModule/FakeLeaseModule</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.fake.lease/-fake-lease-module/-fake-lease-module/#fakeleasemodule","title":"FakeLeaseModule","text":"<p>[jvm]\\ fun FakeLeaseModule()</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/","title":"Package misk.clustering.kubernetes - Misk","text":"<p>//misk-clustering/misk.clustering.kubernetes</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/#package-miskclusteringkubernetes","title":"Package misk.clustering.kubernetes","text":""},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/#types","title":"Types","text":"Name Summary KubernetesClusterModule [jvm]class KubernetesClusterModule(config: KubernetesConfig) : KAbstractModuleKubernetesClusterModule installs cluster support based on Kubernetes KubernetesConfig [jvm]data class KubernetesConfig@JvmOverloadsconstructor(my_pod_namespace: String, my_pod_name: String, my_pod_ip: String, clustering_pod_label_selector: String?, kubernetes_watch_read_timeout: Long, kubernetes_read_timeout: Long, kubernetes_connect_timeout: Long) : Config"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-cluster-module/","title":"KubernetesClusterModule - Misk","text":"<p>//misk-clustering/misk.clustering.kubernetes/KubernetesClusterModule</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-cluster-module/#kubernetesclustermodule","title":"KubernetesClusterModule","text":"<p>[jvm]\\ class KubernetesClusterModule(config: KubernetesConfig) : KAbstractModule</p> <p>KubernetesClusterModule installs cluster support based on Kubernetes</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-cluster-module/#constructors","title":"Constructors","text":"KubernetesClusterModule [jvm]fun KubernetesClusterModule(config: KubernetesConfig)"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-cluster-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-cluster-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-cluster-module/-kubernetes-cluster-module/","title":"KubernetesClusterModule - Misk","text":"<p>//misk-clustering/misk.clustering.kubernetes/KubernetesClusterModule/KubernetesClusterModule</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-cluster-module/-kubernetes-cluster-module/#kubernetesclustermodule","title":"KubernetesClusterModule","text":"<p>[jvm]\\ fun KubernetesClusterModule(config: KubernetesConfig)</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/","title":"KubernetesConfig - Misk","text":"<p>//misk-clustering/misk.clustering.kubernetes/KubernetesConfig</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/#kubernetesconfig","title":"KubernetesConfig","text":"<p>[jvm]\\ data class KubernetesConfig@JvmOverloadsconstructor(my_pod_namespace: String, my_pod_name: String, my_pod_ip: String, clustering_pod_label_selector: String?, kubernetes_watch_read_timeout: Long, kubernetes_read_timeout: Long, kubernetes_connect_timeout: Long) : Config</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/#constructors","title":"Constructors","text":"KubernetesConfig [jvm]@JvmOverloadsfun KubernetesConfig(my_pod_namespace: String = System.getenv(\u201cMY_POD_NAMESPACE\u201d) ?: \u201c&lt;invalid-namespace&gt;\u201c, my_pod_name: String = System.getenv(\u201cMY_POD_NAME\u201d) ?: \u201c&lt;invalid-pod-name&gt;\u201c, my_pod_ip: String = System.getenv(\u201cMY_POD_IP\u201d) ?: \u201c&lt;invalid-pod-ip&gt;\u201c, clustering_pod_label_selector: String? = null, kubernetes_watch_read_timeout: Long = 60, kubernetes_read_timeout: Long = 15, kubernetes_connect_timeout: Long = 5)"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/#properties","title":"Properties","text":"Name Summary clustering_pod_label_selector [jvm]val clustering_pod_label_selector: String? = nullOptional Kubernetes label selector to filter which pods     in the namespace are considered to be in the same cluster. If omitted, all healthy pods in     the namespace are included in the cluster.     Ex: \u201capp = helloserver\u201d. kubernetes_connect_timeout [jvm]val kubernetes_connect_timeout: Long = 5 kubernetes_read_timeout [jvm]val kubernetes_read_timeout: Long = 15 kubernetes_watch_read_timeout [jvm]val kubernetes_watch_read_timeout: Long = 60 my_pod_ip [jvm]val my_pod_ip: String my_pod_name [jvm]val my_pod_name: String my_pod_namespace [jvm]val my_pod_namespace: String"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/-kubernetes-config/","title":"KubernetesConfig - Misk","text":"<p>//misk-clustering/misk.clustering.kubernetes/KubernetesConfig/KubernetesConfig</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/-kubernetes-config/#kubernetesconfig","title":"KubernetesConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun KubernetesConfig(my_pod_namespace: String = System.getenv(\u201cMY_POD_NAMESPACE\u201d) ?: \u201c&lt;invalid-namespace&gt;\u201c, my_pod_name: String = System.getenv(\u201cMY_POD_NAME\u201d) ?: \u201c&lt;invalid-pod-name&gt;\u201c, my_pod_ip: String = System.getenv(\u201cMY_POD_IP\u201d) ?: \u201c&lt;invalid-pod-ip&gt;\u201c, clustering_pod_label_selector: String? = null, kubernetes_watch_read_timeout: Long = 60, kubernetes_read_timeout: Long = 15, kubernetes_connect_timeout: Long = 5)</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/clustering_pod_label_selector/","title":"clustering_pod_label_selector - Misk","text":"<p>//misk-clustering/misk.clustering.kubernetes/KubernetesConfig/clustering_pod_label_selector</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/clustering_pod_label_selector/#clustering_pod_label_selector","title":"clustering_pod_label_selector","text":"<p>[jvm]\\ val clustering_pod_label_selector: String? = null</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/kubernetes_connect_timeout/","title":"kubernetes_connect_timeout - Misk","text":"<p>//misk-clustering/misk.clustering.kubernetes/KubernetesConfig/kubernetes_connect_timeout</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/kubernetes_connect_timeout/#kubernetes_connect_timeout","title":"kubernetes_connect_timeout","text":"<p>[jvm]\\ val kubernetes_connect_timeout: Long = 5</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/kubernetes_read_timeout/","title":"kubernetes_read_timeout - Misk","text":"<p>//misk-clustering/misk.clustering.kubernetes/KubernetesConfig/kubernetes_read_timeout</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/kubernetes_read_timeout/#kubernetes_read_timeout","title":"kubernetes_read_timeout","text":"<p>[jvm]\\ val kubernetes_read_timeout: Long = 15</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/kubernetes_watch_read_timeout/","title":"kubernetes_watch_read_timeout - Misk","text":"<p>//misk-clustering/misk.clustering.kubernetes/KubernetesConfig/kubernetes_watch_read_timeout</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/kubernetes_watch_read_timeout/#kubernetes_watch_read_timeout","title":"kubernetes_watch_read_timeout","text":"<p>[jvm]\\ val kubernetes_watch_read_timeout: Long = 60</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/my_pod_ip/","title":"my_pod_ip - Misk","text":"<p>//misk-clustering/misk.clustering.kubernetes/KubernetesConfig/my_pod_ip</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/my_pod_ip/#my_pod_ip","title":"my_pod_ip","text":"<p>[jvm]\\ val my_pod_ip: String</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/my_pod_name/","title":"my_pod_name - Misk","text":"<p>//misk-clustering/misk.clustering.kubernetes/KubernetesConfig/my_pod_name</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/my_pod_name/#my_pod_name","title":"my_pod_name","text":"<p>[jvm]\\ val my_pod_name: String</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/my_pod_namespace/","title":"my_pod_namespace - Misk","text":"<p>//misk-clustering/misk.clustering.kubernetes/KubernetesConfig/my_pod_namespace</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.kubernetes/-kubernetes-config/my_pod_namespace/#my_pod_namespace","title":"my_pod_namespace","text":"<p>[jvm]\\ val my_pod_namespace: String</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/","title":"Package misk.clustering.weights - Misk","text":"<p>//misk-clustering/misk.clustering.weights</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/#package-miskclusteringweights","title":"Package misk.clustering.weights","text":""},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/#types","title":"Types","text":"Name Summary ActiveClusterWeight [jvm]class ActiveClusterWeight : ClusterWeightProviderA static ClusterWeightProvider that always returns 100 ActiveClusterWeightModule [jvm]class ActiveClusterWeightModule : KAbstractModuleProvides an ActiveClusterWeight ClusterWeightProvider [jvm]interface ClusterWeightProviderProvides the current weight assigned to the cluster. ClusterWeightService [jvm]interface ClusterWeightService : ServiceA marker interface for the Service that produces the ClusterWeightProvider. FakeClusterWeight [jvm]class FakeClusterWeight : ClusterWeightProviderA ClusterWeightProvider for testing FakeClusterWeightModule [jvm]class FakeClusterWeightModule : KAbstractModuleProvides a FakeClusterWeight for testing"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight/","title":"ActiveClusterWeight - Misk","text":"<p>//misk-clustering/misk.clustering.weights/ActiveClusterWeight</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight/#activeclusterweight","title":"ActiveClusterWeight","text":"<p>[jvm]\\ class ActiveClusterWeight : ClusterWeightProvider</p> <p>A static ClusterWeightProvider that always returns 100</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight/#constructors","title":"Constructors","text":"ActiveClusterWeight [jvm]fun ActiveClusterWeight()"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): Int"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight/-active-cluster-weight/","title":"ActiveClusterWeight - Misk","text":"<p>//misk-clustering/misk.clustering.weights/ActiveClusterWeight/ActiveClusterWeight</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight/-active-cluster-weight/#activeclusterweight","title":"ActiveClusterWeight","text":"<p>[jvm]\\ fun ActiveClusterWeight()</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight/get/","title":"get - Misk","text":"<p>//misk-clustering/misk.clustering.weights/ActiveClusterWeight/get</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): Int</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight-module/","title":"ActiveClusterWeightModule - Misk","text":"<p>//misk-clustering/misk.clustering.weights/ActiveClusterWeightModule</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight-module/#activeclusterweightmodule","title":"ActiveClusterWeightModule","text":"<p>[jvm]\\ class ActiveClusterWeightModule : KAbstractModule</p> <p>Provides an ActiveClusterWeight</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight-module/#constructors","title":"Constructors","text":"ActiveClusterWeightModule [jvm]fun ActiveClusterWeightModule()"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight-module/-active-cluster-weight-module/","title":"ActiveClusterWeightModule - Misk","text":"<p>//misk-clustering/misk.clustering.weights/ActiveClusterWeightModule/ActiveClusterWeightModule</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-active-cluster-weight-module/-active-cluster-weight-module/#activeclusterweightmodule","title":"ActiveClusterWeightModule","text":"<p>[jvm]\\ fun ActiveClusterWeightModule()</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-cluster-weight-provider/","title":"ClusterWeightProvider - Misk","text":"<p>//misk-clustering/misk.clustering.weights/ClusterWeightProvider</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-cluster-weight-provider/#clusterweightprovider","title":"ClusterWeightProvider","text":"<p>[jvm]\\ interface ClusterWeightProvider</p> <p>Provides the current weight assigned to the cluster.</p> <p>A weight value is between 0 and 100 to indicate how much traffic a cluster should handle. Typically an active-passive setup has 1 active cluster with 100 and 1 passive cluster with 0.</p> <p>If your application does not require dynamic cluster weights, you can install the ActiveClusterWeightModule</p> <p>If your application does require dynamic cluster weights, you need must provide your own impl and ClusterWeightService for others to depend on.</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-cluster-weight-provider/#functions","title":"Functions","text":"Name Summary get [jvm]abstract fun get(): Int"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-cluster-weight-provider/#inheritors","title":"Inheritors","text":"Name ActiveClusterWeight FakeClusterWeight"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-cluster-weight-provider/get/","title":"get - Misk","text":"<p>//misk-clustering/misk.clustering.weights/ClusterWeightProvider/get</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-cluster-weight-provider/get/#get","title":"get","text":"<p>[jvm]\\ abstract fun get(): Int</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-cluster-weight-service/","title":"ClusterWeightService - Misk","text":"<p>//misk-clustering/misk.clustering.weights/ClusterWeightService</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-cluster-weight-service/#clusterweightservice","title":"ClusterWeightService","text":"<p>[jvm]\\ interface ClusterWeightService : Service</p> <p>A marker interface for the Service that produces the ClusterWeightProvider.</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-cluster-weight-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]abstract fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]abstract fun awaitRunning()open fun awaitRunning(timeout: Duration)abstract fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]abstract fun awaitTerminated()open fun awaitTerminated(timeout: Duration)abstract fun awaitTerminated(timeout: Long, unit: TimeUnit) failureCause [jvm]abstract fun failureCause(): Throwable isRunning [jvm]abstract fun isRunning(): Boolean startAsync [jvm]@CanIgnoreReturnValueabstract fun startAsync(): Service state [jvm]abstract fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueabstract fun stopAsync(): Service"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight/","title":"FakeClusterWeight - Misk","text":"<p>//misk-clustering/misk.clustering.weights/FakeClusterWeight</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight/#fakeclusterweight","title":"FakeClusterWeight","text":"<p>[jvm]\\ class FakeClusterWeight : ClusterWeightProvider</p> <p>A ClusterWeightProvider for testing</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight/#constructors","title":"Constructors","text":"FakeClusterWeight [jvm]fun FakeClusterWeight()"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): Int setClusterWeight [jvm]fun setClusterWeight(weight: Int)"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight/-fake-cluster-weight/","title":"FakeClusterWeight - Misk","text":"<p>//misk-clustering/misk.clustering.weights/FakeClusterWeight/FakeClusterWeight</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight/-fake-cluster-weight/#fakeclusterweight","title":"FakeClusterWeight","text":"<p>[jvm]\\ fun FakeClusterWeight()</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight/get/","title":"get - Misk","text":"<p>//misk-clustering/misk.clustering.weights/FakeClusterWeight/get</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): Int</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight/set-cluster-weight/","title":"setClusterWeight - Misk","text":"<p>//misk-clustering/misk.clustering.weights/FakeClusterWeight/setClusterWeight</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight/set-cluster-weight/#setclusterweight","title":"setClusterWeight","text":"<p>[jvm]\\ fun setClusterWeight(weight: Int)</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight-module/","title":"FakeClusterWeightModule - Misk","text":"<p>//misk-clustering/misk.clustering.weights/FakeClusterWeightModule</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight-module/#fakeclusterweightmodule","title":"FakeClusterWeightModule","text":"<p>[jvm]\\ class FakeClusterWeightModule : KAbstractModule</p> <p>Provides a FakeClusterWeight for testing</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight-module/#constructors","title":"Constructors","text":"FakeClusterWeightModule [jvm]fun FakeClusterWeightModule()"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight-module/-fake-cluster-weight-module/","title":"FakeClusterWeightModule - Misk","text":"<p>//misk-clustering/misk.clustering.weights/FakeClusterWeightModule/FakeClusterWeightModule</p>"},{"location":"0.x/misk-clustering/misk-clustering/misk.clustering.weights/-fake-cluster-weight-module/-fake-cluster-weight-module/#fakeclusterweightmodule","title":"FakeClusterWeightModule","text":"<p>[jvm]\\ fun FakeClusterWeightModule()</p>"},{"location":"0.x/misk-config/","title":"misk-config - Misk","text":"<p>//misk-config</p>"},{"location":"0.x/misk-config/#misk-config","title":"misk-config","text":""},{"location":"0.x/misk-config/#packages","title":"Packages","text":"Name misk.config misk.resources"},{"location":"0.x/misk-config/misk-config/misk.config/","title":"Package misk.config - Misk","text":"<p>//misk-config/misk.config</p>"},{"location":"0.x/misk-config/misk-config/misk.config/#package-miskconfig","title":"Package misk.config","text":""},{"location":"0.x/misk-config/misk-config/misk.config/#types","title":"Types","text":"Name Summary AppName [jvm]@Qualifier@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.FUNCTION, AnnotationTarget.VALUE_PARAMETER])annotation class AppName AppNameModule [jvm]class AppNameModule(appName: String) : KAbstractModuleBinds a @AppName String to the provided application name ConfigModule [jvm]class ConfigModule&lt;T : Config&gt;(configClass: Class&lt;T&gt;, appName: String, config: T) : KAbstractModule MiskConfig [jvm]object MiskConfig Redact [jvm]@Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.PROPERTY, AnnotationTarget.VALUE_PARAMETER])annotation class RedactField or class will be redacted in dashboard output. Secret [jvm]interface Secret&lt;T&gt;Type for any secrets that need to be loaded as reference in their config file. Secret addresses should use format specified in misk.resources.ResourceLoader."},{"location":"0.x/misk-config/misk-config/misk.config/-app-name/","title":"AppName - Misk","text":"<p>//misk-config/misk.config/AppName</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-app-name/#appname","title":"AppName","text":"<p>[jvm]\\ @Qualifier</p> <p>@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.FUNCTION, AnnotationTarget.VALUE_PARAMETER])</p> <p>annotation class AppName</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-app-name/-app-name/","title":"AppName - Misk","text":"<p>//misk-config/misk.config/AppName/AppName</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-app-name/-app-name/#appname","title":"AppName","text":"<p>[jvm]\\ fun AppName()</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-app-name-module/","title":"AppNameModule - Misk","text":"<p>//misk-config/misk.config/AppNameModule</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-app-name-module/#appnamemodule","title":"AppNameModule","text":"<p>[jvm]\\ class AppNameModule(appName: String) : KAbstractModule</p> <p>Binds a @AppName String to the provided application name</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-app-name-module/#constructors","title":"Constructors","text":"AppNameModule [jvm]fun AppNameModule(appName: String)"},{"location":"0.x/misk-config/misk-config/misk.config/-app-name-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-config/misk-config/misk.config/-app-name-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-config/misk-config/misk.config/-app-name-module/-app-name-module/","title":"AppNameModule - Misk","text":"<p>//misk-config/misk.config/AppNameModule/AppNameModule</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-app-name-module/-app-name-module/#appnamemodule","title":"AppNameModule","text":"<p>[jvm]\\ fun AppNameModule(appName: String)</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-config-module/","title":"ConfigModule - Misk","text":"<p>//misk-config/misk.config/ConfigModule</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-config-module/#configmodule","title":"ConfigModule","text":"<p>[jvm]\\ class ConfigModule&lt;T : Config&gt;(configClass: Class&lt;T&gt;, appName: String, config: T) : KAbstractModule</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-config-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-config/misk-config/misk.config/-config-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-config/misk-config/misk.config/-config-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-config/misk-config/misk.config/-config-module/-config-module/","title":"ConfigModule - Misk","text":"<p>//misk-config/misk.config/ConfigModule/ConfigModule</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-config-module/-config-module/#configmodule","title":"ConfigModule","text":"<p>[jvm]\\ fun &lt;T : Config&gt; ConfigModule(configClass: Class&lt;T&gt;, appName: String, config: T)</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-config-module/-companion/","title":"Companion - Misk","text":"<p>//misk-config/misk.config/ConfigModule/Companion</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-config-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-config-module/-companion/#functions","title":"Functions","text":"Name Summary create [jvm]inline fun &lt;T : Config&gt; create(appName: String, config: T): ConfigModule&lt;T&gt;"},{"location":"0.x/misk-config/misk-config/misk.config/-config-module/-companion/create/","title":"create - Misk","text":"<p>//misk-config/misk.config/ConfigModule/Companion/create</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-config-module/-companion/create/#create","title":"create","text":"<p>[jvm]\\ inline fun &lt;T : Config&gt; create(appName: String, config: T): ConfigModule&lt;T&gt;</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/","title":"MiskConfig - Misk","text":"<p>//misk-config/misk.config/MiskConfig</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/#miskconfig","title":"MiskConfig","text":"<p>[jvm]\\ object MiskConfig</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/#types","title":"Types","text":"Name Summary RealSecret [jvm]class RealSecret&lt;T&gt;@JvmOverloadsconstructor(value: T, reference: String) : Secret&lt;T&gt; RedactSecretJacksonModule [jvm]class RedactSecretJacksonModule : SimpleModule SecretJacksonModule [jvm]class SecretJacksonModule(resourceLoader: ResourceLoader, mapper: ObjectMapper) : SimpleModule"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/#functions","title":"Functions","text":"Name Summary filesInDir [jvm]@JvmStaticfun filesInDir(dir: String, filter: FilenameFilter = FilenameFilter { _, filename -&gt; filename.endsWith(\u201c.yaml\u201d) }): List&lt;File&gt; load [jvm]@JvmStaticinline fun &lt;T : Config&gt; load(appName: String, deployment: Deployment, overrideFiles: List&lt;File&gt; = listOf(), resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T@JvmStaticfun &lt;T : Config&gt; load(configClass: Class&lt;out Config&gt;, appName: String, deployment: Deployment, overrideFiles: List&lt;File&gt; = listOf(), resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T@JvmStaticinline fun &lt;T : Config&gt; load(appName: String, deployment: Deployment, overrideResources: List&lt;String&gt; = listOf(), overrideValues: JsonNode? = null, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T@JvmStaticfun &lt;T : Config&gt; load(configClass: Class&lt;out Config&gt;, appName: String, deployment: Deployment, overrideResources: List&lt;String&gt; = listOf(), overrideValues: JsonNode? = null, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T loadConfigYamlMap [jvm]fun loadConfigYamlMap(appName: String, deployment: Deployment, overrideResources: List&lt;String&gt;, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): Map&lt;String, String?&gt;Returns a map whose keys are the names of the source Yaml files to load, and whose values are the contents of those files. If a file is absent the map\u2019s value will be null. toRedactedYaml [jvm]fun &lt;T : Config&gt; toRedactedYaml(config: T, resourceLoader: ResourceLoader): String"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/files-in-dir/","title":"filesInDir - Misk","text":"<p>//misk-config/misk.config/MiskConfig/filesInDir</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/files-in-dir/#filesindir","title":"filesInDir","text":"<p>[jvm]\\</p> <p>@JvmStatic</p> <p>fun filesInDir(dir: String, filter: FilenameFilter = FilenameFilter { _, filename -&gt; filename.endsWith(\u201c.yaml\u201d) }): List&lt;File&gt;</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/load-config-yaml-map/","title":"loadConfigYamlMap - Misk","text":"<p>//misk-config/misk.config/MiskConfig/loadConfigYamlMap</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/load-config-yaml-map/#loadconfigyamlmap","title":"loadConfigYamlMap","text":"<p>[jvm]\\ fun loadConfigYamlMap(appName: String, deployment: Deployment, overrideResources: List&lt;String&gt;, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): Map&lt;String, String?&gt;</p> <p>Returns a map whose keys are the names of the source Yaml files to load, and whose values are the contents of those files. If a file is absent the map\u2019s value will be null.</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/load/","title":"load - Misk","text":"<p>//misk-config/misk.config/MiskConfig/load</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/load/#load","title":"load","text":"<p>[jvm]\\</p> <p>@JvmStatic</p> <p>inline fun &lt;T : Config&gt; load(appName: String, deployment: Deployment, overrideFiles: List&lt;File&gt; = listOf(), resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T</p> <p>@JvmStatic</p> <p>inline fun &lt;T : Config&gt; load(appName: String, deployment: Deployment, overrideResources: List&lt;String&gt; = listOf(), overrideValues: JsonNode? = null, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T</p> <p>@JvmStatic</p> <p>fun &lt;T : Config&gt; load(configClass: Class&lt;out Config&gt;, appName: String, deployment: Deployment, overrideFiles: List&lt;File&gt; = listOf(), resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T</p> <p>@JvmStatic</p> <p>fun &lt;T : Config&gt; load(configClass: Class&lt;out Config&gt;, appName: String, deployment: Deployment, overrideResources: List&lt;String&gt; = listOf(), overrideValues: JsonNode? = null, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/to-redacted-yaml/","title":"toRedactedYaml - Misk","text":"<p>//misk-config/misk.config/MiskConfig/toRedactedYaml</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/to-redacted-yaml/#toredactedyaml","title":"toRedactedYaml","text":"<p>[jvm]\\ fun &lt;T : Config&gt; toRedactedYaml(config: T, resourceLoader: ResourceLoader): String</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-real-secret/","title":"RealSecret - Misk","text":"<p>//misk-config/misk.config/MiskConfig/RealSecret</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-real-secret/#realsecret","title":"RealSecret","text":"<p>[jvm]\\ class RealSecret&lt;T&gt;@JvmOverloadsconstructor(value: T, reference: String) : Secret&lt;T&gt;</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-real-secret/#functions","title":"Functions","text":"Name Summary toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-real-secret/#properties","title":"Properties","text":"Name Summary value [jvm]open override val value: T"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-real-secret/-real-secret/","title":"RealSecret - Misk","text":"<p>//misk-config/misk.config/MiskConfig/RealSecret/RealSecret</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-real-secret/-real-secret/#realsecret","title":"RealSecret","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun &lt;T&gt; RealSecret(value: T, reference: String = \u201c\u201d)</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-real-secret/to-string/","title":"toString - Misk","text":"<p>//misk-config/misk.config/MiskConfig/RealSecret/toString</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-real-secret/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-real-secret/value/","title":"value - Misk","text":"<p>//misk-config/misk.config/MiskConfig/RealSecret/value</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-real-secret/value/#value","title":"value","text":"<p>[jvm]\\ open override val value: T</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-redact-secret-jackson-module/","title":"RedactSecretJacksonModule - Misk","text":"<p>//misk-config/misk.config/MiskConfig/RedactSecretJacksonModule</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-redact-secret-jackson-module/#redactsecretjacksonmodule","title":"RedactSecretJacksonModule","text":"<p>[jvm]\\ class RedactSecretJacksonModule : SimpleModule</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-redact-secret-jackson-module/#functions","title":"Functions","text":"Name Summary _checkNotNull [jvm]open fun _checkNotNull(p0: Any, p1: String) addAbstractTypeMapping [jvm]open fun &lt;T : Any&gt; addAbstractTypeMapping(p0: Class&lt;T&gt;, p1: Class&lt;out T&gt;): SimpleModule addDeserializer [jvm]open fun &lt;T : Any&gt; addDeserializer(p0: Class&lt;T&gt;, p1: JsonDeserializer&lt;out T&gt;): SimpleModule addKeyDeserializer [jvm]open fun addKeyDeserializer(p0: Class&lt;*&gt;, p1: KeyDeserializer): SimpleModule addKeySerializer [jvm]open fun &lt;T : Any&gt; addKeySerializer(p0: Class&lt;out T&gt;, p1: JsonSerializer&lt;T&gt;): SimpleModule addSerializer [jvm]open fun addSerializer(p0: JsonSerializer&lt;*&gt;): SimpleModuleopen fun &lt;T : Any&gt; addSerializer(p0: Class&lt;out T&gt;, p1: JsonSerializer&lt;T&gt;): SimpleModule addValueInstantiator [jvm]open fun addValueInstantiator(p0: Class&lt;*&gt;, p1: ValueInstantiator): SimpleModule getDependencies [jvm]open fun getDependencies(): MutableIterable&lt;Module&gt; getModuleName [jvm]open override fun getModuleName(): String getTypeId [jvm]open override fun getTypeId(): Any registerSubtypes [jvm]open fun registerSubtypes(vararg p0: NamedType): SimpleModuleopen fun registerSubtypes(vararg p0: Class&lt;&gt;): SimpleModuleopen fun registerSubtypes(p0: MutableCollection&lt;Class&lt;&gt;&gt;): SimpleModule setAbstractTypes [jvm]open fun setAbstractTypes(p0: SimpleAbstractTypeResolver) setDeserializerModifier [jvm]open fun setDeserializerModifier(p0: BeanDeserializerModifier): SimpleModule setDeserializers [jvm]open fun setDeserializers(p0: SimpleDeserializers) setKeyDeserializers [jvm]open fun setKeyDeserializers(p0: SimpleKeyDeserializers) setKeySerializers [jvm]open fun setKeySerializers(p0: SimpleSerializers) setMixInAnnotation [jvm]open fun setMixInAnnotation(p0: Class&lt;&gt;, p1: Class&lt;&gt;): SimpleModule setNamingStrategy [jvm]open fun setNamingStrategy(p0: PropertyNamingStrategy): SimpleModule setSerializerModifier [jvm]open fun setSerializerModifier(p0: BeanSerializerModifier): SimpleModule setSerializers [jvm]open fun setSerializers(p0: SimpleSerializers) setupModule [jvm]open override fun setupModule(context: Module.SetupContext?) setValueInstantiators [jvm]open fun setValueInstantiators(p0: SimpleValueInstantiators) version [jvm]open override fun version(): Version"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-redact-secret-jackson-module/#properties","title":"Properties","text":"Name Summary _abstractTypes [jvm]val _abstractTypes: SimpleAbstractTypeResolver _deserializerModifier [jvm]val _deserializerModifier: BeanDeserializerModifier _deserializers [jvm]val _deserializers: SimpleDeserializers _hasExplicitName [jvm]val _hasExplicitName: Boolean _keyDeserializers [jvm]val _keyDeserializers: SimpleKeyDeserializers _keySerializers [jvm]val _keySerializers: SimpleSerializers _mixins [jvm]val _mixins: HashMap&lt;Class&lt;&gt;, Class&lt;&gt;&gt; _name [jvm]val _name: String _namingStrategy [jvm]val _namingStrategy: PropertyNamingStrategy _serializerModifier [jvm]val _serializerModifier: BeanSerializerModifier _serializers [jvm]val _serializers: SimpleSerializers _subtypes [jvm]val _subtypes: LinkedHashSet&lt;NamedType&gt; _valueInstantiators [jvm]val _valueInstantiators: SimpleValueInstantiators _version [jvm]val _version: Version"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-redact-secret-jackson-module/-redact-secret-jackson-module/","title":"RedactSecretJacksonModule - Misk","text":"<p>//misk-config/misk.config/MiskConfig/RedactSecretJacksonModule/RedactSecretJacksonModule</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-redact-secret-jackson-module/-redact-secret-jackson-module/#redactsecretjacksonmodule","title":"RedactSecretJacksonModule","text":"<p>[jvm]\\ fun RedactSecretJacksonModule()</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-redact-secret-jackson-module/setup-module/","title":"setupModule - Misk","text":"<p>//misk-config/misk.config/MiskConfig/RedactSecretJacksonModule/setupModule</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-redact-secret-jackson-module/setup-module/#setupmodule","title":"setupModule","text":"<p>[jvm]\\ open override fun setupModule(context: Module.SetupContext?)</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-secret-jackson-module/","title":"SecretJacksonModule - Misk","text":"<p>//misk-config/misk.config/MiskConfig/SecretJacksonModule</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-secret-jackson-module/#secretjacksonmodule","title":"SecretJacksonModule","text":"<p>[jvm]\\ class SecretJacksonModule(resourceLoader: ResourceLoader, mapper: ObjectMapper) : SimpleModule</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-secret-jackson-module/#functions","title":"Functions","text":"Name Summary _checkNotNull [jvm]open fun _checkNotNull(p0: Any, p1: String) addAbstractTypeMapping [jvm]open fun &lt;T : Any&gt; addAbstractTypeMapping(p0: Class&lt;T&gt;, p1: Class&lt;out T&gt;): SimpleModule addDeserializer [jvm]open fun &lt;T : Any&gt; addDeserializer(p0: Class&lt;T&gt;, p1: JsonDeserializer&lt;out T&gt;): SimpleModule addKeyDeserializer [jvm]open fun addKeyDeserializer(p0: Class&lt;*&gt;, p1: KeyDeserializer): SimpleModule addKeySerializer [jvm]open fun &lt;T : Any&gt; addKeySerializer(p0: Class&lt;out T&gt;, p1: JsonSerializer&lt;T&gt;): SimpleModule addSerializer [jvm]open fun addSerializer(p0: JsonSerializer&lt;*&gt;): SimpleModuleopen fun &lt;T : Any&gt; addSerializer(p0: Class&lt;out T&gt;, p1: JsonSerializer&lt;T&gt;): SimpleModule addValueInstantiator [jvm]open fun addValueInstantiator(p0: Class&lt;*&gt;, p1: ValueInstantiator): SimpleModule getDependencies [jvm]open fun getDependencies(): MutableIterable&lt;Module&gt; getModuleName [jvm]open override fun getModuleName(): String getTypeId [jvm]open override fun getTypeId(): Any registerSubtypes [jvm]open fun registerSubtypes(vararg p0: NamedType): SimpleModuleopen fun registerSubtypes(vararg p0: Class&lt;&gt;): SimpleModuleopen fun registerSubtypes(p0: MutableCollection&lt;Class&lt;&gt;&gt;): SimpleModule setAbstractTypes [jvm]open fun setAbstractTypes(p0: SimpleAbstractTypeResolver) setDeserializerModifier [jvm]open fun setDeserializerModifier(p0: BeanDeserializerModifier): SimpleModule setDeserializers [jvm]open fun setDeserializers(p0: SimpleDeserializers) setKeyDeserializers [jvm]open fun setKeyDeserializers(p0: SimpleKeyDeserializers) setKeySerializers [jvm]open fun setKeySerializers(p0: SimpleSerializers) setMixInAnnotation [jvm]open fun setMixInAnnotation(p0: Class&lt;&gt;, p1: Class&lt;&gt;): SimpleModule setNamingStrategy [jvm]open fun setNamingStrategy(p0: PropertyNamingStrategy): SimpleModule setSerializerModifier [jvm]open fun setSerializerModifier(p0: BeanSerializerModifier): SimpleModule setSerializers [jvm]open fun setSerializers(p0: SimpleSerializers) setupModule [jvm]open override fun setupModule(context: Module.SetupContext?) setValueInstantiators [jvm]open fun setValueInstantiators(p0: SimpleValueInstantiators) version [jvm]open override fun version(): Version"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-secret-jackson-module/#properties","title":"Properties","text":"Name Summary _abstractTypes [jvm]val _abstractTypes: SimpleAbstractTypeResolver _deserializerModifier [jvm]val _deserializerModifier: BeanDeserializerModifier _deserializers [jvm]val _deserializers: SimpleDeserializers _hasExplicitName [jvm]val _hasExplicitName: Boolean _keyDeserializers [jvm]val _keyDeserializers: SimpleKeyDeserializers _keySerializers [jvm]val _keySerializers: SimpleSerializers _mixins [jvm]val _mixins: HashMap&lt;Class&lt;&gt;, Class&lt;&gt;&gt; _name [jvm]val _name: String _namingStrategy [jvm]val _namingStrategy: PropertyNamingStrategy _serializerModifier [jvm]val _serializerModifier: BeanSerializerModifier _serializers [jvm]val _serializers: SimpleSerializers _subtypes [jvm]val _subtypes: LinkedHashSet&lt;NamedType&gt; _valueInstantiators [jvm]val _valueInstantiators: SimpleValueInstantiators _version [jvm]val _version: Version mapper [jvm]val mapper: ObjectMapper resourceLoader [jvm]val resourceLoader: ResourceLoader"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-secret-jackson-module/-secret-jackson-module/","title":"SecretJacksonModule - Misk","text":"<p>//misk-config/misk.config/MiskConfig/SecretJacksonModule/SecretJacksonModule</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-secret-jackson-module/-secret-jackson-module/#secretjacksonmodule","title":"SecretJacksonModule","text":"<p>[jvm]\\ fun SecretJacksonModule(resourceLoader: ResourceLoader, mapper: ObjectMapper)</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-secret-jackson-module/mapper/","title":"mapper - Misk","text":"<p>//misk-config/misk.config/MiskConfig/SecretJacksonModule/mapper</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-secret-jackson-module/mapper/#mapper","title":"mapper","text":"<p>[jvm]\\ val mapper: ObjectMapper</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-secret-jackson-module/resource-loader/","title":"resourceLoader - Misk","text":"<p>//misk-config/misk.config/MiskConfig/SecretJacksonModule/resourceLoader</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-secret-jackson-module/resource-loader/#resourceloader","title":"resourceLoader","text":"<p>[jvm]\\ val resourceLoader: ResourceLoader</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-secret-jackson-module/setup-module/","title":"setupModule - Misk","text":"<p>//misk-config/misk.config/MiskConfig/SecretJacksonModule/setupModule</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-misk-config/-secret-jackson-module/setup-module/#setupmodule","title":"setupModule","text":"<p>[jvm]\\ open override fun setupModule(context: Module.SetupContext?)</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-redact/","title":"Redact - Misk","text":"<p>//misk-config/misk.config/Redact</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-redact/#redact","title":"Redact","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.PROPERTY, AnnotationTarget.VALUE_PARAMETER])</p> <p>annotation class Redact</p> <p>Field or class will be redacted in dashboard output.</p> <p>import misk.config.Redact\\ \\ data class MyServiceConfig(\\   val customConfig: CustomConfig,\\   val secretConfig: SecretConfig\\ )\\ \\ data class CustomConfig(\\   @Redact\\   val secretSubconfig: Subconfig\\ )\\ \\ @Redact\\ data class SecretConfig(\\   val key: String\\ )</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-redact/#constructors","title":"Constructors","text":"Redact [jvm]fun Redact()"},{"location":"0.x/misk-config/misk-config/misk.config/-redact/-redact/","title":"Redact - Misk","text":"<p>//misk-config/misk.config/Redact/Redact</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-redact/-redact/#redact","title":"Redact","text":"<p>[jvm]\\ fun Redact()</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-secret/","title":"Secret - Misk","text":"<p>//misk-config/misk.config/Secret</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-secret/#secret","title":"Secret","text":"<p>[jvm]\\ interface Secret&lt;T&gt;</p> <p>Type for any secrets that need to be loaded as reference in their config file. Secret addresses should use format specified in misk.resources.ResourceLoader.</p> <p>Usage example:</p> <p>data class SuperSecretConfig(\\  val string_value: String,\\  val secret_information: Secret&lt;SecretInformationConfig&gt;,\\ ) : Config</p> <p>With</p> <p>data class SecretInformationConfig(\\  val answer_to_universe: String,\\  val limit: Int\\ ) : Config</p> <p>We would have the SuperSecretConfig yaml be:</p> <p>string_value: \u201cthis is not a secret\u201d\\ secret_information: \u201cclasspath:/misk/resources/secret_information_values.yaml\u201d</p> <p>And the secret_information stored as:</p> <p>answer_to_universe: 42\\ limit: 5</p> <p>Lastly, this secret information would be accessed using:</p> <p>superSecretConfig.secret_information.value.answer_to_universe</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-secret/#properties","title":"Properties","text":"Name Summary value [jvm]abstract val value: T"},{"location":"0.x/misk-config/misk-config/misk.config/-secret/#inheritors","title":"Inheritors","text":"Name RealSecret"},{"location":"0.x/misk-config/misk-config/misk.config/-secret/value/","title":"value - Misk","text":"<p>//misk-config/misk.config/Secret/value</p>"},{"location":"0.x/misk-config/misk-config/misk.config/-secret/value/#value","title":"value","text":"<p>[jvm]\\ abstract val value: T</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/","title":"Package misk.resources - Misk","text":"<p>//misk-config/misk.resources</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/#package-miskresources","title":"Package misk.resources","text":""},{"location":"0.x/misk-config/misk-config/misk.resources/#types","title":"Types","text":"Name Summary FakeFilesModule [jvm]class FakeFilesModule(fakeFiles: Map&lt;String, String&gt;) : KAbstractModuleAdds the provided fake files to the map used by FilesystemLoaderBackend. ForFakeFiles [jvm]@Qualifierannotation class ForFakeFiles ResourceLoader [jvm]@Singletonclass ResourceLoader@Injectconstructor(backends: Map&lt;String, ResourceLoader.Backend&gt;)ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. ResourceLoaderModule [jvm]class ResourceLoaderModule : KAbstractModule TestingResourceLoaderModule [jvm]class TestingResourceLoaderModule : KAbstractModuleCan be used instead of ResourceLoaderModule in tests to load filesystem: resources using FakeFilesystemLoaderBackend"},{"location":"0.x/misk-config/misk-config/misk.resources/-fake-files-module/","title":"FakeFilesModule - Misk","text":"<p>//misk-config/misk.resources/FakeFilesModule</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-fake-files-module/#fakefilesmodule","title":"FakeFilesModule","text":"<p>[jvm]\\ class FakeFilesModule(fakeFiles: Map&lt;String, String&gt;) : KAbstractModule</p> <p>Adds the provided fake files to the map used by FilesystemLoaderBackend.</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-fake-files-module/#constructors","title":"Constructors","text":"FakeFilesModule [jvm]fun FakeFilesModule(fakeFiles: Map&lt;String, String&gt;)"},{"location":"0.x/misk-config/misk-config/misk.resources/-fake-files-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-config/misk-config/misk.resources/-fake-files-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-config/misk-config/misk.resources/-fake-files-module/-fake-files-module/","title":"FakeFilesModule - Misk","text":"<p>//misk-config/misk.resources/FakeFilesModule/FakeFilesModule</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-fake-files-module/-fake-files-module/#fakefilesmodule","title":"FakeFilesModule","text":"<p>[jvm]\\ fun FakeFilesModule(fakeFiles: Map&lt;String, String&gt;)</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-for-fake-files/","title":"ForFakeFiles - Misk","text":"<p>//misk-config/misk.resources/ForFakeFiles</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-for-fake-files/#forfakefiles","title":"ForFakeFiles","text":"<p>[jvm]\\ @Qualifier</p> <p>annotation class ForFakeFiles</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-for-fake-files/-for-fake-files/","title":"ForFakeFiles - Misk","text":"<p>//misk-config/misk.resources/ForFakeFiles/ForFakeFiles</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-for-fake-files/-for-fake-files/#forfakefiles","title":"ForFakeFiles","text":"<p>[jvm]\\ fun ForFakeFiles()</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/","title":"ResourceLoader - Misk","text":"<p>//misk-config/misk.resources/ResourceLoader</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/#resourceloader","title":"ResourceLoader","text":"<p>[jvm]\\ @Singleton</p> <p>class ResourceLoader@Injectconstructor(backends: Map&lt;String, ResourceLoader.Backend&gt;)</p> <p>ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source.</p> <p>Resource addresses have a scheme name, a colon, and an absolute filesystem-like path: classpath:/migrations/v1.sql. Schemes identify backends classpath: or memory:. Paths start with a slash and have any number of segments.</p> <p>Classpath resources use the scheme classpath:. The backend reads data from the src/main/resources of the project\u2019s modules and the contents of all library .jar files. Classpath resources are read-only.</p> <p>Filesystem resources use the scheme filesystem:. The backend reads data from the host machine\u2019s local filesystem. It is read-only and does not support list.</p> <p>Memory resources use the scheme memory:. The backend starts empty and is populated by calls to put.</p> <p>Other backends are permitted. They should be registered with a MapBinder with the backend scheme like classpath: as the key.</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/#constructors","title":"Constructors","text":"ResourceLoader [jvm]@Injectfun ResourceLoader(backends: Map&lt;String, ResourceLoader.Backend&gt;)"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/#functions","title":"Functions","text":"Name Summary copyTo [jvm]fun copyTo(root: String, dir: Path)Copies all resources with root as a prefix to the directory dir. exists [jvm]fun exists(address: String): BooleanReturns true if a resource at address exists. list [jvm]fun list(address: String): List&lt;String&gt;Returns the full path of the resources that are immediate children of address. open [jvm]fun open(address: String): BufferedSource?Return a buffered source for address, or null if no such resource exists. put [jvm]fun put(address: String, utf8: String)Writes a resource as UTF-8. Throws if the backend is readonly.[jvm]fun put(address: String, data: ByteString)Writes a resource. Throws if the backend is readonly. requireUtf8 [jvm]fun requireUtf8(address: String): StringLike utf8, but throws IllegalStateException if the resource is missing. utf8 [jvm]fun utf8(address: String): String?Return the contents of address as a string, or null if no such resource exists. Note that this method decodes the resource on every use. It is the caller\u2019s responsibility to cache the result if it is to be loaded frequently. walk [jvm]fun walk(address: String): List&lt;String&gt;"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/#properties","title":"Properties","text":"Name Summary delegate [jvm]val delegate: ResourceLoader"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/-resource-loader/","title":"ResourceLoader - Misk","text":"<p>//misk-config/misk.resources/ResourceLoader/ResourceLoader</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/-resource-loader/#resourceloader","title":"ResourceLoader","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ResourceLoader(backends: Map&lt;String, ResourceLoader.Backend&gt;)</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/copy-to/","title":"copyTo - Misk","text":"<p>//misk-config/misk.resources/ResourceLoader/copyTo</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/copy-to/#copyto","title":"copyTo","text":"<p>[jvm]\\ fun copyTo(root: String, dir: Path)</p> <p>Copies all resources with root as a prefix to the directory dir.</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/delegate/","title":"delegate - Misk","text":"<p>//misk-config/misk.resources/ResourceLoader/delegate</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/delegate/#delegate","title":"delegate","text":"<p>[jvm]\\ val delegate: ResourceLoader</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/exists/","title":"exists - Misk","text":"<p>//misk-config/misk.resources/ResourceLoader/exists</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/exists/#exists","title":"exists","text":"<p>[jvm]\\ fun exists(address: String): Boolean</p> <p>Returns true if a resource at address exists.</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/list/","title":"list - Misk","text":"<p>//misk-config/misk.resources/ResourceLoader/list</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/list/#list","title":"list","text":"<p>[jvm]\\ fun list(address: String): List&lt;String&gt;</p> <p>Returns the full path of the resources that are immediate children of address.</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/open/","title":"open - Misk","text":"<p>//misk-config/misk.resources/ResourceLoader/open</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/open/#open","title":"open","text":"<p>[jvm]\\ fun open(address: String): BufferedSource?</p> <p>Return a buffered source for address, or null if no such resource exists.</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/put/","title":"put - Misk","text":"<p>//misk-config/misk.resources/ResourceLoader/put</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/put/#put","title":"put","text":"<p>[jvm]\\ fun put(address: String, utf8: String)</p> <p>Writes a resource as UTF-8. Throws if the backend is readonly.</p> <p>[jvm]\\ fun put(address: String, data: ByteString)</p> <p>Writes a resource. Throws if the backend is readonly.</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/require-utf8/","title":"requireUtf8 - Misk","text":"<p>//misk-config/misk.resources/ResourceLoader/requireUtf8</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/require-utf8/#requireutf8","title":"requireUtf8","text":"<p>[jvm]\\ fun requireUtf8(address: String): String</p> <p>Like utf8, but throws IllegalStateException if the resource is missing.</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/utf8/","title":"utf8 - Misk","text":"<p>//misk-config/misk.resources/ResourceLoader/utf8</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/utf8/#utf8","title":"utf8","text":"<p>[jvm]\\ fun utf8(address: String): String?</p> <p>Return the contents of address as a string, or null if no such resource exists. Note that this method decodes the resource on every use. It is the caller\u2019s responsibility to cache the result if it is to be loaded frequently.</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/walk/","title":"walk - Misk","text":"<p>//misk-config/misk.resources/ResourceLoader/walk</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/walk/#walk","title":"walk","text":"<p>[jvm]\\ fun walk(address: String): List&lt;String&gt;</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/-companion/","title":"Companion - Misk","text":"<p>//misk-config/misk.resources/ResourceLoader/Companion</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/-companion/#properties","title":"Properties","text":"Name Summary SYSTEM [jvm]val SYSTEM: ResourceLoader"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/-companion/-s-y-s-t-e-m/","title":"SYSTEM - Misk","text":"<p>//misk-config/misk.resources/ResourceLoader/Companion/SYSTEM</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader/-companion/-s-y-s-t-e-m/#system","title":"SYSTEM","text":"<p>[jvm]\\ val SYSTEM: ResourceLoader</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader-module/","title":"ResourceLoaderModule - Misk","text":"<p>//misk-config/misk.resources/ResourceLoaderModule</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader-module/#resourceloadermodule","title":"ResourceLoaderModule","text":"<p>[jvm]\\ class ResourceLoaderModule : KAbstractModule</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader-module/-resource-loader-module/","title":"ResourceLoaderModule - Misk","text":"<p>//misk-config/misk.resources/ResourceLoaderModule/ResourceLoaderModule</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-resource-loader-module/-resource-loader-module/#resourceloadermodule","title":"ResourceLoaderModule","text":"<p>[jvm]\\ fun ResourceLoaderModule()</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-testing-resource-loader-module/","title":"TestingResourceLoaderModule - Misk","text":"<p>//misk-config/misk.resources/TestingResourceLoaderModule</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-testing-resource-loader-module/#testingresourceloadermodule","title":"TestingResourceLoaderModule","text":"<p>[jvm]\\ class TestingResourceLoaderModule : KAbstractModule</p> <p>Can be used instead of ResourceLoaderModule in tests to load filesystem: resources using FakeFilesystemLoaderBackend</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-testing-resource-loader-module/#constructors","title":"Constructors","text":"TestingResourceLoaderModule [jvm]fun TestingResourceLoaderModule()"},{"location":"0.x/misk-config/misk-config/misk.resources/-testing-resource-loader-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-config/misk-config/misk.resources/-testing-resource-loader-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-config/misk-config/misk.resources/-testing-resource-loader-module/-testing-resource-loader-module/","title":"TestingResourceLoaderModule - Misk","text":"<p>//misk-config/misk.resources/TestingResourceLoaderModule/TestingResourceLoaderModule</p>"},{"location":"0.x/misk-config/misk-config/misk.resources/-testing-resource-loader-module/-testing-resource-loader-module/#testingresourceloadermodule","title":"TestingResourceLoaderModule","text":"<p>[jvm]\\ fun TestingResourceLoaderModule()</p>"},{"location":"0.x/misk-core/","title":"misk-core - Misk","text":"<p>//misk-core</p>"},{"location":"0.x/misk-core/#misk-core","title":"misk-core","text":""},{"location":"0.x/misk-core/#packages","title":"Packages","text":"Name misk.backoff misk.concurrent misk.config misk.healthchecks misk.logging misk.random misk.retries misk.sampling misk.security.ssl misk.tokens misk.web.mediatype"},{"location":"0.x/misk-core/misk-core/misk.backoff/","title":"Package misk.backoff - Misk","text":"<p>//misk-core/misk.backoff</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/#package-miskbackoff","title":"Package misk.backoff","text":""},{"location":"0.x/misk-core/misk-core/misk.backoff/#types","title":"Types","text":"Name Summary Backoff [jvm]interface BackoffCalculates how long to backoff on a retry. Backoffs are stateful and not thread-safe DontRetryException [jvm]class DontRetryException(message: String, exception: Exception?) : Exception ExponentialBackoff [jvm]class ExponentialBackoff(baseDelay: () -&gt; Duration, maxDelay: () -&gt; Duration, jitter: () -&gt; Duration) : BackoffPerforms exponential backoff with optional jitter. Durations are supplied as functions, so that they can change dynamically as the system is running (e.g. in response to changes in dynamic flags) FlatBackoff [jvm]class FlatBackoff@JvmOverloadsconstructor(duration: Duration) : Backoff"},{"location":"0.x/misk-core/misk-core/misk.backoff/#functions","title":"Functions","text":"Name Summary retry [jvm]@JvmOverloadsfun &lt;A&gt; retry(upTo: Int, withBackoff: Backoff, onRetry: (retryCount: Int, exception: Exception) -&gt; Unit? = null, block: (retryCount: Int) -&gt; A): ARetries the provided function up to a certain number of times, applying the given backoff between each retry. If provided, the onRetry callback is called when a retry happens, allowing clients to perform a task (log, emit metrics) every time a retry occurs. The retry function is provided with current retry count, in case this is relevant."},{"location":"0.x/misk-core/misk-core/misk.backoff/retry/","title":"retry - Misk","text":"<p>//misk-core/misk.backoff/retry</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/retry/#retry","title":"retry","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun &lt;A&gt; retry(upTo: Int, withBackoff: Backoff, onRetry: (retryCount: Int, exception: Exception) -&gt; Unit? = null, block: (retryCount: Int) -&gt; A): A</p> <p>Retries the provided function up to a certain number of times, applying the given backoff between each retry. If provided, the onRetry callback is called when a retry happens, allowing clients to perform a task (log, emit metrics) every time a retry occurs. The retry function is provided with current retry count, in case this is relevant.</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-backoff/","title":"Backoff - Misk","text":"<p>//misk-core/misk.backoff/Backoff</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-backoff/#backoff","title":"Backoff","text":"<p>[jvm]\\ interface Backoff</p> <p>Calculates how long to backoff on a retry. Backoffs are stateful and not thread-safe</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-backoff/#functions","title":"Functions","text":"Name Summary nextRetry [jvm]abstract fun nextRetry(): Duration reset [jvm]abstract fun reset()Resets the backoff, typically when a request has succeeded"},{"location":"0.x/misk-core/misk-core/misk.backoff/-backoff/#inheritors","title":"Inheritors","text":"Name ExponentialBackoff FlatBackoff"},{"location":"0.x/misk-core/misk-core/misk.backoff/-backoff/next-retry/","title":"nextRetry - Misk","text":"<p>//misk-core/misk.backoff/Backoff/nextRetry</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-backoff/next-retry/#nextretry","title":"nextRetry","text":"<p>[jvm]\\ abstract fun nextRetry(): Duration</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-backoff/next-retry/#return","title":"Return","text":"<p>Determines the amount of time to wait before the next retry.</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-backoff/reset/","title":"reset - Misk","text":"<p>//misk-core/misk.backoff/Backoff/reset</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-backoff/reset/#reset","title":"reset","text":"<p>[jvm]\\ abstract fun reset()</p> <p>Resets the backoff, typically when a request has succeeded</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-dont-retry-exception/","title":"DontRetryException - Misk","text":"<p>//misk-core/misk.backoff/DontRetryException</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-dont-retry-exception/#dontretryexception","title":"DontRetryException","text":"<p>[jvm]\\ class DontRetryException(message: String, exception: Exception?) : Exception</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-dont-retry-exception/#constructors","title":"Constructors","text":"DontRetryException [jvm]fun DontRetryException(message: String)"},{"location":"0.x/misk-core/misk-core/misk.backoff/-dont-retry-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-core/misk-core/misk.backoff/-dont-retry-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-core/misk-core/misk.backoff/-dont-retry-exception/-dont-retry-exception/","title":"DontRetryException - Misk","text":"<p>//misk-core/misk.backoff/DontRetryException/DontRetryException</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-dont-retry-exception/-dont-retry-exception/#dontretryexception","title":"DontRetryException","text":"<p>[jvm]\\ fun DontRetryException(message: String)</p> <p>fun DontRetryException(message: String, exception: Exception?)</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/","title":"ExponentialBackoff - Misk","text":"<p>//misk-core/misk.backoff/ExponentialBackoff</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/#exponentialbackoff","title":"ExponentialBackoff","text":"<p>[jvm]\\ class ExponentialBackoff(baseDelay: () -&gt; Duration, maxDelay: () -&gt; Duration, jitter: () -&gt; Duration) : Backoff</p> <p>Performs exponential backoff with optional jitter. Durations are supplied as functions, so that they can change dynamically as the system is running (e.g. in response to changes in dynamic flags)</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/#constructors","title":"Constructors","text":"ExponentialBackoff [jvm]fun ExponentialBackoff(baseDelay: () -&gt; Duration, maxDelay: () -&gt; Duration)Creates a new unjittered ExponentialBackoff using a function for the base and max retry delays. ExponentialBackoff [jvm]fun ExponentialBackoff(baseDelay: Duration, maxDelay: Duration, jitter: Duration)Creates a new ExponentialBackoff from fixed delays and jitter amounts ExponentialBackoff [jvm]fun ExponentialBackoff(baseDelay: Duration, maxDelay: Duration)Creates a new ExponentialBackoff from fixed delays, without jitter ExponentialBackoff [jvm]fun ExponentialBackoff(baseDelay: () -&gt; Duration, maxDelay: () -&gt; Duration, jitter: () -&gt; Duration)"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/#functions","title":"Functions","text":"Name Summary nextRetry [jvm]open override fun nextRetry(): Duration reset [jvm]open override fun reset()Resets the backoff, typically when a request has succeeded"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/-exponential-backoff/","title":"ExponentialBackoff - Misk","text":"<p>//misk-core/misk.backoff/ExponentialBackoff/ExponentialBackoff</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/-exponential-backoff/#exponentialbackoff","title":"ExponentialBackoff","text":"<p>[jvm]\\ fun ExponentialBackoff(baseDelay: () -&gt; Duration, maxDelay: () -&gt; Duration)</p> <p>Creates a new unjittered ExponentialBackoff using a function for the base and max retry delays.</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/-exponential-backoff/#parameters","title":"Parameters","text":"<p>jvm</p> baseDelay The Supplier for the base delay maxDelay The Supplier for maximum amount of time to wait between retries <p>[jvm]\\ fun ExponentialBackoff(baseDelay: Duration, maxDelay: Duration, jitter: Duration)</p> <p>Creates a new ExponentialBackoff from fixed delays and jitter amounts</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/-exponential-backoff/#parameters_1","title":"Parameters","text":"<p>jvm</p> baseDelay The base retry delay maxDelay The max amount of time to delay jitter The amount of jitter to introduce <p>[jvm]\\ fun ExponentialBackoff(baseDelay: Duration, maxDelay: Duration)</p> <p>Creates a new ExponentialBackoff from fixed delays, without jitter</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/-exponential-backoff/#parameters_2","title":"Parameters","text":"<p>jvm</p> baseDelay The base retry delay maxDelay The max amount of time to delay <p>[jvm]\\ fun ExponentialBackoff(baseDelay: () -&gt; Duration, maxDelay: () -&gt; Duration, jitter: () -&gt; Duration)</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/next-retry/","title":"nextRetry - Misk","text":"<p>//misk-core/misk.backoff/ExponentialBackoff/nextRetry</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/next-retry/#nextretry","title":"nextRetry","text":"<p>[jvm]\\ open override fun nextRetry(): Duration</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/next-retry/#return","title":"Return","text":"<p>Determines the amount of time to wait before the next retry.</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/reset/","title":"reset - Misk","text":"<p>//misk-core/misk.backoff/ExponentialBackoff/reset</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-exponential-backoff/reset/#reset","title":"reset","text":"<p>[jvm]\\ open override fun reset()</p> <p>Resets the backoff, typically when a request has succeeded</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-flat-backoff/","title":"FlatBackoff - Misk","text":"<p>//misk-core/misk.backoff/FlatBackoff</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-flat-backoff/#flatbackoff","title":"FlatBackoff","text":"<p>[jvm]\\ class FlatBackoff@JvmOverloadsconstructor(duration: Duration) : Backoff</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-flat-backoff/#functions","title":"Functions","text":"Name Summary nextRetry [jvm]open override fun nextRetry(): Duration reset [jvm]open override fun reset()Resets the backoff, typically when a request has succeeded"},{"location":"0.x/misk-core/misk-core/misk.backoff/-flat-backoff/#properties","title":"Properties","text":"Name Summary duration [jvm]val duration: Duration"},{"location":"0.x/misk-core/misk-core/misk.backoff/-flat-backoff/-flat-backoff/","title":"FlatBackoff - Misk","text":"<p>//misk-core/misk.backoff/FlatBackoff/FlatBackoff</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-flat-backoff/-flat-backoff/#flatbackoff","title":"FlatBackoff","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun FlatBackoff(duration: Duration = Duration.ofMillis(0))</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-flat-backoff/duration/","title":"duration - Misk","text":"<p>//misk-core/misk.backoff/FlatBackoff/duration</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-flat-backoff/duration/#duration","title":"duration","text":"<p>[jvm]\\ val duration: Duration</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-flat-backoff/next-retry/","title":"nextRetry - Misk","text":"<p>//misk-core/misk.backoff/FlatBackoff/nextRetry</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-flat-backoff/next-retry/#nextretry","title":"nextRetry","text":"<p>[jvm]\\ open override fun nextRetry(): Duration</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-flat-backoff/next-retry/#return","title":"Return","text":"<p>Determines the amount of time to wait before the next retry.</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-flat-backoff/reset/","title":"reset - Misk","text":"<p>//misk-core/misk.backoff/FlatBackoff/reset</p>"},{"location":"0.x/misk-core/misk-core/misk.backoff/-flat-backoff/reset/#reset","title":"reset","text":"<p>[jvm]\\ open override fun reset()</p> <p>Resets the backoff, typically when a request has succeeded</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/","title":"Package misk.concurrent - Misk","text":"<p>//misk-core/misk.concurrent</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/#package-miskconcurrent","title":"Package misk.concurrent","text":""},{"location":"0.x/misk-core/misk-core/misk.concurrent/#types","title":"Types","text":"Name Summary ExecutorServiceFactory [jvm]interface ExecutorServiceFactoryInject this rather than using the Executors factory class to create thread pools. Executors created with this factory will automatically be shut down when the service or test completes. Sleeper [jvm]interface SleeperAbstraction for Thread.sleep() that allows for testing."},{"location":"0.x/misk-core/misk-core/misk.concurrent/-executor-service-factory/","title":"ExecutorServiceFactory - Misk","text":"<p>//misk-core/misk.concurrent/ExecutorServiceFactory</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-executor-service-factory/#executorservicefactory","title":"ExecutorServiceFactory","text":"<p>[jvm]\\ interface ExecutorServiceFactory</p> <p>Inject this rather than using the Executors factory class to create thread pools. Executors created with this factory will automatically be shut down when the service or test completes.</p> <p>For all functions, nameFormat a string in the format specified by ThreadFactoryBuilder.setNameFormat, like \u201crpc-pool-%d\u201d. If the string has a single %d placeholder it will be assigned sequentially. Omit the placeholder if only one thread will be required.</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-executor-service-factory/#functions","title":"Functions","text":"Name Summary fixed [jvm]abstract fun fixed(nameFormat: String, threadCount: Int): ExecutorServiceReturns an executor service that uses Executors.newFixedThreadPool. scheduled [jvm]abstract fun scheduled(nameFormat: String, threadCount: Int): ScheduledExecutorServiceReturns an executor service that uses Executors.newScheduledThreadPool. single [jvm]abstract fun single(nameFormat: String): ExecutorServiceReturns an executor service that uses Executors.newSingleThreadExecutor. unbounded [jvm]abstract fun unbounded(nameFormat: String): ExecutorServiceReturns an executor service that uses Executors.newCachedThreadPool."},{"location":"0.x/misk-core/misk-core/misk.concurrent/-executor-service-factory/fixed/","title":"fixed - Misk","text":"<p>//misk-core/misk.concurrent/ExecutorServiceFactory/fixed</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-executor-service-factory/fixed/#fixed","title":"fixed","text":"<p>[jvm]\\ abstract fun fixed(nameFormat: String, threadCount: Int): ExecutorService</p> <p>Returns an executor service that uses Executors.newFixedThreadPool.</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-executor-service-factory/scheduled/","title":"scheduled - Misk","text":"<p>//misk-core/misk.concurrent/ExecutorServiceFactory/scheduled</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-executor-service-factory/scheduled/#scheduled","title":"scheduled","text":"<p>[jvm]\\ abstract fun scheduled(nameFormat: String, threadCount: Int): ScheduledExecutorService</p> <p>Returns an executor service that uses Executors.newScheduledThreadPool.</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-executor-service-factory/single/","title":"single - Misk","text":"<p>//misk-core/misk.concurrent/ExecutorServiceFactory/single</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-executor-service-factory/single/#single","title":"single","text":"<p>[jvm]\\ abstract fun single(nameFormat: String): ExecutorService</p> <p>Returns an executor service that uses Executors.newSingleThreadExecutor.</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-executor-service-factory/unbounded/","title":"unbounded - Misk","text":"<p>//misk-core/misk.concurrent/ExecutorServiceFactory/unbounded</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-executor-service-factory/unbounded/#unbounded","title":"unbounded","text":"<p>[jvm]\\ abstract fun unbounded(nameFormat: String): ExecutorService</p> <p>Returns an executor service that uses Executors.newCachedThreadPool.</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-sleeper/","title":"Sleeper - Misk","text":"<p>//misk-core/misk.concurrent/Sleeper</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-sleeper/#sleeper","title":"Sleeper","text":"<p>[jvm]\\ interface Sleeper</p> <p>Abstraction for Thread.sleep() that allows for testing.</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-sleeper/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-sleeper/#functions","title":"Functions","text":"Name Summary sleep [jvm]abstract fun sleep(duration: Duration)"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-sleeper/sleep/","title":"sleep - Misk","text":"<p>//misk-core/misk.concurrent/Sleeper/sleep</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-sleeper/sleep/#sleep","title":"sleep","text":"<p>[jvm]\\ abstract fun sleep(duration: Duration)</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-sleeper/-companion/","title":"Companion - Misk","text":"<p>//misk-core/misk.concurrent/Sleeper/Companion</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-sleeper/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-sleeper/-companion/#properties","title":"Properties","text":"Name Summary DEFAULT [jvm]val DEFAULT: Sleeper"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-sleeper/-companion/-d-e-f-a-u-l-t/","title":"DEFAULT - Misk","text":"<p>//misk-core/misk.concurrent/Sleeper/Companion/DEFAULT</p>"},{"location":"0.x/misk-core/misk-core/misk.concurrent/-sleeper/-companion/-d-e-f-a-u-l-t/#default","title":"DEFAULT","text":"<p>[jvm]\\ val DEFAULT: Sleeper</p>"},{"location":"0.x/misk-core/misk-core/misk.config/","title":"Package misk.config - Misk","text":"<p>//misk-core/misk.config</p>"},{"location":"0.x/misk-core/misk-core/misk.config/#package-miskconfig","title":"Package misk.config","text":""},{"location":"0.x/misk-core/misk-core/misk.config/#types","title":"Types","text":"Name Summary Config [jvm]interface Config : Config"},{"location":"0.x/misk-core/misk-core/misk.config/-config/","title":"Config - Misk","text":"<p>//misk-core/misk.config/Config</p>"},{"location":"0.x/misk-core/misk-core/misk.config/-config/#config","title":"Config","text":"<p>[jvm]\\ interface Config : Config</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/","title":"Package misk.healthchecks - Misk","text":"<p>//misk-core/misk.healthchecks</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/#package-miskhealthchecks","title":"Package misk.healthchecks","text":""},{"location":"0.x/misk-core/misk-core/misk.healthchecks/#types","title":"Types","text":"Name Summary HealthCheck [jvm]interface HealthCheckAllows users to define custom health checks. An app with a failing HealthCheck will fail the readiness check in ReadinessCheckAction, indicating that the app should not accept traffic. HealthStatus [jvm]data class HealthStatus(isHealthy: Boolean, messages: List&lt;String&gt;)"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-check/","title":"HealthCheck - Misk","text":"<p>//misk-core/misk.healthchecks/HealthCheck</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-check/#healthcheck","title":"HealthCheck","text":"<p>[jvm]\\ interface HealthCheck</p> <p>Allows users to define custom health checks. An app with a failing HealthCheck will fail the readiness check in ReadinessCheckAction, indicating that the app should not accept traffic.</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-check/#functions","title":"Functions","text":"Name Summary status [jvm]abstract fun status(): HealthStatusComputes whether a component of an application is healthy. For example, an implementing class can check database connectivity."},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-check/status/","title":"status - Misk","text":"<p>//misk-core/misk.healthchecks/HealthCheck/status</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-check/status/#status","title":"status","text":"<p>[jvm]\\ abstract fun status(): HealthStatus</p> <p>Computes whether a component of an application is healthy. For example, an implementing class can check database connectivity.</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/","title":"HealthStatus - Misk","text":"<p>//misk-core/misk.healthchecks/HealthStatus</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/#healthstatus","title":"HealthStatus","text":"<p>[jvm]\\ data class HealthStatus(isHealthy: Boolean, messages: List&lt;String&gt;)</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/#properties","title":"Properties","text":"Name Summary isHealthy [jvm]val isHealthy: Boolean messages [jvm]val messages: List&lt;String&gt;"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/-health-status/","title":"HealthStatus - Misk","text":"<p>//misk-core/misk.healthchecks/HealthStatus/HealthStatus</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/-health-status/#healthstatus","title":"HealthStatus","text":"<p>[jvm]\\ fun HealthStatus(isHealthy: Boolean, messages: List&lt;String&gt;)</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/is-healthy/","title":"isHealthy - Misk","text":"<p>//misk-core/misk.healthchecks/HealthStatus/isHealthy</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/is-healthy/#ishealthy","title":"isHealthy","text":"<p>[jvm]\\ val isHealthy: Boolean</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/messages/","title":"messages - Misk","text":"<p>//misk-core/misk.healthchecks/HealthStatus/messages</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/messages/#messages","title":"messages","text":"<p>[jvm]\\ val messages: List&lt;String&gt;</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/-companion/","title":"Companion - Misk","text":"<p>//misk-core/misk.healthchecks/HealthStatus/Companion</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/-companion/#functions","title":"Functions","text":"Name Summary healthy [jvm]fun healthy(vararg messages: String): HealthStatus unhealthy [jvm]fun unhealthy(vararg messages: String): HealthStatus"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/-companion/healthy/","title":"healthy - Misk","text":"<p>//misk-core/misk.healthchecks/HealthStatus/Companion/healthy</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/-companion/healthy/#healthy","title":"healthy","text":"<p>[jvm]\\ fun healthy(vararg messages: String): HealthStatus</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/-companion/unhealthy/","title":"unhealthy - Misk","text":"<p>//misk-core/misk.healthchecks/HealthStatus/Companion/unhealthy</p>"},{"location":"0.x/misk-core/misk-core/misk.healthchecks/-health-status/-companion/unhealthy/#unhealthy","title":"unhealthy","text":"<p>[jvm]\\ fun unhealthy(vararg messages: String): HealthStatus</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/","title":"Package misk.logging - Misk","text":"<p>//misk-core/misk.logging</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/#package-misklogging","title":"Package misk.logging","text":""},{"location":"0.x/misk-core/misk-core/misk.logging/#types","title":"Types","text":"Name Summary SampledLogger [jvm]class SampledLogger(underlyingLogger: KLogger, sampler: Sampler) : KLogger"},{"location":"0.x/misk-core/misk-core/misk.logging/#functions","title":"Functions","text":"Name Summary sampled [jvm]fun KLogger.sampled(sampler: Sampler): KLoggerReturns a logger that samples logs. This logger MUST be instantiated statically, in a companion object or as a Singleton."},{"location":"0.x/misk-core/misk-core/misk.logging/sampled/","title":"sampled - Misk","text":"<p>//misk-core/misk.logging/sampled</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/sampled/#sampled","title":"sampled","text":"<p>[jvm]\\ fun KLogger.sampled(sampler: Sampler): KLogger</p> <p>Returns a logger that samples logs. This logger MUST be instantiated statically, in a companion object or as a Singleton.</p> <p>To get a rate limited logger:</p> <p>val logger = getLogger().sampled(RateLimitingSampler(RATE_PER_SECOND)) <p>To get a probabilistic sampler</p> <p>val logger = getLogger().sampled(PercentSampler(PERCENTAGE_TO_ALLOW))"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/","title":"SampledLogger - Misk","text":"<p>//misk-core/misk.logging/SampledLogger</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/#sampledlogger","title":"SampledLogger","text":"<p>[jvm]\\ class SampledLogger(underlyingLogger: KLogger, sampler: Sampler) : KLogger</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/#functions","title":"Functions","text":"Name Summary atDebug [jvm]@CheckReturnValueopen fun atDebug(): LoggingEventBuilder atError [jvm]@CheckReturnValueopen fun atError(): LoggingEventBuilder atInfo [jvm]@CheckReturnValueopen fun atInfo(): LoggingEventBuilder atLevel [jvm]@CheckReturnValueopen fun atLevel(p0: Level): LoggingEventBuilder atTrace [jvm]@CheckReturnValueopen fun atTrace(): LoggingEventBuilder atWarn [jvm]@CheckReturnValueopen fun atWarn(): LoggingEventBuilder catching [jvm]open override fun &lt;T : Throwable&gt; catching(throwable: T) debug [jvm]open override fun debug(msg: () -&gt; Any?)open override fun debug(msg: String?)open override fun debug(format: String?, arg: Any?)open override fun debug(format: String?, vararg arguments: Any?)open override fun debug(msg: String?, t: Throwable?)open override fun debug(t: Throwable?, msg: () -&gt; Any?)open override fun debug(marker: Marker?, msg: () -&gt; Any?)open override fun debug(marker: Marker?, msg: String?)open override fun debug(format: String?, arg1: Any?, arg2: Any?)open override fun debug(marker: Marker?, format: String?, arg: Any?)open override fun debug(marker: Marker?, format: String?, vararg arguments: Any?)open override fun debug(marker: Marker?, msg: String?, t: Throwable?)open override fun debug(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)open override fun debug(marker: Marker?, format: String?, arg1: Any?, arg2: Any?) entry [jvm]open override fun entry(vararg argArray: Any?) error [jvm]open override fun error(msg: () -&gt; Any?)open override fun error(msg: String?)open override fun error(format: String?, arg: Any?)open override fun error(format: String?, vararg arguments: Any?)open override fun error(msg: String?, t: Throwable?)open override fun error(t: Throwable?, msg: () -&gt; Any?)open override fun error(marker: Marker?, msg: () -&gt; Any?)open override fun error(marker: Marker?, msg: String?)open override fun error(format: String?, arg1: Any?, arg2: Any?)open override fun error(marker: Marker?, format: String?, arg: Any?)open override fun error(marker: Marker?, format: String?, vararg arguments: Any?)open override fun error(marker: Marker?, msg: String?, t: Throwable?)open override fun error(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)open override fun error(marker: Marker?, format: String?, arg1: Any?, arg2: Any?) exit [jvm]open override fun exit()open override fun &lt;T&gt; exit(result: T): T getName [jvm]open override fun getName(): String info [jvm]open override fun info(msg: () -&gt; Any?)open override fun info(msg: String?)open override fun info(format: String?, arg: Any?)open override fun info(format: String?, vararg arguments: Any?)open override fun info(msg: String?, t: Throwable?)open override fun info(t: Throwable?, msg: () -&gt; Any?)open override fun info(marker: Marker?, msg: () -&gt; Any?)open override fun info(marker: Marker?, msg: String?)open override fun info(format: String?, arg1: Any?, arg2: Any?)open override fun info(marker: Marker?, format: String?, arg: Any?)open override fun info(marker: Marker?, format: String?, vararg arguments: Any?)open override fun info(marker: Marker?, msg: String?, t: Throwable?)open override fun info(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)open override fun info(marker: Marker?, format: String?, arg1: Any?, arg2: Any?) isDebugEnabled [jvm]open override fun isDebugEnabled(): Booleanopen override fun isDebugEnabled(marker: Marker?): Boolean isEnabledForLevel [jvm]open fun isEnabledForLevel(p0: Level): Boolean isErrorEnabled [jvm]open override fun isErrorEnabled(): Booleanopen override fun isErrorEnabled(marker: Marker?): Boolean isInfoEnabled [jvm]open override fun isInfoEnabled(): Booleanopen override fun isInfoEnabled(marker: Marker?): Boolean isTraceEnabled [jvm]open override fun isTraceEnabled(): Booleanopen override fun isTraceEnabled(marker: Marker?): Boolean isWarnEnabled [jvm]open override fun isWarnEnabled(): Booleanopen override fun isWarnEnabled(marker: Marker?): Boolean makeLoggingEventBuilder [jvm]open fun makeLoggingEventBuilder(p0: Level): LoggingEventBuilder throwing [jvm]open override fun &lt;T : Throwable&gt; throwing(throwable: T): T trace [jvm]open override fun trace(msg: () -&gt; Any?)open override fun trace(msg: String?)open override fun trace(format: String?, arg: Any?)open override fun trace(format: String?, vararg arguments: Any?)open override fun trace(msg: String?, t: Throwable?)open override fun trace(t: Throwable?, msg: () -&gt; Any?)open override fun trace(marker: Marker?, msg: () -&gt; Any?)open override fun trace(marker: Marker?, msg: String?)open override fun trace(format: String?, arg1: Any?, arg2: Any?)open override fun trace(marker: Marker?, format: String?, arg: Any?)open override fun trace(marker: Marker?, format: String?, vararg argArray: Any?)open override fun trace(marker: Marker?, msg: String?, t: Throwable?)open override fun trace(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)open override fun trace(marker: Marker?, format: String?, arg1: Any?, arg2: Any?) warn [jvm]open override fun warn(msg: () -&gt; Any?)open override fun warn(msg: String?)open override fun warn(format: String?, arg: Any?)open override fun warn(format: String?, vararg arguments: Any?)open override fun warn(msg: String?, t: Throwable?)open override fun warn(t: Throwable?, msg: () -&gt; Any?)open override fun warn(marker: Marker?, msg: () -&gt; Any?)open override fun warn(marker: Marker?, msg: String?)open override fun warn(format: String?, arg1: Any?, arg2: Any?)open override fun warn(marker: Marker?, format: String?, arg: Any?)open override fun warn(marker: Marker?, format: String?, vararg arguments: Any?)open override fun warn(marker: Marker?, msg: String?, t: Throwable?)open override fun warn(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)open override fun warn(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/#properties","title":"Properties","text":"Name Summary underlyingLogger [jvm]open override val underlyingLogger: KLogger"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/-sampled-logger/","title":"SampledLogger - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/SampledLogger</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/-sampled-logger/#sampledlogger","title":"SampledLogger","text":"<p>[jvm]\\ fun SampledLogger(underlyingLogger: KLogger, sampler: Sampler)</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/catching/","title":"catching - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/catching</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/catching/#catching","title":"catching","text":"<p>[jvm]\\ open override fun &lt;T : Throwable&gt; catching(throwable: T)</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/debug/","title":"debug - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/debug</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/debug/#debug","title":"debug","text":"<p>[jvm]\\ open override fun debug(msg: () -&gt; Any?)</p> <p>open override fun debug(t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun debug(marker: Marker?, msg: () -&gt; Any?)</p> <p>open override fun debug(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun debug(msg: String?)</p> <p>open override fun debug(format: String?, arg: Any?)</p> <p>open override fun debug(format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun debug(format: String?, vararg arguments: Any?)</p> <p>open override fun debug(msg: String?, t: Throwable?)</p> <p>open override fun debug(marker: Marker?, msg: String?)</p> <p>open override fun debug(marker: Marker?, format: String?, arg: Any?)</p> <p>open override fun debug(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun debug(marker: Marker?, format: String?, vararg arguments: Any?)</p> <p>open override fun debug(marker: Marker?, msg: String?, t: Throwable?)</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/entry/","title":"entry - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/entry</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/entry/#entry","title":"entry","text":"<p>[jvm]\\ open override fun entry(vararg argArray: Any?)</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/error/","title":"error - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/error</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/error/#error","title":"error","text":"<p>[jvm]\\ open override fun error(msg: () -&gt; Any?)</p> <p>open override fun error(t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun error(marker: Marker?, msg: () -&gt; Any?)</p> <p>open override fun error(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun error(msg: String?)</p> <p>open override fun error(format: String?, arg: Any?)</p> <p>open override fun error(format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun error(format: String?, vararg arguments: Any?)</p> <p>open override fun error(msg: String?, t: Throwable?)</p> <p>open override fun error(marker: Marker?, msg: String?)</p> <p>open override fun error(marker: Marker?, format: String?, arg: Any?)</p> <p>open override fun error(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun error(marker: Marker?, format: String?, vararg arguments: Any?)</p> <p>open override fun error(marker: Marker?, msg: String?, t: Throwable?)</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/exit/","title":"exit - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/exit</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/exit/#exit","title":"exit","text":"<p>[jvm]\\ open override fun exit()</p> <p>open override fun &lt;T&gt; exit(result: T): T</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/get-name/","title":"getName - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/getName</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/get-name/#getname","title":"getName","text":"<p>[jvm]\\ open override fun getName(): String</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/info/","title":"info - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/info</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/info/#info","title":"info","text":"<p>[jvm]\\ open override fun info(msg: () -&gt; Any?)</p> <p>open override fun info(t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun info(marker: Marker?, msg: () -&gt; Any?)</p> <p>open override fun info(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun info(msg: String?)</p> <p>open override fun info(format: String?, arg: Any?)</p> <p>open override fun info(format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun info(format: String?, vararg arguments: Any?)</p> <p>open override fun info(msg: String?, t: Throwable?)</p> <p>open override fun info(marker: Marker?, msg: String?)</p> <p>open override fun info(marker: Marker?, format: String?, arg: Any?)</p> <p>open override fun info(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun info(marker: Marker?, format: String?, vararg arguments: Any?)</p> <p>open override fun info(marker: Marker?, msg: String?, t: Throwable?)</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/is-debug-enabled/","title":"isDebugEnabled - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/isDebugEnabled</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/is-debug-enabled/#isdebugenabled","title":"isDebugEnabled","text":"<p>[jvm]\\ open override fun isDebugEnabled(): Boolean</p> <p>open override fun isDebugEnabled(marker: Marker?): Boolean</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/is-error-enabled/","title":"isErrorEnabled - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/isErrorEnabled</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/is-error-enabled/#iserrorenabled","title":"isErrorEnabled","text":"<p>[jvm]\\ open override fun isErrorEnabled(): Boolean</p> <p>open override fun isErrorEnabled(marker: Marker?): Boolean</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/is-info-enabled/","title":"isInfoEnabled - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/isInfoEnabled</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/is-info-enabled/#isinfoenabled","title":"isInfoEnabled","text":"<p>[jvm]\\ open override fun isInfoEnabled(): Boolean</p> <p>open override fun isInfoEnabled(marker: Marker?): Boolean</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/is-trace-enabled/","title":"isTraceEnabled - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/isTraceEnabled</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/is-trace-enabled/#istraceenabled","title":"isTraceEnabled","text":"<p>[jvm]\\ open override fun isTraceEnabled(): Boolean</p> <p>open override fun isTraceEnabled(marker: Marker?): Boolean</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/is-warn-enabled/","title":"isWarnEnabled - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/isWarnEnabled</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/is-warn-enabled/#iswarnenabled","title":"isWarnEnabled","text":"<p>[jvm]\\ open override fun isWarnEnabled(): Boolean</p> <p>open override fun isWarnEnabled(marker: Marker?): Boolean</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/throwing/","title":"throwing - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/throwing</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/throwing/#throwing","title":"throwing","text":"<p>[jvm]\\ open override fun &lt;T : Throwable&gt; throwing(throwable: T): T</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/trace/","title":"trace - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/trace</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/trace/#trace","title":"trace","text":"<p>[jvm]\\ open override fun trace(msg: () -&gt; Any?)</p> <p>open override fun trace(t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun trace(marker: Marker?, msg: () -&gt; Any?)</p> <p>open override fun trace(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun trace(msg: String?)</p> <p>open override fun trace(format: String?, arg: Any?)</p> <p>open override fun trace(format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun trace(format: String?, vararg arguments: Any?)</p> <p>open override fun trace(msg: String?, t: Throwable?)</p> <p>open override fun trace(marker: Marker?, msg: String?)</p> <p>open override fun trace(marker: Marker?, format: String?, arg: Any?)</p> <p>open override fun trace(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun trace(marker: Marker?, format: String?, vararg argArray: Any?)</p> <p>open override fun trace(marker: Marker?, msg: String?, t: Throwable?)</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/underlying-logger/","title":"underlyingLogger - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/underlyingLogger</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/underlying-logger/#underlyinglogger","title":"underlyingLogger","text":"<p>[jvm]\\ open override val underlyingLogger: KLogger</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/warn/","title":"warn - Misk","text":"<p>//misk-core/misk.logging/SampledLogger/warn</p>"},{"location":"0.x/misk-core/misk-core/misk.logging/-sampled-logger/warn/#warn","title":"warn","text":"<p>[jvm]\\ open override fun warn(msg: () -&gt; Any?)</p> <p>open override fun warn(t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun warn(marker: Marker?, msg: () -&gt; Any?)</p> <p>open override fun warn(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun warn(msg: String?)</p> <p>open override fun warn(format: String?, arg: Any?)</p> <p>open override fun warn(format: String?, vararg arguments: Any?)</p> <p>open override fun warn(format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun warn(msg: String?, t: Throwable?)</p> <p>open override fun warn(marker: Marker?, msg: String?)</p> <p>open override fun warn(marker: Marker?, format: String?, arg: Any?)</p> <p>open override fun warn(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun warn(marker: Marker?, format: String?, vararg arguments: Any?)</p> <p>open override fun warn(marker: Marker?, msg: String?, t: Throwable?)</p>"},{"location":"0.x/misk-core/misk-core/misk.random/","title":"Package misk.random - Misk","text":"<p>//misk-core/misk.random</p>"},{"location":"0.x/misk-core/misk-core/misk.random/#package-miskrandom","title":"Package misk.random","text":""},{"location":"0.x/misk-core/misk-core/misk.random/#types","title":"Types","text":"Name Summary Random [jvm]@Singletonopen class Random@Injectconstructor : RandomAbstraction for Java\u2019s Random that allows for testing. ThreadLocalRandom [jvm]@Singletonopen class ThreadLocalRandom@InjectconstructorAbstraction for Java\u2019s ThreadLocalRandom that allows for testing."},{"location":"0.x/misk-core/misk-core/misk.random/-random/","title":"Random - Misk","text":"<p>//misk-core/misk.random/Random</p>"},{"location":"0.x/misk-core/misk-core/misk.random/-random/#random","title":"Random","text":"<p>[jvm]\\ @Singleton</p> <p>open class Random@Injectconstructor : Random</p> <p>Abstraction for Java\u2019s Random that allows for testing.</p>"},{"location":"0.x/misk-core/misk-core/misk.random/-random/#constructors","title":"Constructors","text":"Random [jvm]@Injectfun Random()"},{"location":"0.x/misk-core/misk-core/misk.random/-random/#functions","title":"Functions","text":"Name Summary doubles [jvm]open override fun doubles(): DoubleStreamopen override fun doubles(p0: Long): DoubleStreamopen override fun doubles(p0: Double, p1: Double): DoubleStreamopen override fun doubles(p0: Long, p1: Double, p2: Double): DoubleStream ints [jvm]open override fun ints(): IntStreamopen override fun ints(p0: Long): IntStreamopen override fun ints(p0: Int, p1: Int): IntStreamopen override fun ints(p0: Long, p1: Int, p2: Int): IntStream isDeprecated [jvm]open fun isDeprecated(): Boolean longs [jvm]open override fun longs(): LongStreamopen override fun longs(p0: Long): LongStreamopen override fun longs(p0: Long, p1: Long): LongStreamopen override fun longs(p0: Long, p1: Long, p2: Long): LongStream next [jvm]open fun next(p0: Int): Int nextBoolean [jvm]open override fun nextBoolean(): Boolean nextBytes [jvm]open override fun nextBytes(p0: ByteArray) nextDouble [jvm]open override fun nextDouble(): Doubleopen fun nextDouble(p0: Double): Doubleopen fun nextDouble(p0: Double, p1: Double): Double nextExponential [jvm]open fun nextExponential(): Double nextFloat [jvm]open override fun nextFloat(): Floatopen fun nextFloat(p0: Float): Floatopen fun nextFloat(p0: Float, p1: Float): Float nextGaussian [jvm]open override fun nextGaussian(): Doubleopen fun nextGaussian(p0: Double, p1: Double): Double nextInt [jvm]open override fun nextInt(): Intopen override fun nextInt(p0: Int): Intopen fun nextInt(p0: Int, p1: Int): Int nextLong [jvm]open override fun nextLong(): Longopen fun nextLong(p0: Long): Longopen fun nextLong(p0: Long, p1: Long): Long setSeed [jvm]open fun setSeed(p0: Long)"},{"location":"0.x/misk-core/misk-core/misk.random/-random/-random/","title":"Random - Misk","text":"<p>//misk-core/misk.random/Random/Random</p>"},{"location":"0.x/misk-core/misk-core/misk.random/-random/-random/#random","title":"Random","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun Random()</p>"},{"location":"0.x/misk-core/misk-core/misk.random/-thread-local-random/","title":"ThreadLocalRandom - Misk","text":"<p>//misk-core/misk.random/ThreadLocalRandom</p>"},{"location":"0.x/misk-core/misk-core/misk.random/-thread-local-random/#threadlocalrandom","title":"ThreadLocalRandom","text":"<p>[jvm]\\ @Singleton</p> <p>open class ThreadLocalRandom@Injectconstructor</p> <p>Abstraction for Java\u2019s ThreadLocalRandom that allows for testing.</p>"},{"location":"0.x/misk-core/misk-core/misk.random/-thread-local-random/#constructors","title":"Constructors","text":"ThreadLocalRandom [jvm]@Injectfun ThreadLocalRandom()"},{"location":"0.x/misk-core/misk-core/misk.random/-thread-local-random/#functions","title":"Functions","text":"Name Summary current [jvm]open fun current(): Random"},{"location":"0.x/misk-core/misk-core/misk.random/-thread-local-random/-thread-local-random/","title":"ThreadLocalRandom - Misk","text":"<p>//misk-core/misk.random/ThreadLocalRandom/ThreadLocalRandom</p>"},{"location":"0.x/misk-core/misk-core/misk.random/-thread-local-random/-thread-local-random/#threadlocalrandom","title":"ThreadLocalRandom","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ThreadLocalRandom()</p>"},{"location":"0.x/misk-core/misk-core/misk.random/-thread-local-random/current/","title":"current - Misk","text":"<p>//misk-core/misk.random/ThreadLocalRandom/current</p>"},{"location":"0.x/misk-core/misk-core/misk.random/-thread-local-random/current/#current","title":"current","text":"<p>[jvm]\\ open fun current(): Random</p>"},{"location":"0.x/misk-core/misk-core/misk.retries/","title":"Package misk.retries - Misk","text":"<p>//misk-core/misk.retries</p>"},{"location":"0.x/misk-core/misk-core/misk.retries/#package-miskretries","title":"Package misk.retries","text":""},{"location":"0.x/misk-core/misk-core/misk.retries/#functions","title":"Functions","text":"Name Summary doNotRetry [jvm]inline fun &lt;T : Exception&gt; doNotRetry(): RetryPolicy&lt;Throwable&gt;Returns a RetryPolicy that will throw the error that triggered the retry if it is type T. Otherwise, it voices no objection to retrying. retryWithHooks [jvm]suspend fun &lt;T&gt; retryWithHooks(policy: RetryPolicy&lt;Throwable&gt;, beforeRetryHook: () -&gt; Unit, op: () -&gt; T): TThis is a retry helper function with some hooks."},{"location":"0.x/misk-core/misk-core/misk.retries/do-not-retry/","title":"doNotRetry - Misk","text":"<p>//misk-core/misk.retries/doNotRetry</p>"},{"location":"0.x/misk-core/misk-core/misk.retries/do-not-retry/#donotretry","title":"doNotRetry","text":"<p>[jvm]\\ inline fun &lt;T : Exception&gt; doNotRetry(): RetryPolicy&lt;Throwable&gt;</p> <p>Returns a RetryPolicy that will throw the error that triggered the retry if it is type T. Otherwise, it voices no objection to retrying.</p>"},{"location":"0.x/misk-core/misk-core/misk.retries/retry-with-hooks/","title":"retryWithHooks - Misk","text":"<p>//misk-core/misk.retries/retryWithHooks</p>"},{"location":"0.x/misk-core/misk-core/misk.retries/retry-with-hooks/#retrywithhooks","title":"retryWithHooks","text":"<p>[jvm]\\ suspend fun &lt;T&gt; retryWithHooks(policy: RetryPolicy&lt;Throwable&gt;, beforeRetryHook: () -&gt; Unit, op: () -&gt; T): T</p> <p>This is a retry helper function with some hooks.</p> <ul> <li>beforeRetryHook is called before retries, but not before the first attempt. Use cases:</li> <li>Optimistic locking where the state needs to be reloaded on retries</li> <li>Re-establishing a connection when a request fails due to a connection dropping</li> </ul>"},{"location":"0.x/misk-core/misk-core/misk.sampling/","title":"Package misk.sampling - Misk","text":"<p>//misk-core/misk.sampling</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/#package-misksampling","title":"Package misk.sampling","text":""},{"location":"0.x/misk-core/misk-core/misk.sampling/#types","title":"Types","text":"Name Summary AlwaysSampler [jvm]@Singletonclass AlwaysSampler@Injectconstructor : SamplerSampler that always invokes an action PercentSampler [jvm]class PercentSampler@JvmOverloadsconstructor(samplePercentage: () -&gt; Int, random: () -&gt; Int) : SamplerA Sampler randomly invokes an action based on a sample percentage RateLimiter [jvm]class RateLimiterA deterministic testable rate limiter that uses two variables: RateLimitingSampler [jvm]class RateLimitingSampler(rateLimiter: RateLimiter) : Sampler Sampler [jvm]interface Sampler"},{"location":"0.x/misk-core/misk-core/misk.sampling/-always-sampler/","title":"AlwaysSampler - Misk","text":"<p>//misk-core/misk.sampling/AlwaysSampler</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-always-sampler/#alwayssampler","title":"AlwaysSampler","text":"<p>[jvm]\\ @Singleton</p> <p>class AlwaysSampler@Injectconstructor : Sampler</p> <p>Sampler that always invokes an action</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-always-sampler/#constructors","title":"Constructors","text":"AlwaysSampler [jvm]@Injectfun AlwaysSampler()"},{"location":"0.x/misk-core/misk-core/misk.sampling/-always-sampler/#functions","title":"Functions","text":"Name Summary sample [jvm]open override fun sample(): BooleanIf an action should be taken based on the implementation\u2019s policy, returns true sampledCall [jvm]open fun sampledCall(f: () -&gt; Unit)If sample returns true, runs the given lambda"},{"location":"0.x/misk-core/misk-core/misk.sampling/-always-sampler/-always-sampler/","title":"AlwaysSampler - Misk","text":"<p>//misk-core/misk.sampling/AlwaysSampler/AlwaysSampler</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-always-sampler/-always-sampler/#alwayssampler","title":"AlwaysSampler","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun AlwaysSampler()</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-always-sampler/sample/","title":"sample - Misk","text":"<p>//misk-core/misk.sampling/AlwaysSampler/sample</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-always-sampler/sample/#sample","title":"sample","text":"<p>[jvm]\\ open override fun sample(): Boolean</p> <p>If an action should be taken based on the implementation\u2019s policy, returns true</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-percent-sampler/","title":"PercentSampler - Misk","text":"<p>//misk-core/misk.sampling/PercentSampler</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-percent-sampler/#percentsampler","title":"PercentSampler","text":"<p>[jvm]\\ class PercentSampler@JvmOverloadsconstructor(samplePercentage: () -&gt; Int, random: () -&gt; Int) : Sampler</p> <p>A Sampler randomly invokes an action based on a sample percentage</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-percent-sampler/#constructors","title":"Constructors","text":"PercentSampler [jvm]fun PercentSampler(samplePercentage: Int, random: () -&gt; Int) PercentSampler [jvm]fun PercentSampler(samplePercentage: Int) PercentSampler [jvm]@JvmOverloadsfun PercentSampler(samplePercentage: () -&gt; Int, random: () -&gt; Int = { ThreadLocalRandom.current().nextInt(0, 100) })"},{"location":"0.x/misk-core/misk-core/misk.sampling/-percent-sampler/#functions","title":"Functions","text":"Name Summary sample [jvm]open override fun sample(): BooleanIf an action should be taken based on the implementation\u2019s policy, returns true sampledCall [jvm]open fun sampledCall(f: () -&gt; Unit)If sample returns true, runs the given lambda"},{"location":"0.x/misk-core/misk-core/misk.sampling/-percent-sampler/#properties","title":"Properties","text":"Name Summary random [jvm]val random: () -&gt; Int samplePercentage [jvm]val samplePercentage: () -&gt; Int"},{"location":"0.x/misk-core/misk-core/misk.sampling/-percent-sampler/-percent-sampler/","title":"PercentSampler - Misk","text":"<p>//misk-core/misk.sampling/PercentSampler/PercentSampler</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-percent-sampler/-percent-sampler/#percentsampler","title":"PercentSampler","text":"<p>[jvm]\\ fun PercentSampler(samplePercentage: Int, random: () -&gt; Int)</p> <p>fun PercentSampler(samplePercentage: Int)</p> <p>@JvmOverloads</p> <p>fun PercentSampler(samplePercentage: () -&gt; Int, random: () -&gt; Int = { ThreadLocalRandom.current().nextInt(0, 100) })</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-percent-sampler/random/","title":"random - Misk","text":"<p>//misk-core/misk.sampling/PercentSampler/random</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-percent-sampler/random/#random","title":"random","text":"<p>[jvm]\\ val random: () -&gt; Int</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-percent-sampler/sample-percentage/","title":"samplePercentage - Misk","text":"<p>//misk-core/misk.sampling/PercentSampler/samplePercentage</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-percent-sampler/sample-percentage/#samplepercentage","title":"samplePercentage","text":"<p>[jvm]\\ val samplePercentage: () -&gt; Int</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-percent-sampler/sample/","title":"sample - Misk","text":"<p>//misk-core/misk.sampling/PercentSampler/sample</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-percent-sampler/sample/#sample","title":"sample","text":"<p>[jvm]\\ open override fun sample(): Boolean</p> <p>If an action should be taken based on the implementation\u2019s policy, returns true</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/","title":"RateLimiter - Misk","text":"<p>//misk-core/misk.sampling/RateLimiter</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/#ratelimiter","title":"RateLimiter","text":"<p>[jvm]\\ class RateLimiter</p> <p>A deterministic testable rate limiter that uses two variables:</p> <ul> <li>Permits per second. This is the application\u2019s configured rate. We express as a per-second rate but use it as a time-between-permits. For example, 250 permits per second is a permit every 4 milliseconds. This may be zero, in which case all acquire attempts will return false.</li> <li>Window size. If the application specified 250 permits per second, that doesn\u2019t specify how many permits can be returned at once. An implementation could strictly return 1 permit every 4 milliseconds, or batches of 1000 permits every 4 seconds. This class hard codes the window size to 1 second. Small windows shrink batch sizes which is inefficient; large windows grow batch sizes which is bursty. This class uses 1 second to balance latency and throughput.</li> </ul> <p>The implementation tracks a future timestamp that permits are consumed until.</p> <p>This class is similar to Guava\u2019s rate limiter. Unlike Guava\u2019s rate limiter this class is testable by application code using the rate limiter. It also has very predictable behavior because its internal mechanisms are simpler than Guava\u2019s.</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/#types","title":"Types","text":"Name Summary Factory [jvm]class Factory@Injectconstructor(ticker: Ticker, sleeper: Sleeper)"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/#functions","title":"Functions","text":"Name Summary getPermitsRemaining [jvm]fun getPermitsRemaining(unit: TimeUnit, timeout: Long): LongReturns the maximum number of permits that could have been acquired by a call to tryAcquire, assuming the caller passed the same timeout and unit. tryAcquire [jvm]fun tryAcquire(permitCount: Long, timeout: Long, unit: TimeUnit): BooleanAttempt to acquire permitCount permits, sleeping up to timeout if necessary for them to become available."},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/#properties","title":"Properties","text":"Name Summary permitsPerSecond [jvm]@Volatilevar permitsPerSecond: Long = 0"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/get-permits-remaining/","title":"getPermitsRemaining - Misk","text":"<p>//misk-core/misk.sampling/RateLimiter/getPermitsRemaining</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/get-permits-remaining/#getpermitsremaining","title":"getPermitsRemaining","text":"<p>[jvm]\\ fun getPermitsRemaining(unit: TimeUnit, timeout: Long): Long</p> <p>Returns the maximum number of permits that could have been acquired by a call to tryAcquire, assuming the caller passed the same timeout and unit.</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/permits-per-second/","title":"permitsPerSecond - Misk","text":"<p>//misk-core/misk.sampling/RateLimiter/permitsPerSecond</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/permits-per-second/#permitspersecond","title":"permitsPerSecond","text":"<p>[jvm]\\</p> <p>@Volatile</p> <p>var permitsPerSecond: Long = 0</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/try-acquire/","title":"tryAcquire - Misk","text":"<p>//misk-core/misk.sampling/RateLimiter/tryAcquire</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/try-acquire/#tryacquire","title":"tryAcquire","text":"<p>[jvm]\\ fun tryAcquire(permitCount: Long, timeout: Long, unit: TimeUnit): Boolean</p> <p>Attempt to acquire permitCount permits, sleeping up to timeout if necessary for them to become available.</p> <p>Returns true if permits were acquired.</p> <p>This always returns false if you request more than 1 window size worth of permits. If you need many permits, shrink your batch size. This is intended to smooth out consumption of the resources guarded by this rate limiter.</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/-factory/","title":"Factory - Misk","text":"<p>//misk-core/misk.sampling/RateLimiter/Factory</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ class Factory@Injectconstructor(ticker: Ticker, sleeper: Sleeper)</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]fun create(rate: Long): &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/-factory/-factory/","title":"Factory - Misk","text":"<p>//misk-core/misk.sampling/RateLimiter/Factory/Factory</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/-factory/-factory/#factory","title":"Factory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun Factory(ticker: Ticker, sleeper: Sleeper)</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/-factory/create/","title":"create - Misk","text":"<p>//misk-core/misk.sampling/RateLimiter/Factory/create</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiter/-factory/create/#create","title":"create","text":"<p>[jvm]\\ fun create(rate: Long): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiting-sampler/","title":"RateLimitingSampler - Misk","text":"<p>//misk-core/misk.sampling/RateLimitingSampler</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiting-sampler/#ratelimitingsampler","title":"RateLimitingSampler","text":"<p>[jvm]\\ class RateLimitingSampler(rateLimiter: RateLimiter) : Sampler</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiting-sampler/#constructors","title":"Constructors","text":"RateLimitingSampler [jvm]fun RateLimitingSampler(ratePerSecond: Long)"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiting-sampler/#functions","title":"Functions","text":"Name Summary sample [jvm]open override fun sample(): BooleanIf an action should be taken based on the implementation\u2019s policy, returns true sampledCall [jvm]open fun sampledCall(f: () -&gt; Unit)If sample returns true, runs the given lambda"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiting-sampler/-rate-limiting-sampler/","title":"RateLimitingSampler - Misk","text":"<p>//misk-core/misk.sampling/RateLimitingSampler/RateLimitingSampler</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiting-sampler/-rate-limiting-sampler/#ratelimitingsampler","title":"RateLimitingSampler","text":"<p>[jvm]\\ fun RateLimitingSampler(ratePerSecond: Long)</p> <p>fun RateLimitingSampler(rateLimiter: RateLimiter)</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiting-sampler/sample/","title":"sample - Misk","text":"<p>//misk-core/misk.sampling/RateLimitingSampler/sample</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-rate-limiting-sampler/sample/#sample","title":"sample","text":"<p>[jvm]\\ open override fun sample(): Boolean</p> <p>If an action should be taken based on the implementation\u2019s policy, returns true</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-sampler/","title":"Sampler - Misk","text":"<p>//misk-core/misk.sampling/Sampler</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-sampler/#sampler","title":"Sampler","text":"<p>[jvm]\\ interface Sampler</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-sampler/#functions","title":"Functions","text":"Name Summary sample [jvm]abstract fun sample(): BooleanIf an action should be taken based on the implementation\u2019s policy, returns true sampledCall [jvm]open fun sampledCall(f: () -&gt; Unit)If sample returns true, runs the given lambda"},{"location":"0.x/misk-core/misk-core/misk.sampling/-sampler/#inheritors","title":"Inheritors","text":"Name PercentSampler RateLimitingSampler AlwaysSampler"},{"location":"0.x/misk-core/misk-core/misk.sampling/-sampler/sample/","title":"sample - Misk","text":"<p>//misk-core/misk.sampling/Sampler/sample</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-sampler/sample/#sample","title":"sample","text":"<p>[jvm]\\ abstract fun sample(): Boolean</p> <p>If an action should be taken based on the implementation\u2019s policy, returns true</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-sampler/sampled-call/","title":"sampledCall - Misk","text":"<p>//misk-core/misk.sampling/Sampler/sampledCall</p>"},{"location":"0.x/misk-core/misk-core/misk.sampling/-sampler/sampled-call/#sampledcall","title":"sampledCall","text":"<p>[jvm]\\ open fun sampledCall(f: () -&gt; Unit)</p> <p>If sample returns true, runs the given lambda</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/","title":"Package misk.security.ssl - Misk","text":"<p>//misk-core/misk.security.ssl</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/#package-misksecurityssl","title":"Package misk.security.ssl","text":""},{"location":"0.x/misk-core/misk-core/misk.security.ssl/#types","title":"Types","text":"Name Summary CertificateAndKey [jvm]typealias CertificateAndKey = wisp.security.ssl.CertificateAndKey CertStore [jvm]typealias CertStore = wisp.security.ssl.CertStoreA certificate and its private key. CertStoreConfig [jvm]data class CertStoreConfig@Injectconstructor(resource: String, passphrase: String?, format: String) SslContextFactory [jvm]class SslContextFactory@Injectconstructor(sslLoader: SslLoader) SslLoader [jvm]class SslLoaderLoads keys and certificates from the file system. TrustStore [jvm]typealias TrustStore = wisp.security.ssl.TrustStoreA set of trusted root certificates. TrustStoreConfig [jvm]data class TrustStoreConfig@Injectconstructor(resource: String, passphrase: String?, format: String)"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/#functions","title":"Functions","text":"Name Summary aliasesOfType [jvm]inline fun &lt;T : KeyStore.Entry&gt; KeyStore.aliasesOfType(): List&lt;String&gt;fun KeyStore.aliasesOfType(entryClass: Class&lt;out KeyStore.Entry&gt;): List&lt;String&gt; getCertificateAndKey [jvm]fun KeyStore.getCertificateAndKey(passphrase: CharArray): CertificateAndKey?fun KeyStore.getCertificateAndKey(alias: String, passphrase: CharArray): CertificateAndKey? getPrivateKey [jvm]fun KeyStore.getPrivateKey(passphrase: CharArray): PrivateKeyfun KeyStore.getPrivateKey(alias: String, passphrase: CharArray): PrivateKey getX509Certificate [jvm]fun KeyStore.getX509Certificate(): X509Certificatefun KeyStore.getX509Certificate(alias: String): X509Certificate getX509CertificateChain [jvm]fun KeyStore.getX509CertificateChain(): Array&lt;X509Certificate&gt;fun KeyStore.getX509CertificateChain(alias: String): Array&lt;X509Certificate&gt;"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/#properties","title":"Properties","text":"Name Summary onlyAlias [jvm]val KeyStore.onlyAlias: String"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/aliases-of-type/","title":"aliasesOfType - Misk","text":"<p>//misk-core/misk.security.ssl/aliasesOfType</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/aliases-of-type/#aliasesoftype","title":"aliasesOfType","text":"<p>[jvm]\\ fun KeyStore.aliasesOfType(entryClass: Class&lt;out KeyStore.Entry&gt;): List&lt;String&gt;</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/aliases-of-type/#return","title":"Return","text":"<p>all aliases present in the keystore of a given entry type.</p> <p>[jvm]\\ inline fun &lt;T : KeyStore.Entry&gt; KeyStore.aliasesOfType(): List&lt;String&gt;</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-certificate-and-key/","title":"getCertificateAndKey - Misk","text":"<p>//misk-core/misk.security.ssl/getCertificateAndKey</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-certificate-and-key/#getcertificateandkey","title":"getCertificateAndKey","text":"<p>[jvm]\\ fun KeyStore.getCertificateAndKey(alias: String, passphrase: CharArray): CertificateAndKey?</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-certificate-and-key/#return","title":"Return","text":"<p>the certificate and key pair for the given alias</p> <p>[jvm]\\ fun KeyStore.getCertificateAndKey(passphrase: CharArray): CertificateAndKey?</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-certificate-and-key/#return_1","title":"Return","text":"<p>the one and only CertificateAndKey in the keystore</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-private-key/","title":"getPrivateKey - Misk","text":"<p>//misk-core/misk.security.ssl/getPrivateKey</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-private-key/#getprivatekey","title":"getPrivateKey","text":"<p>[jvm]\\ fun KeyStore.getPrivateKey(alias: String, passphrase: CharArray): PrivateKey</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-private-key/#return","title":"Return","text":"<p>the PrivateKey with the given alias</p> <p>[jvm]\\ fun KeyStore.getPrivateKey(passphrase: CharArray): PrivateKey</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-private-key/#return_1","title":"Return","text":"<p>the one and only PrivateKey in the keystore</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-x509-certificate-chain/","title":"getX509CertificateChain - Misk","text":"<p>//misk-core/misk.security.ssl/getX509CertificateChain</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-x509-certificate-chain/#getx509certificatechain","title":"getX509CertificateChain","text":"<p>[jvm]\\ fun KeyStore.getX509CertificateChain(alias: String): Array&lt;X509Certificate&gt;</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-x509-certificate-chain/#return","title":"Return","text":"<p>the X509Certificate chain with the provided alias</p> <p>[jvm]\\ fun KeyStore.getX509CertificateChain(): Array&lt;X509Certificate&gt;</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-x509-certificate-chain/#return_1","title":"Return","text":"<p>the one and only X509Certificate chain in the keystore</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-x509-certificate/","title":"getX509Certificate - Misk","text":"<p>//misk-core/misk.security.ssl/getX509Certificate</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-x509-certificate/#getx509certificate","title":"getX509Certificate","text":"<p>[jvm]\\ fun KeyStore.getX509Certificate(alias: String): X509Certificate</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-x509-certificate/#return","title":"Return","text":"<p>The X509Certificate with the provided alias</p> <p>[jvm]\\ fun KeyStore.getX509Certificate(): X509Certificate</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/get-x509-certificate/#return_1","title":"Return","text":"<p>the one and only X509Certificate in the keystore</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/only-alias/","title":"onlyAlias - Misk","text":"<p>//misk-core/misk.security.ssl/onlyAlias</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/only-alias/#onlyalias","title":"onlyAlias","text":"<p>[jvm]\\ val KeyStore.onlyAlias: String</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/only-alias/#return","title":"Return","text":"<p>the only alias in the keystore, if the keystore only has a single entry</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/","title":"CertStoreConfig - Misk","text":"<p>//misk-core/misk.security.ssl/CertStoreConfig</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/#certstoreconfig","title":"CertStoreConfig","text":"<p>[jvm]\\ data class CertStoreConfig@Injectconstructor(resource: String, passphrase: String?, format: String)</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/#functions","title":"Functions","text":"Name Summary toWispConfig [jvm]fun toWispConfig(): CertStoreConfig"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/#properties","title":"Properties","text":"Name Summary format [jvm]val format: String passphrase [jvm]val passphrase: String? = null resource [jvm]val resource: String"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/-cert-store-config/","title":"CertStoreConfig - Misk","text":"<p>//misk-core/misk.security.ssl/CertStoreConfig/CertStoreConfig</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/-cert-store-config/#certstoreconfig","title":"CertStoreConfig","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun CertStoreConfig(resource: String, passphrase: String? = null, format: String = SslLoader.FORMAT_JCEKS)</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/format/","title":"format - Misk","text":"<p>//misk-core/misk.security.ssl/CertStoreConfig/format</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/format/#format","title":"format","text":"<p>[jvm]\\ val format: String</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/passphrase/","title":"passphrase - Misk","text":"<p>//misk-core/misk.security.ssl/CertStoreConfig/passphrase</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/passphrase/#passphrase","title":"passphrase","text":"<p>[jvm]\\ val passphrase: String? = null</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/resource/","title":"resource - Misk","text":"<p>//misk-core/misk.security.ssl/CertStoreConfig/resource</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/resource/#resource","title":"resource","text":"<p>[jvm]\\ val resource: String</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/to-wisp-config/","title":"toWispConfig - Misk","text":"<p>//misk-core/misk.security.ssl/CertStoreConfig/toWispConfig</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-cert-store-config/to-wisp-config/#towispconfig","title":"toWispConfig","text":"<p>[jvm]\\ fun toWispConfig(): CertStoreConfig</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/","title":"SslContextFactory - Misk","text":"<p>//misk-core/misk.security.ssl/SslContextFactory</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/#sslcontextfactory","title":"SslContextFactory","text":"<p>[jvm]\\ class SslContextFactory@Injectconstructor(sslLoader: SslLoader)</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/#functions","title":"Functions","text":"Name Summary create [jvm]@JvmOverloadsfun create(certStore: CertStoreConfig? = null, trustStore: TrustStoreConfig? = null): SSLContext@JvmOverloadsfun create(certStore: CertStore?, pin: CharArray?, trustStore: TrustStore? = null): SSLContext loadTrustManagers [jvm]fun loadTrustManagers(trustStore: KeyStore): Array&lt;TrustManager&gt;"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/#properties","title":"Properties","text":"Name Summary delegate [jvm]val delegate: SslContextFactory"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/-ssl-context-factory/","title":"SslContextFactory - Misk","text":"<p>//misk-core/misk.security.ssl/SslContextFactory/SslContextFactory</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/-ssl-context-factory/#sslcontextfactory","title":"SslContextFactory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun SslContextFactory(sslLoader: SslLoader)</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/create/","title":"create - Misk","text":"<p>//misk-core/misk.security.ssl/SslContextFactory/create</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/create/#create","title":"create","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun create(certStore: CertStoreConfig? = null, trustStore: TrustStoreConfig? = null): SSLContext</p> <p>@JvmOverloads</p> <p>fun create(certStore: CertStore?, pin: CharArray?, trustStore: TrustStore? = null): SSLContext</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/create/#return","title":"Return","text":"<p>A new SSLContext for the given certstore and optional truststore config</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/delegate/","title":"delegate - Misk","text":"<p>//misk-core/misk.security.ssl/SslContextFactory/delegate</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/delegate/#delegate","title":"delegate","text":"<p>[jvm]\\ val delegate: SslContextFactory</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/load-trust-managers/","title":"loadTrustManagers - Misk","text":"<p>//misk-core/misk.security.ssl/SslContextFactory/loadTrustManagers</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/load-trust-managers/#loadtrustmanagers","title":"loadTrustManagers","text":"<p>[jvm]\\ fun loadTrustManagers(trustStore: KeyStore): Array&lt;TrustManager&gt;</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-context-factory/load-trust-managers/#return","title":"Return","text":"<p>a set of TrustManagers based on the certificates in the given truststore</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/","title":"SslLoader - Misk","text":"<p>//misk-core/misk.security.ssl/SslLoader</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/#sslloader","title":"SslLoader","text":"<p>[jvm]\\ class SslLoader</p> <p>Loads keys and certificates from the file system.</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/#functions","title":"Functions","text":"Name Summary loadCertStore [jvm]fun loadCertStore(config: CertStoreConfig): CertStore?@JvmOverloadsfun loadCertStore(path: String, format: String = FORMAT_PEM, passphrase: String? = null): CertStore? loadTrustStore [jvm]fun loadTrustStore(config: TrustStoreConfig): TrustStore?@JvmOverloadsfun loadTrustStore(path: String, format: String = FORMAT_PEM, passphrase: String? = null): TrustStore?"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/#properties","title":"Properties","text":"Name Summary delegate [jvm]val delegate: SslLoader resourceLoader [jvm]val resourceLoader: ResourceLoader"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/delegate/","title":"delegate - Misk","text":"<p>//misk-core/misk.security.ssl/SslLoader/delegate</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/delegate/#delegate","title":"delegate","text":"<p>[jvm]\\ val delegate: SslLoader</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/load-cert-store/","title":"loadCertStore - Misk","text":"<p>//misk-core/misk.security.ssl/SslLoader/loadCertStore</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/load-cert-store/#loadcertstore","title":"loadCertStore","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun loadCertStore(path: String, format: String = FORMAT_PEM, passphrase: String? = null): CertStore?</p> <p>fun loadCertStore(config: CertStoreConfig): CertStore?</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/load-trust-store/","title":"loadTrustStore - Misk","text":"<p>//misk-core/misk.security.ssl/SslLoader/loadTrustStore</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/load-trust-store/#loadtruststore","title":"loadTrustStore","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun loadTrustStore(path: String, format: String = FORMAT_PEM, passphrase: String? = null): TrustStore?</p> <p>fun loadTrustStore(config: TrustStoreConfig): TrustStore?</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/resource-loader/","title":"resourceLoader - Misk","text":"<p>//misk-core/misk.security.ssl/SslLoader/resourceLoader</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/resource-loader/#resourceloader","title":"resourceLoader","text":"<p>[jvm]\\ val resourceLoader: ResourceLoader</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/-companion/","title":"Companion - Misk","text":"<p>//misk-core/misk.security.ssl/SslLoader/Companion</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/-companion/#properties","title":"Properties","text":"Name Summary FORMAT_JCEKS [jvm]const val FORMAT_JCEKS: String FORMAT_JKS [jvm]const val FORMAT_JKS: String FORMAT_PEM [jvm]const val FORMAT_PEM: String"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-j-c-e-k-s/","title":"FORMAT_JCEKS - Misk","text":"<p>//misk-core/misk.security.ssl/SslLoader/Companion/FORMAT_JCEKS</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-j-c-e-k-s/#format_jceks","title":"FORMAT_JCEKS","text":"<p>[jvm]\\ const val FORMAT_JCEKS: String</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-j-k-s/","title":"FORMAT_JKS - Misk","text":"<p>//misk-core/misk.security.ssl/SslLoader/Companion/FORMAT_JKS</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-j-k-s/#format_jks","title":"FORMAT_JKS","text":"<p>[jvm]\\ const val FORMAT_JKS: String</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-p-e-m/","title":"FORMAT_PEM - Misk","text":"<p>//misk-core/misk.security.ssl/SslLoader/Companion/FORMAT_PEM</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-p-e-m/#format_pem","title":"FORMAT_PEM","text":"<p>[jvm]\\ const val FORMAT_PEM: String</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/","title":"TrustStoreConfig - Misk","text":"<p>//misk-core/misk.security.ssl/TrustStoreConfig</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/#truststoreconfig","title":"TrustStoreConfig","text":"<p>[jvm]\\ data class TrustStoreConfig@Injectconstructor(resource: String, passphrase: String?, format: String)</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/#functions","title":"Functions","text":"Name Summary toWispConfig [jvm]fun toWispConfig(): TrustStoreConfig"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/#properties","title":"Properties","text":"Name Summary format [jvm]val format: String passphrase [jvm]val passphrase: String? = null resource [jvm]val resource: String"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/-trust-store-config/","title":"TrustStoreConfig - Misk","text":"<p>//misk-core/misk.security.ssl/TrustStoreConfig/TrustStoreConfig</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/-trust-store-config/#truststoreconfig","title":"TrustStoreConfig","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun TrustStoreConfig(resource: String, passphrase: String? = null, format: String = FORMAT_JCEKS)</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/format/","title":"format - Misk","text":"<p>//misk-core/misk.security.ssl/TrustStoreConfig/format</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/format/#format","title":"format","text":"<p>[jvm]\\ val format: String</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/passphrase/","title":"passphrase - Misk","text":"<p>//misk-core/misk.security.ssl/TrustStoreConfig/passphrase</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/passphrase/#passphrase","title":"passphrase","text":"<p>[jvm]\\ val passphrase: String? = null</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/resource/","title":"resource - Misk","text":"<p>//misk-core/misk.security.ssl/TrustStoreConfig/resource</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/resource/#resource","title":"resource","text":"<p>[jvm]\\ val resource: String</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/to-wisp-config/","title":"toWispConfig - Misk","text":"<p>//misk-core/misk.security.ssl/TrustStoreConfig/toWispConfig</p>"},{"location":"0.x/misk-core/misk-core/misk.security.ssl/-trust-store-config/to-wisp-config/#towispconfig","title":"toWispConfig","text":"<p>[jvm]\\ fun toWispConfig(): TrustStoreConfig</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/","title":"Package misk.tokens - Misk","text":"<p>//misk-core/misk.tokens</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/#package-misktokens","title":"Package misk.tokens","text":""},{"location":"0.x/misk-core/misk-core/misk.tokens/#types","title":"Types","text":"Name Summary FakeTokenGenerator [jvm]@Singletonclass FakeTokenGenerator@Injectconstructor : TokenGenerator FakeTokenGenerator2 [jvm]@Singletonclass FakeTokenGenerator2@Injectconstructor : TokenGenerator2 FakeTokenGeneratorModule [jvm]class FakeTokenGeneratorModule : KAbstractModule RealTokenGenerator [jvm]@Singletonclass RealTokenGenerator@Injectconstructor : TokenGenerator RealTokenGenerator2 [jvm]@Singletonclass RealTokenGenerator2@Injectconstructor : TokenGenerator2 TokenGenerator [jvm]typealias TokenGenerator = wisp.token.TokenGenerator TokenGenerator2 [jvm]interface TokenGenerator2 TokenGeneratorModule [jvm]class TokenGeneratorModule : KAbstractModule"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator/","title":"FakeTokenGenerator - Misk","text":"<p>//misk-core/misk.tokens/FakeTokenGenerator</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator/#faketokengenerator","title":"FakeTokenGenerator","text":"<p>[jvm]\\ @Singleton</p> <p>class FakeTokenGenerator@Injectconstructor : TokenGenerator</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator/#functions","title":"Functions","text":"Name Summary generate [jvm]open override fun generate(label: String?, length: Int): String"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator/-fake-token-generator/","title":"FakeTokenGenerator - Misk","text":"<p>//misk-core/misk.tokens/FakeTokenGenerator/FakeTokenGenerator</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator/-fake-token-generator/#faketokengenerator","title":"FakeTokenGenerator","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun FakeTokenGenerator()</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator-module/","title":"FakeTokenGeneratorModule - Misk","text":"<p>//misk-core/misk.tokens/FakeTokenGeneratorModule</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator-module/#faketokengeneratormodule","title":"FakeTokenGeneratorModule","text":"<p>[jvm]\\ class FakeTokenGeneratorModule : KAbstractModule</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator-module/-fake-token-generator-module/","title":"FakeTokenGeneratorModule - Misk","text":"<p>//misk-core/misk.tokens/FakeTokenGeneratorModule/FakeTokenGeneratorModule</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator-module/-fake-token-generator-module/#faketokengeneratormodule","title":"FakeTokenGeneratorModule","text":"<p>[jvm]\\ fun FakeTokenGeneratorModule()</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator2/","title":"FakeTokenGenerator2 - Misk","text":"<p>//misk-core/misk.tokens/FakeTokenGenerator2</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator2/#faketokengenerator2","title":"FakeTokenGenerator2","text":"<p>[jvm]\\ @Singleton</p> <p>class FakeTokenGenerator2@Injectconstructor : TokenGenerator2</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator2/#functions","title":"Functions","text":"Name Summary generate [jvm]open override fun generate(label: String?, length: Int): String"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator2/-fake-token-generator2/","title":"FakeTokenGenerator2 - Misk","text":"<p>//misk-core/misk.tokens/FakeTokenGenerator2/FakeTokenGenerator2</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator2/-fake-token-generator2/#faketokengenerator2","title":"FakeTokenGenerator2","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun FakeTokenGenerator2()</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator2/generate/","title":"generate - Misk","text":"<p>//misk-core/misk.tokens/FakeTokenGenerator2/generate</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-fake-token-generator2/generate/#generate","title":"generate","text":"<p>[jvm]\\ open override fun generate(label: String?, length: Int): String</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-real-token-generator/","title":"RealTokenGenerator - Misk","text":"<p>//misk-core/misk.tokens/RealTokenGenerator</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-real-token-generator/#realtokengenerator","title":"RealTokenGenerator","text":"<p>[jvm]\\ @Singleton</p> <p>class RealTokenGenerator@Injectconstructor : TokenGenerator</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-real-token-generator/#functions","title":"Functions","text":"Name Summary generate [jvm]open override fun generate(label: String?, length: Int): String"},{"location":"0.x/misk-core/misk-core/misk.tokens/-real-token-generator/-real-token-generator/","title":"RealTokenGenerator - Misk","text":"<p>//misk-core/misk.tokens/RealTokenGenerator/RealTokenGenerator</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-real-token-generator/-real-token-generator/#realtokengenerator","title":"RealTokenGenerator","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun RealTokenGenerator()</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-real-token-generator2/","title":"RealTokenGenerator2 - Misk","text":"<p>//misk-core/misk.tokens/RealTokenGenerator2</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-real-token-generator2/#realtokengenerator2","title":"RealTokenGenerator2","text":"<p>[jvm]\\ @Singleton</p> <p>class RealTokenGenerator2@Injectconstructor : TokenGenerator2</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-real-token-generator2/#functions","title":"Functions","text":"Name Summary generate [jvm]open override fun generate(label: String?, length: Int): String"},{"location":"0.x/misk-core/misk-core/misk.tokens/-real-token-generator2/-real-token-generator2/","title":"RealTokenGenerator2 - Misk","text":"<p>//misk-core/misk.tokens/RealTokenGenerator2/RealTokenGenerator2</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-real-token-generator2/-real-token-generator2/#realtokengenerator2","title":"RealTokenGenerator2","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun RealTokenGenerator2()</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-real-token-generator2/generate/","title":"generate - Misk","text":"<p>//misk-core/misk.tokens/RealTokenGenerator2/generate</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-real-token-generator2/generate/#generate","title":"generate","text":"<p>[jvm]\\ open override fun generate(label: String?, length: Int): String</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator-module/","title":"TokenGeneratorModule - Misk","text":"<p>//misk-core/misk.tokens/TokenGeneratorModule</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator-module/#tokengeneratormodule","title":"TokenGeneratorModule","text":"<p>[jvm]\\ class TokenGeneratorModule : KAbstractModule</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator-module/-token-generator-module/","title":"TokenGeneratorModule - Misk","text":"<p>//misk-core/misk.tokens/TokenGeneratorModule/TokenGeneratorModule</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator-module/-token-generator-module/#tokengeneratormodule","title":"TokenGeneratorModule","text":"<p>[jvm]\\ fun TokenGeneratorModule()</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator2/","title":"TokenGenerator2 - Misk","text":"<p>//misk-core/misk.tokens/TokenGenerator2</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator2/#tokengenerator2","title":"TokenGenerator2","text":"<p>[jvm]\\ interface TokenGenerator2</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator2/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator2/#functions","title":"Functions","text":"Name Summary generate [jvm]abstract fun generate(label: String? = null, length: Int = 25): String"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator2/#inheritors","title":"Inheritors","text":"Name FakeTokenGenerator2 RealTokenGenerator2"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator2/generate/","title":"generate - Misk","text":"<p>//misk-core/misk.tokens/TokenGenerator2/generate</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator2/generate/#generate","title":"generate","text":"<p>[jvm]\\ abstract fun generate(label: String? = null, length: Int = 25): String</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator2/-companion/","title":"Companion - Misk","text":"<p>//misk-core/misk.tokens/TokenGenerator2/Companion</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator2/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator2/-companion/#functions","title":"Functions","text":"Name Summary canonicalize [jvm]fun canonicalize(token: String): StringReturns a token semantically equal to token but using only characters from the Crockford Base32 alphabet. This maps visually similar characters like o to the corresponding encoding character like 0. Spaces are omitted."},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator2/-companion/canonicalize/","title":"canonicalize - Misk","text":"<p>//misk-core/misk.tokens/TokenGenerator2/Companion/canonicalize</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator2/-companion/canonicalize/#canonicalize","title":"canonicalize","text":"<p>[jvm]\\ fun canonicalize(token: String): String</p> <p>Returns a token semantically equal to token but using only characters from the Crockford Base32 alphabet. This maps visually similar characters like o to the corresponding encoding character like 0. Spaces are omitted.</p> <p>Call this when accepting tokens that may have been transcribed by a user. It is not necessary to canonicalize tokens that haven\u2019t been manually entered; they will already be in canonical form.</p>"},{"location":"0.x/misk-core/misk-core/misk.tokens/-token-generator2/-companion/canonicalize/#throws","title":"Throws","text":"java.lang.IllegalArgumentException if token contains a character that cannot be mapped and     that is not a space."},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/","title":"Package misk.web.mediatype - Misk","text":"<p>//misk-core/misk.web.mediatype</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/#package-miskwebmediatype","title":"Package misk.web.mediatype","text":""},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/#types","title":"Types","text":"Name Summary MediaRange [jvm]data class MediaRange@JvmOverloadsconstructor(type: String, subtype: String, charset: Charset?, qualityFactor: Double, parameters: Map&lt;String, String&gt;, extensions: Map&lt;String, String&gt;, rawText: String) : Comparable&lt;MediaRange&gt; An RFC-2616 media range MediaTypes [jvm]object MediaTypes"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/#functions","title":"Functions","text":"Name Summary asMediaRange [jvm]fun String.asMediaRange(): MediaRange asMediaType [jvm]fun String.asMediaType(): MediaType compareTo [jvm]fun MediaType.compareTo(other: MediaType): Int"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/as-media-range/","title":"asMediaRange - Misk","text":"<p>//misk-core/misk.web.mediatype/asMediaRange</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/as-media-range/#asmediarange","title":"asMediaRange","text":"<p>[jvm]\\ fun String.asMediaRange(): MediaRange</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/as-media-type/","title":"asMediaType - Misk","text":"<p>//misk-core/misk.web.mediatype/asMediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/as-media-type/#asmediatype","title":"asMediaType","text":"<p>[jvm]\\ fun String.asMediaType(): MediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/compare-to/","title":"compareTo - Misk","text":"<p>//misk-core/misk.web.mediatype/compareTo</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/compare-to/#compareto","title":"compareTo","text":"<p>[jvm]\\ fun MediaType.compareTo(other: MediaType): Int</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/","title":"MediaRange - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/#mediarange","title":"MediaRange","text":"<p>[jvm]\\ data class MediaRange@JvmOverloadsconstructor(type: String, subtype: String, charset: Charset?, qualityFactor: Double, parameters: Map&lt;String, String&gt;, extensions: Map&lt;String, String&gt;, rawText: String) : Comparable&lt;MediaRange&gt; </p> <p>An RFC-2616 media range</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/#constructors","title":"Constructors","text":"MediaRange [jvm]@JvmOverloadsfun MediaRange(type: String, subtype: String, charset: Charset? = null, qualityFactor: Double = 1.0, parameters: Map&lt;String, String&gt; = mapOf(), extensions: Map&lt;String, String&gt; = mapOf(), rawText: String)"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion Matcher [jvm]class Matcher@JvmOverloadsconstructor(mediaRange: MediaRange, matchesCharset: Boolean) : Comparable&lt;MediaRange.Matcher&gt;"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/#functions","title":"Functions","text":"Name Summary compareTo [jvm]open operator override fun compareTo(other: MediaRange): Int matcher [jvm]fun matcher(mediaType: MediaType): MediaRange.Matcher? toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/#properties","title":"Properties","text":"Name Summary charset [jvm]val charset: Charset? = null extensions [jvm]val extensions: Map&lt;String, String&gt; parameters [jvm]val parameters: Map&lt;String, String&gt; qualityFactor [jvm]val qualityFactor: Double = 1.0 subtype [jvm]val subtype: String type [jvm]val type: String"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-media-range/","title":"MediaRange - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/MediaRange</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-media-range/#mediarange","title":"MediaRange","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun MediaRange(type: String, subtype: String, charset: Charset? = null, qualityFactor: Double = 1.0, parameters: Map&lt;String, String&gt; = mapOf(), extensions: Map&lt;String, String&gt; = mapOf(), rawText: String)</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/charset/","title":"charset - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/charset</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/charset/#charset","title":"charset","text":"<p>[jvm]\\ val charset: Charset? = null</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/compare-to/","title":"compareTo - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/compareTo</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/compare-to/#compareto","title":"compareTo","text":"<p>[jvm]\\ open operator override fun compareTo(other: MediaRange): Int</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/extensions/","title":"extensions - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/extensions</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/extensions/#extensions","title":"extensions","text":"<p>[jvm]\\ val extensions: Map&lt;String, String&gt;</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/matcher/","title":"matcher - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/matcher</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/matcher/#matcher","title":"matcher","text":"<p>[jvm]\\ fun matcher(mediaType: MediaType): MediaRange.Matcher?</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/parameters/","title":"parameters - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/parameters</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/parameters/#parameters","title":"parameters","text":"<p>[jvm]\\ val parameters: Map&lt;String, String&gt;</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/quality-factor/","title":"qualityFactor - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/qualityFactor</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/quality-factor/#qualityfactor","title":"qualityFactor","text":"<p>[jvm]\\ val qualityFactor: Double = 1.0</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/subtype/","title":"subtype - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/subtype</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/subtype/#subtype","title":"subtype","text":"<p>[jvm]\\ val subtype: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/to-string/","title":"toString - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/toString</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/type/","title":"type - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/type</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/type/#type","title":"type","text":"<p>[jvm]\\ val type: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-companion/","title":"Companion - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/Companion</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-companion/#functions","title":"Functions","text":"Name Summary parse [jvm]fun parse(s: String): MediaRange parseRanges [jvm]fun parseRanges(s: String, swallowExceptions: Boolean = false): List&lt;MediaRange&gt;"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-companion/#properties","title":"Properties","text":"Name Summary ALL_MEDIA [jvm]val ALL_MEDIA: MediaRange WILDCARD [jvm]const val WILDCARD: String"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-companion/-a-l-l_-m-e-d-i-a/","title":"ALL_MEDIA - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/Companion/ALL_MEDIA</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-companion/-a-l-l_-m-e-d-i-a/#all_media","title":"ALL_MEDIA","text":"<p>[jvm]\\ val ALL_MEDIA: MediaRange</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-companion/-w-i-l-d-c-a-r-d/","title":"WILDCARD - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/Companion/WILDCARD</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-companion/-w-i-l-d-c-a-r-d/#wildcard","title":"WILDCARD","text":"<p>[jvm]\\ const val WILDCARD: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-companion/parse-ranges/","title":"parseRanges - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/Companion/parseRanges</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-companion/parse-ranges/#parseranges","title":"parseRanges","text":"<p>[jvm]\\ fun parseRanges(s: String, swallowExceptions: Boolean = false): List&lt;MediaRange&gt;</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-companion/parse/","title":"parse - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/Companion/parse</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-companion/parse/#parse","title":"parse","text":"<p>[jvm]\\ fun parse(s: String): MediaRange</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/","title":"Matcher - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/Matcher</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/#matcher","title":"Matcher","text":"<p>[jvm]\\ class Matcher@JvmOverloadsconstructor(mediaRange: MediaRange, matchesCharset: Boolean) : Comparable&lt;MediaRange.Matcher&gt;</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/#functions","title":"Functions","text":"Name Summary compareTo [jvm]open operator override fun compareTo(other: MediaRange.Matcher): Int toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/#properties","title":"Properties","text":"Name Summary matchesCharset [jvm]val matchesCharset: Boolean = false mediaRange [jvm]val mediaRange: MediaRange"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/-matcher/","title":"Matcher - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/Matcher/Matcher</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/-matcher/#matcher","title":"Matcher","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun Matcher(mediaRange: MediaRange, matchesCharset: Boolean = false)</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/compare-to/","title":"compareTo - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/Matcher/compareTo</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/compare-to/#compareto","title":"compareTo","text":"<p>[jvm]\\ open operator override fun compareTo(other: MediaRange.Matcher): Int</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/matches-charset/","title":"matchesCharset - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/Matcher/matchesCharset</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/matches-charset/#matchescharset","title":"matchesCharset","text":"<p>[jvm]\\ val matchesCharset: Boolean = false</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/media-range/","title":"mediaRange - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/Matcher/mediaRange</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/media-range/#mediarange","title":"mediaRange","text":"<p>[jvm]\\ val mediaRange: MediaRange</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/to-string/","title":"toString - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaRange/Matcher/toString</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-range/-matcher/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/","title":"MediaTypes - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/#mediatypes","title":"MediaTypes","text":"<p>[jvm]\\ object MediaTypes</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/#functions","title":"Functions","text":"Name Summary fromFileExtension [jvm]fun fromFileExtension(ext: String): MediaType"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/#properties","title":"Properties","text":"Name Summary ALL [jvm]const val ALL: String ALL_MEDIA_TYPE [jvm]val ALL_MEDIA_TYPE: MediaType APPLICATION_FORM_URLENCODED [jvm]const val APPLICATION_FORM_URLENCODED: String APPLICATION_GRPC [jvm]const val APPLICATION_GRPC: String APPLICATION_GRPC_MEDIA_TYPE [jvm]val APPLICATION_GRPC_MEDIA_TYPE: MediaType APPLICATION_JAVASCRIPT [jvm]const val APPLICATION_JAVASCRIPT: String APPLICATION_JAVASCRIPT_MEDIA_TYPE [jvm]val APPLICATION_JAVASCRIPT_MEDIA_TYPE: MediaType APPLICATION_JSON [jvm]const val APPLICATION_JSON: String APPLICATION_JSON_MEDIA_TYPE [jvm]val APPLICATION_JSON_MEDIA_TYPE: MediaType APPLICATION_OCTETSTREAM [jvm]const val APPLICATION_OCTETSTREAM: String APPLICATION_OCTETSTREAM_MEDIA_TYPE [jvm]val APPLICATION_OCTETSTREAM_MEDIA_TYPE: MediaType APPLICATION_PROTOBUF [jvm]const val APPLICATION_PROTOBUF: String APPLICATION_PROTOBUF_MEDIA_TYPE [jvm]val APPLICATION_PROTOBUF_MEDIA_TYPE: MediaType IMAGE_PNG [jvm]const val IMAGE_PNG: String IMAGE_PNG_MEDIA_TYPE [jvm]val IMAGE_PNG_MEDIA_TYPE: MediaType IMAGE_SVG [jvm]const val IMAGE_SVG: String IMAGE_SVG_MEDIA_TYPE [jvm]val IMAGE_SVG_MEDIA_TYPE: MediaType TEXT_CSS [jvm]const val TEXT_CSS: String TEXT_CSS_MEDIA_TYPE [jvm]val TEXT_CSS_MEDIA_TYPE: MediaType TEXT_HTML [jvm]const val TEXT_HTML: String TEXT_HTML_MEDIA_TYPE [jvm]val TEXT_HTML_MEDIA_TYPE: MediaType TEXT_PLAIN_UTF8 [jvm]const val TEXT_PLAIN_UTF8: String TEXT_PLAIN_UTF8_MEDIA_TYPE [jvm]val TEXT_PLAIN_UTF8_MEDIA_TYPE: MediaType TURBO_STREAM [jvm]const val TURBO_STREAM: String TURBO_STREAM_MEDIA_TYPE [jvm]val TURBO_STREAM_MEDIA_TYPE: MediaType"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-l-l/","title":"ALL - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/ALL</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-l-l/#all","title":"ALL","text":"<p>[jvm]\\ const val ALL: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-l-l_-m-e-d-i-a_-t-y-p-e/","title":"ALL_MEDIA_TYPE - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/ALL_MEDIA_TYPE</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-l-l_-m-e-d-i-a_-t-y-p-e/#all_media_type","title":"ALL_MEDIA_TYPE","text":"<p>[jvm]\\ val ALL_MEDIA_TYPE: MediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-f-o-r-m_-u-r-l-e-n-c-o-d-e-d/","title":"APPLICATION_FORM_URLENCODED - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/APPLICATION_FORM_URLENCODED</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-f-o-r-m_-u-r-l-e-n-c-o-d-e-d/#application_form_urlencoded","title":"APPLICATION_FORM_URLENCODED","text":"<p>[jvm]\\ const val APPLICATION_FORM_URLENCODED: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-g-r-p-c/","title":"APPLICATION_GRPC - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/APPLICATION_GRPC</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-g-r-p-c/#application_grpc","title":"APPLICATION_GRPC","text":"<p>[jvm]\\ const val APPLICATION_GRPC: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-g-r-p-c_-m-e-d-i-a_-t-y-p-e/","title":"APPLICATION_GRPC_MEDIA_TYPE - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/APPLICATION_GRPC_MEDIA_TYPE</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-g-r-p-c_-m-e-d-i-a_-t-y-p-e/#application_grpc_media_type","title":"APPLICATION_GRPC_MEDIA_TYPE","text":"<p>[jvm]\\ val APPLICATION_GRPC_MEDIA_TYPE: MediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-a-v-a-s-c-r-i-p-t/","title":"APPLICATION_JAVASCRIPT - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/APPLICATION_JAVASCRIPT</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-a-v-a-s-c-r-i-p-t/#application_javascript","title":"APPLICATION_JAVASCRIPT","text":"<p>[jvm]\\ const val APPLICATION_JAVASCRIPT: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-a-v-a-s-c-r-i-p-t_-m-e-d-i-a_-t-y-p-e/","title":"APPLICATION_JAVASCRIPT_MEDIA_TYPE - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/APPLICATION_JAVASCRIPT_MEDIA_TYPE</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-a-v-a-s-c-r-i-p-t_-m-e-d-i-a_-t-y-p-e/#application_javascript_media_type","title":"APPLICATION_JAVASCRIPT_MEDIA_TYPE","text":"<p>[jvm]\\ val APPLICATION_JAVASCRIPT_MEDIA_TYPE: MediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-s-o-n/","title":"APPLICATION_JSON - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/APPLICATION_JSON</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-s-o-n/#application_json","title":"APPLICATION_JSON","text":"<p>[jvm]\\ const val APPLICATION_JSON: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-s-o-n_-m-e-d-i-a_-t-y-p-e/","title":"APPLICATION_JSON_MEDIA_TYPE - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/APPLICATION_JSON_MEDIA_TYPE</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-s-o-n_-m-e-d-i-a_-t-y-p-e/#application_json_media_type","title":"APPLICATION_JSON_MEDIA_TYPE","text":"<p>[jvm]\\ val APPLICATION_JSON_MEDIA_TYPE: MediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-o-c-t-e-t-s-t-r-e-a-m/","title":"APPLICATION_OCTETSTREAM - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/APPLICATION_OCTETSTREAM</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-o-c-t-e-t-s-t-r-e-a-m/#application_octetstream","title":"APPLICATION_OCTETSTREAM","text":"<p>[jvm]\\ const val APPLICATION_OCTETSTREAM: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-o-c-t-e-t-s-t-r-e-a-m_-m-e-d-i-a_-t-y-p-e/","title":"APPLICATION_OCTETSTREAM_MEDIA_TYPE - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/APPLICATION_OCTETSTREAM_MEDIA_TYPE</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-o-c-t-e-t-s-t-r-e-a-m_-m-e-d-i-a_-t-y-p-e/#application_octetstream_media_type","title":"APPLICATION_OCTETSTREAM_MEDIA_TYPE","text":"<p>[jvm]\\ val APPLICATION_OCTETSTREAM_MEDIA_TYPE: MediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-p-r-o-t-o-b-u-f/","title":"APPLICATION_PROTOBUF - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/APPLICATION_PROTOBUF</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-p-r-o-t-o-b-u-f/#application_protobuf","title":"APPLICATION_PROTOBUF","text":"<p>[jvm]\\ const val APPLICATION_PROTOBUF: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-p-r-o-t-o-b-u-f_-m-e-d-i-a_-t-y-p-e/","title":"APPLICATION_PROTOBUF_MEDIA_TYPE - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/APPLICATION_PROTOBUF_MEDIA_TYPE</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-p-r-o-t-o-b-u-f_-m-e-d-i-a_-t-y-p-e/#application_protobuf_media_type","title":"APPLICATION_PROTOBUF_MEDIA_TYPE","text":"<p>[jvm]\\ val APPLICATION_PROTOBUF_MEDIA_TYPE: MediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-i-m-a-g-e_-p-n-g/","title":"IMAGE_PNG - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/IMAGE_PNG</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-i-m-a-g-e_-p-n-g/#image_png","title":"IMAGE_PNG","text":"<p>[jvm]\\ const val IMAGE_PNG: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-i-m-a-g-e_-p-n-g_-m-e-d-i-a_-t-y-p-e/","title":"IMAGE_PNG_MEDIA_TYPE - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/IMAGE_PNG_MEDIA_TYPE</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-i-m-a-g-e_-p-n-g_-m-e-d-i-a_-t-y-p-e/#image_png_media_type","title":"IMAGE_PNG_MEDIA_TYPE","text":"<p>[jvm]\\ val IMAGE_PNG_MEDIA_TYPE: MediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-i-m-a-g-e_-s-v-g/","title":"IMAGE_SVG - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/IMAGE_SVG</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-i-m-a-g-e_-s-v-g/#image_svg","title":"IMAGE_SVG","text":"<p>[jvm]\\ const val IMAGE_SVG: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-i-m-a-g-e_-s-v-g_-m-e-d-i-a_-t-y-p-e/","title":"IMAGE_SVG_MEDIA_TYPE - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/IMAGE_SVG_MEDIA_TYPE</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-i-m-a-g-e_-s-v-g_-m-e-d-i-a_-t-y-p-e/#image_svg_media_type","title":"IMAGE_SVG_MEDIA_TYPE","text":"<p>[jvm]\\ val IMAGE_SVG_MEDIA_TYPE: MediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-c-s-s/","title":"TEXT_CSS - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/TEXT_CSS</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-c-s-s/#text_css","title":"TEXT_CSS","text":"<p>[jvm]\\ const val TEXT_CSS: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-c-s-s_-m-e-d-i-a_-t-y-p-e/","title":"TEXT_CSS_MEDIA_TYPE - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/TEXT_CSS_MEDIA_TYPE</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-c-s-s_-m-e-d-i-a_-t-y-p-e/#text_css_media_type","title":"TEXT_CSS_MEDIA_TYPE","text":"<p>[jvm]\\ val TEXT_CSS_MEDIA_TYPE: MediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-h-t-m-l/","title":"TEXT_HTML - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/TEXT_HTML</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-h-t-m-l/#text_html","title":"TEXT_HTML","text":"<p>[jvm]\\ const val TEXT_HTML: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-h-t-m-l_-m-e-d-i-a_-t-y-p-e/","title":"TEXT_HTML_MEDIA_TYPE - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/TEXT_HTML_MEDIA_TYPE</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-h-t-m-l_-m-e-d-i-a_-t-y-p-e/#text_html_media_type","title":"TEXT_HTML_MEDIA_TYPE","text":"<p>[jvm]\\ val TEXT_HTML_MEDIA_TYPE: MediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-p-l-a-i-n_-u-t-f8/","title":"TEXT_PLAIN_UTF8 - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/TEXT_PLAIN_UTF8</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-p-l-a-i-n_-u-t-f8/#text_plain_utf8","title":"TEXT_PLAIN_UTF8","text":"<p>[jvm]\\ const val TEXT_PLAIN_UTF8: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-p-l-a-i-n_-u-t-f8_-m-e-d-i-a_-t-y-p-e/","title":"TEXT_PLAIN_UTF8_MEDIA_TYPE - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/TEXT_PLAIN_UTF8_MEDIA_TYPE</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-p-l-a-i-n_-u-t-f8_-m-e-d-i-a_-t-y-p-e/#text_plain_utf8_media_type","title":"TEXT_PLAIN_UTF8_MEDIA_TYPE","text":"<p>[jvm]\\ val TEXT_PLAIN_UTF8_MEDIA_TYPE: MediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-u-r-b-o_-s-t-r-e-a-m/","title":"TURBO_STREAM - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/TURBO_STREAM</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-u-r-b-o_-s-t-r-e-a-m/#turbo_stream","title":"TURBO_STREAM","text":"<p>[jvm]\\ const val TURBO_STREAM: String</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-u-r-b-o_-s-t-r-e-a-m_-m-e-d-i-a_-t-y-p-e/","title":"TURBO_STREAM_MEDIA_TYPE - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/TURBO_STREAM_MEDIA_TYPE</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/-t-u-r-b-o_-s-t-r-e-a-m_-m-e-d-i-a_-t-y-p-e/#turbo_stream_media_type","title":"TURBO_STREAM_MEDIA_TYPE","text":"<p>[jvm]\\ val TURBO_STREAM_MEDIA_TYPE: MediaType</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/from-file-extension/","title":"fromFileExtension - Misk","text":"<p>//misk-core/misk.web.mediatype/MediaTypes/fromFileExtension</p>"},{"location":"0.x/misk-core/misk-core/misk.web.mediatype/-media-types/from-file-extension/#fromfileextension","title":"fromFileExtension","text":"<p>[jvm]\\ fun fromFileExtension(ext: String): MediaType</p>"},{"location":"0.x/misk-cron/","title":"misk-cron - Misk","text":"<p>//misk-cron</p>"},{"location":"0.x/misk-cron/#misk-cron","title":"misk-cron","text":""},{"location":"0.x/misk-cron/#packages","title":"Packages","text":"Name misk.cron"},{"location":"0.x/misk-cron/misk-cron/misk.cron/","title":"Package misk.cron - Misk","text":"<p>//misk-cron/misk.cron</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/#package-miskcron","title":"Package misk.cron","text":""},{"location":"0.x/misk-cron/misk-cron/misk.cron/#types","title":"Types","text":"Name Summary CronEntryModule [jvm]class CronEntryModule&lt;A : Runnable&gt; : KAbstractModule CronManager [jvm]@Singletonclass CronManager@Injectconstructor CronModule [jvm]class CronModule@JvmOverloadsconstructor(zoneId: ZoneId, threadPoolSize: Int, dependencies: List&lt;Key&lt;out Service&gt;&gt;) : KAbstractModule CronPattern [jvm]@Target(allowedTargets = [AnnotationTarget.CLASS])annotation class CronPattern(pattern: String) FakeCronModule [jvm]class FakeCronModule@JvmOverloadsconstructor(zoneId: ZoneId, threadPoolSize: Int, dependencies: List&lt;Key&lt;out Service&gt;&gt;) : KAbstractModule"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-entry-module/","title":"CronEntryModule - Misk","text":"<p>//misk-cron/misk.cron/CronEntryModule</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-entry-module/#cronentrymodule","title":"CronEntryModule","text":"<p>[jvm]\\ class CronEntryModule&lt;A : Runnable&gt; : KAbstractModule</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-entry-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-entry-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-entry-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-entry-module/-companion/","title":"Companion - Misk","text":"<p>//misk-cron/misk.cron/CronEntryModule/Companion</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-entry-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-entry-module/-companion/#functions","title":"Functions","text":"Name Summary create [jvm]inline fun &lt;A : Runnable&gt; create(): CronEntryModule&lt;A&gt;[jvm]fun &lt;A : Runnable&gt; create(cronRunnableClass: KClass&lt;A&gt;): CronEntryModule&lt;A&gt;Registers a cron runnable."},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-entry-module/-companion/create/","title":"create - Misk","text":"<p>//misk-cron/misk.cron/CronEntryModule/Companion/create</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-entry-module/-companion/create/#create","title":"create","text":"<p>[jvm]\\ inline fun &lt;A : Runnable&gt; create(): CronEntryModule&lt;A&gt;</p> <p>[jvm]\\ fun &lt;A : Runnable&gt; create(cronRunnableClass: KClass&lt;A&gt;): CronEntryModule&lt;A&gt;</p> <p>Registers a cron runnable.</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-entry-module/-companion/create/#parameters","title":"Parameters","text":"<p>jvm</p> cronRunnableClass : The cron runnable to register."},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/","title":"CronManager - Misk","text":"<p>//misk-cron/misk.cron/CronManager</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/#cronmanager","title":"CronManager","text":"<p>[jvm]\\ @Singleton</p> <p>class CronManager@Injectconstructor</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion CronEntry [jvm]data class CronEntry(name: String, cronTab: String, executionTime: ExecutionTime, runnable: Runnable)"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/#functions","title":"Functions","text":"Name Summary runReadyCrons [jvm]fun runReadyCrons(lastRun: Instant) waitForCronsComplete [jvm]fun waitForCronsComplete()"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-manager/","title":"CronManager - Misk","text":"<p>//misk-cron/misk.cron/CronManager/CronManager</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-manager/#cronmanager","title":"CronManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun CronManager()</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/run-ready-crons/","title":"runReadyCrons - Misk","text":"<p>//misk-cron/misk.cron/CronManager/runReadyCrons</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/run-ready-crons/#runreadycrons","title":"runReadyCrons","text":"<p>[jvm]\\ fun runReadyCrons(lastRun: Instant)</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/wait-for-crons-complete/","title":"waitForCronsComplete - Misk","text":"<p>//misk-cron/misk.cron/CronManager/waitForCronsComplete</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/wait-for-crons-complete/#waitforcronscomplete","title":"waitForCronsComplete","text":"<p>[jvm]\\ fun waitForCronsComplete()</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-companion/","title":"Companion - Misk","text":"<p>//misk-cron/misk.cron/CronManager/Companion</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-entry/","title":"CronEntry - Misk","text":"<p>//misk-cron/misk.cron/CronManager/CronEntry</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-entry/#cronentry","title":"CronEntry","text":"<p>[jvm]\\ data class CronEntry(name: String, cronTab: String, executionTime: ExecutionTime, runnable: Runnable)</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-entry/#properties","title":"Properties","text":"Name Summary cronTab [jvm]val cronTab: String executionTime [jvm]val executionTime: ExecutionTime name [jvm]val name: String runnable [jvm]val runnable: Runnable"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-entry/-cron-entry/","title":"CronEntry - Misk","text":"<p>//misk-cron/misk.cron/CronManager/CronEntry/CronEntry</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-entry/-cron-entry/#cronentry","title":"CronEntry","text":"<p>[jvm]\\ fun CronEntry(name: String, cronTab: String, executionTime: ExecutionTime, runnable: Runnable)</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-entry/cron-tab/","title":"cronTab - Misk","text":"<p>//misk-cron/misk.cron/CronManager/CronEntry/cronTab</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-entry/cron-tab/#crontab","title":"cronTab","text":"<p>[jvm]\\ val cronTab: String</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-entry/execution-time/","title":"executionTime - Misk","text":"<p>//misk-cron/misk.cron/CronManager/CronEntry/executionTime</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-entry/execution-time/#executiontime","title":"executionTime","text":"<p>[jvm]\\ val executionTime: ExecutionTime</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-entry/name/","title":"name - Misk","text":"<p>//misk-cron/misk.cron/CronManager/CronEntry/name</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-entry/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-entry/runnable/","title":"runnable - Misk","text":"<p>//misk-cron/misk.cron/CronManager/CronEntry/runnable</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-manager/-cron-entry/runnable/#runnable","title":"runnable","text":"<p>[jvm]\\ val runnable: Runnable</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-module/","title":"CronModule - Misk","text":"<p>//misk-cron/misk.cron/CronModule</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-module/#cronmodule","title":"CronModule","text":"<p>[jvm]\\ class CronModule@JvmOverloadsconstructor(zoneId: ZoneId, threadPoolSize: Int, dependencies: List&lt;Key&lt;out Service&gt;&gt;) : KAbstractModule</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideTaskQueue [jvm]@Provides@Singletonfun provideTaskQueue(queueFactory: RepeatedTaskQueueFactory): RepeatedTaskQueue requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-module/-cron-module/","title":"CronModule - Misk","text":"<p>//misk-cron/misk.cron/CronModule/CronModule</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-module/-cron-module/#cronmodule","title":"CronModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun CronModule(zoneId: ZoneId, threadPoolSize: Int = 10, dependencies: List&lt;Key&lt;out Service&gt;&gt; = listOf())</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-module/provide-task-queue/","title":"provideTaskQueue - Misk","text":"<p>//misk-cron/misk.cron/CronModule/provideTaskQueue</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-module/provide-task-queue/#providetaskqueue","title":"provideTaskQueue","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideTaskQueue(queueFactory: RepeatedTaskQueueFactory): RepeatedTaskQueue</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-pattern/","title":"CronPattern - Misk","text":"<p>//misk-cron/misk.cron/CronPattern</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-pattern/#cronpattern","title":"CronPattern","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.CLASS])</p> <p>annotation class CronPattern(pattern: String)</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-pattern/#properties","title":"Properties","text":"Name Summary pattern [jvm]val pattern: String"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-pattern/-cron-pattern/","title":"CronPattern - Misk","text":"<p>//misk-cron/misk.cron/CronPattern/CronPattern</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-pattern/-cron-pattern/#cronpattern","title":"CronPattern","text":"<p>[jvm]\\ fun CronPattern(pattern: String)</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-pattern/pattern/","title":"pattern - Misk","text":"<p>//misk-cron/misk.cron/CronPattern/pattern</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-cron-pattern/pattern/#pattern","title":"pattern","text":"<p>[jvm]\\ val pattern: String</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-fake-cron-module/","title":"FakeCronModule - Misk","text":"<p>//misk-cron/misk.cron/FakeCronModule</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-fake-cron-module/#fakecronmodule","title":"FakeCronModule","text":"<p>[jvm]\\ class FakeCronModule@JvmOverloadsconstructor(zoneId: ZoneId, threadPoolSize: Int, dependencies: List&lt;Key&lt;out Service&gt;&gt;) : KAbstractModule</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-fake-cron-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-fake-cron-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-fake-cron-module/-fake-cron-module/","title":"FakeCronModule - Misk","text":"<p>//misk-cron/misk.cron/FakeCronModule/FakeCronModule</p>"},{"location":"0.x/misk-cron/misk-cron/misk.cron/-fake-cron-module/-fake-cron-module/#fakecronmodule","title":"FakeCronModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun FakeCronModule(zoneId: ZoneId, threadPoolSize: Int = 10, dependencies: List&lt;Key&lt;out Service&gt;&gt; = listOf())</p>"},{"location":"0.x/misk-crypto/","title":"misk-crypto - Misk","text":"<p>//misk-crypto</p>"},{"location":"0.x/misk-crypto/#misk-crypto","title":"misk-crypto","text":""},{"location":"0.x/misk-crypto/#packages","title":"Packages","text":"Name misk.crypto misk.crypto.internal misk.crypto.pgp misk.crypto.pgp.internal"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/","title":"Package misk.crypto - Misk","text":"<p>//misk-crypto/misk.crypto</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/#package-miskcrypto","title":"Package misk.crypto","text":""},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/#types","title":"Types","text":"Name Summary AeadKeyManager [jvm]@Singletonclass AeadKeyManager : MappedKeyManager&lt;Aead&gt; Holds a map of every Aead key name to its primitive listed in the configuration for this app. AwsKmsClientModule [jvm]class AwsKmsClientModule@JvmOverloadsconstructor(credentialsPath: String?) : KAbstractModuleAWS specific KMS client module. Currently uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in AwsKmsClient.withDefaultCredentials BucketNameSource [jvm]interface BucketNameSourceBind this to an instance to control how external buckets are referenced. CiphertextFormat [jvm]class CiphertextFormatWraps a ciphertext and the encryption context associated with it in a ByteArray. CryptoConfig [jvm]data class CryptoConfig@JvmOverloadsconstructor(keys: List&lt;Key&gt;?, kms_uri: String, external_data_keys: Map&lt;KeyAlias, KeyType&gt;?) : ConfigMain configuration object representing to be used in the app. CryptoModule [jvm]class CryptoModule(config: CryptoConfig) : KAbstractModuleConfigures and registers the keys listed in the configuration file. Each key is read, decrypted, and then bound via Google Guice and added to a MappedKeyManager. DeterministicAeadKeyManager [jvm]@Singletonclass DeterministicAeadKeyManager : MappedKeyManager&lt;DeterministicAead&gt; Holds a map of every DeterministicAead key name to its primitive listed in the configuration for this app. DigitalSignature [jvm]data class DigitalSignature(signer: PublicKeySign, verifier: PublicKeyVerify) DigitalSignatureKeyManager [jvm]@Singletonclass DigitalSignatureKeyManager : MappedKeyManager&lt;DigitalSignature&gt; Holds a map of every key name to its corresponding PublicKeySign and PublicKeyVerify primitives. ExternalDataKeys [jvm]@Qualifier@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER])annotation class ExternalDataKeysThis annotation is used to decorate the collection of external data keys used in the service. ExternalKeyManagerException [jvm]class ExternalKeyManagerException(message: String) : IOExceptionThrown on creation if external key does not exist. ExternalKeyResolver [jvm]class ExternalKeyResolver@Injectconstructor(allKeyAliases: Map&lt;KeyAlias, KeyType&gt;, externalKeySources: Set&lt;ExternalKeySource&gt;) : KeyResolverExternalKeyResolver implements an KeyResolver that fetches Tink keysets from an external source, such as an S3 bucket. If multiple sources are registered (by binding implementations of KeyResolver), the first one to contain the key (via ExternalKeySource.keyExists) is the key that is used. ExternalKeySource [jvm]interface ExternalKeySourceImplement an ExternalKeySource to provide Tink keysets from an external location, such as an S3 bucket or an NFS share. GcpKmsClientModule [jvm]class GcpKmsClientModule@JvmOverloadsconstructor(credentialsPath: String?) : KAbstractModuleGCP specific KMS client module. Uses a file path to a JSON credentials file to initialize the client. HybridDecryptKeyManager [jvm]@Singletonclass HybridDecryptKeyManager : MappedKeyManager&lt;HybridDecrypt&gt; Holds a map of every HybridDecrypt key name to its corresponding primitive listed in the configuration for this app. HybridEncryptKeyManager [jvm]@Singletonclass HybridEncryptKeyManager : MappedKeyManager&lt;HybridEncrypt&gt; Holds a map of every HybridEncrypt key name to its corresponding primitive listed in the configuration for this app. Key [jvm]data class Key@JvmOverloadsconstructor(key_name: String, key_type: KeyType, encrypted_key: Secret&lt;String&gt;?, kms_uri: String?) : ConfigDescribes a specific key KeyAlias [jvm]typealias KeyAlias = StringA KeyAlias is how we refer to a Tink keyset. KeyNotFoundException [jvm]class KeyNotFoundException@JvmOverloadsconstructor(message: String?, cause: Throwable?) : GeneralSecurityException KeyReader [jvm]open class KeyReader KeyResolver [jvm]interface KeyResolverKeyResolver provides an interface to access keys indexed by aliases. Optionally, callers can register a callback to be invoked when a key is updated. KeyType [jvm]enum KeyType : Enum&lt;KeyType&gt; Supported key types LocalConfigKeyResolver [jvm]class LocalConfigKeyResolver(keys: List&lt;Key&gt;, defaultKmsUri: String) : KeyResolverLocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key. MacKeyManager [jvm]@Singletonclass MacKeyManager : MappedKeyManager&lt;Mac&gt; Holds a map of every Mac key name to its primitive listed in the configuration for this app. MappedKeyManager [jvm]sealed class MappedKeyManager&lt;KeyT&gt; MiskAWSKMS [jvm]@Qualifier@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER])annotation class MiskAWSKMSThis annotation is used to specify which com.amazonaws.services.kms.AWSKMS instance should be used by misk to construct a KmsClient and communicate with the KMS service MiskKmsClient [jvm]@Qualifier@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER])annotation class MiskKmsClientThis annotation is used to specify the KmsClient that\u2019s being used by misk to load encryption keys PgpDecrypterManager [jvm]@Singletonclass PgpDecrypterManager@Injectconstructor(injector: Injector) : MappedKeyManager&lt;PgpDecrypter&gt; Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app. PgpEncrypterManager [jvm]@Singletonclass PgpEncrypterManager@Injectconstructor(injector: Injector) : MappedKeyManager&lt;PgpEncrypter&gt; Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app. S3KeySource [jvm]class S3KeySource@Injectconstructor(deployment: Deployment, defaultS3: AmazonS3, allKeyAliases: Map&lt;KeyAlias, KeyType&gt;, bucketNameSource: BucketNameSource, awsCredentials: AWSCredentialsProvider) : ExternalKeySourceS3KeySource implements an ExternalKeySource that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region. ServiceKeys [jvm]@Qualifier@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER])annotation class ServiceKeysThis annotation is used to decorate the collection of service keys used in the service. StreamingAeadKeyManager [jvm]@Singletonclass StreamingAeadKeyManager@Injectconstructor(injector: Injector) : MappedKeyManager&lt;StreamingAead&gt; Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/#functions","title":"Functions","text":"Name Summary computeMac [jvm]fun Mac.computeMac(data: String): StringExtension function for conveniently computing an HMAC and encoding it with Base64. verifyMac [jvm]fun Mac.verifyMac(tag: String, data: String)Extension function for conveniently verifying a message\u2019s authenticity. This function expects the tag string variable to contain a Base64 encoded array of bytes."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/compute-mac/","title":"computeMac - Misk","text":"<p>//misk-crypto/misk.crypto/computeMac</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/compute-mac/#computemac","title":"computeMac","text":"<p>[jvm]\\ fun Mac.computeMac(data: String): String</p> <p>Extension function for conveniently computing an HMAC and encoding it with Base64.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/verify-mac/","title":"verifyMac - Misk","text":"<p>//misk-crypto/misk.crypto/verifyMac</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/verify-mac/#verifymac","title":"verifyMac","text":"<p>[jvm]\\ fun Mac.verifyMac(tag: String, data: String)</p> <p>Extension function for conveniently verifying a message\u2019s authenticity. This function expects the tag string variable to contain a Base64 encoded array of bytes.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-aead-key-manager/","title":"AeadKeyManager - Misk","text":"<p>//misk-crypto/misk.crypto/AeadKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-aead-key-manager/#aeadkeymanager","title":"AeadKeyManager","text":"<p>[jvm]\\ @Singleton</p> <p>class AeadKeyManager : MappedKeyManager&lt;Aead&gt; </p> <p>Holds a map of every Aead key name to its primitive listed in the configuration for this app.</p> <p>Users may use this object to obtain an Aead dynamically:</p> <p>val myKey: Aead = aeadKeyManager[\u201cmyKey\u201d]</p> <p>Note: Aead instances provided by this module are envelope Aead instances. This means that all data is encrypted with an ephemeral data encryption key (DEK), which is then protected by a key-encryption key (KEK) and stored inline with ciphertext. This effectively means that ciphertext will be a bit larger than the plaintext, and that migrating keys (KEKs) should not require the re-encryption of stored data.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-aead-key-manager/#functions","title":"Functions","text":"Name Summary get [jvm]operator fun get(name: String): Aead"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-aws-kms-client-module/","title":"AwsKmsClientModule - Misk","text":"<p>//misk-crypto/misk.crypto/AwsKmsClientModule</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-aws-kms-client-module/#awskmsclientmodule","title":"AwsKmsClientModule","text":"<p>[jvm]\\ class AwsKmsClientModule@JvmOverloadsconstructor(credentialsPath: String?) : KAbstractModule</p> <p>AWS specific KMS client module. Currently uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in AwsKmsClient.withDefaultCredentials</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-aws-kms-client-module/#constructors","title":"Constructors","text":"AwsKmsClientModule [jvm]@JvmOverloadsfun AwsKmsClientModule(credentialsPath: String? = null)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-aws-kms-client-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]open fun configure()override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getKmsClient [jvm]@Provides@Singletonfun getKmsClient(): KmsClient getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-aws-kms-client-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-aws-kms-client-module/-aws-kms-client-module/","title":"AwsKmsClientModule - Misk","text":"<p>//misk-crypto/misk.crypto/AwsKmsClientModule/AwsKmsClientModule</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-aws-kms-client-module/-aws-kms-client-module/#awskmsclientmodule","title":"AwsKmsClientModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun AwsKmsClientModule(credentialsPath: String? = null)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-aws-kms-client-module/get-kms-client/","title":"getKmsClient - Misk","text":"<p>//misk-crypto/misk.crypto/AwsKmsClientModule/getKmsClient</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-aws-kms-client-module/get-kms-client/#getkmsclient","title":"getKmsClient","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun getKmsClient(): KmsClient</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-bucket-name-source/","title":"BucketNameSource - Misk","text":"<p>//misk-crypto/misk.crypto/BucketNameSource</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-bucket-name-source/#bucketnamesource","title":"BucketNameSource","text":"<p>[jvm]\\ interface BucketNameSource</p> <p>Bind this to an instance to control how external buckets are referenced.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-bucket-name-source/#functions","title":"Functions","text":"Name Summary getBucketName [jvm]abstract fun getBucketName(deployment: Deployment): StringName of the bucket that stores keys getBucketRegion [jvm]open fun getBucketRegion(deployment: Deployment): String?The region that the bucket lives in."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-bucket-name-source/get-bucket-name/","title":"getBucketName - Misk","text":"<p>//misk-crypto/misk.crypto/BucketNameSource/getBucketName</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-bucket-name-source/get-bucket-name/#getbucketname","title":"getBucketName","text":"<p>[jvm]\\ abstract fun getBucketName(deployment: Deployment): String</p> <p>Name of the bucket that stores keys</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-bucket-name-source/get-bucket-region/","title":"getBucketRegion - Misk","text":"<p>//misk-crypto/misk.crypto/BucketNameSource/getBucketRegion</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-bucket-name-source/get-bucket-region/#getbucketregion","title":"getBucketRegion","text":"<p>[jvm]\\ open fun getBucketRegion(deployment: Deployment): String?</p> <p>The region that the bucket lives in.</p> <p>Returns null for same region as the service.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/","title":"CiphertextFormat - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/#ciphertextformat","title":"CiphertextFormat","text":"<p>[jvm]\\ class CiphertextFormat</p> <p>Wraps a ciphertext and the encryption context associated with it in a ByteArray.</p> <p>Misk uses Tink to encrypt data, which uses Encryption Context (EC), or Additional Authentication Data (AAD) to authenticate ciphertext. This class introduces a new, higher level abstraction, that\u2019ll be used instead of the AAD byte array interfaces Tink exposes to users. The main reasons to do this are:</p> <ul> <li>Preventing the misuse of AAD</li> <li>Preventing undecipherable ciphertext from being created</li> <li>Exposing a friendlier user interface</li> </ul>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/#encryption-context-specification","title":"Encryption Context Specification","text":"<ul> <li>Map&lt;String, String&gt;</li> <li>The map must contain at least 1 entry</li> <li>No blank/empty/null strings in either the map\u2019s keys or values</li> <li>The map is optional, and can be completely omitted from the encryption operation The encryption context will be serialized using the following format:</li> </ul> <p>[ AAD:\\ [ varint: pair count ]\\   [ pairs:\\     ( [ varint: key length ] [ ByteArray: key ]\\       [ varint: value length ] [ ByteArray: value ]\\     )*\\   ]\\ ]</p> <p>The final output will be serialized using the following format:</p> <p>[ 0xEE: magic+version ]\\ [ varint: AAD length ]\\ [ AAD ]\\ [ tink ciphertext ]</p> <p>For the full documentation of the CiphertextFormat serialization, read FORMAT.md</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion EncryptionContextMismatchException [jvm]class EncryptionContextMismatchException(message: String) : GeneralSecurityException InvalidCiphertextFormatException [jvm]class InvalidCiphertextFormatException(message: String) : GeneralSecurityException InvalidEncryptionContextException [jvm]class InvalidEncryptionContextException(message: String) : GeneralSecurityException MissingEncryptionContextException [jvm]class MissingEncryptionContextException : GeneralSecurityException UnexpectedEncryptionContextException [jvm]class UnexpectedEncryptionContextException : GeneralSecurityException"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-companion/","title":"Companion - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat/Companion</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-companion/#functions","title":"Functions","text":"Name Summary deserializeFleFormat [jvm]fun deserializeFleFormat(serialized: ByteArray): Pair&lt;ByteArray, Map&lt;String, String?&gt;&gt;Extracts the ciphertext and encryption context from the serialized ByteArray."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-companion/#properties","title":"Properties","text":"Name Summary CURRENT_VERSION [jvm]const val CURRENT_VERSION: Int = 238Current version of the encryption packet schema"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-companion/-c-u-r-r-e-n-t_-v-e-r-s-i-o-n/","title":"CURRENT_VERSION - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat/Companion/CURRENT_VERSION</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-companion/-c-u-r-r-e-n-t_-v-e-r-s-i-o-n/#current_version","title":"CURRENT_VERSION","text":"<p>[jvm]\\ const val CURRENT_VERSION: Int = 238</p> <p>Current version of the encryption packet schema</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-companion/deserialize-fle-format/","title":"deserializeFleFormat - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat/Companion/deserializeFleFormat</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-companion/deserialize-fle-format/#deserializefleformat","title":"deserializeFleFormat","text":"<p>[jvm]\\ fun deserializeFleFormat(serialized: ByteArray): Pair&lt;ByteArray, Map&lt;String, String?&gt;&gt;</p> <p>Extracts the ciphertext and encryption context from the serialized ByteArray.</p> <p>This method is meant to be used with field-level-encryption in Hibernate only.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-encryption-context-mismatch-exception/","title":"EncryptionContextMismatchException - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat/EncryptionContextMismatchException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-encryption-context-mismatch-exception/#encryptioncontextmismatchexception","title":"EncryptionContextMismatchException","text":"<p>[jvm]\\ class EncryptionContextMismatchException(message: String) : GeneralSecurityException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-encryption-context-mismatch-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-encryption-context-mismatch-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-encryption-context-mismatch-exception/-encryption-context-mismatch-exception/","title":"EncryptionContextMismatchException - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat/EncryptionContextMismatchException/EncryptionContextMismatchException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-encryption-context-mismatch-exception/-encryption-context-mismatch-exception/#encryptioncontextmismatchexception","title":"EncryptionContextMismatchException","text":"<p>[jvm]\\ fun EncryptionContextMismatchException(message: String)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-invalid-ciphertext-format-exception/","title":"InvalidCiphertextFormatException - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat/InvalidCiphertextFormatException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-invalid-ciphertext-format-exception/#invalidciphertextformatexception","title":"InvalidCiphertextFormatException","text":"<p>[jvm]\\ class InvalidCiphertextFormatException(message: String) : GeneralSecurityException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-invalid-ciphertext-format-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-invalid-ciphertext-format-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-invalid-ciphertext-format-exception/-invalid-ciphertext-format-exception/","title":"InvalidCiphertextFormatException - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat/InvalidCiphertextFormatException/InvalidCiphertextFormatException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-invalid-ciphertext-format-exception/-invalid-ciphertext-format-exception/#invalidciphertextformatexception","title":"InvalidCiphertextFormatException","text":"<p>[jvm]\\ fun InvalidCiphertextFormatException(message: String)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-invalid-encryption-context-exception/","title":"InvalidEncryptionContextException - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat/InvalidEncryptionContextException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-invalid-encryption-context-exception/#invalidencryptioncontextexception","title":"InvalidEncryptionContextException","text":"<p>[jvm]\\ class InvalidEncryptionContextException(message: String) : GeneralSecurityException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-invalid-encryption-context-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-invalid-encryption-context-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-invalid-encryption-context-exception/-invalid-encryption-context-exception/","title":"InvalidEncryptionContextException - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat/InvalidEncryptionContextException/InvalidEncryptionContextException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-invalid-encryption-context-exception/-invalid-encryption-context-exception/#invalidencryptioncontextexception","title":"InvalidEncryptionContextException","text":"<p>[jvm]\\ fun InvalidEncryptionContextException(message: String)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-missing-encryption-context-exception/","title":"MissingEncryptionContextException - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat/MissingEncryptionContextException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-missing-encryption-context-exception/#missingencryptioncontextexception","title":"MissingEncryptionContextException","text":"<p>[jvm]\\ class MissingEncryptionContextException : GeneralSecurityException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-missing-encryption-context-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-missing-encryption-context-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-missing-encryption-context-exception/-missing-encryption-context-exception/","title":"MissingEncryptionContextException - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat/MissingEncryptionContextException/MissingEncryptionContextException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-missing-encryption-context-exception/-missing-encryption-context-exception/#missingencryptioncontextexception","title":"MissingEncryptionContextException","text":"<p>[jvm]\\ fun MissingEncryptionContextException()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-unexpected-encryption-context-exception/","title":"UnexpectedEncryptionContextException - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat/UnexpectedEncryptionContextException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-unexpected-encryption-context-exception/#unexpectedencryptioncontextexception","title":"UnexpectedEncryptionContextException","text":"<p>[jvm]\\ class UnexpectedEncryptionContextException : GeneralSecurityException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-unexpected-encryption-context-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-unexpected-encryption-context-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-unexpected-encryption-context-exception/-unexpected-encryption-context-exception/","title":"UnexpectedEncryptionContextException - Misk","text":"<p>//misk-crypto/misk.crypto/CiphertextFormat/UnexpectedEncryptionContextException/UnexpectedEncryptionContextException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-ciphertext-format/-unexpected-encryption-context-exception/-unexpected-encryption-context-exception/#unexpectedencryptioncontextexception","title":"UnexpectedEncryptionContextException","text":"<p>[jvm]\\ fun UnexpectedEncryptionContextException()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-config/","title":"CryptoConfig - Misk","text":"<p>//misk-crypto/misk.crypto/CryptoConfig</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-config/#cryptoconfig","title":"CryptoConfig","text":"<p>[jvm]\\ data class CryptoConfig@JvmOverloadsconstructor(keys: List&lt;Key&gt;?, kms_uri: String, external_data_keys: Map&lt;KeyAlias, KeyType&gt;?) : Config</p> <p>Main configuration object representing to be used in the app.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-config/#constructors","title":"Constructors","text":"CryptoConfig [jvm]@JvmOverloadsfun CryptoConfig(keys: List&lt;Key&gt;?, kms_uri: String, external_data_keys: Map&lt;KeyAlias, KeyType&gt;? = null)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-config/#properties","title":"Properties","text":"Name Summary external_data_keys [jvm]val external_data_keys: Map&lt;KeyAlias, KeyType&gt;? = nullThe key references (map of alias to type) of keys we want to use that are loaded from an external key source, such as an S3 bucket. keys [jvm]val keys: List&lt;Key&gt;? kms_uri [jvm]val kms_uri: StringThe KMS\u2019 key URI. For GCP users that may look like: gcp-kms://projects/&lt;project&gt;/locations/&lt;location&gt;/keyRings/&lt;keyRing&gt;/cryptoKeys/&lt;key&gt; For AWS users the Key URI looks like: aws-kms://arn:aws:kms:&lt;region&gt;:&lt;account-id&gt;:key/&lt;key-id&gt;"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-config/-crypto-config/","title":"CryptoConfig - Misk","text":"<p>//misk-crypto/misk.crypto/CryptoConfig/CryptoConfig</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-config/-crypto-config/#cryptoconfig","title":"CryptoConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun CryptoConfig(keys: List&lt;Key&gt;?, kms_uri: String, external_data_keys: Map&lt;KeyAlias, KeyType&gt;? = null)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-config/external_data_keys/","title":"external_data_keys - Misk","text":"<p>//misk-crypto/misk.crypto/CryptoConfig/external_data_keys</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-config/external_data_keys/#external_data_keys","title":"external_data_keys","text":"<p>[jvm]\\ val external_data_keys: Map&lt;KeyAlias, KeyType&gt;? = null</p> <p>The key references (map of alias to type) of keys we want to use that are loaded from an external key source, such as an S3 bucket.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-config/keys/","title":"keys - Misk","text":"<p>//misk-crypto/misk.crypto/CryptoConfig/keys</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-config/keys/#keys","title":"keys","text":"<p>[jvm]\\ val keys: List&lt;Key&gt;?</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-config/kms_uri/","title":"kms_uri - Misk","text":"<p>//misk-crypto/misk.crypto/CryptoConfig/kms_uri</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-config/kms_uri/#kms_uri","title":"kms_uri","text":"<p>[jvm]\\ val kms_uri: String</p> <p>The KMS\u2019 key URI. For GCP users that may look like: gcp-kms://projects/&lt;project&gt;/locations/&lt;location&gt;/keyRings/&lt;keyRing&gt;/cryptoKeys/&lt;key&gt; For AWS users the Key URI looks like: aws-kms://arn:aws:kms:&lt;region&gt;:&lt;account-id&gt;:key/&lt;key-id&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-module/","title":"CryptoModule - Misk","text":"<p>//misk-crypto/misk.crypto/CryptoModule</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-module/#cryptomodule","title":"CryptoModule","text":"<p>[jvm]\\ class CryptoModule(config: CryptoConfig) : KAbstractModule</p> <p>Configures and registers the keys listed in the configuration file. Each key is read, decrypted, and then bound via Google Guice and added to a MappedKeyManager.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-module/#constructors","title":"Constructors","text":"CryptoModule [jvm]fun CryptoModule(config: CryptoConfig)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-module/-crypto-module/","title":"CryptoModule - Misk","text":"<p>//misk-crypto/misk.crypto/CryptoModule/CryptoModule</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-crypto-module/-crypto-module/#cryptomodule","title":"CryptoModule","text":"<p>[jvm]\\ fun CryptoModule(config: CryptoConfig)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-deterministic-aead-key-manager/","title":"DeterministicAeadKeyManager - Misk","text":"<p>//misk-crypto/misk.crypto/DeterministicAeadKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-deterministic-aead-key-manager/#deterministicaeadkeymanager","title":"DeterministicAeadKeyManager","text":"<p>[jvm]\\ @Singleton</p> <p>class DeterministicAeadKeyManager : MappedKeyManager&lt;DeterministicAead&gt; </p> <p>Holds a map of every DeterministicAead key name to its primitive listed in the configuration for this app.</p> <p>Users may use this object to obtain an DeterministicAead dynamically:</p> <p>val myKey: DeterministicAead = deterministicAeadKeyManager[\u201cmyKey\u201d]</p> <p>Note that DeterministicAead objects do not provide secrecy to the same level as AEAD do, since multiple plaintexts encrypted with the same key will produce identical ciphertext. This behavior is desirable when querying data via its ciphertext (i.e. equality will hold), but an attacker can detect repeated plaintexts.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-deterministic-aead-key-manager/#functions","title":"Functions","text":"Name Summary get [jvm]operator fun get(name: String): DeterministicAead"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature/","title":"DigitalSignature - Misk","text":"<p>//misk-crypto/misk.crypto/DigitalSignature</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature/#digitalsignature","title":"DigitalSignature","text":"<p>[jvm]\\ data class DigitalSignature(signer: PublicKeySign, verifier: PublicKeyVerify)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature/#properties","title":"Properties","text":"Name Summary signer [jvm]val signer: PublicKeySign verifier [jvm]val verifier: PublicKeyVerify"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature/-digital-signature/","title":"DigitalSignature - Misk","text":"<p>//misk-crypto/misk.crypto/DigitalSignature/DigitalSignature</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature/-digital-signature/#digitalsignature","title":"DigitalSignature","text":"<p>[jvm]\\ fun DigitalSignature(signer: PublicKeySign, verifier: PublicKeyVerify)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature/signer/","title":"signer - Misk","text":"<p>//misk-crypto/misk.crypto/DigitalSignature/signer</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature/signer/#signer","title":"signer","text":"<p>[jvm]\\ val signer: PublicKeySign</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature/verifier/","title":"verifier - Misk","text":"<p>//misk-crypto/misk.crypto/DigitalSignature/verifier</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature/verifier/#verifier","title":"verifier","text":"<p>[jvm]\\ val verifier: PublicKeyVerify</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature-key-manager/","title":"DigitalSignatureKeyManager - Misk","text":"<p>//misk-crypto/misk.crypto/DigitalSignatureKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature-key-manager/#digitalsignaturekeymanager","title":"DigitalSignatureKeyManager","text":"<p>[jvm]\\ @Singleton</p> <p>class DigitalSignatureKeyManager : MappedKeyManager&lt;DigitalSignature&gt; </p> <p>Holds a map of every key name to its corresponding PublicKeySign and PublicKeyVerify primitives.</p> <p>Users may use this class to obtain a PublicKeySign to sign data or PublicKeyVerify to verify the integrity of a message dynamically:</p> <p>val signer: PublicKeySign = keyManager.getSigner(\u201cmyDigitalSignatureKey\u201d)\\ val verifier: PublicKeyVerify = keyManager.getVerifier(\u201cmySigitalSignatureKey\u201d)\\ val signature = signer.sign(data)\\ verifier.verify(signature, data)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature-key-manager/#functions","title":"Functions","text":"Name Summary get [jvm]operator fun get(name: String): DigitalSignature getSigner [jvm]fun getSigner(name: String): PublicKeySign getVerifier [jvm]fun getVerifier(name: String): PublicKeyVerify"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature-key-manager/get-signer/","title":"getSigner - Misk","text":"<p>//misk-crypto/misk.crypto/DigitalSignatureKeyManager/getSigner</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature-key-manager/get-signer/#getsigner","title":"getSigner","text":"<p>[jvm]\\ fun getSigner(name: String): PublicKeySign</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature-key-manager/get-verifier/","title":"getVerifier - Misk","text":"<p>//misk-crypto/misk.crypto/DigitalSignatureKeyManager/getVerifier</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-digital-signature-key-manager/get-verifier/#getverifier","title":"getVerifier","text":"<p>[jvm]\\ fun getVerifier(name: String): PublicKeyVerify</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-data-keys/","title":"ExternalDataKeys - Misk","text":"<p>//misk-crypto/misk.crypto/ExternalDataKeys</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-data-keys/#externaldatakeys","title":"ExternalDataKeys","text":"<p>[jvm]\\ @Qualifier</p> <p>@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER])</p> <p>annotation class ExternalDataKeys</p> <p>This annotation is used to decorate the collection of external data keys used in the service.</p> <p>External data keys are defined in the configuration as a Map&lt;KeyAlias, KeyType&gt;.</p> <p>This annotation can be useful for cases where one would need access to all external data keys available to the service.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-data-keys/#constructors","title":"Constructors","text":"ExternalDataKeys [jvm]fun ExternalDataKeys()"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-data-keys/-external-data-keys/","title":"ExternalDataKeys - Misk","text":"<p>//misk-crypto/misk.crypto/ExternalDataKeys/ExternalDataKeys</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-data-keys/-external-data-keys/#externaldatakeys","title":"ExternalDataKeys","text":"<p>[jvm]\\ fun ExternalDataKeys()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-manager-exception/","title":"ExternalKeyManagerException - Misk","text":"<p>//misk-crypto/misk.crypto/ExternalKeyManagerException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-manager-exception/#externalkeymanagerexception","title":"ExternalKeyManagerException","text":"<p>[jvm]\\ class ExternalKeyManagerException(message: String) : IOException</p> <p>Thrown on creation if external key does not exist.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-manager-exception/#constructors","title":"Constructors","text":"ExternalKeyManagerException [jvm]fun ExternalKeyManagerException(message: String)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-manager-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-manager-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-manager-exception/-external-key-manager-exception/","title":"ExternalKeyManagerException - Misk","text":"<p>//misk-crypto/misk.crypto/ExternalKeyManagerException/ExternalKeyManagerException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-manager-exception/-external-key-manager-exception/#externalkeymanagerexception","title":"ExternalKeyManagerException","text":"<p>[jvm]\\ fun ExternalKeyManagerException(message: String)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/","title":"ExternalKeyResolver - Misk","text":"<p>//misk-crypto/misk.crypto/ExternalKeyResolver</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/#externalkeyresolver","title":"ExternalKeyResolver","text":"<p>[jvm]\\ class ExternalKeyResolver@Injectconstructor(allKeyAliases: Map&lt;KeyAlias, KeyType&gt;, externalKeySources: Set&lt;ExternalKeySource&gt;) : KeyResolver</p> <p>ExternalKeyResolver implements an KeyResolver that fetches Tink keysets from an external source, such as an S3 bucket. If multiple sources are registered (by binding implementations of KeyResolver), the first one to contain the key (via ExternalKeySource.keyExists) is the key that is used.</p> <p>If a key is not found, an ExternalKeyManagerException exception is raised.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/#constructors","title":"Constructors","text":"ExternalKeyResolver [jvm]@Injectfun ExternalKeyResolver(allKeyAliases: Map&lt;KeyAlias, KeyType&gt;, externalKeySources: Set&lt;ExternalKeySource&gt;)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/#functions","title":"Functions","text":"Name Summary getKeyByAlias [jvm]open override fun getKeyByAlias(alias: KeyAlias): Key?Fetch and return a Key (includes contents, type and a KMS ARN) by its alias."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/#properties","title":"Properties","text":"Name Summary allKeyAliases [jvm]open override val allKeyAliases: Map&lt;KeyAlias, KeyType&gt;All resolved key aliases and their respective KeyTypes."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/-external-key-resolver/","title":"ExternalKeyResolver - Misk","text":"<p>//misk-crypto/misk.crypto/ExternalKeyResolver/ExternalKeyResolver</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/-external-key-resolver/#externalkeyresolver","title":"ExternalKeyResolver","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ExternalKeyResolver(allKeyAliases: Map&lt;KeyAlias, KeyType&gt;, externalKeySources: Set&lt;ExternalKeySource&gt;)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/all-key-aliases/","title":"allKeyAliases - Misk","text":"<p>//misk-crypto/misk.crypto/ExternalKeyResolver/allKeyAliases</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/all-key-aliases/#allkeyaliases","title":"allKeyAliases","text":"<p>[jvm]\\ open override val allKeyAliases: Map&lt;KeyAlias, KeyType&gt;</p> <p>All resolved key aliases and their respective KeyTypes.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/get-key-by-alias/","title":"getKeyByAlias - Misk","text":"<p>//misk-crypto/misk.crypto/ExternalKeyResolver/getKeyByAlias</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/get-key-by-alias/#getkeybyalias","title":"getKeyByAlias","text":"<p>[jvm]\\ open override fun getKeyByAlias(alias: KeyAlias): Key?</p> <p>Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/-companion/","title":"Companion - Misk","text":"<p>//misk-crypto/misk.crypto/ExternalKeyResolver/Companion</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-resolver/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-source/","title":"ExternalKeySource - Misk","text":"<p>//misk-crypto/misk.crypto/ExternalKeySource</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-source/#externalkeysource","title":"ExternalKeySource","text":"<p>[jvm]\\ interface ExternalKeySource</p> <p>Implement an ExternalKeySource to provide Tink keysets from an external location, such as an S3 bucket or an NFS share.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-source/#functions","title":"Functions","text":"Name Summary getKey [jvm]abstract fun getKey(alias: KeyAlias): Key?Return a Key from an external key source. keyExists [jvm]abstract fun keyExists(alias: KeyAlias): BooleanCheck if a key alias exists in the key source."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-source/#inheritors","title":"Inheritors","text":"Name S3KeySource"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-source/get-key/","title":"getKey - Misk","text":"<p>//misk-crypto/misk.crypto/ExternalKeySource/getKey</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-source/get-key/#getkey","title":"getKey","text":"<p>[jvm]\\ abstract fun getKey(alias: KeyAlias): Key?</p> <p>Return a Key from an external key source.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-source/key-exists/","title":"keyExists - Misk","text":"<p>//misk-crypto/misk.crypto/ExternalKeySource/keyExists</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-external-key-source/key-exists/#keyexists","title":"keyExists","text":"<p>[jvm]\\ abstract fun keyExists(alias: KeyAlias): Boolean</p> <p>Check if a key alias exists in the key source.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-gcp-kms-client-module/","title":"GcpKmsClientModule - Misk","text":"<p>//misk-crypto/misk.crypto/GcpKmsClientModule</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-gcp-kms-client-module/#gcpkmsclientmodule","title":"GcpKmsClientModule","text":"<p>[jvm]\\ class GcpKmsClientModule@JvmOverloadsconstructor(credentialsPath: String?) : KAbstractModule</p> <p>GCP specific KMS client module. Uses a file path to a JSON credentials file to initialize the client.</p> <ul> <li>If no file is provided, tries to initialize the client using the default credentials path as specified in GcpKmsClient.withDefaultCredentials</li> </ul>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-gcp-kms-client-module/#constructors","title":"Constructors","text":"GcpKmsClientModule [jvm]@JvmOverloadsfun GcpKmsClientModule(credentialsPath: String? = null)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-gcp-kms-client-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]open fun configure()override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getKmsClient [jvm]@Provides@Singletonfun getKmsClient(): KmsClient getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-gcp-kms-client-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-gcp-kms-client-module/-gcp-kms-client-module/","title":"GcpKmsClientModule - Misk","text":"<p>//misk-crypto/misk.crypto/GcpKmsClientModule/GcpKmsClientModule</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-gcp-kms-client-module/-gcp-kms-client-module/#gcpkmsclientmodule","title":"GcpKmsClientModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun GcpKmsClientModule(credentialsPath: String? = null)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-gcp-kms-client-module/get-kms-client/","title":"getKmsClient - Misk","text":"<p>//misk-crypto/misk.crypto/GcpKmsClientModule/getKmsClient</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-gcp-kms-client-module/get-kms-client/#getkmsclient","title":"getKmsClient","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun getKmsClient(): KmsClient</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-hybrid-decrypt-key-manager/","title":"HybridDecryptKeyManager - Misk","text":"<p>//misk-crypto/misk.crypto/HybridDecryptKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-hybrid-decrypt-key-manager/#hybriddecryptkeymanager","title":"HybridDecryptKeyManager","text":"<p>[jvm]\\ @Singleton</p> <p>class HybridDecryptKeyManager : MappedKeyManager&lt;HybridDecrypt&gt; </p> <p>Holds a map of every HybridDecrypt key name to its corresponding primitive listed in the configuration for this app.</p> <p>Users may this class to obtain a HybridDecrypt object dynamically:</p> <p>val hybridDecrypt: HybridDecrypt = hybridKeyManager[\u201cmyHybridKey\u201d]</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-hybrid-decrypt-key-manager/#functions","title":"Functions","text":"Name Summary get [jvm]operator fun get(name: String): HybridDecrypt"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-hybrid-encrypt-key-manager/","title":"HybridEncryptKeyManager - Misk","text":"<p>//misk-crypto/misk.crypto/HybridEncryptKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-hybrid-encrypt-key-manager/#hybridencryptkeymanager","title":"HybridEncryptKeyManager","text":"<p>[jvm]\\ @Singleton</p> <p>class HybridEncryptKeyManager : MappedKeyManager&lt;HybridEncrypt&gt; </p> <p>Holds a map of every HybridEncrypt key name to its corresponding primitive listed in the configuration for this app.</p> <p>Users may use this class to obtain a HybridEncrypt object dynamically:</p> <p>val hybridEncrypt: HybridEncrypt = hybridKeyManager[\u201cmyHybridKey\u201d]</p> <p>Note: Hybrid encryption is intentionally divided to 2 separate key managers, HybridEncryptKeyManager and HybridDecryptKeyManager, so that the public portion of the keyset could be exported to other services. This configuration helps achieve the goal of allowing some services to encrypt only and other services to both encrypt and decrypt.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-hybrid-encrypt-key-manager/#functions","title":"Functions","text":"Name Summary get [jvm]operator fun get(name: String): HybridEncrypt"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/","title":"Key - Misk","text":"<p>//misk-crypto/misk.crypto/Key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/#key","title":"Key","text":"<p>[jvm]\\ data class Key@JvmOverloadsconstructor(key_name: String, key_type: KeyType, encrypted_key: Secret&lt;String&gt;?, kms_uri: String?) : Config</p> <p>Describes a specific key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/#constructors","title":"Constructors","text":"Key [jvm]@JvmOverloadsfun Key(key_name: String, key_type: KeyType, encrypted_key: Secret&lt;String&gt;? = null, kms_uri: String? = null)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/#properties","title":"Properties","text":"Name Summary encrypted_key [jvm]val encrypted_key: Secret&lt;String&gt;? = nullIn config it\u2019s the path to a file containing the encrypted key material in Tink\u2019s JSON format. However MiskConfig will read the contents of the file, so this variable is the file\u2019s contents. key_name [jvm]val key_name: StringDescriptive short string for the key. This name will be used when injecting the corresponding key object in the app, like: key_type [jvm]val key_type: KeyTypeType of Tink primitive to initialize. kms_uri [jvm]val kms_uri: String? = nullA key-specific, and region-specific KMS uri that was used to encrypt this key."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/-key/","title":"Key - Misk","text":"<p>//misk-crypto/misk.crypto/Key/Key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/-key/#key","title":"Key","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun Key(key_name: String, key_type: KeyType, encrypted_key: Secret&lt;String&gt;? = null, kms_uri: String? = null)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/encrypted_key/","title":"encrypted_key - Misk","text":"<p>//misk-crypto/misk.crypto/Key/encrypted_key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/encrypted_key/#encrypted_key","title":"encrypted_key","text":"<p>[jvm]\\ val encrypted_key: Secret&lt;String&gt;? = null</p> <p>In config it\u2019s the path to a file containing the encrypted key material in Tink\u2019s JSON format. However MiskConfig will read the contents of the file, so this variable is the file\u2019s contents.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/key_name/","title":"key_name - Misk","text":"<p>//misk-crypto/misk.crypto/Key/key_name</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/key_name/#key_name","title":"key_name","text":"<p>[jvm]\\ val key_name: String</p> <p>Descriptive short string for the key. This name will be used when injecting the corresponding key object in the app, like:</p> <p>@Inject @Named(\u201ckeyName\u201d) lateinit var myKey: Aead</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/key_type/","title":"key_type - Misk","text":"<p>//misk-crypto/misk.crypto/Key/key_type</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/key_type/#key_type","title":"key_type","text":"<p>[jvm]\\ val key_type: KeyType</p> <p>Type of Tink primitive to initialize.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/kms_uri/","title":"kms_uri - Misk","text":"<p>//misk-crypto/misk.crypto/Key/kms_uri</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key/kms_uri/#kms_uri","title":"kms_uri","text":"<p>[jvm]\\ val kms_uri: String? = null</p> <p>A key-specific, and region-specific KMS uri that was used to encrypt this key.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-not-found-exception/","title":"KeyNotFoundException - Misk","text":"<p>//misk-crypto/misk.crypto/KeyNotFoundException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-not-found-exception/#keynotfoundexception","title":"KeyNotFoundException","text":"<p>[jvm]\\ class KeyNotFoundException@JvmOverloadsconstructor(message: String?, cause: Throwable?) : GeneralSecurityException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-not-found-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-not-found-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-not-found-exception/-key-not-found-exception/","title":"KeyNotFoundException - Misk","text":"<p>//misk-crypto/misk.crypto/KeyNotFoundException/KeyNotFoundException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-not-found-exception/-key-not-found-exception/#keynotfoundexception","title":"KeyNotFoundException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun KeyNotFoundException(message: String? = null, cause: Throwable? = null)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/","title":"KeyReader - Misk","text":"<p>//misk-crypto/misk.crypto/KeyReader</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/#keyreader","title":"KeyReader","text":"<p>[jvm]\\ open class KeyReader</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/#functions","title":"Functions","text":"Name Summary readKey [jvm]fun readKey(alias: KeyAlias): KeysetHandle"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/#properties","title":"Properties","text":"Name Summary keySources [jvm]@Injectlateinit var keySources: Set&lt;KeyResolver&gt; kmsClient [jvm]@Injectlateinit var kmsClient: KmsClient"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/#inheritors","title":"Inheritors","text":"Name AeadEnvelopeProvider DeterministicAeadProvider MacProvider DigitalSignatureSignerProvider DigitalSignatureVerifierProvider HybridEncryptProvider HybridDecryptProvider StreamingAeadProvider PgpDecrypterProvider PgpEncrypterProvider"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/-key-reader/","title":"KeyReader - Misk","text":"<p>//misk-crypto/misk.crypto/KeyReader/KeyReader</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/-key-reader/#keyreader","title":"KeyReader","text":"<p>[jvm]\\ fun KeyReader()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/key-sources/","title":"keySources - Misk","text":"<p>//misk-crypto/misk.crypto/KeyReader/keySources</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/key-sources/#keysources","title":"keySources","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var keySources: Set&lt;KeyResolver&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/kms-client/","title":"kmsClient - Misk","text":"<p>//misk-crypto/misk.crypto/KeyReader/kmsClient</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/kms-client/#kmsclient","title":"kmsClient","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var kmsClient: KmsClient</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/read-key/","title":"readKey - Misk","text":"<p>//misk-crypto/misk.crypto/KeyReader/readKey</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/read-key/#readkey","title":"readKey","text":"<p>[jvm]\\ fun readKey(alias: KeyAlias): KeysetHandle</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/-companion/","title":"Companion - Misk","text":"<p>//misk-crypto/misk.crypto/KeyReader/Companion</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/-companion/#properties","title":"Properties","text":"Name Summary KEK_TEMPLATE [jvm]val KEK_TEMPLATE: KeyTemplate"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/-companion/-k-e-k_-t-e-m-p-l-a-t-e/","title":"KEK_TEMPLATE - Misk","text":"<p>//misk-crypto/misk.crypto/KeyReader/Companion/KEK_TEMPLATE</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-reader/-companion/-k-e-k_-t-e-m-p-l-a-t-e/#kek_template","title":"KEK_TEMPLATE","text":"<p>[jvm]\\ val KEK_TEMPLATE: KeyTemplate</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-resolver/","title":"KeyResolver - Misk","text":"<p>//misk-crypto/misk.crypto/KeyResolver</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-resolver/#keyresolver","title":"KeyResolver","text":"<p>[jvm]\\ interface KeyResolver</p> <p>KeyResolver provides an interface to access keys indexed by aliases. Optionally, callers can register a callback to be invoked when a key is updated.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-resolver/#functions","title":"Functions","text":"Name Summary getKeyByAlias [jvm]abstract fun getKeyByAlias(alias: KeyAlias): Key?Fetch and return a Key (includes contents, type and a KMS ARN) by its alias."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-resolver/#properties","title":"Properties","text":"Name Summary allKeyAliases [jvm]abstract val allKeyAliases: Map&lt;KeyAlias, KeyType&gt;All resolved key aliases and their respective KeyTypes."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-resolver/#inheritors","title":"Inheritors","text":"Name ExternalKeyResolver LocalConfigKeyResolver"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-resolver/all-key-aliases/","title":"allKeyAliases - Misk","text":"<p>//misk-crypto/misk.crypto/KeyResolver/allKeyAliases</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-resolver/all-key-aliases/#allkeyaliases","title":"allKeyAliases","text":"<p>[jvm]\\ abstract val allKeyAliases: Map&lt;KeyAlias, KeyType&gt;</p> <p>All resolved key aliases and their respective KeyTypes.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-resolver/get-key-by-alias/","title":"getKeyByAlias - Misk","text":"<p>//misk-crypto/misk.crypto/KeyResolver/getKeyByAlias</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-resolver/get-key-by-alias/#getkeybyalias","title":"getKeyByAlias","text":"<p>[jvm]\\ abstract fun getKeyByAlias(alias: KeyAlias): Key?</p> <p>Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/","title":"KeyType - Misk","text":"<p>//misk-crypto/misk.crypto/KeyType</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/#keytype","title":"KeyType","text":"<p>[jvm]\\ enum KeyType : Enum&lt;KeyType&gt; </p> <p>Supported key types</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/#entries","title":"Entries","text":"SIGNATURE [jvm]SIGNATURE()Alias for DIGITAL_SIGNATURE. PGP_ENCRYPT [jvm]PGP_ENCRYPT() PGP_DECRYPT [jvm]PGP_DECRYPT() STREAMING_AEAD [jvm]STREAMING_AEAD() HYBRID_ENCRYPT_DECRYPT [jvm]HYBRID_ENCRYPT_DECRYPT() HYBRID_ENCRYPT [jvm]HYBRID_ENCRYPT() DIGITAL_SIGNATURE [jvm]DIGITAL_SIGNATURE() MAC [jvm]MAC() DAEAD [jvm]DAEAD() AEAD [jvm]AEAD()"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-a-e-a-d/","title":"AEAD - Misk","text":"<p>//misk-crypto/misk.crypto/KeyType/AEAD</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-a-e-a-d/#aead","title":"AEAD","text":"<p>[jvm]\\ AEAD()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-a-e-a-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-d-a-e-a-d/","title":"DAEAD - Misk","text":"<p>//misk-crypto/misk.crypto/KeyType/DAEAD</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-d-a-e-a-d/#daead","title":"DAEAD","text":"<p>[jvm]\\ DAEAD()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-d-a-e-a-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-d-i-g-i-t-a-l_-s-i-g-n-a-t-u-r-e/","title":"DIGITAL_SIGNATURE - Misk","text":"<p>//misk-crypto/misk.crypto/KeyType/DIGITAL_SIGNATURE</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-d-i-g-i-t-a-l_-s-i-g-n-a-t-u-r-e/#digital_signature","title":"DIGITAL_SIGNATURE","text":"<p>[jvm]\\ DIGITAL_SIGNATURE()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-d-i-g-i-t-a-l_-s-i-g-n-a-t-u-r-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-h-y-b-r-i-d_-e-n-c-r-y-p-t/","title":"HYBRID_ENCRYPT - Misk","text":"<p>//misk-crypto/misk.crypto/KeyType/HYBRID_ENCRYPT</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-h-y-b-r-i-d_-e-n-c-r-y-p-t/#hybrid_encrypt","title":"HYBRID_ENCRYPT","text":"<p>[jvm]\\ HYBRID_ENCRYPT()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-h-y-b-r-i-d_-e-n-c-r-y-p-t/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-h-y-b-r-i-d_-e-n-c-r-y-p-t_-d-e-c-r-y-p-t/","title":"HYBRID_ENCRYPT_DECRYPT - Misk","text":"<p>//misk-crypto/misk.crypto/KeyType/HYBRID_ENCRYPT_DECRYPT</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-h-y-b-r-i-d_-e-n-c-r-y-p-t_-d-e-c-r-y-p-t/#hybrid_encrypt_decrypt","title":"HYBRID_ENCRYPT_DECRYPT","text":"<p>[jvm]\\ HYBRID_ENCRYPT_DECRYPT()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-h-y-b-r-i-d_-e-n-c-r-y-p-t_-d-e-c-r-y-p-t/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-m-a-c/","title":"MAC - Misk","text":"<p>//misk-crypto/misk.crypto/KeyType/MAC</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-m-a-c/#mac","title":"MAC","text":"<p>[jvm]\\ MAC()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-m-a-c/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-p-g-p_-d-e-c-r-y-p-t/","title":"PGP_DECRYPT - Misk","text":"<p>//misk-crypto/misk.crypto/KeyType/PGP_DECRYPT</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-p-g-p_-d-e-c-r-y-p-t/#pgp_decrypt","title":"PGP_DECRYPT","text":"<p>[jvm]\\ PGP_DECRYPT()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-p-g-p_-d-e-c-r-y-p-t/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-p-g-p_-e-n-c-r-y-p-t/","title":"PGP_ENCRYPT - Misk","text":"<p>//misk-crypto/misk.crypto/KeyType/PGP_ENCRYPT</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-p-g-p_-e-n-c-r-y-p-t/#pgp_encrypt","title":"PGP_ENCRYPT","text":"<p>[jvm]\\ PGP_ENCRYPT()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-p-g-p_-e-n-c-r-y-p-t/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-s-i-g-n-a-t-u-r-e/","title":"SIGNATURE - Misk","text":"<p>//misk-crypto/misk.crypto/KeyType/SIGNATURE</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-s-i-g-n-a-t-u-r-e/#signature","title":"SIGNATURE","text":"<p>[jvm]\\ SIGNATURE()</p> <p>Alias for DIGITAL_SIGNATURE.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-s-i-g-n-a-t-u-r-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-s-t-r-e-a-m-i-n-g_-a-e-a-d/","title":"STREAMING_AEAD - Misk","text":"<p>//misk-crypto/misk.crypto/KeyType/STREAMING_AEAD</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-s-t-r-e-a-m-i-n-g_-a-e-a-d/#streaming_aead","title":"STREAMING_AEAD","text":"<p>[jvm]\\ STREAMING_AEAD()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-key-type/-s-t-r-e-a-m-i-n-g_-a-e-a-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-local-config-key-resolver/","title":"LocalConfigKeyResolver - Misk","text":"<p>//misk-crypto/misk.crypto/LocalConfigKeyResolver</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-local-config-key-resolver/#localconfigkeyresolver","title":"LocalConfigKeyResolver","text":"<p>[jvm]\\ class LocalConfigKeyResolver(keys: List&lt;Key&gt;, defaultKmsUri: String) : KeyResolver</p> <p>LocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-local-config-key-resolver/#constructors","title":"Constructors","text":"LocalConfigKeyResolver [jvm]fun LocalConfigKeyResolver(keys: List&lt;Key&gt;, defaultKmsUri: String)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-local-config-key-resolver/#functions","title":"Functions","text":"Name Summary getKeyByAlias [jvm]open override fun getKeyByAlias(alias: KeyAlias): Key?Fetch and return a Key (includes contents, type and a KMS ARN) by its alias."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-local-config-key-resolver/#properties","title":"Properties","text":"Name Summary allKeyAliases [jvm]open override val allKeyAliases: Map&lt;KeyAlias, KeyType&gt;All resolved key aliases and their respective KeyTypes."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-local-config-key-resolver/-local-config-key-resolver/","title":"LocalConfigKeyResolver - Misk","text":"<p>//misk-crypto/misk.crypto/LocalConfigKeyResolver/LocalConfigKeyResolver</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-local-config-key-resolver/-local-config-key-resolver/#localconfigkeyresolver","title":"LocalConfigKeyResolver","text":"<p>[jvm]\\ fun LocalConfigKeyResolver(keys: List&lt;Key&gt;, defaultKmsUri: String)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-local-config-key-resolver/all-key-aliases/","title":"allKeyAliases - Misk","text":"<p>//misk-crypto/misk.crypto/LocalConfigKeyResolver/allKeyAliases</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-local-config-key-resolver/all-key-aliases/#allkeyaliases","title":"allKeyAliases","text":"<p>[jvm]\\ open override val allKeyAliases: Map&lt;KeyAlias, KeyType&gt;</p> <p>All resolved key aliases and their respective KeyTypes.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-local-config-key-resolver/get-key-by-alias/","title":"getKeyByAlias - Misk","text":"<p>//misk-crypto/misk.crypto/LocalConfigKeyResolver/getKeyByAlias</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-local-config-key-resolver/get-key-by-alias/#getkeybyalias","title":"getKeyByAlias","text":"<p>[jvm]\\ open override fun getKeyByAlias(alias: KeyAlias): Key?</p> <p>Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-mac-key-manager/","title":"MacKeyManager - Misk","text":"<p>//misk-crypto/misk.crypto/MacKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-mac-key-manager/#mackeymanager","title":"MacKeyManager","text":"<p>[jvm]\\ @Singleton</p> <p>class MacKeyManager : MappedKeyManager&lt;Mac&gt; </p> <p>Holds a map of every Mac key name to its primitive listed in the configuration for this app.</p> <p>Users may use this class to obtain a Mac object dynamically:</p> <p>val hmac: Mac = macKeyManager[\u201cmyHmac\u201d]</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-mac-key-manager/#functions","title":"Functions","text":"Name Summary get [jvm]operator fun get(name: String): Mac"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-mapped-key-manager/","title":"MappedKeyManager - Misk","text":"<p>//misk-crypto/misk.crypto/MappedKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-mapped-key-manager/#mappedkeymanager","title":"MappedKeyManager","text":"<p>[jvm]\\ sealed class MappedKeyManager&lt;KeyT&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-mapped-key-manager/#functions","title":"Functions","text":"Name Summary get [jvm]operator fun get(name: String): KeyT"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-mapped-key-manager/#inheritors","title":"Inheritors","text":"Name AeadKeyManager DeterministicAeadKeyManager MacKeyManager DigitalSignatureKeyManager HybridEncryptKeyManager HybridDecryptKeyManager StreamingAeadKeyManager PgpEncrypterManager PgpDecrypterManager"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-mapped-key-manager/get/","title":"get - Misk","text":"<p>//misk-crypto/misk.crypto/MappedKeyManager/get</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-mapped-key-manager/get/#get","title":"get","text":"<p>[jvm]\\ operator fun get(name: String): KeyT</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-misk-a-w-s-k-m-s/","title":"MiskAWSKMS - Misk","text":"<p>//misk-crypto/misk.crypto/MiskAWSKMS</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-misk-a-w-s-k-m-s/#miskawskms","title":"MiskAWSKMS","text":"<p>[jvm]\\ @Qualifier</p> <p>@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER])</p> <p>annotation class MiskAWSKMS</p> <p>This annotation is used to specify which com.amazonaws.services.kms.AWSKMS instance should be used by misk to construct a KmsClient and communicate with the KMS service</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-misk-a-w-s-k-m-s/#constructors","title":"Constructors","text":"MiskAWSKMS [jvm]fun MiskAWSKMS()"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-misk-a-w-s-k-m-s/-misk-a-w-s-k-m-s/","title":"MiskAWSKMS - Misk","text":"<p>//misk-crypto/misk.crypto/MiskAWSKMS/MiskAWSKMS</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-misk-a-w-s-k-m-s/-misk-a-w-s-k-m-s/#miskawskms","title":"MiskAWSKMS","text":"<p>[jvm]\\ fun MiskAWSKMS()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-misk-kms-client/","title":"MiskKmsClient - Misk","text":"<p>//misk-crypto/misk.crypto/MiskKmsClient</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-misk-kms-client/#miskkmsclient","title":"MiskKmsClient","text":"<p>[jvm]\\ @Qualifier</p> <p>@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER])</p> <p>annotation class MiskKmsClient</p> <p>This annotation is used to specify the KmsClient that\u2019s being used by misk to load encryption keys</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-misk-kms-client/#constructors","title":"Constructors","text":"MiskKmsClient [jvm]fun MiskKmsClient()"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-misk-kms-client/-misk-kms-client/","title":"MiskKmsClient - Misk","text":"<p>//misk-crypto/misk.crypto/MiskKmsClient/MiskKmsClient</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-misk-kms-client/-misk-kms-client/#miskkmsclient","title":"MiskKmsClient","text":"<p>[jvm]\\ fun MiskKmsClient()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-pgp-decrypter-manager/","title":"PgpDecrypterManager - Misk","text":"<p>//misk-crypto/misk.crypto/PgpDecrypterManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-pgp-decrypter-manager/#pgpdecryptermanager","title":"PgpDecrypterManager","text":"<p>[jvm]\\ @Singleton</p> <p>class PgpDecrypterManager@Injectconstructor(injector: Injector) : MappedKeyManager&lt;PgpDecrypter&gt; </p> <p>Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app.</p> <ul> <li>Users may use this object to obtain an PgpDecrypter dynamically:</li> </ul> <p>val myKey: PgpDecrypter = pgpDecrypterManager[\u201cmyKey\u201d]</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-pgp-decrypter-manager/#constructors","title":"Constructors","text":"PgpDecrypterManager [jvm]@Injectfun PgpDecrypterManager(injector: Injector)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-pgp-decrypter-manager/#functions","title":"Functions","text":"Name Summary get [jvm]operator fun get(name: String): PgpDecrypter"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-pgp-decrypter-manager/-pgp-decrypter-manager/","title":"PgpDecrypterManager - Misk","text":"<p>//misk-crypto/misk.crypto/PgpDecrypterManager/PgpDecrypterManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-pgp-decrypter-manager/-pgp-decrypter-manager/#pgpdecryptermanager","title":"PgpDecrypterManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun PgpDecrypterManager(injector: Injector)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-pgp-encrypter-manager/","title":"PgpEncrypterManager - Misk","text":"<p>//misk-crypto/misk.crypto/PgpEncrypterManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-pgp-encrypter-manager/#pgpencryptermanager","title":"PgpEncrypterManager","text":"<p>[jvm]\\ @Singleton</p> <p>class PgpEncrypterManager@Injectconstructor(injector: Injector) : MappedKeyManager&lt;PgpEncrypter&gt; </p> <p>Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app.</p> <ul> <li>Users may use this object to obtain an PgpEncrypter dynamically:</li> </ul> <p>val myKey: PgpEncrypter = pgpEncrypterManager[\u201cmyKey\u201d]</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-pgp-encrypter-manager/#constructors","title":"Constructors","text":"PgpEncrypterManager [jvm]@Injectfun PgpEncrypterManager(injector: Injector)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-pgp-encrypter-manager/#functions","title":"Functions","text":"Name Summary get [jvm]operator fun get(name: String): PgpEncrypter"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-pgp-encrypter-manager/-pgp-encrypter-manager/","title":"PgpEncrypterManager - Misk","text":"<p>//misk-crypto/misk.crypto/PgpEncrypterManager/PgpEncrypterManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-pgp-encrypter-manager/-pgp-encrypter-manager/#pgpencryptermanager","title":"PgpEncrypterManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun PgpEncrypterManager(injector: Injector)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/","title":"S3KeySource - Misk","text":"<p>//misk-crypto/misk.crypto/S3KeySource</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/#s3keysource","title":"S3KeySource","text":"<p>[jvm]\\ class S3KeySource@Injectconstructor(deployment: Deployment, defaultS3: AmazonS3, allKeyAliases: Map&lt;KeyAlias, KeyType&gt;, bucketNameSource: BucketNameSource, awsCredentials: AWSCredentialsProvider) : ExternalKeySource</p> <p>S3KeySource implements an ExternalKeySource that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region.</p> <p>For example, if we are to load a key aliased by \u201cexample_key\u201d in the staging environment, we\u2019d expect the following layout:</p> <p>bucket \u21b3 example_key     \u21b3 us-east-1     \u21b3 us-west-2</p> <p>And the metadata of the region-specified object will contain the KMS key arn that was used to protect it under the key x-amz-meta-kms-key-arn, and the type of the key under x-amz-meta-key-type. These keys are exposed in the S3 api without the x-amz-meta- prefix.</p> <p>The envelope scheme itself is from misk-crypto and is defined in KeyReader</p> <p>If a requested key alias does not exist, this will raise a ExternalKeyManagerException</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/#constructors","title":"Constructors","text":"S3KeySource [jvm]@Injectfun S3KeySource(deployment: Deployment, defaultS3: AmazonS3, allKeyAliases: Map&lt;KeyAlias, KeyType&gt;, bucketNameSource: BucketNameSource = object : BucketNameSource {     override fun getBucketName(deployment: Deployment) = deployment.mapToEnvironmentName()   }, awsCredentials: AWSCredentialsProvider)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/#functions","title":"Functions","text":"Name Summary getKey [jvm]open override fun getKey(alias: KeyAlias): KeyReturn a Key from an external key source. keyExists [jvm]open override fun keyExists(alias: KeyAlias): BooleanCheck if a key alias exists in the key source."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/#properties","title":"Properties","text":"Name Summary allKeyAliases [jvm]val allKeyAliases: Map&lt;KeyAlias, KeyType&gt;"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/-s3-key-source/","title":"S3KeySource - Misk","text":"<p>//misk-crypto/misk.crypto/S3KeySource/S3KeySource</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/-s3-key-source/#s3keysource","title":"S3KeySource","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun S3KeySource(deployment: Deployment, defaultS3: AmazonS3, allKeyAliases: Map&lt;KeyAlias, KeyType&gt;, bucketNameSource: BucketNameSource = object : BucketNameSource {     override fun getBucketName(deployment: Deployment) = deployment.mapToEnvironmentName()   }, awsCredentials: AWSCredentialsProvider)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/all-key-aliases/","title":"allKeyAliases - Misk","text":"<p>//misk-crypto/misk.crypto/S3KeySource/allKeyAliases</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/all-key-aliases/#allkeyaliases","title":"allKeyAliases","text":"<p>[jvm]\\ val allKeyAliases: Map&lt;KeyAlias, KeyType&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/get-key/","title":"getKey - Misk","text":"<p>//misk-crypto/misk.crypto/S3KeySource/getKey</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/get-key/#getkey","title":"getKey","text":"<p>[jvm]\\ open override fun getKey(alias: KeyAlias): Key</p> <p>Return a Key from an external key source.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/key-exists/","title":"keyExists - Misk","text":"<p>//misk-crypto/misk.crypto/S3KeySource/keyExists</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/key-exists/#keyexists","title":"keyExists","text":"<p>[jvm]\\ open override fun keyExists(alias: KeyAlias): Boolean</p> <p>Check if a key alias exists in the key source.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/-companion/","title":"Companion - Misk","text":"<p>//misk-crypto/misk.crypto/S3KeySource/Companion</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-s3-key-source/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-service-keys/","title":"ServiceKeys - Misk","text":"<p>//misk-crypto/misk.crypto/ServiceKeys</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-service-keys/#servicekeys","title":"ServiceKeys","text":"<p>[jvm]\\ @Qualifier</p> <p>@Target(allowedTargets = [AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER])</p> <p>annotation class ServiceKeys</p> <p>This annotation is used to decorate the collection of service keys used in the service.</p> <p>This annotation can be useful for cases where one would need access to all service keys as a Map&lt;KeyAlias, KeyType&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-service-keys/#constructors","title":"Constructors","text":"ServiceKeys [jvm]fun ServiceKeys()"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-service-keys/-service-keys/","title":"ServiceKeys - Misk","text":"<p>//misk-crypto/misk.crypto/ServiceKeys/ServiceKeys</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-service-keys/-service-keys/#servicekeys","title":"ServiceKeys","text":"<p>[jvm]\\ fun ServiceKeys()</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-streaming-aead-key-manager/","title":"StreamingAeadKeyManager - Misk","text":"<p>//misk-crypto/misk.crypto/StreamingAeadKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-streaming-aead-key-manager/#streamingaeadkeymanager","title":"StreamingAeadKeyManager","text":"<p>[jvm]\\ @Singleton</p> <p>class StreamingAeadKeyManager@Injectconstructor(injector: Injector) : MappedKeyManager&lt;StreamingAead&gt; </p> <p>Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app.</p> <p>Users may use this object to obtain an StreamingAead dynamically:</p> <p>val myKey: StreamingAead = streamingAeadKeyManager[\u201cmyKey\u201d]</p> <p>Note: StreamingAead is useful when the data to be encrypted is too large to be processed in a single step. Typical use cases include encryption of large files or encryption of live data streams</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-streaming-aead-key-manager/#constructors","title":"Constructors","text":"StreamingAeadKeyManager [jvm]@Injectfun StreamingAeadKeyManager(injector: Injector)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-streaming-aead-key-manager/#functions","title":"Functions","text":"Name Summary get [jvm]operator fun get(name: String): StreamingAead"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-streaming-aead-key-manager/-streaming-aead-key-manager/","title":"StreamingAeadKeyManager - Misk","text":"<p>//misk-crypto/misk.crypto/StreamingAeadKeyManager/StreamingAeadKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto/-streaming-aead-key-manager/-streaming-aead-key-manager/#streamingaeadkeymanager","title":"StreamingAeadKeyManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun StreamingAeadKeyManager(injector: Injector)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/","title":"Package misk.crypto.internal - Misk","text":"<p>//misk-crypto/misk.crypto.internal</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/#package-miskcryptointernal","title":"Package misk.crypto.internal","text":""},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/#types","title":"Types","text":"Name Summary AeadEnvelopeProvider [jvm]class AeadEnvelopeProvider(key: KeyAlias) : KeyReader, Provider&lt;Aead&gt; We only support AEAD keys via envelope encryption. DeterministicAeadProvider [jvm]class DeterministicAeadProvider(key: KeyAlias) : KeyReader, Provider&lt;DeterministicAead&gt; DigitalSignatureSignerProvider [jvm]class DigitalSignatureSignerProvider(key: KeyAlias) : KeyReader, Provider&lt;PublicKeySign&gt; DigitalSignatureVerifierProvider [jvm]class DigitalSignatureVerifierProvider(key: KeyAlias) : KeyReader, Provider&lt;PublicKeyVerify&gt; HybridDecryptProvider [jvm]class HybridDecryptProvider(key: KeyAlias) : KeyReader, Provider&lt;HybridDecrypt&gt; HybridEncryptProvider [jvm]class HybridEncryptProvider(key: KeyAlias) : KeyReader, Provider&lt;HybridEncrypt&gt; MacProvider [jvm]class MacProvider(key: KeyAlias) : KeyReader, Provider&lt;Mac&gt; StreamingAeadProvider [jvm]class StreamingAeadProvider(key: KeyAlias) : KeyReader, Provider&lt;StreamingAead&gt;"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-aead-envelope-provider/","title":"AeadEnvelopeProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/AeadEnvelopeProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-aead-envelope-provider/#aeadenvelopeprovider","title":"AeadEnvelopeProvider","text":"<p>[jvm]\\ class AeadEnvelopeProvider(key: KeyAlias) : KeyReader, Provider&lt;Aead&gt; </p> <p>We only support AEAD keys via envelope encryption.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-aead-envelope-provider/#constructors","title":"Constructors","text":"AeadEnvelopeProvider [jvm]fun AeadEnvelopeProvider(key: KeyAlias)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-aead-envelope-provider/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): Aead readKey [jvm]fun readKey(alias: KeyAlias): KeysetHandle"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-aead-envelope-provider/#properties","title":"Properties","text":"Name Summary key [jvm]val key: KeyAlias keyManager [jvm]@Injectlateinit var keyManager: AeadKeyManager keySources [jvm]@Injectlateinit var keySources: Set&lt;KeyResolver&gt; kmsClient [jvm]@Injectlateinit var kmsClient: KmsClient"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-aead-envelope-provider/-aead-envelope-provider/","title":"AeadEnvelopeProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/AeadEnvelopeProvider/AeadEnvelopeProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-aead-envelope-provider/-aead-envelope-provider/#aeadenvelopeprovider","title":"AeadEnvelopeProvider","text":"<p>[jvm]\\ fun AeadEnvelopeProvider(key: KeyAlias)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-aead-envelope-provider/get/","title":"get - Misk","text":"<p>//misk-crypto/misk.crypto.internal/AeadEnvelopeProvider/get</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-aead-envelope-provider/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): Aead</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-aead-envelope-provider/key-manager/","title":"keyManager - Misk","text":"<p>//misk-crypto/misk.crypto.internal/AeadEnvelopeProvider/keyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-aead-envelope-provider/key-manager/#keymanager","title":"keyManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var keyManager: AeadKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-aead-envelope-provider/key/","title":"key - Misk","text":"<p>//misk-crypto/misk.crypto.internal/AeadEnvelopeProvider/key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-aead-envelope-provider/key/#key","title":"key","text":"<p>[jvm]\\ val key: KeyAlias</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-deterministic-aead-provider/","title":"DeterministicAeadProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DeterministicAeadProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-deterministic-aead-provider/#deterministicaeadprovider","title":"DeterministicAeadProvider","text":"<p>[jvm]\\ class DeterministicAeadProvider(key: KeyAlias) : KeyReader, Provider&lt;DeterministicAead&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-deterministic-aead-provider/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): DeterministicAead readKey [jvm]fun readKey(alias: KeyAlias): KeysetHandle"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-deterministic-aead-provider/#properties","title":"Properties","text":"Name Summary key [jvm]val key: KeyAlias keyManager [jvm]@Injectlateinit var keyManager: DeterministicAeadKeyManager keySources [jvm]@Injectlateinit var keySources: Set&lt;KeyResolver&gt; kmsClient [jvm]@Injectlateinit var kmsClient: KmsClient"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-deterministic-aead-provider/-deterministic-aead-provider/","title":"DeterministicAeadProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DeterministicAeadProvider/DeterministicAeadProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-deterministic-aead-provider/-deterministic-aead-provider/#deterministicaeadprovider","title":"DeterministicAeadProvider","text":"<p>[jvm]\\ fun DeterministicAeadProvider(key: KeyAlias)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-deterministic-aead-provider/get/","title":"get - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DeterministicAeadProvider/get</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-deterministic-aead-provider/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): DeterministicAead</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-deterministic-aead-provider/key-manager/","title":"keyManager - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DeterministicAeadProvider/keyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-deterministic-aead-provider/key-manager/#keymanager","title":"keyManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var keyManager: DeterministicAeadKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-deterministic-aead-provider/key/","title":"key - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DeterministicAeadProvider/key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-deterministic-aead-provider/key/#key","title":"key","text":"<p>[jvm]\\ val key: KeyAlias</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-signer-provider/","title":"DigitalSignatureSignerProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DigitalSignatureSignerProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-signer-provider/#digitalsignaturesignerprovider","title":"DigitalSignatureSignerProvider","text":"<p>[jvm]\\ class DigitalSignatureSignerProvider(key: KeyAlias) : KeyReader, Provider&lt;PublicKeySign&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-signer-provider/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): PublicKeySign readKey [jvm]fun readKey(alias: KeyAlias): KeysetHandle"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-signer-provider/#properties","title":"Properties","text":"Name Summary key [jvm]val key: KeyAlias keyManager [jvm]@Injectlateinit var keyManager: DigitalSignatureKeyManager keySources [jvm]@Injectlateinit var keySources: Set&lt;KeyResolver&gt; kmsClient [jvm]@Injectlateinit var kmsClient: KmsClient"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-signer-provider/-digital-signature-signer-provider/","title":"DigitalSignatureSignerProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DigitalSignatureSignerProvider/DigitalSignatureSignerProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-signer-provider/-digital-signature-signer-provider/#digitalsignaturesignerprovider","title":"DigitalSignatureSignerProvider","text":"<p>[jvm]\\ fun DigitalSignatureSignerProvider(key: KeyAlias)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-signer-provider/get/","title":"get - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DigitalSignatureSignerProvider/get</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-signer-provider/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): PublicKeySign</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-signer-provider/key-manager/","title":"keyManager - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DigitalSignatureSignerProvider/keyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-signer-provider/key-manager/#keymanager","title":"keyManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var keyManager: DigitalSignatureKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-signer-provider/key/","title":"key - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DigitalSignatureSignerProvider/key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-signer-provider/key/#key","title":"key","text":"<p>[jvm]\\ val key: KeyAlias</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-verifier-provider/","title":"DigitalSignatureVerifierProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DigitalSignatureVerifierProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-verifier-provider/#digitalsignatureverifierprovider","title":"DigitalSignatureVerifierProvider","text":"<p>[jvm]\\ class DigitalSignatureVerifierProvider(key: KeyAlias) : KeyReader, Provider&lt;PublicKeyVerify&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-verifier-provider/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): PublicKeyVerify readKey [jvm]fun readKey(alias: KeyAlias): KeysetHandle"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-verifier-provider/#properties","title":"Properties","text":"Name Summary key [jvm]val key: KeyAlias keyManager [jvm]@Injectlateinit var keyManager: DigitalSignatureKeyManager keySources [jvm]@Injectlateinit var keySources: Set&lt;KeyResolver&gt; kmsClient [jvm]@Injectlateinit var kmsClient: KmsClient"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-verifier-provider/-digital-signature-verifier-provider/","title":"DigitalSignatureVerifierProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DigitalSignatureVerifierProvider/DigitalSignatureVerifierProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-verifier-provider/-digital-signature-verifier-provider/#digitalsignatureverifierprovider","title":"DigitalSignatureVerifierProvider","text":"<p>[jvm]\\ fun DigitalSignatureVerifierProvider(key: KeyAlias)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-verifier-provider/get/","title":"get - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DigitalSignatureVerifierProvider/get</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-verifier-provider/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): PublicKeyVerify</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-verifier-provider/key-manager/","title":"keyManager - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DigitalSignatureVerifierProvider/keyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-verifier-provider/key-manager/#keymanager","title":"keyManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var keyManager: DigitalSignatureKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-verifier-provider/key/","title":"key - Misk","text":"<p>//misk-crypto/misk.crypto.internal/DigitalSignatureVerifierProvider/key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-digital-signature-verifier-provider/key/#key","title":"key","text":"<p>[jvm]\\ val key: KeyAlias</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/","title":"HybridDecryptProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/HybridDecryptProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/#hybriddecryptprovider","title":"HybridDecryptProvider","text":"<p>[jvm]\\ class HybridDecryptProvider(key: KeyAlias) : KeyReader, Provider&lt;HybridDecrypt&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): HybridDecrypt readKey [jvm]fun readKey(alias: KeyAlias): KeysetHandle"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/#properties","title":"Properties","text":"Name Summary key [jvm]val key: KeyAlias keyDecryptManager [jvm]@Injectlateinit var keyDecryptManager: HybridDecryptKeyManager keyEncryptManager [jvm]@Injectlateinit var keyEncryptManager: HybridEncryptKeyManager keySources [jvm]@Injectlateinit var keySources: Set&lt;KeyResolver&gt; kmsClient [jvm]@Injectlateinit var kmsClient: KmsClient"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/-hybrid-decrypt-provider/","title":"HybridDecryptProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/HybridDecryptProvider/HybridDecryptProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/-hybrid-decrypt-provider/#hybriddecryptprovider","title":"HybridDecryptProvider","text":"<p>[jvm]\\ fun HybridDecryptProvider(key: KeyAlias)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/get/","title":"get - Misk","text":"<p>//misk-crypto/misk.crypto.internal/HybridDecryptProvider/get</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): HybridDecrypt</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/key-decrypt-manager/","title":"keyDecryptManager - Misk","text":"<p>//misk-crypto/misk.crypto.internal/HybridDecryptProvider/keyDecryptManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/key-decrypt-manager/#keydecryptmanager","title":"keyDecryptManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var keyDecryptManager: HybridDecryptKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/key-encrypt-manager/","title":"keyEncryptManager - Misk","text":"<p>//misk-crypto/misk.crypto.internal/HybridDecryptProvider/keyEncryptManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/key-encrypt-manager/#keyencryptmanager","title":"keyEncryptManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var keyEncryptManager: HybridEncryptKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/key/","title":"key - Misk","text":"<p>//misk-crypto/misk.crypto.internal/HybridDecryptProvider/key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-decrypt-provider/key/#key","title":"key","text":"<p>[jvm]\\ val key: KeyAlias</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-encrypt-provider/","title":"HybridEncryptProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/HybridEncryptProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-encrypt-provider/#hybridencryptprovider","title":"HybridEncryptProvider","text":"<p>[jvm]\\ class HybridEncryptProvider(key: KeyAlias) : KeyReader, Provider&lt;HybridEncrypt&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-encrypt-provider/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): HybridEncrypt readKey [jvm]fun readKey(alias: KeyAlias): KeysetHandle"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-encrypt-provider/#properties","title":"Properties","text":"Name Summary key [jvm]val key: KeyAlias keyManager [jvm]@Injectlateinit var keyManager: HybridEncryptKeyManager keySources [jvm]@Injectlateinit var keySources: Set&lt;KeyResolver&gt; kmsClient [jvm]@Injectlateinit var kmsClient: KmsClient"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-encrypt-provider/-hybrid-encrypt-provider/","title":"HybridEncryptProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/HybridEncryptProvider/HybridEncryptProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-encrypt-provider/-hybrid-encrypt-provider/#hybridencryptprovider","title":"HybridEncryptProvider","text":"<p>[jvm]\\ fun HybridEncryptProvider(key: KeyAlias)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-encrypt-provider/get/","title":"get - Misk","text":"<p>//misk-crypto/misk.crypto.internal/HybridEncryptProvider/get</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-encrypt-provider/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): HybridEncrypt</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-encrypt-provider/key-manager/","title":"keyManager - Misk","text":"<p>//misk-crypto/misk.crypto.internal/HybridEncryptProvider/keyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-encrypt-provider/key-manager/#keymanager","title":"keyManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var keyManager: HybridEncryptKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-encrypt-provider/key/","title":"key - Misk","text":"<p>//misk-crypto/misk.crypto.internal/HybridEncryptProvider/key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-hybrid-encrypt-provider/key/#key","title":"key","text":"<p>[jvm]\\ val key: KeyAlias</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-mac-provider/","title":"MacProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/MacProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-mac-provider/#macprovider","title":"MacProvider","text":"<p>[jvm]\\ class MacProvider(key: KeyAlias) : KeyReader, Provider&lt;Mac&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-mac-provider/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): Mac readKey [jvm]fun readKey(alias: KeyAlias): KeysetHandle"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-mac-provider/#properties","title":"Properties","text":"Name Summary key [jvm]val key: KeyAlias keyManager [jvm]@Injectlateinit var keyManager: MacKeyManager keySources [jvm]@Injectlateinit var keySources: Set&lt;KeyResolver&gt; kmsClient [jvm]@Injectlateinit var kmsClient: KmsClient"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-mac-provider/-mac-provider/","title":"MacProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/MacProvider/MacProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-mac-provider/-mac-provider/#macprovider","title":"MacProvider","text":"<p>[jvm]\\ fun MacProvider(key: KeyAlias)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-mac-provider/get/","title":"get - Misk","text":"<p>//misk-crypto/misk.crypto.internal/MacProvider/get</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-mac-provider/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): Mac</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-mac-provider/key-manager/","title":"keyManager - Misk","text":"<p>//misk-crypto/misk.crypto.internal/MacProvider/keyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-mac-provider/key-manager/#keymanager","title":"keyManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var keyManager: MacKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-mac-provider/key/","title":"key - Misk","text":"<p>//misk-crypto/misk.crypto.internal/MacProvider/key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-mac-provider/key/#key","title":"key","text":"<p>[jvm]\\ val key: KeyAlias</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-streaming-aead-provider/","title":"StreamingAeadProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/StreamingAeadProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-streaming-aead-provider/#streamingaeadprovider","title":"StreamingAeadProvider","text":"<p>[jvm]\\ class StreamingAeadProvider(key: KeyAlias) : KeyReader, Provider&lt;StreamingAead&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-streaming-aead-provider/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): StreamingAead readKey [jvm]fun readKey(alias: KeyAlias): KeysetHandle"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-streaming-aead-provider/#properties","title":"Properties","text":"Name Summary key [jvm]val key: KeyAlias keySources [jvm]@Injectlateinit var keySources: Set&lt;KeyResolver&gt; kmsClient [jvm]@Injectlateinit var kmsClient: KmsClient streamingAeadKeyManager [jvm]@Injectlateinit var streamingAeadKeyManager: StreamingAeadKeyManager"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-streaming-aead-provider/-streaming-aead-provider/","title":"StreamingAeadProvider - Misk","text":"<p>//misk-crypto/misk.crypto.internal/StreamingAeadProvider/StreamingAeadProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-streaming-aead-provider/-streaming-aead-provider/#streamingaeadprovider","title":"StreamingAeadProvider","text":"<p>[jvm]\\ fun StreamingAeadProvider(key: KeyAlias)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-streaming-aead-provider/get/","title":"get - Misk","text":"<p>//misk-crypto/misk.crypto.internal/StreamingAeadProvider/get</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-streaming-aead-provider/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): StreamingAead</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-streaming-aead-provider/key/","title":"key - Misk","text":"<p>//misk-crypto/misk.crypto.internal/StreamingAeadProvider/key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-streaming-aead-provider/key/#key","title":"key","text":"<p>[jvm]\\ val key: KeyAlias</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-streaming-aead-provider/streaming-aead-key-manager/","title":"streamingAeadKeyManager - Misk","text":"<p>//misk-crypto/misk.crypto.internal/StreamingAeadProvider/streamingAeadKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.internal/-streaming-aead-provider/streaming-aead-key-manager/#streamingaeadkeymanager","title":"streamingAeadKeyManager","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var streamingAeadKeyManager: StreamingAeadKeyManager</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp/","title":"Package misk.crypto.pgp - Misk","text":"<p>//misk-crypto/misk.crypto.pgp</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp/#package-miskcryptopgp","title":"Package misk.crypto.pgp","text":""},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp/#types","title":"Types","text":"Name Summary PgpDecrypter [jvm]interface PgpDecrypterA PgpDecrypter is tied to a private PGP key which it uses to decrypt messages. PgpEncrypter [jvm]interface PgpEncrypterA PgpEncrypter is tied to a public PGP key which it uses to encrypt messages."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp/-pgp-decrypter/","title":"PgpDecrypter - Misk","text":"<p>//misk-crypto/misk.crypto.pgp/PgpDecrypter</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp/-pgp-decrypter/#pgpdecrypter","title":"PgpDecrypter","text":"<p>[jvm]\\ interface PgpDecrypter</p> <p>A PgpDecrypter is tied to a private PGP key which it uses to decrypt messages.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp/-pgp-decrypter/#functions","title":"Functions","text":"Name Summary decrypt [jvm]abstract fun decrypt(ciphertext: ByteArray): ByteArray"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp/-pgp-decrypter/decrypt/","title":"decrypt - Misk","text":"<p>//misk-crypto/misk.crypto.pgp/PgpDecrypter/decrypt</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp/-pgp-decrypter/decrypt/#decrypt","title":"decrypt","text":"<p>[jvm]\\ abstract fun decrypt(ciphertext: ByteArray): ByteArray</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp/-pgp-encrypter/","title":"PgpEncrypter - Misk","text":"<p>//misk-crypto/misk.crypto.pgp/PgpEncrypter</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp/-pgp-encrypter/#pgpencrypter","title":"PgpEncrypter","text":"<p>[jvm]\\ interface PgpEncrypter</p> <p>A PgpEncrypter is tied to a public PGP key which it uses to encrypt messages.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp/-pgp-encrypter/#functions","title":"Functions","text":"Name Summary encrypt [jvm]abstract fun encrypt(plaintext: ByteArray, armored: Boolean): ByteArrayEncrypts the given byte array. Armored refers to whether to output in a text format or not."},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp/-pgp-encrypter/encrypt/","title":"encrypt - Misk","text":"<p>//misk-crypto/misk.crypto.pgp/PgpEncrypter/encrypt</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp/-pgp-encrypter/encrypt/#encrypt","title":"encrypt","text":"<p>[jvm]\\ abstract fun encrypt(plaintext: ByteArray, armored: Boolean): ByteArray</p> <p>Encrypts the given byte array. Armored refers to whether to output in a text format or not.</p> <p>For example, with armored we get output like:</p> <p>-----BEGIN PGP MESSAGE----- Version: BCPG C# v1.6.1.0</p> <p>hQIMA0tM4ZUzpKCkAQ//ZO8hVhp6LMxshCLqcqgPkXcU1kBHPQjiUBs6QPxaQFcg PIXJEdZWQ1RkMUKdCfzjvevizi/2NWAwZ797fELdbpVyH6JI2Me1Ov10f8qgYvbG V0GJ3loRt84KjKdVocKguJVfMvOeMVJanPpxfPt3Ak+Nt/voZHmJdTkV4cjWTmcU x31xqc5LZcvgF4Lv+ZcMw090b281yMENwALnvQJ9FQg5WTfZ+YautUMwWGk8W8XM H3tYkdh3jKizy8YTw+zfVDn1yhw2BgSFp0QIgHIQQ2Q2gyknRfj4zdfs/4bZYcu1 KNgj9op/IejZNstP9JWw4labC78nTIW5s1f0LWF5hhZUkxeAOEyVluUVJgEw44B4 LKb0p/8jb4J/dVrsmaTDOONZ48wtNjZOTV61DhCnn+UiNVSfQe6I7XMtFpEH0PN4 WzermmeEgjw1MADeh0jg/9wMM/p9UnTxihGQrPRgHYUu45jI3ys3qArsD2GvAi9y QYqsuRJNB7EEu2clBRASA3zoWkpqbs3H9S2fB9Sf9ZzZTPCzowOdK1oe0vlMVt3A mCILe05s2nowwBrBWu4PHUTkllsnLliHhrihu9sqXCHy6u1pdNQMvJgY6kbgQmsG bVY+brdkLdQ1BxbTT1YixzLm//zqMqGC1ZJUsr5PAIbNtyKK6u6+mCkZj0Y3fU3J Il0x5V09QcC9AHyxJ8VMOxzhQZjwVYNtD6SGeY8jOyfUScY= =DHKq -----END PGP MESSAGE-----</p> <p>Without the armored encoding we would get binary data which isn\u2019t viewable in text format.</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/","title":"Package misk.crypto.pgp.internal - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/#package-miskcryptopgpinternal","title":"Package misk.crypto.pgp.internal","text":""},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/#types","title":"Types","text":"Name Summary PgpDecrypterProvider [jvm]class PgpDecrypterProvider(alias: KeyAlias) : KeyReader, Provider&lt;PgpDecrypter&gt; PgpEncrypterProvider [jvm]class PgpEncrypterProvider(alias: KeyAlias) : KeyReader, Provider&lt;PgpEncrypter&gt; PgpKeyJsonFile [jvm]data class PgpKeyJsonFile(region: String, encrypted_private_key: String, public_key: String, pgp: PgpKeyJsonFileMetadata, aws_kms_key_id: String) PgpKeyJsonFileMetadata [jvm]data class PgpKeyJsonFileMetadata(name: String, email: String, comment: String)"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-decrypter-provider/","title":"PgpDecrypterProvider - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpDecrypterProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-decrypter-provider/#pgpdecrypterprovider","title":"PgpDecrypterProvider","text":"<p>[jvm]\\ class PgpDecrypterProvider(alias: KeyAlias) : KeyReader, Provider&lt;PgpDecrypter&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-decrypter-provider/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): PgpDecrypter readKey [jvm]fun readKey(alias: KeyAlias): KeysetHandle"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-decrypter-provider/#properties","title":"Properties","text":"Name Summary keySources [jvm]@Injectlateinit var keySources: Set&lt;KeyResolver&gt; kmsClient [jvm]@Injectlateinit var kmsClient: KmsClient"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-decrypter-provider/-pgp-decrypter-provider/","title":"PgpDecrypterProvider - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpDecrypterProvider/PgpDecrypterProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-decrypter-provider/-pgp-decrypter-provider/#pgpdecrypterprovider","title":"PgpDecrypterProvider","text":"<p>[jvm]\\ fun PgpDecrypterProvider(alias: KeyAlias)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-decrypter-provider/get/","title":"get - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpDecrypterProvider/get</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-decrypter-provider/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): PgpDecrypter</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-encrypter-provider/","title":"PgpEncrypterProvider - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpEncrypterProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-encrypter-provider/#pgpencrypterprovider","title":"PgpEncrypterProvider","text":"<p>[jvm]\\ class PgpEncrypterProvider(alias: KeyAlias) : KeyReader, Provider&lt;PgpEncrypter&gt;</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-encrypter-provider/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(): PgpEncrypter readKey [jvm]fun readKey(alias: KeyAlias): KeysetHandle"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-encrypter-provider/#properties","title":"Properties","text":"Name Summary keySources [jvm]@Injectlateinit var keySources: Set&lt;KeyResolver&gt; kmsClient [jvm]@Injectlateinit var kmsClient: KmsClient"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-encrypter-provider/-pgp-encrypter-provider/","title":"PgpEncrypterProvider - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpEncrypterProvider/PgpEncrypterProvider</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-encrypter-provider/-pgp-encrypter-provider/#pgpencrypterprovider","title":"PgpEncrypterProvider","text":"<p>[jvm]\\ fun PgpEncrypterProvider(alias: KeyAlias)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-encrypter-provider/get/","title":"get - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpEncrypterProvider/get</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-encrypter-provider/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): PgpEncrypter</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/","title":"PgpKeyJsonFile - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpKeyJsonFile</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/#pgpkeyjsonfile","title":"PgpKeyJsonFile","text":"<p>[jvm]\\ data class PgpKeyJsonFile(region: String, encrypted_private_key: String, public_key: String, pgp: PgpKeyJsonFileMetadata, aws_kms_key_id: String)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/#properties","title":"Properties","text":"Name Summary aws_kms_key_id [jvm]val aws_kms_key_id: String encrypted_private_key [jvm]val encrypted_private_key: String pgp [jvm]val pgp: PgpKeyJsonFileMetadata public_key [jvm]val public_key: String region [jvm]val region: String"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/-pgp-key-json-file/","title":"PgpKeyJsonFile - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpKeyJsonFile/PgpKeyJsonFile</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/-pgp-key-json-file/#pgpkeyjsonfile","title":"PgpKeyJsonFile","text":"<p>[jvm]\\ fun PgpKeyJsonFile(region: String, encrypted_private_key: String, public_key: String, pgp: PgpKeyJsonFileMetadata, aws_kms_key_id: String)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/aws_kms_key_id/","title":"aws_kms_key_id - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpKeyJsonFile/aws_kms_key_id</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/aws_kms_key_id/#aws_kms_key_id","title":"aws_kms_key_id","text":"<p>[jvm]\\ val aws_kms_key_id: String</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/encrypted_private_key/","title":"encrypted_private_key - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpKeyJsonFile/encrypted_private_key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/encrypted_private_key/#encrypted_private_key","title":"encrypted_private_key","text":"<p>[jvm]\\ val encrypted_private_key: String</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/pgp/","title":"pgp - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpKeyJsonFile/pgp</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/pgp/#pgp","title":"pgp","text":"<p>[jvm]\\ val pgp: PgpKeyJsonFileMetadata</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/public_key/","title":"public_key - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpKeyJsonFile/public_key</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/public_key/#public_key","title":"public_key","text":"<p>[jvm]\\ val public_key: String</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/region/","title":"region - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpKeyJsonFile/region</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file/region/#region","title":"region","text":"<p>[jvm]\\ val region: String</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file-metadata/","title":"PgpKeyJsonFileMetadata - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpKeyJsonFileMetadata</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file-metadata/#pgpkeyjsonfilemetadata","title":"PgpKeyJsonFileMetadata","text":"<p>[jvm]\\ data class PgpKeyJsonFileMetadata(name: String, email: String, comment: String)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file-metadata/#properties","title":"Properties","text":"Name Summary comment [jvm]val comment: String email [jvm]val email: String name [jvm]val name: String"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file-metadata/-pgp-key-json-file-metadata/","title":"PgpKeyJsonFileMetadata - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpKeyJsonFileMetadata/PgpKeyJsonFileMetadata</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file-metadata/-pgp-key-json-file-metadata/#pgpkeyjsonfilemetadata","title":"PgpKeyJsonFileMetadata","text":"<p>[jvm]\\ fun PgpKeyJsonFileMetadata(name: String, email: String, comment: String)</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file-metadata/comment/","title":"comment - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpKeyJsonFileMetadata/comment</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file-metadata/comment/#comment","title":"comment","text":"<p>[jvm]\\ val comment: String</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file-metadata/email/","title":"email - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpKeyJsonFileMetadata/email</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file-metadata/email/#email","title":"email","text":"<p>[jvm]\\ val email: String</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file-metadata/name/","title":"name - Misk","text":"<p>//misk-crypto/misk.crypto.pgp.internal/PgpKeyJsonFileMetadata/name</p>"},{"location":"0.x/misk-crypto/misk-crypto/misk.crypto.pgp.internal/-pgp-key-json-file-metadata/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-datadog/","title":"misk-datadog - Misk","text":"<p>//misk-datadog</p>"},{"location":"0.x/misk-datadog/#misk-datadog","title":"misk-datadog","text":""},{"location":"0.x/misk-datadog/#packages","title":"Packages","text":"Name com.squareup.cash.tracing.datadog misk.tracing.backends.datadog"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/","title":"Package com.squareup.cash.tracing.datadog - Misk","text":"<p>//misk-datadog/com.squareup.cash.tracing.datadog</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/#package-comsquareupcashtracingdatadog","title":"Package com.squareup.cash.tracing.datadog","text":""},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/#types","title":"Types","text":"Name Summary MDCScopeListener [jvm]class MDCScopeListenerA scope listener that updates the MDC with the trace and span reference anytime a new scope is activated or closed."},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/","title":"MDCScopeListener - Misk","text":"<p>//misk-datadog/com.squareup.cash.tracing.datadog/MDCScopeListener</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/#mdcscopelistener","title":"MDCScopeListener","text":"<p>[jvm]\\ class MDCScopeListener</p> <p>A scope listener that updates the MDC with the trace and span reference anytime a new scope is activated or closed.</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/#constructors","title":"Constructors","text":"MDCScopeListener [jvm]fun MDCScopeListener()"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/#functions","title":"Functions","text":"Name Summary afterScopeActivated [jvm]fun afterScopeActivated() afterScopeClosed [jvm]fun afterScopeClosed()"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-m-d-c-scope-listener/","title":"MDCScopeListener - Misk","text":"<p>//misk-datadog/com.squareup.cash.tracing.datadog/MDCScopeListener/MDCScopeListener</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-m-d-c-scope-listener/#mdcscopelistener","title":"MDCScopeListener","text":"<p>[jvm]\\ fun MDCScopeListener()</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/after-scope-activated/","title":"afterScopeActivated - Misk","text":"<p>//misk-datadog/com.squareup.cash.tracing.datadog/MDCScopeListener/afterScopeActivated</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/after-scope-activated/#afterscopeactivated","title":"afterScopeActivated","text":"<p>[jvm]\\ fun afterScopeActivated()</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/after-scope-closed/","title":"afterScopeClosed - Misk","text":"<p>//misk-datadog/com.squareup.cash.tracing.datadog/MDCScopeListener/afterScopeClosed</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/after-scope-closed/#afterscopeclosed","title":"afterScopeClosed","text":"<p>[jvm]\\ fun afterScopeClosed()</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-companion/","title":"Companion - Misk","text":"<p>//misk-datadog/com.squareup.cash.tracing.datadog/MDCScopeListener/Companion</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-companion/#properties","title":"Properties","text":"Name Summary log [jvm]val log: &lt;ERROR CLASS&gt; MDC_DD_SPAN_ID [jvm]const val MDC_DD_SPAN_ID: String MDC_DD_TRACE_ID [jvm]const val MDC_DD_TRACE_ID: String MDC_SPAN_ID [jvm]const val MDC_SPAN_ID: String MDC_TRACE_ID [jvm]const val MDC_TRACE_ID: String"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-companion/-m-d-c_-d-d_-s-p-a-n_-i-d/","title":"MDC_DD_SPAN_ID - Misk","text":"<p>//misk-datadog/com.squareup.cash.tracing.datadog/MDCScopeListener/Companion/MDC_DD_SPAN_ID</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-companion/-m-d-c_-d-d_-s-p-a-n_-i-d/#mdc_dd_span_id","title":"MDC_DD_SPAN_ID","text":"<p>[jvm]\\ const val MDC_DD_SPAN_ID: String</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-companion/-m-d-c_-d-d_-t-r-a-c-e_-i-d/","title":"MDC_DD_TRACE_ID - Misk","text":"<p>//misk-datadog/com.squareup.cash.tracing.datadog/MDCScopeListener/Companion/MDC_DD_TRACE_ID</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-companion/-m-d-c_-d-d_-t-r-a-c-e_-i-d/#mdc_dd_trace_id","title":"MDC_DD_TRACE_ID","text":"<p>[jvm]\\ const val MDC_DD_TRACE_ID: String</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-companion/-m-d-c_-s-p-a-n_-i-d/","title":"MDC_SPAN_ID - Misk","text":"<p>//misk-datadog/com.squareup.cash.tracing.datadog/MDCScopeListener/Companion/MDC_SPAN_ID</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-companion/-m-d-c_-s-p-a-n_-i-d/#mdc_span_id","title":"MDC_SPAN_ID","text":"<p>[jvm]\\ const val MDC_SPAN_ID: String</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-companion/-m-d-c_-t-r-a-c-e_-i-d/","title":"MDC_TRACE_ID - Misk","text":"<p>//misk-datadog/com.squareup.cash.tracing.datadog/MDCScopeListener/Companion/MDC_TRACE_ID</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-companion/-m-d-c_-t-r-a-c-e_-i-d/#mdc_trace_id","title":"MDC_TRACE_ID","text":"<p>[jvm]\\ const val MDC_TRACE_ID: String</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-companion/log/","title":"log - Misk","text":"<p>//misk-datadog/com.squareup.cash.tracing.datadog/MDCScopeListener/Companion/log</p>"},{"location":"0.x/misk-datadog/misk-datadog/com.squareup.cash.tracing.datadog/-m-d-c-scope-listener/-companion/log/#log","title":"log","text":"<p>[jvm]\\ val log: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-datadog/misk-datadog/misk.tracing.backends.datadog/","title":"Package misk.tracing.backends.datadog - Misk","text":"<p>//misk-datadog/misk.tracing.backends.datadog</p>"},{"location":"0.x/misk-datadog/misk-datadog/misk.tracing.backends.datadog/#package-misktracingbackendsdatadog","title":"Package misk.tracing.backends.datadog","text":""},{"location":"0.x/misk-datadog/misk-datadog/misk.tracing.backends.datadog/#types","title":"Types","text":"Name Summary DatadogTracingBackendModule [jvm]class DatadogTracingBackendModule : KAbstractModuleBinds the datadog tracer to opentracing\u2019s Tracer"},{"location":"0.x/misk-datadog/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/","title":"DatadogTracingBackendModule - Misk","text":"<p>//misk-datadog/misk.tracing.backends.datadog/DatadogTracingBackendModule</p>"},{"location":"0.x/misk-datadog/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/#datadogtracingbackendmodule","title":"DatadogTracingBackendModule","text":"<p>[jvm]\\ class DatadogTracingBackendModule : KAbstractModule</p> <p>Binds the datadog tracer to opentracing\u2019s Tracer</p>"},{"location":"0.x/misk-datadog/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/#constructors","title":"Constructors","text":"DatadogTracingBackendModule [jvm]fun DatadogTracingBackendModule()"},{"location":"0.x/misk-datadog/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-datadog/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-datadog/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/-datadog-tracing-backend-module/","title":"DatadogTracingBackendModule - Misk","text":"<p>//misk-datadog/misk.tracing.backends.datadog/DatadogTracingBackendModule/DatadogTracingBackendModule</p>"},{"location":"0.x/misk-datadog/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/-datadog-tracing-backend-module/#datadogtracingbackendmodule","title":"DatadogTracingBackendModule","text":"<p>[jvm]\\ fun DatadogTracingBackendModule()</p>"},{"location":"0.x/misk-exceptions-dynamodb/","title":"misk-exceptions-dynamodb - Misk","text":"<p>//misk-exceptions-dynamodb</p>"},{"location":"0.x/misk-exceptions-dynamodb/#misk-exceptions-dynamodb","title":"misk-exceptions-dynamodb","text":""},{"location":"0.x/misk-exceptions-dynamodb/#packages","title":"Packages","text":"Name misk.exceptions.dynamodb"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/","title":"Package misk.exceptions.dynamodb - Misk","text":"<p>//misk-exceptions-dynamodb/misk.exceptions.dynamodb</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/#package-miskexceptionsdynamodb","title":"Package misk.exceptions.dynamodb","text":""},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/#types","title":"Types","text":"Name Summary ClientExecutionTimeoutExceptionMapper [jvm]class ClientExecutionTimeoutExceptionMapper@Injectconstructor : ExceptionMapper&lt;ClientExecutionTimeoutException&gt; Maps ClientExecutionTimeoutException to 503 responses because the exception is concurrency related DynamoDbExceptionMapperModule [jvm]class DynamoDbExceptionMapperModule : KAbstractModule TransactionCanceledExceptionMapper [jvm]class TransactionCanceledExceptionMapper@Injectconstructor : ExceptionMapper&lt;TransactionCanceledException&gt; Maps certain TransactionCanceledExceptionMapper to 503 responses when the exception is concurrency related"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-client-execution-timeout-exception-mapper/","title":"ClientExecutionTimeoutExceptionMapper - Misk","text":"<p>//misk-exceptions-dynamodb/misk.exceptions.dynamodb/ClientExecutionTimeoutExceptionMapper</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-client-execution-timeout-exception-mapper/#clientexecutiontimeoutexceptionmapper","title":"ClientExecutionTimeoutExceptionMapper","text":"<p>[jvm]\\ class ClientExecutionTimeoutExceptionMapper@Injectconstructor : ExceptionMapper&lt;ClientExecutionTimeoutException&gt; </p> <p>Maps ClientExecutionTimeoutException to 503 responses because the exception is concurrency related</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-client-execution-timeout-exception-mapper/#constructors","title":"Constructors","text":"ClientExecutionTimeoutExceptionMapper [jvm]@Injectfun ClientExecutionTimeoutExceptionMapper()"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-client-execution-timeout-exception-mapper/#functions","title":"Functions","text":"Name Summary loggingLevel [jvm]open fun loggingLevel(th: ClientExecutionTimeoutException): Level toGrpcResponse [jvm]open fun toGrpcResponse(th: ClientExecutionTimeoutException): GrpcErrorResponse? toResponse [jvm]open override fun toResponse(th: ClientExecutionTimeoutException): Response&lt;ResponseBody&gt;"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-client-execution-timeout-exception-mapper/-client-execution-timeout-exception-mapper/","title":"ClientExecutionTimeoutExceptionMapper - Misk","text":"<p>//misk-exceptions-dynamodb/misk.exceptions.dynamodb/ClientExecutionTimeoutExceptionMapper/ClientExecutionTimeoutExceptionMapper</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-client-execution-timeout-exception-mapper/-client-execution-timeout-exception-mapper/#clientexecutiontimeoutexceptionmapper","title":"ClientExecutionTimeoutExceptionMapper","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ClientExecutionTimeoutExceptionMapper()</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-client-execution-timeout-exception-mapper/to-response/","title":"toResponse - Misk","text":"<p>//misk-exceptions-dynamodb/misk.exceptions.dynamodb/ClientExecutionTimeoutExceptionMapper/toResponse</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-client-execution-timeout-exception-mapper/to-response/#toresponse","title":"toResponse","text":"<p>[jvm]\\ open override fun toResponse(th: ClientExecutionTimeoutException): Response&lt;ResponseBody&gt;</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-dynamo-db-exception-mapper-module/","title":"DynamoDbExceptionMapperModule - Misk","text":"<p>//misk-exceptions-dynamodb/misk.exceptions.dynamodb/DynamoDbExceptionMapperModule</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-dynamo-db-exception-mapper-module/#dynamodbexceptionmappermodule","title":"DynamoDbExceptionMapperModule","text":"<p>[jvm]\\ class DynamoDbExceptionMapperModule : KAbstractModule</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-dynamo-db-exception-mapper-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-dynamo-db-exception-mapper-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-dynamo-db-exception-mapper-module/-dynamo-db-exception-mapper-module/","title":"DynamoDbExceptionMapperModule - Misk","text":"<p>//misk-exceptions-dynamodb/misk.exceptions.dynamodb/DynamoDbExceptionMapperModule/DynamoDbExceptionMapperModule</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-dynamo-db-exception-mapper-module/-dynamo-db-exception-mapper-module/#dynamodbexceptionmappermodule","title":"DynamoDbExceptionMapperModule","text":"<p>[jvm]\\ fun DynamoDbExceptionMapperModule()</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-transaction-canceled-exception-mapper/","title":"TransactionCanceledExceptionMapper - Misk","text":"<p>//misk-exceptions-dynamodb/misk.exceptions.dynamodb/TransactionCanceledExceptionMapper</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-transaction-canceled-exception-mapper/#transactioncanceledexceptionmapper","title":"TransactionCanceledExceptionMapper","text":"<p>[jvm]\\ class TransactionCanceledExceptionMapper@Injectconstructor : ExceptionMapper&lt;TransactionCanceledException&gt; </p> <p>Maps certain TransactionCanceledExceptionMapper to 503 responses when the exception is concurrency related</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-transaction-canceled-exception-mapper/#constructors","title":"Constructors","text":"TransactionCanceledExceptionMapper [jvm]@Injectfun TransactionCanceledExceptionMapper()"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-transaction-canceled-exception-mapper/#functions","title":"Functions","text":"Name Summary loggingLevel [jvm]open override fun loggingLevel(th: TransactionCanceledException): Level toGrpcResponse [jvm]open fun toGrpcResponse(th: TransactionCanceledException): GrpcErrorResponse? toResponse [jvm]open override fun toResponse(th: TransactionCanceledException): Response&lt;ResponseBody&gt;"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-transaction-canceled-exception-mapper/-transaction-canceled-exception-mapper/","title":"TransactionCanceledExceptionMapper - Misk","text":"<p>//misk-exceptions-dynamodb/misk.exceptions.dynamodb/TransactionCanceledExceptionMapper/TransactionCanceledExceptionMapper</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-transaction-canceled-exception-mapper/-transaction-canceled-exception-mapper/#transactioncanceledexceptionmapper","title":"TransactionCanceledExceptionMapper","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun TransactionCanceledExceptionMapper()</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-transaction-canceled-exception-mapper/logging-level/","title":"loggingLevel - Misk","text":"<p>//misk-exceptions-dynamodb/misk.exceptions.dynamodb/TransactionCanceledExceptionMapper/loggingLevel</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-transaction-canceled-exception-mapper/logging-level/#logginglevel","title":"loggingLevel","text":"<p>[jvm]\\ open override fun loggingLevel(th: TransactionCanceledException): Level</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-transaction-canceled-exception-mapper/to-response/","title":"toResponse - Misk","text":"<p>//misk-exceptions-dynamodb/misk.exceptions.dynamodb/TransactionCanceledExceptionMapper/toResponse</p>"},{"location":"0.x/misk-exceptions-dynamodb/misk-exceptions-dynamodb/misk.exceptions.dynamodb/-transaction-canceled-exception-mapper/to-response/#toresponse","title":"toResponse","text":"<p>[jvm]\\ open override fun toResponse(th: TransactionCanceledException): Response&lt;ResponseBody&gt;</p>"},{"location":"0.x/misk-feature/","title":"misk-feature - Misk","text":"<p>//misk-feature</p>"},{"location":"0.x/misk-feature/#misk-feature","title":"misk-feature","text":""},{"location":"0.x/misk-feature/#packages","title":"Packages","text":"Name misk.feature"},{"location":"0.x/misk-feature/misk-feature/misk.feature/","title":"Package misk.feature - Misk","text":"<p>//misk-feature/misk.feature</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/#package-miskfeature","title":"Package misk.feature","text":""},{"location":"0.x/misk-feature/misk-feature/misk.feature/#types","title":"Types","text":"Name Summary Attributes [jvm]class Attributes@JvmOverloadsconstructor(text: Map&lt;String, String&gt;, number: Map&lt;String, Number&gt;?, anonymous: Boolean) : Attributes DynamicConfig [jvm]interface DynamicConfigInterface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys. Feature [jvm]class Feature(name: String) : Feature FeatureFlags [jvm]interface FeatureFlagsInterface for evaluating feature flags. FeatureService [jvm]interface FeatureService : ServiceMarker interface to integrate with the misk service graph. TrackerReference [jvm]interface TrackerReference : TrackerReference"},{"location":"0.x/misk-feature/misk-feature/misk.feature/#functions","title":"Functions","text":"Name Summary getEnum [jvm]inline fun &lt;T : Enum&lt;T&gt;&gt; DynamicConfig.getEnum(feature: Feature): Tinline fun &lt;T : Enum&lt;T&gt;&gt; FeatureFlags.getEnum(feature: Feature, key: String, attributes: Attributes = Attributes()): T getJson [jvm]inline fun &lt;T&gt; DynamicConfig.getJson(feature: Feature): Tinline fun &lt;T&gt; FeatureFlags.getJson(feature: Feature, key: String, attributes: Attributes = Attributes()): T toMisk [jvm]fun TrackerReference.toMisk(): TrackerReference trackEnum [jvm]inline fun &lt;T : Enum&lt;T&gt;&gt; DynamicConfig.trackEnum(feature: Feature, executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReferenceinline fun &lt;T : Enum&lt;T&gt;&gt; FeatureFlags.trackEnum(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference trackJson [jvm]inline fun &lt;T&gt; DynamicConfig.trackJson(feature: Feature, executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReferenceinline fun &lt;T&gt; FeatureFlags.trackJson(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference"},{"location":"0.x/misk-feature/misk-feature/misk.feature/get-enum/","title":"getEnum - Misk","text":"<p>//misk-feature/misk.feature/getEnum</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/get-enum/#getenum","title":"getEnum","text":"<p>[jvm]\\ inline fun &lt;T : Enum&lt;T&gt;&gt; DynamicConfig.getEnum(feature: Feature): T</p> <p>inline fun &lt;T : Enum&lt;T&gt;&gt; FeatureFlags.getEnum(feature: Feature, key: String, attributes: Attributes = Attributes()): T</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/get-json/","title":"getJson - Misk","text":"<p>//misk-feature/misk.feature/getJson</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/get-json/#getjson","title":"getJson","text":"<p>[jvm]\\ inline fun &lt;T&gt; DynamicConfig.getJson(feature: Feature): T</p> <p>inline fun &lt;T&gt; FeatureFlags.getJson(feature: Feature, key: String, attributes: Attributes = Attributes()): T</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/to-misk/","title":"toMisk - Misk","text":"<p>//misk-feature/misk.feature/toMisk</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/to-misk/#tomisk","title":"toMisk","text":"<p>[jvm]\\ fun TrackerReference.toMisk(): TrackerReference</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/track-enum/","title":"trackEnum - Misk","text":"<p>//misk-feature/misk.feature/trackEnum</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/track-enum/#trackenum","title":"trackEnum","text":"<p>[jvm]\\ inline fun &lt;T : Enum&lt;T&gt;&gt; DynamicConfig.trackEnum(feature: Feature, executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference</p> <p>inline fun &lt;T : Enum&lt;T&gt;&gt; FeatureFlags.trackEnum(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/track-json/","title":"trackJson - Misk","text":"<p>//misk-feature/misk.feature/trackJson</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/track-json/#trackjson","title":"trackJson","text":"<p>[jvm]\\ inline fun &lt;T&gt; DynamicConfig.trackJson(feature: Feature, executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference</p> <p>inline fun &lt;T&gt; FeatureFlags.trackJson(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-attributes/","title":"Attributes - Misk","text":"<p>//misk-feature/misk.feature/Attributes</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-attributes/#attributes","title":"Attributes","text":"<p>[jvm]\\ class Attributes@JvmOverloadsconstructor(text: Map&lt;String, String&gt;, number: Map&lt;String, Number&gt;?, anonymous: Boolean) : Attributes</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-attributes/#functions","title":"Functions","text":"Name Summary copy [jvm]fun copy(text: Map&lt;String, String&gt;, number: Map&lt;String, Number&gt;?, anonymous: Boolean): Attributes equals [jvm]open operator override fun equals(other: Any?): Boolean hashCode [jvm]open override fun hashCode(): Int toString [jvm]open override fun toString(): String with [jvm]fun with(name: String, value: Number): Attributesfun with(name: String, value: String): Attributes"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-attributes/#properties","title":"Properties","text":"Name Summary anonymous [jvm]val anonymous: Boolean number [jvm]val number: Map&lt;String, Number&gt;? text [jvm]val text: Map&lt;String, String&gt;"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-attributes/-attributes/","title":"Attributes - Misk","text":"<p>//misk-feature/misk.feature/Attributes/Attributes</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-attributes/-attributes/#attributes","title":"Attributes","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun Attributes(text: Map&lt;String, String&gt; = mapOf(), number: Map&lt;String, Number&gt;? = null, anonymous: Boolean = false)</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/","title":"DynamicConfig - Misk","text":"<p>//misk-feature/misk.feature/DynamicConfig</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/#dynamicconfig","title":"DynamicConfig","text":"<p>[jvm]\\ interface DynamicConfig</p> <p>Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/#functions","title":"Functions","text":"Name Summary getBoolean [jvm]abstract fun getBoolean(feature: Feature): BooleanReturns the value of a boolean dynamic flag. getDouble [jvm]abstract fun getDouble(feature: Feature): DoubleReturns the value of a double dynamic flag. getEnum [jvm]abstract fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, clazz: Class&lt;T&gt;): TReturns the value of an enumerated dynamic flag. getInt [jvm]abstract fun getInt(feature: Feature): IntReturns the value of an integer dynamic flag. getJson [jvm]abstract fun &lt;T&gt; getJson(feature: Feature, clazz: Class&lt;T&gt;): TReturns the value of a JSON dynamic flag. getString [jvm]abstract fun getString(feature: Feature): StringReturns the value of a string dynamic flag. trackBoolean [jvm]abstract fun trackBoolean(feature: Feature, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReferenceRegisters a boolean dynamic config tracker which will be invoked whenever the boolean dynamic config changes value. trackDouble [jvm]abstract fun trackDouble(feature: Feature, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReferenceRegisters a double dynamic config tracker which will be invoked whenever the double dynamic config changes value. trackEnum [jvm]abstract fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceRegisters a enum dynamic config tracker which will be invoked whenever the enum dynamic config changes value. trackInt [jvm]abstract fun trackInt(feature: Feature, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReferenceRegisters a integer dynamic config tracker which will be invoked whenever the integer dynamic config changes value. trackJson [jvm]abstract fun &lt;T&gt; trackJson(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceRegisters a json dynamic config tracker which will be invoked whenever the json dynamic config changes value. trackString [jvm]abstract fun trackString(feature: Feature, executor: Executor, tracker: (String) -&gt; Unit): TrackerReferenceRegisters a string dynamic config tracker which will be invoked whenever the string dynamic config changes value."},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/#extensions","title":"Extensions","text":"Name Summary getEnum [jvm]inline fun &lt;T : Enum&lt;T&gt;&gt; DynamicConfig.getEnum(feature: Feature): T getJson [jvm]inline fun &lt;T&gt; DynamicConfig.getJson(feature: Feature): T trackEnum [jvm]inline fun &lt;T : Enum&lt;T&gt;&gt; DynamicConfig.trackEnum(feature: Feature, executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference trackJson [jvm]inline fun &lt;T&gt; DynamicConfig.trackJson(feature: Feature, executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/get-boolean/","title":"getBoolean - Misk","text":"<p>//misk-feature/misk.feature/DynamicConfig/getBoolean</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/get-boolean/#getboolean","title":"getBoolean","text":"<p>[jvm]\\ abstract fun getBoolean(feature: Feature): Boolean</p> <p>Returns the value of a boolean dynamic flag.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/get-double/","title":"getDouble - Misk","text":"<p>//misk-feature/misk.feature/DynamicConfig/getDouble</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/get-double/#getdouble","title":"getDouble","text":"<p>[jvm]\\ abstract fun getDouble(feature: Feature): Double</p> <p>Returns the value of a double dynamic flag.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/get-enum/","title":"getEnum - Misk","text":"<p>//misk-feature/misk.feature/DynamicConfig/getEnum</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/get-enum/#getenum","title":"getEnum","text":"<p>[jvm]\\ abstract fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, clazz: Class&lt;T&gt;): T</p> <p>Returns the value of an enumerated dynamic flag.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/get-int/","title":"getInt - Misk","text":"<p>//misk-feature/misk.feature/DynamicConfig/getInt</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/get-int/#getint","title":"getInt","text":"<p>[jvm]\\ abstract fun getInt(feature: Feature): Int</p> <p>Returns the value of an integer dynamic flag.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/get-json/","title":"getJson - Misk","text":"<p>//misk-feature/misk.feature/DynamicConfig/getJson</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/get-json/#getjson","title":"getJson","text":"<p>[jvm]\\ abstract fun &lt;T&gt; getJson(feature: Feature, clazz: Class&lt;T&gt;): T</p> <p>Returns the value of a JSON dynamic flag.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/get-string/","title":"getString - Misk","text":"<p>//misk-feature/misk.feature/DynamicConfig/getString</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/get-string/#getstring","title":"getString","text":"<p>[jvm]\\ abstract fun getString(feature: Feature): String</p> <p>Returns the value of a string dynamic flag.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/track-boolean/","title":"trackBoolean - Misk","text":"<p>//misk-feature/misk.feature/DynamicConfig/trackBoolean</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/track-boolean/#trackboolean","title":"trackBoolean","text":"<p>[jvm]\\ abstract fun trackBoolean(feature: Feature, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference</p> <p>Registers a boolean dynamic config tracker which will be invoked whenever the boolean dynamic config changes value.</p> <p>Returns a tracker reference which can be used to un-register the tracker.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/track-double/","title":"trackDouble - Misk","text":"<p>//misk-feature/misk.feature/DynamicConfig/trackDouble</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/track-double/#trackdouble","title":"trackDouble","text":"<p>[jvm]\\ abstract fun trackDouble(feature: Feature, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference</p> <p>Registers a double dynamic config tracker which will be invoked whenever the double dynamic config changes value.</p> <p>Returns a tracker reference which can be used to un-register the tracker.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/track-enum/","title":"trackEnum - Misk","text":"<p>//misk-feature/misk.feature/DynamicConfig/trackEnum</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/track-enum/#trackenum","title":"trackEnum","text":"<p>[jvm]\\ abstract fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p> <p>Registers a enum dynamic config tracker which will be invoked whenever the enum dynamic config changes value.</p> <p>Returns a tracker reference which can be used to un-register the tracker.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/track-int/","title":"trackInt - Misk","text":"<p>//misk-feature/misk.feature/DynamicConfig/trackInt</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/track-int/#trackint","title":"trackInt","text":"<p>[jvm]\\ abstract fun trackInt(feature: Feature, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference</p> <p>Registers a integer dynamic config tracker which will be invoked whenever the integer dynamic config changes value.</p> <p>Returns a tracker reference which can be used to un-register the tracker.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/track-json/","title":"trackJson - Misk","text":"<p>//misk-feature/misk.feature/DynamicConfig/trackJson</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/track-json/#trackjson","title":"trackJson","text":"<p>[jvm]\\ abstract fun &lt;T&gt; trackJson(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p> <p>Registers a json dynamic config tracker which will be invoked whenever the json dynamic config changes value.</p> <p>Returns a tracker reference which can be used to un-register the tracker.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/track-string/","title":"trackString - Misk","text":"<p>//misk-feature/misk.feature/DynamicConfig/trackString</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-dynamic-config/track-string/#trackstring","title":"trackString","text":"<p>[jvm]\\ abstract fun trackString(feature: Feature, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference</p> <p>Registers a string dynamic config tracker which will be invoked whenever the string dynamic config changes value.</p> <p>Returns a tracker reference which can be used to un-register the tracker.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature/","title":"Feature - Misk","text":"<p>//misk-feature/misk.feature/Feature</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature/#feature","title":"Feature","text":"<p>[jvm]\\ class Feature(name: String) : Feature</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature/#functions","title":"Functions","text":"Name Summary equals [jvm]open operator override fun equals(other: Any?): Boolean hashCode [jvm]open override fun hashCode(): Int toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature/-feature/","title":"Feature - Misk","text":"<p>//misk-feature/misk.feature/Feature/Feature</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature/-feature/#feature","title":"Feature","text":"<p>[jvm]\\ fun Feature(name: String)</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/","title":"FeatureFlags - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/#featureflags","title":"FeatureFlags","text":"<p>[jvm]\\ interface FeatureFlags</p> <p>Interface for evaluating feature flags.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/#functions","title":"Functions","text":"Name Summary get [jvm]abstract fun get(flag: BooleanFeatureFlag): BooleanCalculates the value of a boolean feature flag[jvm]abstract fun get(flag: DoubleFeatureFlag): DoubleCalculates the value of a double feature flag[jvm]abstract fun &lt;T : Enum&lt;T&gt;&gt; get(flag: EnumFeatureFlag&lt;T&gt;): TCalculates the value of an enum feature flag[jvm]abstract fun get(flag: IntFeatureFlag): IntCalculates the value of an int feature flag[jvm]abstract fun &lt;T : Any&gt; get(flag: JsonFeatureFlag&lt;T&gt;): TCalculates the value of a json feature flag[jvm]abstract fun get(flag: StringFeatureFlag): StringCalculates the value of a string feature flag getBoolean [jvm]open fun getBoolean(feature: Feature, key: String): Boolean[jvm]abstract fun getBoolean(feature: Feature, key: String, attributes: Attributes = Attributes()): BooleanCalculates the value of an boolean feature flag for the given key and attributes. getDouble [jvm]open fun getDouble(feature: Feature, key: String): Double[jvm]abstract fun getDouble(feature: Feature, key: String, attributes: Attributes = Attributes()): DoubleCalculates the value of a double feature flag for the given key and attributes. getEnum [jvm]open fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;): T[jvm]abstract fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes()): TCalculates the value of an enumerated feature flag for the given key and attributes. getInt [jvm]open fun getInt(feature: Feature, key: String): Int[jvm]abstract fun getInt(feature: Feature, key: String, attributes: Attributes = Attributes()): IntCalculates the value of an integer feature flag for the given key and attributes. getJson [jvm]open fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;): T[jvm]abstract fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes()): TCalculates the value of a JSON feature flag for the given key and attributes. getString [jvm]open fun getString(feature: Feature, key: String): String[jvm]abstract fun getString(feature: Feature, key: String, attributes: Attributes = Attributes()): StringCalculates the value of a string feature flag for the given key and attributes. trackBoolean [jvm]open fun trackBoolean(feature: Feature, key: String, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference[jvm]abstract fun trackBoolean(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of a boolean feature flag for the given key and attributes. trackDouble [jvm]open fun trackDouble(feature: Feature, key: String, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference[jvm]abstract fun trackDouble(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Double) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of a double feature flag for the given key and attributes. trackEnum [jvm]open fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference[jvm]abstract fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes(), executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of an enumerated feature flag for the given key and attributes. trackInt [jvm]open fun trackInt(feature: Feature, key: String, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference[jvm]abstract fun trackInt(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Int) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of an integer feature flag for the given key and attributes. trackJson [jvm]open fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference[jvm]abstract fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes(), executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of a JSON feature flag for the given key and attributes. trackString [jvm]open fun trackString(feature: Feature, key: String, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference[jvm]abstract fun trackString(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (String) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of a string feature flag for the given key and attributes."},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/#extensions","title":"Extensions","text":"Name Summary getEnum [jvm]inline fun &lt;T : Enum&lt;T&gt;&gt; FeatureFlags.getEnum(feature: Feature, key: String, attributes: Attributes = Attributes()): T getJson [jvm]inline fun &lt;T&gt; FeatureFlags.getJson(feature: Feature, key: String, attributes: Attributes = Attributes()): T trackEnum [jvm]inline fun &lt;T : Enum&lt;T&gt;&gt; FeatureFlags.trackEnum(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference trackJson [jvm]inline fun &lt;T&gt; FeatureFlags.trackJson(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-boolean/","title":"getBoolean - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags/getBoolean</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-boolean/#getboolean","title":"getBoolean","text":"<p>[jvm]\\ abstract fun getBoolean(feature: Feature, key: String, attributes: Attributes = Attributes()): Boolean</p> <p>Calculates the value of an boolean feature flag for the given key and attributes.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-boolean/#see-also","title":"See also","text":"<p>jvm</p> misk.feature.FeatureFlags for param details <p>[jvm]\\ open fun getBoolean(feature: Feature, key: String): Boolean</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-double/","title":"getDouble - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags/getDouble</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-double/#getdouble","title":"getDouble","text":"<p>[jvm]\\ abstract fun getDouble(feature: Feature, key: String, attributes: Attributes = Attributes()): Double</p> <p>Calculates the value of a double feature flag for the given key and attributes.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-double/#see-also","title":"See also","text":"<p>jvm</p> misk.feature.FeatureFlags for param details <p>[jvm]\\ open fun getDouble(feature: Feature, key: String): Double</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-enum/","title":"getEnum - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags/getEnum</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-enum/#getenum","title":"getEnum","text":"<p>[jvm]\\ abstract fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes()): T</p> <p>Calculates the value of an enumerated feature flag for the given key and attributes.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-enum/#parameters","title":"Parameters","text":"<p>jvm</p> feature name of the feature flag to evaluate. key unique primary key for the entity the flag should be evaluated against. clazz the enum type. attributes additional attributes to provide to flag evaluation."},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-enum/#throws","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. java.lang.IllegalStateException if the flag is off with no default value. <p>[jvm]\\ open fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;): T</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-int/","title":"getInt - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags/getInt</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-int/#getint","title":"getInt","text":"<p>[jvm]\\ abstract fun getInt(feature: Feature, key: String, attributes: Attributes = Attributes()): Int</p> <p>Calculates the value of an integer feature flag for the given key and attributes.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-int/#see-also","title":"See also","text":"<p>jvm</p> misk.feature.FeatureFlags for param details <p>[jvm]\\ open fun getInt(feature: Feature, key: String): Int</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-json/","title":"getJson - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags/getJson</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-json/#getjson","title":"getJson","text":"<p>[jvm]\\ abstract fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes()): T</p> <p>Calculates the value of a JSON feature flag for the given key and attributes.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-json/#see-also","title":"See also","text":"<p>jvm</p> misk.feature.FeatureFlags for param details"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-json/#parameters","title":"Parameters","text":"<p>jvm</p> clazz the type to convert the JSON string into. It is expected that a Moshi type adapter is registered with the impl. <p>[jvm]\\ open fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;): T</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-string/","title":"getString - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags/getString</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-string/#getstring","title":"getString","text":"<p>[jvm]\\ abstract fun getString(feature: Feature, key: String, attributes: Attributes = Attributes()): String</p> <p>Calculates the value of a string feature flag for the given key and attributes.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get-string/#see-also","title":"See also","text":"<p>jvm</p> misk.feature.FeatureFlags for param details <p>[jvm]\\ open fun getString(feature: Feature, key: String): String</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/","title":"get - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags/get</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/#get","title":"get","text":"<p>[jvm]\\ abstract fun get(flag: BooleanFeatureFlag): Boolean</p> <p>Calculates the value of a boolean feature flag</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/#parameters","title":"Parameters","text":"<p>jvm</p> flag the feature flag to evaluate"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/#throws","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. <p>[jvm]\\ abstract fun get(flag: StringFeatureFlag): String</p> <p>Calculates the value of a string feature flag</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/#parameters_1","title":"Parameters","text":"<p>jvm</p> flag the feature flag to evaluate"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/#throws_1","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. <p>[jvm]\\ abstract fun get(flag: IntFeatureFlag): Int</p> <p>Calculates the value of an int feature flag</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/#parameters_2","title":"Parameters","text":"<p>jvm</p> flag the feature flag to evaluate"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/#throws_2","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. <p>[jvm]\\ abstract fun get(flag: DoubleFeatureFlag): Double</p> <p>Calculates the value of a double feature flag</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/#parameters_3","title":"Parameters","text":"<p>jvm</p> flag the feature flag to evaluate"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/#throws_3","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. <p>[jvm]\\ abstract fun &lt;T : Enum&lt;T&gt;&gt; get(flag: EnumFeatureFlag&lt;T&gt;): T</p> <p>Calculates the value of an enum feature flag</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/#parameters_4","title":"Parameters","text":"<p>jvm</p> flag the feature flag to evaluate"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/#throws_4","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. java.lang.IllegalStateException if the flag is off with no default value. <p>[jvm]\\ abstract fun &lt;T : Any&gt; get(flag: JsonFeatureFlag&lt;T&gt;): T</p> <p>Calculates the value of a json feature flag</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/#parameters_5","title":"Parameters","text":"<p>jvm</p> flag the feature flag to evaluate"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/get/#throws_5","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. java.lang.IllegalStateException if the flag is off with no default value."},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-boolean/","title":"trackBoolean - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags/trackBoolean</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-boolean/#trackboolean","title":"trackBoolean","text":"<p>[jvm]\\ abstract fun trackBoolean(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference</p> <p>Registers a tracker for the value of a boolean feature flag for the given key and attributes.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-boolean/#see-also","title":"See also","text":"<p>jvm</p> misk.feature.FeatureFlags for param details <p>[jvm]\\ open fun trackBoolean(feature: Feature, key: String, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-double/","title":"trackDouble - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags/trackDouble</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-double/#trackdouble","title":"trackDouble","text":"<p>[jvm]\\ abstract fun trackDouble(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference</p> <p>Registers a tracker for the value of a double feature flag for the given key and attributes.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-double/#see-also","title":"See also","text":"<p>jvm</p> misk.feature.FeatureFlags for param details <p>[jvm]\\ open fun trackDouble(feature: Feature, key: String, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-enum/","title":"trackEnum - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags/trackEnum</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-enum/#trackenum","title":"trackEnum","text":"<p>[jvm]\\ abstract fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes(), executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p> <p>Registers a tracker for the value of an enumerated feature flag for the given key and attributes.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-enum/#return","title":"Return","text":"<p>a reference to the registered tracker allowing to un-register it</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-enum/#parameters","title":"Parameters","text":"<p>jvm</p> feature name of the feature flag to evaluate. key unique primary key for the entity the flag should be evaluated against. clazz the enum type. attributes additional attributes to provide to flag evaluation. tracker a tracker to be registered for processing of changed values"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-enum/#throws","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. java.lang.IllegalStateException if the flag is off with no default value. <p>[jvm]\\ open fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-int/","title":"trackInt - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags/trackInt</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-int/#trackint","title":"trackInt","text":"<p>[jvm]\\ abstract fun trackInt(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference</p> <p>Registers a tracker for the value of an integer feature flag for the given key and attributes.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-int/#see-also","title":"See also","text":"<p>jvm</p> misk.feature.FeatureFlags for param details <p>[jvm]\\ open fun trackInt(feature: Feature, key: String, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-json/","title":"trackJson - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags/trackJson</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-json/#trackjson","title":"trackJson","text":"<p>[jvm]\\ abstract fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes(), executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p> <p>Registers a tracker for the value of a JSON feature flag for the given key and attributes.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-json/#see-also","title":"See also","text":"<p>jvm</p> misk.feature.FeatureFlags for param details"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-json/#parameters","title":"Parameters","text":"<p>jvm</p> clazz the type to convert the JSON string into. It is expected that a Moshi type adapter is registered with the impl. <p>[jvm]\\ open fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-string/","title":"trackString - Misk","text":"<p>//misk-feature/misk.feature/FeatureFlags/trackString</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-string/#trackstring","title":"trackString","text":"<p>[jvm]\\ abstract fun trackString(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (String) -&gt; Unit): TrackerReference</p> <p>Registers a tracker for the value of a string feature flag for the given key and attributes.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-flags/track-string/#see-also","title":"See also","text":"<p>jvm</p> misk.feature.FeatureFlags for param details <p>[jvm]\\ open fun trackString(feature: Feature, key: String, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-service/","title":"FeatureService - Misk","text":"<p>//misk-feature/misk.feature/FeatureService</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-service/#featureservice","title":"FeatureService","text":"<p>[jvm]\\ interface FeatureService : Service</p> <p>Marker interface to integrate with the misk service graph.</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-feature-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]abstract fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]abstract fun awaitRunning()open fun awaitRunning(timeout: Duration)abstract fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]abstract fun awaitTerminated()open fun awaitTerminated(timeout: Duration)abstract fun awaitTerminated(timeout: Long, unit: TimeUnit) failureCause [jvm]abstract fun failureCause(): Throwable isRunning [jvm]abstract fun isRunning(): Boolean startAsync [jvm]@CanIgnoreReturnValueabstract fun startAsync(): Service state [jvm]abstract fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueabstract fun stopAsync(): Service"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-tracker-reference/","title":"TrackerReference - Misk","text":"<p>//misk-feature/misk.feature/TrackerReference</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-tracker-reference/#trackerreference","title":"TrackerReference","text":"<p>[jvm]\\ interface TrackerReference : TrackerReference</p>"},{"location":"0.x/misk-feature/misk-feature/misk.feature/-tracker-reference/#functions","title":"Functions","text":"Name Summary unregister [jvm]abstract fun unregister()"},{"location":"0.x/misk-gcp/","title":"misk-gcp - Misk","text":"<p>//misk-gcp</p>"},{"location":"0.x/misk-gcp/#misk-gcp","title":"misk-gcp","text":""},{"location":"0.x/misk-gcp/#packages","title":"Packages","text":"Name misk.cloud.gcp misk.cloud.gcp.datastore misk.cloud.gcp.logging misk.cloud.gcp.security.keys misk.cloud.gcp.spanner misk.cloud.gcp.storage misk.cloud.gcp.tracing misk.logging"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/","title":"Package misk.cloud.gcp - Misk","text":"<p>//misk-gcp/misk.cloud.gcp</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/#package-miskcloudgcp","title":"Package misk.cloud.gcp","text":""},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/#types","title":"Types","text":"Name Summary GoogleCloudModule [jvm]class GoogleCloudModule(datastoreConfig: DatastoreConfig, storageConfig: StorageConfig) : KAbstractModuleInstalls support for talking to real GCP services, either direct or via emulator TransportConfig [jvm]data class TransportConfig@JvmOverloadsconstructor(connect_timeout_ms: Int, read_timeout_ms: Int, host: String?)Transport configuration for GCP services."},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-google-cloud-module/","title":"GoogleCloudModule - Misk","text":"<p>//misk-gcp/misk.cloud.gcp/GoogleCloudModule</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-google-cloud-module/#googlecloudmodule","title":"GoogleCloudModule","text":"<p>[jvm]\\ class GoogleCloudModule(datastoreConfig: DatastoreConfig, storageConfig: StorageConfig) : KAbstractModule</p> <p>Installs support for talking to real GCP services, either direct or via emulator</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-google-cloud-module/#constructors","title":"Constructors","text":"GoogleCloudModule [jvm]fun GoogleCloudModule(datastoreConfig: DatastoreConfig, storageConfig: StorageConfig)"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-google-cloud-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideCloudDatastore [jvm]@Provides@Singletonfun provideCloudDatastore(credentials: Credentials, config: DatastoreConfig): Datastore provideCloudStorage [jvm]@Provides@Singletonfun provideCloudStorage(credentials: Credentials, config: StorageConfig): Storage provideServiceCredentials [jvm]@Provides@Singletonfun provideServiceCredentials(deployment: Deployment): Credentials requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-google-cloud-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-google-cloud-module/-google-cloud-module/","title":"GoogleCloudModule - Misk","text":"<p>//misk-gcp/misk.cloud.gcp/GoogleCloudModule/GoogleCloudModule</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-google-cloud-module/-google-cloud-module/#googlecloudmodule","title":"GoogleCloudModule","text":"<p>[jvm]\\ fun GoogleCloudModule(datastoreConfig: DatastoreConfig, storageConfig: StorageConfig)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-google-cloud-module/provide-cloud-datastore/","title":"provideCloudDatastore - Misk","text":"<p>//misk-gcp/misk.cloud.gcp/GoogleCloudModule/provideCloudDatastore</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-google-cloud-module/provide-cloud-datastore/#provideclouddatastore","title":"provideCloudDatastore","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideCloudDatastore(credentials: Credentials, config: DatastoreConfig): Datastore</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-google-cloud-module/provide-cloud-storage/","title":"provideCloudStorage - Misk","text":"<p>//misk-gcp/misk.cloud.gcp/GoogleCloudModule/provideCloudStorage</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-google-cloud-module/provide-cloud-storage/#providecloudstorage","title":"provideCloudStorage","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideCloudStorage(credentials: Credentials, config: StorageConfig): Storage</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-google-cloud-module/provide-service-credentials/","title":"provideServiceCredentials - Misk","text":"<p>//misk-gcp/misk.cloud.gcp/GoogleCloudModule/provideServiceCredentials</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-google-cloud-module/provide-service-credentials/#provideservicecredentials","title":"provideServiceCredentials","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideServiceCredentials(deployment: Deployment): Credentials</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-transport-config/","title":"TransportConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp/TransportConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-transport-config/#transportconfig","title":"TransportConfig","text":"<p>[jvm]\\ data class TransportConfig@JvmOverloadsconstructor(connect_timeout_ms: Int, read_timeout_ms: Int, host: String?)</p> <p>Transport configuration for GCP services.</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-transport-config/#constructors","title":"Constructors","text":"TransportConfig [jvm]@JvmOverloadsfun TransportConfig(connect_timeout_ms: Int = -1, read_timeout_ms: Int = -1, host: String? = null)"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-transport-config/#properties","title":"Properties","text":"Name Summary connect_timeout_ms [jvm]val connect_timeout_ms: Int host [jvm]val host: String? = null read_timeout_ms [jvm]val read_timeout_ms: Int"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-transport-config/-transport-config/","title":"TransportConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp/TransportConfig/TransportConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-transport-config/-transport-config/#transportconfig","title":"TransportConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun TransportConfig(connect_timeout_ms: Int = -1, read_timeout_ms: Int = -1, host: String? = null)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-transport-config/connect_timeout_ms/","title":"connect_timeout_ms - Misk","text":"<p>//misk-gcp/misk.cloud.gcp/TransportConfig/connect_timeout_ms</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-transport-config/connect_timeout_ms/#connect_timeout_ms","title":"connect_timeout_ms","text":"<p>[jvm]\\ val connect_timeout_ms: Int</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-transport-config/host/","title":"host - Misk","text":"<p>//misk-gcp/misk.cloud.gcp/TransportConfig/host</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-transport-config/host/#host","title":"host","text":"<p>[jvm]\\ val host: String? = null</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-transport-config/read_timeout_ms/","title":"read_timeout_ms - Misk","text":"<p>//misk-gcp/misk.cloud.gcp/TransportConfig/read_timeout_ms</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp/-transport-config/read_timeout_ms/#read_timeout_ms","title":"read_timeout_ms","text":"<p>[jvm]\\ val read_timeout_ms: Int</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/","title":"Package misk.cloud.gcp.datastore - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.datastore</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/#package-miskcloudgcpdatastore","title":"Package misk.cloud.gcp.datastore","text":""},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/#types","title":"Types","text":"Name Summary DatastoreConfig [jvm]data class DatastoreConfig@JvmOverloadsconstructor(transport: TransportConfig) : ConfigConfiguration for talking to Google datastore Keys [jvm]object Keys"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/#functions","title":"Functions","text":"Name Summary asList [jvm]fun &lt;T&gt; QueryResults&lt;T&gt;.asList(): List&lt;T&gt; getByteString [jvm]fun Entity.getByteString(name: String): ByteString getProto [jvm]fun &lt;T&gt; Entity.getProto(name: String, protoAdapter: ProtoAdapter&lt;T&gt;): T set [jvm]fun Entity.Builder.set(name: String, bytes: ByteString): Entity.Builder toByteString [jvm]fun Blob.toByteString(): ByteString"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/as-list/","title":"asList - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.datastore/asList</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/as-list/#aslist","title":"asList","text":"<p>[jvm]\\ fun &lt;T&gt; QueryResults&lt;T&gt;.asList(): List&lt;T&gt;</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/get-byte-string/","title":"getByteString - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.datastore/getByteString</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/get-byte-string/#getbytestring","title":"getByteString","text":"<p>[jvm]\\ fun Entity.getByteString(name: String): ByteString</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/get-proto/","title":"getProto - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.datastore/getProto</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/get-proto/#getproto","title":"getProto","text":"<p>[jvm]\\ fun &lt;T&gt; Entity.getProto(name: String, protoAdapter: ProtoAdapter&lt;T&gt;): T</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/set/","title":"set - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.datastore/set</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/set/#set","title":"set","text":"<p>[jvm]\\ fun Entity.Builder.set(name: String, bytes: ByteString): Entity.Builder</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/to-byte-string/","title":"toByteString - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.datastore/toByteString</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/to-byte-string/#tobytestring","title":"toByteString","text":"<p>[jvm]\\ fun Blob.toByteString(): ByteString</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/","title":"DatastoreConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.datastore/DatastoreConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/#datastoreconfig","title":"DatastoreConfig","text":"<p>[jvm]\\ data class DatastoreConfig@JvmOverloadsconstructor(transport: TransportConfig) : Config</p> <p>Configuration for talking to Google datastore</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/#constructors","title":"Constructors","text":"DatastoreConfig [jvm]@JvmOverloadsfun DatastoreConfig(transport: TransportConfig = TransportConfig())"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/#properties","title":"Properties","text":"Name Summary transport [jvm]val transport: TransportConfig"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/-datastore-config/","title":"DatastoreConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.datastore/DatastoreConfig/DatastoreConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/-datastore-config/#datastoreconfig","title":"DatastoreConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun DatastoreConfig(transport: TransportConfig = TransportConfig())</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/transport/","title":"transport - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.datastore/DatastoreConfig/transport</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/transport/#transport","title":"transport","text":"<p>[jvm]\\ val transport: TransportConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/-keys/","title":"Keys - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.datastore/Keys</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/-keys/#keys","title":"Keys","text":"<p>[jvm]\\ object Keys</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/-keys/#functions","title":"Functions","text":"Name Summary newKey [jvm]fun newKey(projectId: String, kind: String, id: Long): Keyfun newKey(projectId: String, kind: String, name: String): Key"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/-keys/new-key/","title":"newKey - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.datastore/Keys/newKey</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.datastore/-keys/new-key/#newkey","title":"newKey","text":"<p>[jvm]\\ fun newKey(projectId: String, kind: String, id: Long): Key</p> <p>fun newKey(projectId: String, kind: String, name: String): Key</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/","title":"Package misk.cloud.gcp.logging - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.logging</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/#package-miskcloudgcplogging","title":"Package misk.cloud.gcp.logging","text":""},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/#types","title":"Types","text":"Name Summary StackDriverLoggingConfig [jvm]data class StackDriverLoggingConfig@JvmOverloadsconstructor(flush_level: Level, filter_level: Level, resource_type: String?, log: String) : Config"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/","title":"StackDriverLoggingConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.logging/StackDriverLoggingConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/#stackdriverloggingconfig","title":"StackDriverLoggingConfig","text":"<p>[jvm]\\ data class StackDriverLoggingConfig@JvmOverloadsconstructor(flush_level: Level, filter_level: Level, resource_type: String?, log: String) : Config</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/#properties","title":"Properties","text":"Name Summary filter_level [jvm]val filter_level: Level flush_level [jvm]val flush_level: Level log [jvm]val log: String resource_type [jvm]val resource_type: String?"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/-stack-driver-logging-config/","title":"StackDriverLoggingConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.logging/StackDriverLoggingConfig/StackDriverLoggingConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/-stack-driver-logging-config/#stackdriverloggingconfig","title":"StackDriverLoggingConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun StackDriverLoggingConfig(flush_level: Level = Level.ERROR, filter_level: Level = Level.INFO, resource_type: String?, log: String = \u201cjava.log\u201d)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/filter_level/","title":"filter_level - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.logging/StackDriverLoggingConfig/filter_level</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/filter_level/#filter_level","title":"filter_level","text":"<p>[jvm]\\ val filter_level: Level</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/flush_level/","title":"flush_level - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.logging/StackDriverLoggingConfig/flush_level</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/flush_level/#flush_level","title":"flush_level","text":"<p>[jvm]\\ val flush_level: Level</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/log/","title":"log - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.logging/StackDriverLoggingConfig/log</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/log/#log","title":"log","text":"<p>[jvm]\\ val log: String</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/resource_type/","title":"resource_type - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.logging/StackDriverLoggingConfig/resource_type</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/resource_type/#resource_type","title":"resource_type","text":"<p>[jvm]\\ val resource_type: String?</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/","title":"Package misk.cloud.gcp.security.keys - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/#package-miskcloudgcpsecuritykeys","title":"Package misk.cloud.gcp.security.keys","text":""},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/#types","title":"Types","text":"Name Summary GcpKeyLocation [jvm]data class GcpKeyLocation(location: String, key_ring: String, key_name: String) GcpKeyManagementModule [jvm]class GcpKeyManagementModule(config: GcpKmsConfig) : KAbstractModule GcpKmsConfig [jvm]data class GcpKmsConfig(project_id: String, key_locations: Map&lt;String, GcpKeyLocation&gt;) : Config"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/","title":"GcpKeyLocation - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys/GcpKeyLocation</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/#gcpkeylocation","title":"GcpKeyLocation","text":"<p>[jvm]\\ data class GcpKeyLocation(location: String, key_ring: String, key_name: String)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/#properties","title":"Properties","text":"Name Summary key_name [jvm]val key_name: String key_ring [jvm]val key_ring: String location [jvm]val location: String path [jvm]val path: String"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/-gcp-key-location/","title":"GcpKeyLocation - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys/GcpKeyLocation/GcpKeyLocation</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/-gcp-key-location/#gcpkeylocation","title":"GcpKeyLocation","text":"<p>[jvm]\\ fun GcpKeyLocation(location: String, key_ring: String, key_name: String)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/key_name/","title":"key_name - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys/GcpKeyLocation/key_name</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/key_name/#key_name","title":"key_name","text":"<p>[jvm]\\ val key_name: String</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/key_ring/","title":"key_ring - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys/GcpKeyLocation/key_ring</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/key_ring/#key_ring","title":"key_ring","text":"<p>[jvm]\\ val key_ring: String</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/location/","title":"location - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys/GcpKeyLocation/location</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/location/#location","title":"location","text":"<p>[jvm]\\ val location: String</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/path/","title":"path - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys/GcpKeyLocation/path</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/path/#path","title":"path","text":"<p>[jvm]\\ val path: String</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/","title":"GcpKeyManagementModule - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys/GcpKeyManagementModule</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/#gcpkeymanagementmodule","title":"GcpKeyManagementModule","text":"<p>[jvm]\\ class GcpKeyManagementModule(config: GcpKmsConfig) : KAbstractModule</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) providesKms [jvm]@Provides@Singletonfun providesKms(appName: String): CloudKMS requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/-gcp-key-management-module/","title":"GcpKeyManagementModule - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys/GcpKeyManagementModule/GcpKeyManagementModule</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/-gcp-key-management-module/#gcpkeymanagementmodule","title":"GcpKeyManagementModule","text":"<p>[jvm]\\ fun GcpKeyManagementModule(config: GcpKmsConfig)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/provides-kms/","title":"providesKms - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys/GcpKeyManagementModule/providesKms</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/provides-kms/#provideskms","title":"providesKms","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun providesKms(appName: String): CloudKMS</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/","title":"GcpKmsConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys/GcpKmsConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/#gcpkmsconfig","title":"GcpKmsConfig","text":"<p>[jvm]\\ data class GcpKmsConfig(project_id: String, key_locations: Map&lt;String, GcpKeyLocation&gt;) : Config</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/#properties","title":"Properties","text":"Name Summary key_locations [jvm]val key_locations: Map&lt;String, GcpKeyLocation&gt; project_id [jvm]val project_id: String"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/-gcp-kms-config/","title":"GcpKmsConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys/GcpKmsConfig/GcpKmsConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/-gcp-kms-config/#gcpkmsconfig","title":"GcpKmsConfig","text":"<p>[jvm]\\ fun GcpKmsConfig(project_id: String, key_locations: Map&lt;String, GcpKeyLocation&gt;)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/key_locations/","title":"key_locations - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys/GcpKmsConfig/key_locations</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/key_locations/#key_locations","title":"key_locations","text":"<p>[jvm]\\ val key_locations: Map&lt;String, GcpKeyLocation&gt;</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/project_id/","title":"project_id - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.security.keys/GcpKmsConfig/project_id</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/project_id/#project_id","title":"project_id","text":"<p>[jvm]\\ val project_id: String</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/","title":"Package misk.cloud.gcp.spanner - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/#package-miskcloudgcpspanner","title":"Package misk.cloud.gcp.spanner","text":""},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/#types","title":"Types","text":"Name Summary GoogleSpannerModule [jvm]class GoogleSpannerModule(spannerConfig: SpannerConfig) : KAbstractModuleGoogleSpannerModule provides a Google Spanner client for your app. GoogleSpannerService [jvm]@Singletonclass GoogleSpannerService@Injectconstructor(spanner: Spanner) : AbstractIdleService SpannerConfig [jvm]data class SpannerConfig@JvmOverloadsconstructor(credentials: Credentials?, database: String, emulator: SpannerEmulatorConfig, instance_id: String, project_id: String) : ConfigConfiguration for talking to Google datastore SpannerEmulatorConfig [jvm]data class SpannerEmulatorConfig@JvmOverloadsconstructor(enabled: Boolean, hostname: String, port: Int, version: String?)Options for configuring the Spanner emulator."},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-module/","title":"GoogleSpannerModule - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/GoogleSpannerModule</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-module/#googlespannermodule","title":"GoogleSpannerModule","text":"<p>[jvm]\\ class GoogleSpannerModule(spannerConfig: SpannerConfig) : KAbstractModule</p> <p>GoogleSpannerModule provides a Google Spanner client for your app.</p> <p>For testing, install the emulator</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-module/#constructors","title":"Constructors","text":"GoogleSpannerModule [jvm]fun GoogleSpannerModule(spannerConfig: SpannerConfig)"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideCloudSpanner [jvm]@Provides@Singletonfun provideCloudSpanner(config: SpannerConfig): Spanner requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-module/-google-spanner-module/","title":"GoogleSpannerModule - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/GoogleSpannerModule/GoogleSpannerModule</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-module/-google-spanner-module/#googlespannermodule","title":"GoogleSpannerModule","text":"<p>[jvm]\\ fun GoogleSpannerModule(spannerConfig: SpannerConfig)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-module/provide-cloud-spanner/","title":"provideCloudSpanner - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/GoogleSpannerModule/provideCloudSpanner</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-module/provide-cloud-spanner/#providecloudspanner","title":"provideCloudSpanner","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideCloudSpanner(config: SpannerConfig): Spanner</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-service/","title":"GoogleSpannerService - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/GoogleSpannerService</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-service/#googlespannerservice","title":"GoogleSpannerService","text":"<p>[jvm]\\ @Singleton</p> <p>class GoogleSpannerService@Injectconstructor(spanner: Spanner) : AbstractIdleService</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-service/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-service/-google-spanner-service/","title":"GoogleSpannerService - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/GoogleSpannerService/GoogleSpannerService</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-service/-google-spanner-service/#googlespannerservice","title":"GoogleSpannerService","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun GoogleSpannerService(spanner: Spanner)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-service/-companion/","title":"Companion - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/GoogleSpannerService/Companion</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-google-spanner-service/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/","title":"SpannerConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/SpannerConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/#spannerconfig","title":"SpannerConfig","text":"<p>[jvm]\\ data class SpannerConfig@JvmOverloadsconstructor(credentials: Credentials?, database: String, emulator: SpannerEmulatorConfig, instance_id: String, project_id: String) : Config</p> <p>Configuration for talking to Google datastore</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/#constructors","title":"Constructors","text":"SpannerConfig [jvm]@JvmOverloadsfun SpannerConfig(credentials: Credentials? = null, database: String, emulator: SpannerEmulatorConfig = SpannerEmulatorConfig(), instance_id: String, project_id: String)"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/#properties","title":"Properties","text":"Name Summary credentials [jvm]val credentials: Credentials? = nullA set of Google Cloud credentials to use for making requests to Spanner. database [jvm]val database: StringName of the database to connect to within the Spanner instance. emulator [jvm]val emulator: SpannerEmulatorConfigConfiguration for the included Spanner emulator. instance_id [jvm]val instance_id: StringID of the Spanner instance to connect to. project_id [jvm]val project_id: StringID of the GCP project the Spanner instance is located in."},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/-spanner-config/","title":"SpannerConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/SpannerConfig/SpannerConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/-spanner-config/#spannerconfig","title":"SpannerConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun SpannerConfig(credentials: Credentials? = null, database: String, emulator: SpannerEmulatorConfig = SpannerEmulatorConfig(), instance_id: String, project_id: String)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/credentials/","title":"credentials - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/SpannerConfig/credentials</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/credentials/#credentials","title":"credentials","text":"<p>[jvm]\\ val credentials: Credentials? = null</p> <p>A set of Google Cloud credentials to use for making requests to Spanner.</p> <p>If you have special behavior around managing service credentials in production environments, this is the place to configure that.</p> <p>Note: We will attempt to automatically grab credentials from the environment where applicable, or ignore setting credentials for emulator development.</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/database/","title":"database - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/SpannerConfig/database</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/database/#database","title":"database","text":"<p>[jvm]\\ val database: String</p> <p>Name of the database to connect to within the Spanner instance.</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/emulator/","title":"emulator - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/SpannerConfig/emulator</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/emulator/#emulator","title":"emulator","text":"<p>[jvm]\\ val emulator: SpannerEmulatorConfig</p> <p>Configuration for the included Spanner emulator.</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/instance_id/","title":"instance_id - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/SpannerConfig/instance_id</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/instance_id/#instance_id","title":"instance_id","text":"<p>[jvm]\\ val instance_id: String</p> <p>ID of the Spanner instance to connect to.</p> <p>Note: your local dev instance ID doesn\u2019t have to be related to an actual Spanner instance - any string will do.</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/project_id/","title":"project_id - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/SpannerConfig/project_id</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-config/project_id/#project_id","title":"project_id","text":"<p>[jvm]\\ val project_id: String</p> <p>ID of the GCP project the Spanner instance is located in.</p> <p>Note: your local dev project ID doesn\u2019t have to be related to an actual GCP project - any string will do.</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/","title":"SpannerEmulatorConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/SpannerEmulatorConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/#spanneremulatorconfig","title":"SpannerEmulatorConfig","text":"<p>[jvm]\\ data class SpannerEmulatorConfig@JvmOverloadsconstructor(enabled: Boolean, hostname: String, port: Int, version: String?)</p> <p>Options for configuring the Spanner emulator.</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/#constructors","title":"Constructors","text":"SpannerEmulatorConfig [jvm]@JvmOverloadsfun SpannerEmulatorConfig(enabled: Boolean = false, hostname: String = \u201clocalhost\u201d, port: Int = 9010, version: String? = null)"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/#properties","title":"Properties","text":"Name Summary enabled [jvm]val enabled: Boolean = falseWhether or not to start the Spanner emulator when the GoogleSpannerModule is installed. hostname [jvm]val hostname: StringThe hostname where the Spanner emulator is hosted. In almost all cases, this should be left as \u201clocalhost\u201d. port [jvm]val port: Int = 9010The port where the Spanner emulator\u2019s gRPC port is hosted. version [jvm]val version: String? = null"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/-spanner-emulator-config/","title":"SpannerEmulatorConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/SpannerEmulatorConfig/SpannerEmulatorConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/-spanner-emulator-config/#spanneremulatorconfig","title":"SpannerEmulatorConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun SpannerEmulatorConfig(enabled: Boolean = false, hostname: String = \u201clocalhost\u201d, port: Int = 9010, version: String? = null)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/enabled/","title":"enabled - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/SpannerEmulatorConfig/enabled</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/enabled/#enabled","title":"enabled","text":"<p>[jvm]\\ val enabled: Boolean = false</p> <p>Whether or not to start the Spanner emulator when the GoogleSpannerModule is installed.</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/hostname/","title":"hostname - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/SpannerEmulatorConfig/hostname</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/hostname/#hostname","title":"hostname","text":"<p>[jvm]\\ val hostname: String</p> <p>The hostname where the Spanner emulator is hosted. In almost all cases, this should be left as \u201clocalhost\u201d.</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/port/","title":"port - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/SpannerEmulatorConfig/port</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/port/#port","title":"port","text":"<p>[jvm]\\ val port: Int = 9010</p> <p>The port where the Spanner emulator\u2019s gRPC port is hosted.</p> <p>By default, Spanner emulators run a gRPC port on 9010 and a REST / HTTP port on 9020. When spinning up an emulator, we will automatically reserve this port \u201c+ 10\u201d as the REST / HTTP port for Docker to bind to.</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/version/","title":"version - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.spanner/SpannerEmulatorConfig/version</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.spanner/-spanner-emulator-config/version/#version","title":"version","text":"<p>[jvm]\\ val version: String? = null</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/","title":"Package misk.cloud.gcp.storage - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/#package-miskcloudgcpstorage","title":"Package misk.cloud.gcp.storage","text":""},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/#types","title":"Types","text":"Name Summary BaseCustomStorageRpc [jvm]abstract class BaseCustomStorageRpc : StorageRpcBase for custom storage implementations. Most operations on custom storage are unsupported; only those minimal methods requiring implementation are left abstract. LocalStorageConfig [jvm]data class LocalStorageConfig(data_dir: String)Configuration for local (emulated) storage LocalStorageRpc [jvm]class LocalStorageRpc@JvmOverloadsconstructor(root: Path, moshi: Moshi) : BaseCustomStorageRpcImplementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete. StorageConfig [jvm]data class StorageConfig@JvmOverloadsconstructor(use_local_storage: Boolean, local_storage: LocalStorageConfig?, transport: TransportConfig) : ConfigConfiguration for talking to Google Cloud Storage"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/#functions","title":"Functions","text":"Name Summary compareTo [jvm]fun BlobId.compareTo(other: BlobId): Int forEachChunk [jvm]fun ReadChannel.forEachChunk(buffer: ByteBuffer, action: (ByteBuffer, Int) -&gt; Unit)Runs the given block for each chunk on a given channel[jvm]fun ReadChannel.forEachChunk(chunkSize: Int, action: (ByteBuffer, Int) -&gt; Unit) toList [jvm]fun &lt;T&gt; Page&lt;T&gt;.toList(): List&lt;T&gt; withLock [jvm]fun &lt;T&gt; FileChannel.withLock(shared: Boolean, action: () -&gt; T): &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/#properties","title":"Properties","text":"Name Summary blobIds [jvm]val Page&lt;Blob&gt;.blobIds: &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/blob-ids/","title":"blobIds - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/blobIds</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/blob-ids/#blobids","title":"blobIds","text":"<p>[jvm]\\ val Page&lt;Blob&gt;.blobIds: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/blob-ids/#return","title":"Return","text":"<p>a list containing just the ids of the blobs in the page</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/compare-to/","title":"compareTo - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/compareTo</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/compare-to/#compareto","title":"compareTo","text":"<p>[jvm]\\ fun BlobId.compareTo(other: BlobId): Int</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/compare-to/#return","title":"Return","text":"<p>compares one blob id to another; orders by bucket, then name, then generation</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/for-each-chunk/","title":"forEachChunk - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/forEachChunk</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/for-each-chunk/#foreachchunk","title":"forEachChunk","text":"<p>[jvm]\\ fun ReadChannel.forEachChunk(buffer: ByteBuffer, action: (ByteBuffer, Int) -&gt; Unit)</p> <p>Runs the given block for each chunk on a given channel</p> <p>[jvm]\\ fun ReadChannel.forEachChunk(chunkSize: Int, action: (ByteBuffer, Int) -&gt; Unit)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/to-list/","title":"toList - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/toList</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/to-list/#tolist","title":"toList","text":"<p>[jvm]\\ fun &lt;T&gt; Page&lt;T&gt;.toList(): List&lt;T&gt;</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/to-list/#return","title":"Return","text":"<p>a list containing all of the elements in this page</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/with-lock/","title":"withLock - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/withLock</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/with-lock/#withlock","title":"withLock","text":"<p>[jvm]\\ fun &lt;T&gt; FileChannel.withLock(shared: Boolean, action: () -&gt; T): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/","title":"BaseCustomStorageRpc - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/#basecustomstoragerpc","title":"BaseCustomStorageRpc","text":"<p>[jvm]\\ abstract class BaseCustomStorageRpc : StorageRpc</p> <p>Base for custom storage implementations. Most operations on custom storage are unsupported; only those minimal methods requiring implementation are left abstract.</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/#constructors","title":"Constructors","text":"BaseCustomStorageRpc [jvm]fun BaseCustomStorageRpc()"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/#functions","title":"Functions","text":"Name Summary compose [jvm]open override fun compose(sources: Iterable&lt;StorageObject&gt;?, target: StorageObject?, targetOptions: Map&lt;StorageRpc.Option, *&gt;?): StorageObject continueRewrite [jvm]open override fun continueRewrite(previousResponse: StorageRpc.RewriteResponse): StorageRpc.RewriteResponse create [jvm]open override fun create(bucket: Bucket, options: Map&lt;StorageRpc.Option, *&gt;): Bucketabstract fun create(p0: StorageObject, p1: InputStream, p2: MutableMap&lt;StorageRpc.Option, *&gt;): StorageObject createAcl [jvm]open override fun createAcl(acl: ObjectAccessControl?): ObjectAccessControlopen override fun createAcl(acl: BucketAccessControl?, options: Map&lt;StorageRpc.Option, *&gt;?): BucketAccessControl createBatch [jvm]open override fun createBatch(): RpcBatch createDefaultAcl [jvm]open override fun createDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl createHmacKey [jvm]open override fun createHmacKey(p0: String?, p1: MutableMap&lt;StorageRpc.Option, *&gt;?): HmacKey createNotification [jvm]open override fun createNotification(bucket: String?, notification: Notification?): Notification delete [jvm]abstract fun delete(p0: StorageObject, p1: MutableMap&lt;StorageRpc.Option, *&gt;): Booleanopen override fun delete(bucket: Bucket, options: Map&lt;StorageRpc.Option, *&gt;): Boolean deleteAcl [jvm]open override fun deleteAcl(bucket: String?, entity: String?, options: Map&lt;StorageRpc.Option, *&gt;?): Booleanopen override fun deleteAcl(bucket: String?, object: String?, generation: Long?, entity: String?): Boolean deleteDefaultAcl [jvm]open override fun deleteDefaultAcl(bucket: String?, entity: String?): Boolean deleteHmacKey [jvm]open override fun deleteHmacKey(p0: HmacKeyMetadata?, p1: MutableMap&lt;StorageRpc.Option, *&gt;?) deleteNotification [jvm]open override fun deleteNotification(bucket: String?, notification: String?): Boolean get [jvm]abstract operator fun get(p0: StorageObject, p1: MutableMap&lt;StorageRpc.Option, *&gt;): StorageObjectopen operator override fun get(bucket: Bucket, options: Map&lt;StorageRpc.Option, *&gt;): Bucket? getAcl [jvm]open override fun getAcl(bucket: String?, entity: String?, options: Map&lt;StorageRpc.Option, *&gt;?): BucketAccessControlopen override fun getAcl(bucket: String?, obj: String?, generation: Long?, entity: String?): ObjectAccessControl getCurrentUploadOffset [jvm]open override fun getCurrentUploadOffset(p0: String?): Long getDefaultAcl [jvm]open override fun getDefaultAcl(bucket: String?, entity: String?): ObjectAccessControl getHmacKey [jvm]open override fun getHmacKey(p0: String?, p1: MutableMap&lt;StorageRpc.Option, *&gt;?): HmacKeyMetadata getIamPolicy [jvm]open override fun getIamPolicy(bucket: String?, options: Map&lt;StorageRpc.Option, *&gt;?): Policy getServiceAccount [jvm]open override fun getServiceAccount(projectId: String?): ServiceAccount list [jvm]open override fun list(options: Map&lt;StorageRpc.Option, *&gt;?): Tuple&lt;String, Iterable&lt;Bucket&gt;&gt;abstract fun list(p0: String, p1: MutableMap&lt;StorageRpc.Option, *&gt;): Tuple&lt;String, MutableIterable&lt;StorageObject&gt;&gt; listAcls [jvm]open override fun listAcls(bucket: String?, options: Map&lt;StorageRpc.Option, *&gt;?): List&lt;BucketAccessControl&gt;open override fun listAcls(bucket: String?, obj: String?, generation: Long?): List&lt;ObjectAccessControl&gt; listDefaultAcls [jvm]open override fun listDefaultAcls(bucket: String?): MutableList&lt;ObjectAccessControl&gt; listHmacKeys [jvm]open override fun listHmacKeys(p0: MutableMap&lt;StorageRpc.Option, *&gt;?): Tuple&lt;String, MutableIterable&lt;HmacKeyMetadata&gt;&gt; listNotifications [jvm]open override fun listNotifications(bucket: String?): List&lt;Notification&gt; load [jvm]abstract fun load(p0: StorageObject, p1: MutableMap&lt;StorageRpc.Option, *&gt;): ByteArray lockRetentionPolicy [jvm]open override fun lockRetentionPolicy(bucket: Bucket?, options: Map&lt;StorageRpc.Option, *&gt;?): Bucket open [jvm]open override fun open(signedURL: String?): Stringabstract fun open(p0: StorageObject, p1: MutableMap&lt;StorageRpc.Option, *&gt;): String openRewrite [jvm]abstract fun openRewrite(p0: StorageRpc.RewriteRequest): StorageRpc.RewriteResponse patch [jvm]open override fun patch(bucket: Bucket, options: Map&lt;StorageRpc.Option, *&gt;): Bucket?open override fun patch(obj: StorageObject, options: Map&lt;StorageRpc.Option, *&gt;): StorageObject? patchAcl [jvm]open override fun patchAcl(acl: ObjectAccessControl?): ObjectAccessControlopen override fun patchAcl(acl: BucketAccessControl?, options: Map&lt;StorageRpc.Option, *&gt;?): BucketAccessControl patchDefaultAcl [jvm]open override fun patchDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl read [jvm]abstract fun read(p0: StorageObject, p1: MutableMap&lt;StorageRpc.Option, *&gt;, p2: Long, p3: OutputStream): Longopen override fun read(from: StorageObject?, options: Map&lt;StorageRpc.Option, *&gt;?, position: Long, bytes: Int): Tuple&lt;String, ByteArray&gt; setIamPolicy [jvm]open override fun setIamPolicy(bucket: String?, policy: Policy?, options: Map&lt;StorageRpc.Option, *&gt;?): Policy testIamPermissions [jvm]open override fun testIamPermissions(bucket: String, permissions: List&lt;String&gt;, options: Map&lt;StorageRpc.Option, *&gt;): TestIamPermissionsResponse updateHmacKey [jvm]open override fun updateHmacKey(p0: HmacKeyMetadata?, p1: MutableMap&lt;StorageRpc.Option, *&gt;?): HmacKeyMetadata write [jvm]abstract fun write(p0: String, p1: ByteArray, p2: Int, p3: Long, p4: Int, p5: Boolean) writeWithResponse [jvm]open override fun writeWithResponse(p0: String?, p1: ByteArray?, p2: Int, p3: Long, p4: Int, p5: Boolean): StorageObject"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/#inheritors","title":"Inheritors","text":"Name LocalStorageRpc"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/-base-custom-storage-rpc/","title":"BaseCustomStorageRpc - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/BaseCustomStorageRpc</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/-base-custom-storage-rpc/#basecustomstoragerpc","title":"BaseCustomStorageRpc","text":"<p>[jvm]\\ fun BaseCustomStorageRpc()</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/compose/","title":"compose - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/compose</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/compose/#compose","title":"compose","text":"<p>[jvm]\\ open override fun compose(sources: Iterable&lt;StorageObject&gt;?, target: StorageObject?, targetOptions: Map&lt;StorageRpc.Option, *&gt;?): StorageObject</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/continue-rewrite/","title":"continueRewrite - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/continueRewrite</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/continue-rewrite/#continuerewrite","title":"continueRewrite","text":"<p>[jvm]\\ open override fun continueRewrite(previousResponse: StorageRpc.RewriteResponse): StorageRpc.RewriteResponse</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-acl/","title":"createAcl - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/createAcl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-acl/#createacl","title":"createAcl","text":"<p>[jvm]\\ open override fun createAcl(acl: BucketAccessControl?, options: Map&lt;StorageRpc.Option, *&gt;?): BucketAccessControl</p> <p>open override fun createAcl(acl: ObjectAccessControl?): ObjectAccessControl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-batch/","title":"createBatch - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/createBatch</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-batch/#createbatch","title":"createBatch","text":"<p>[jvm]\\ open override fun createBatch(): RpcBatch</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-default-acl/","title":"createDefaultAcl - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/createDefaultAcl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-default-acl/#createdefaultacl","title":"createDefaultAcl","text":"<p>[jvm]\\ open override fun createDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-hmac-key/","title":"createHmacKey - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/createHmacKey</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-hmac-key/#createhmackey","title":"createHmacKey","text":"<p>[jvm]\\ open override fun createHmacKey(p0: String?, p1: MutableMap&lt;StorageRpc.Option, *&gt;?): HmacKey</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-notification/","title":"createNotification - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/createNotification</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-notification/#createnotification","title":"createNotification","text":"<p>[jvm]\\ open override fun createNotification(bucket: String?, notification: Notification?): Notification</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create/","title":"create - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/create</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(bucket: Bucket, options: Map&lt;StorageRpc.Option, *&gt;): Bucket</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-acl/","title":"deleteAcl - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/deleteAcl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-acl/#deleteacl","title":"deleteAcl","text":"<p>[jvm]\\ open override fun deleteAcl(bucket: String?, entity: String?, options: Map&lt;StorageRpc.Option, *&gt;?): Boolean</p> <p>open override fun deleteAcl(bucket: String?, object: String?, generation: Long?, entity: String?): Boolean</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-default-acl/","title":"deleteDefaultAcl - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/deleteDefaultAcl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-default-acl/#deletedefaultacl","title":"deleteDefaultAcl","text":"<p>[jvm]\\ open override fun deleteDefaultAcl(bucket: String?, entity: String?): Boolean</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-hmac-key/","title":"deleteHmacKey - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/deleteHmacKey</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-hmac-key/#deletehmackey","title":"deleteHmacKey","text":"<p>[jvm]\\ open override fun deleteHmacKey(p0: HmacKeyMetadata?, p1: MutableMap&lt;StorageRpc.Option, *&gt;?)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-notification/","title":"deleteNotification - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/deleteNotification</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-notification/#deletenotification","title":"deleteNotification","text":"<p>[jvm]\\ open override fun deleteNotification(bucket: String?, notification: String?): Boolean</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete/","title":"delete - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/delete</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete/#delete","title":"delete","text":"<p>[jvm]\\ open override fun delete(bucket: Bucket, options: Map&lt;StorageRpc.Option, *&gt;): Boolean</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-acl/","title":"getAcl - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/getAcl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-acl/#getacl","title":"getAcl","text":"<p>[jvm]\\ open override fun getAcl(bucket: String?, entity: String?, options: Map&lt;StorageRpc.Option, *&gt;?): BucketAccessControl</p> <p>open override fun getAcl(bucket: String?, obj: String?, generation: Long?, entity: String?): ObjectAccessControl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-current-upload-offset/","title":"getCurrentUploadOffset - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/getCurrentUploadOffset</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-current-upload-offset/#getcurrentuploadoffset","title":"getCurrentUploadOffset","text":"<p>[jvm]\\ open override fun getCurrentUploadOffset(p0: String?): Long</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-default-acl/","title":"getDefaultAcl - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/getDefaultAcl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-default-acl/#getdefaultacl","title":"getDefaultAcl","text":"<p>[jvm]\\ open override fun getDefaultAcl(bucket: String?, entity: String?): ObjectAccessControl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-hmac-key/","title":"getHmacKey - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/getHmacKey</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-hmac-key/#gethmackey","title":"getHmacKey","text":"<p>[jvm]\\ open override fun getHmacKey(p0: String?, p1: MutableMap&lt;StorageRpc.Option, *&gt;?): HmacKeyMetadata</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-iam-policy/","title":"getIamPolicy - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/getIamPolicy</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-iam-policy/#getiampolicy","title":"getIamPolicy","text":"<p>[jvm]\\ open override fun getIamPolicy(bucket: String?, options: Map&lt;StorageRpc.Option, *&gt;?): Policy</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-service-account/","title":"getServiceAccount - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/getServiceAccount</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-service-account/#getserviceaccount","title":"getServiceAccount","text":"<p>[jvm]\\ open override fun getServiceAccount(projectId: String?): ServiceAccount</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get/","title":"get - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/get</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get/#get","title":"get","text":"<p>[jvm]\\ open operator override fun get(bucket: Bucket, options: Map&lt;StorageRpc.Option, *&gt;): Bucket?</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-acls/","title":"listAcls - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/listAcls</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-acls/#listacls","title":"listAcls","text":"<p>[jvm]\\ open override fun listAcls(bucket: String?, options: Map&lt;StorageRpc.Option, *&gt;?): List&lt;BucketAccessControl&gt;</p> <p>open override fun listAcls(bucket: String?, obj: String?, generation: Long?): List&lt;ObjectAccessControl&gt;</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-default-acls/","title":"listDefaultAcls - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/listDefaultAcls</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-default-acls/#listdefaultacls","title":"listDefaultAcls","text":"<p>[jvm]\\ open override fun listDefaultAcls(bucket: String?): MutableList&lt;ObjectAccessControl&gt;</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-hmac-keys/","title":"listHmacKeys - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/listHmacKeys</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-hmac-keys/#listhmackeys","title":"listHmacKeys","text":"<p>[jvm]\\ open override fun listHmacKeys(p0: MutableMap&lt;StorageRpc.Option, *&gt;?): Tuple&lt;String, MutableIterable&lt;HmacKeyMetadata&gt;&gt;</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-notifications/","title":"listNotifications - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/listNotifications</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-notifications/#listnotifications","title":"listNotifications","text":"<p>[jvm]\\ open override fun listNotifications(bucket: String?): List&lt;Notification&gt;</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list/","title":"list - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/list</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list/#list","title":"list","text":"<p>[jvm]\\ open override fun list(options: Map&lt;StorageRpc.Option, *&gt;?): Tuple&lt;String, Iterable&lt;Bucket&gt;&gt;</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/lock-retention-policy/","title":"lockRetentionPolicy - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/lockRetentionPolicy</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/lock-retention-policy/#lockretentionpolicy","title":"lockRetentionPolicy","text":"<p>[jvm]\\ open override fun lockRetentionPolicy(bucket: Bucket?, options: Map&lt;StorageRpc.Option, *&gt;?): Bucket</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/open/","title":"open - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/open</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/open/#open","title":"open","text":"<p>[jvm]\\ open override fun open(signedURL: String?): String</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/patch-acl/","title":"patchAcl - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/patchAcl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/patch-acl/#patchacl","title":"patchAcl","text":"<p>[jvm]\\ open override fun patchAcl(acl: BucketAccessControl?, options: Map&lt;StorageRpc.Option, *&gt;?): BucketAccessControl</p> <p>open override fun patchAcl(acl: ObjectAccessControl?): ObjectAccessControl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/patch-default-acl/","title":"patchDefaultAcl - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/patchDefaultAcl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/patch-default-acl/#patchdefaultacl","title":"patchDefaultAcl","text":"<p>[jvm]\\ open override fun patchDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/patch/","title":"patch - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/patch</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/patch/#patch","title":"patch","text":"<p>[jvm]\\ open override fun patch(bucket: Bucket, options: Map&lt;StorageRpc.Option, *&gt;): Bucket?</p> <p>open override fun patch(obj: StorageObject, options: Map&lt;StorageRpc.Option, *&gt;): StorageObject?</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/read/","title":"read - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/read</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/read/#read","title":"read","text":"<p>[jvm]\\ open override fun read(from: StorageObject?, options: Map&lt;StorageRpc.Option, *&gt;?, position: Long, bytes: Int): Tuple&lt;String, ByteArray&gt;</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/set-iam-policy/","title":"setIamPolicy - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/setIamPolicy</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/set-iam-policy/#setiampolicy","title":"setIamPolicy","text":"<p>[jvm]\\ open override fun setIamPolicy(bucket: String?, policy: Policy?, options: Map&lt;StorageRpc.Option, *&gt;?): Policy</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/test-iam-permissions/","title":"testIamPermissions - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/testIamPermissions</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/test-iam-permissions/#testiampermissions","title":"testIamPermissions","text":"<p>[jvm]\\ open override fun testIamPermissions(bucket: String, permissions: List&lt;String&gt;, options: Map&lt;StorageRpc.Option, *&gt;): TestIamPermissionsResponse</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/update-hmac-key/","title":"updateHmacKey - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/updateHmacKey</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/update-hmac-key/#updatehmackey","title":"updateHmacKey","text":"<p>[jvm]\\ open override fun updateHmacKey(p0: HmacKeyMetadata?, p1: MutableMap&lt;StorageRpc.Option, *&gt;?): HmacKeyMetadata</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/write-with-response/","title":"writeWithResponse - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/BaseCustomStorageRpc/writeWithResponse</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/write-with-response/#writewithresponse","title":"writeWithResponse","text":"<p>[jvm]\\ open override fun writeWithResponse(p0: String?, p1: ByteArray?, p2: Int, p3: Long, p4: Int, p5: Boolean): StorageObject</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/","title":"LocalStorageConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/#localstorageconfig","title":"LocalStorageConfig","text":"<p>[jvm]\\ data class LocalStorageConfig(data_dir: String)</p> <p>Configuration for local (emulated) storage</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/#constructors","title":"Constructors","text":"LocalStorageConfig [jvm]fun LocalStorageConfig(data_dir: String)"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/#properties","title":"Properties","text":"Name Summary data_dir [jvm]val data_dir: String"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/-local-storage-config/","title":"LocalStorageConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageConfig/LocalStorageConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/-local-storage-config/#localstorageconfig","title":"LocalStorageConfig","text":"<p>[jvm]\\ fun LocalStorageConfig(data_dir: String)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/data_dir/","title":"data_dir - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageConfig/data_dir</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/data_dir/#data_dir","title":"data_dir","text":"<p>[jvm]\\ val data_dir: String</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/","title":"LocalStorageRpc - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageRpc</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/#localstoragerpc","title":"LocalStorageRpc","text":"<p>[jvm]\\ class LocalStorageRpc@JvmOverloadsconstructor(root: Path, moshi: Moshi) : BaseCustomStorageRpc</p> <p>Implementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete.</p> <p>The implementation uses file locks to support multiple local processes accessing the same storage directory. Whenever a blob is updated, the local store will acquire an exclusive lock on a corresponding lock file, releasing that lock when the update is complete (or when the process dies). It\u2019s slightly more complicated since we need to deal with the possibility that writer stops partway through without the process failing; in those cases we don\u2019t want to prevent subsequent updates from other processes.</p> <p>Write process:</p> <ul> <li>on open</li> <li> <ul> <li> <p>acquire a read lock</p> </li> </ul> </li> <li> <p>read metadata constraints, and create a new target metadata object for the next generation</p> </li> <li> <p>release read lock</p> </li> <li> <p>create a new temp file for receiving the update</p> </li> <li> <p>generate an upload id, save the temp file location + target metadata + constraints       in-memory associated with the upload id</p> </li> <li>on write</li> <li> <ul> <li> <p>write to the temp file for that upload id</p> </li> </ul> </li> <li>on finish</li> <li> <ul> <li> <p>acquire a write lock, read the latest metadata for the blob and re-check constraints       to make sure nothing changed underneath (e.g. a concurrent upload for that blob did       not complete)</p> </li> </ul> </li> <li> <p>copy from the temp file to a new file in the content directory, appending the       new generation number. This is done as an atomic move + overwrite</p> </li> <li> <p>write updated metadata to the metadata file. This is done as an atomic move + overwrite.       Until this is complete, the new version of the content is not accessible to readers.</p> </li> <li> <p>release the write lock</p> </li> <li> <p>remove the content file for the prior generation</p> </li> </ul> <p>If a writer fails between open and finish, all that happens is we have abandoned temp files If a writer fails after moving the temp file to the contents directory but before updating     the metadata, then we have a bad content file for that generation sitting in the content     directory. Since the metadata hasn\u2019t been updated with the new generation, this content     is not readable, and a subsequent write will overwrite it. If a writer fails after updating the metadata but before removing the prior generation     content file, we\u2019ll have left an abandoned content file. A garbage collection process     can be run to clean these up eventually</p> <p>Read process</p> <ul> <li>acquire a read lock</li> <li>read the metadata for the blob and check constraints (including etag)</li> <li>read the raw bytes from the content file</li> <li>release the read lock</li> </ul> <p>Clients use etags to detect when a blob is updated while a progressive download is in place; the etag returned from a prior read is sent in subsequent reads. We simply use the generation number as the etag value.</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/#constructors","title":"Constructors","text":"LocalStorageRpc [jvm]@JvmOverloadsfun LocalStorageRpc(root: Path, moshi: Moshi = defaultKotlinMoshi)"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/#functions","title":"Functions","text":"Name Summary compose [jvm]open override fun compose(sources: Iterable&lt;StorageObject&gt;?, target: StorageObject?, targetOptions: Map&lt;StorageRpc.Option, *&gt;?): StorageObject continueRewrite [jvm]open override fun continueRewrite(previousResponse: StorageRpc.RewriteResponse): StorageRpc.RewriteResponse create [jvm]open override fun create(bucket: Bucket, options: Map&lt;StorageRpc.Option, *&gt;): Bucketopen override fun create(obj: StorageObject, content: InputStream, options: Map&lt;StorageRpc.Option, *&gt;): StorageObject? createAcl [jvm]open override fun createAcl(acl: ObjectAccessControl?): ObjectAccessControlopen override fun createAcl(acl: BucketAccessControl?, options: Map&lt;StorageRpc.Option, *&gt;?): BucketAccessControl createBatch [jvm]open override fun createBatch(): RpcBatch createDefaultAcl [jvm]open override fun createDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl createHmacKey [jvm]open override fun createHmacKey(p0: String?, p1: MutableMap&lt;StorageRpc.Option, *&gt;?): HmacKey createNotification [jvm]open override fun createNotification(bucket: String?, notification: Notification?): Notification delete [jvm]open override fun delete(bucket: Bucket, options: Map&lt;StorageRpc.Option, *&gt;): Booleanopen override fun delete(obj: StorageObject, options: Map&lt;StorageRpc.Option, *&gt;): Boolean deleteAcl [jvm]open override fun deleteAcl(bucket: String?, entity: String?, options: Map&lt;StorageRpc.Option, *&gt;?): Booleanopen override fun deleteAcl(bucket: String?, object: String?, generation: Long?, entity: String?): Boolean deleteDefaultAcl [jvm]open override fun deleteDefaultAcl(bucket: String?, entity: String?): Boolean deleteHmacKey [jvm]open override fun deleteHmacKey(p0: HmacKeyMetadata?, p1: MutableMap&lt;StorageRpc.Option, *&gt;?) deleteNotification [jvm]open override fun deleteNotification(bucket: String?, notification: String?): Boolean get [jvm]open operator override fun get(bucket: Bucket, options: Map&lt;StorageRpc.Option, *&gt;): Bucket?open operator override fun get(obj: StorageObject, options: Map&lt;StorageRpc.Option, *&gt;): StorageObject? getAcl [jvm]open override fun getAcl(bucket: String?, entity: String?, options: Map&lt;StorageRpc.Option, *&gt;?): BucketAccessControlopen override fun getAcl(bucket: String?, obj: String?, generation: Long?, entity: String?): ObjectAccessControl getCurrentUploadOffset [jvm]open override fun getCurrentUploadOffset(p0: String?): Long getDefaultAcl [jvm]open override fun getDefaultAcl(bucket: String?, entity: String?): ObjectAccessControl getHmacKey [jvm]open override fun getHmacKey(p0: String?, p1: MutableMap&lt;StorageRpc.Option, *&gt;?): HmacKeyMetadata getIamPolicy [jvm]open override fun getIamPolicy(bucket: String?, options: Map&lt;StorageRpc.Option, *&gt;?): Policy getServiceAccount [jvm]open override fun getServiceAccount(projectId: String?): ServiceAccount list [jvm]open override fun list(options: Map&lt;StorageRpc.Option, *&gt;?): Tuple&lt;String, Iterable&lt;Bucket&gt;&gt;open override fun list(bucket: String, options: Map&lt;StorageRpc.Option, *&gt;): Tuple&lt;String, Iterable&lt;StorageObject&gt;&gt; listAcls [jvm]open override fun listAcls(bucket: String?, options: Map&lt;StorageRpc.Option, *&gt;?): List&lt;BucketAccessControl&gt;open override fun listAcls(bucket: String?, obj: String?, generation: Long?): List&lt;ObjectAccessControl&gt; listDefaultAcls [jvm]open override fun listDefaultAcls(bucket: String?): MutableList&lt;ObjectAccessControl&gt; listHmacKeys [jvm]open override fun listHmacKeys(p0: MutableMap&lt;StorageRpc.Option, *&gt;?): Tuple&lt;String, MutableIterable&lt;HmacKeyMetadata&gt;&gt; listNotifications [jvm]open override fun listNotifications(bucket: String?): List&lt;Notification&gt; load [jvm]open override fun load(obj: StorageObject, options: Map&lt;StorageRpc.Option, *&gt;): ByteArray lockRetentionPolicy [jvm]open override fun lockRetentionPolicy(bucket: Bucket?, options: Map&lt;StorageRpc.Option, *&gt;?): Bucket open [jvm]open override fun open(signedURL: String?): Stringopen override fun open(obj: StorageObject, options: Map&lt;StorageRpc.Option, *&gt;): String openRewrite [jvm]open override fun openRewrite(request: StorageRpc.RewriteRequest): StorageRpc.RewriteResponse patch [jvm]open override fun patch(bucket: Bucket, options: Map&lt;StorageRpc.Option, *&gt;): Bucket?open override fun patch(obj: StorageObject, options: Map&lt;StorageRpc.Option, *&gt;): StorageObject? patchAcl [jvm]open override fun patchAcl(acl: ObjectAccessControl?): ObjectAccessControlopen override fun patchAcl(acl: BucketAccessControl?, options: Map&lt;StorageRpc.Option, *&gt;?): BucketAccessControl patchDefaultAcl [jvm]open override fun patchDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl read [jvm]open override fun read(from: StorageObject?, options: Map&lt;StorageRpc.Option, *&gt;?, position: Long, bytes: Int): Tuple&lt;String, ByteArray&gt;open override fun read(from: StorageObject, options: Map&lt;StorageRpc.Option, *&gt;, zposition: Long, outputStream: OutputStream): Long setIamPolicy [jvm]open override fun setIamPolicy(bucket: String?, policy: Policy?, options: Map&lt;StorageRpc.Option, *&gt;?): Policy testIamPermissions [jvm]open override fun testIamPermissions(bucket: String, permissions: List&lt;String&gt;, options: Map&lt;StorageRpc.Option, *&gt;): TestIamPermissionsResponse updateHmacKey [jvm]open override fun updateHmacKey(p0: HmacKeyMetadata?, p1: MutableMap&lt;StorageRpc.Option, *&gt;?): HmacKeyMetadata write [jvm]open override fun write(uploadId: String, toWrite: ByteArray, toWriteOffset: Int, destOffset: Long, length: Int, last: Boolean) writeWithResponse [jvm]open override fun writeWithResponse(p0: String?, p1: ByteArray?, p2: Int, p3: Long, p4: Int, p5: Boolean): StorageObject"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/-local-storage-rpc/","title":"LocalStorageRpc - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageRpc/LocalStorageRpc</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/-local-storage-rpc/#localstoragerpc","title":"LocalStorageRpc","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun LocalStorageRpc(root: Path, moshi: Moshi = defaultKotlinMoshi)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/create/","title":"create - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageRpc/create</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(obj: StorageObject, content: InputStream, options: Map&lt;StorageRpc.Option, *&gt;): StorageObject?</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/delete/","title":"delete - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageRpc/delete</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/delete/#delete","title":"delete","text":"<p>[jvm]\\ open override fun delete(obj: StorageObject, options: Map&lt;StorageRpc.Option, *&gt;): Boolean</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/get/","title":"get - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageRpc/get</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/get/#get","title":"get","text":"<p>[jvm]\\ open operator override fun get(obj: StorageObject, options: Map&lt;StorageRpc.Option, *&gt;): StorageObject?</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/list/","title":"list - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageRpc/list</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/list/#list","title":"list","text":"<p>[jvm]\\ open override fun list(bucket: String, options: Map&lt;StorageRpc.Option, *&gt;): Tuple&lt;String, Iterable&lt;StorageObject&gt;&gt;</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/load/","title":"load - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageRpc/load</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/load/#load","title":"load","text":"<p>[jvm]\\ open override fun load(obj: StorageObject, options: Map&lt;StorageRpc.Option, *&gt;): ByteArray</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/open-rewrite/","title":"openRewrite - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageRpc/openRewrite</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/open-rewrite/#openrewrite","title":"openRewrite","text":"<p>[jvm]\\ open override fun openRewrite(request: StorageRpc.RewriteRequest): StorageRpc.RewriteResponse</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/open/","title":"open - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageRpc/open</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/open/#open","title":"open","text":"<p>[jvm]\\ open override fun open(obj: StorageObject, options: Map&lt;StorageRpc.Option, *&gt;): String</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/read/","title":"read - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageRpc/read</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/read/#read","title":"read","text":"<p>[jvm]\\ open override fun read(from: StorageObject, options: Map&lt;StorageRpc.Option, *&gt;, zposition: Long, outputStream: OutputStream): Long</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/write/","title":"write - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/LocalStorageRpc/write</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/write/#write","title":"write","text":"<p>[jvm]\\ open override fun write(uploadId: String, toWrite: ByteArray, toWriteOffset: Int, destOffset: Long, length: Int, last: Boolean)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-storage-config/","title":"StorageConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/StorageConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-storage-config/#storageconfig","title":"StorageConfig","text":"<p>[jvm]\\ data class StorageConfig@JvmOverloadsconstructor(use_local_storage: Boolean, local_storage: LocalStorageConfig?, transport: TransportConfig) : Config</p> <p>Configuration for talking to Google Cloud Storage</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-storage-config/#constructors","title":"Constructors","text":"StorageConfig [jvm]@JvmOverloadsfun StorageConfig(use_local_storage: Boolean = false, local_storage: LocalStorageConfig? = null, transport: TransportConfig = TransportConfig())"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-storage-config/#properties","title":"Properties","text":"Name Summary local_storage [jvm]val local_storage: LocalStorageConfig? = null transport [jvm]val transport: TransportConfig use_local_storage [jvm]val use_local_storage: Boolean = false"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-storage-config/-storage-config/","title":"StorageConfig - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/StorageConfig/StorageConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-storage-config/-storage-config/#storageconfig","title":"StorageConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun StorageConfig(use_local_storage: Boolean = false, local_storage: LocalStorageConfig? = null, transport: TransportConfig = TransportConfig())</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-storage-config/local_storage/","title":"local_storage - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/StorageConfig/local_storage</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-storage-config/local_storage/#local_storage","title":"local_storage","text":"<p>[jvm]\\ val local_storage: LocalStorageConfig? = null</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-storage-config/transport/","title":"transport - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/StorageConfig/transport</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-storage-config/transport/#transport","title":"transport","text":"<p>[jvm]\\ val transport: TransportConfig</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-storage-config/use_local_storage/","title":"use_local_storage - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.storage/StorageConfig/use_local_storage</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.storage/-storage-config/use_local_storage/#use_local_storage","title":"use_local_storage","text":"<p>[jvm]\\ val use_local_storage: Boolean = false</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.tracing/","title":"Package misk.cloud.gcp.tracing - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.tracing</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.tracing/#package-miskcloudgcptracing","title":"Package misk.cloud.gcp.tracing","text":""},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.tracing/#types","title":"Types","text":"Name Summary TracingLoggingEnhancer [jvm]class TracingLoggingEnhancer : LoggingEnhancerAdd this enhancer to your project\u2019s Logback configuration to add trace ids to logs generated by GCP\u2019s LoggingAppender"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/","title":"TracingLoggingEnhancer - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.tracing/TracingLoggingEnhancer</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/#tracingloggingenhancer","title":"TracingLoggingEnhancer","text":"<p>[jvm]\\ class TracingLoggingEnhancer : LoggingEnhancer</p> <p>Add this enhancer to your project\u2019s Logback configuration to add trace ids to logs generated by GCP\u2019s LoggingAppender</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/#constructors","title":"Constructors","text":"TracingLoggingEnhancer [jvm]fun TracingLoggingEnhancer()"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/#functions","title":"Functions","text":"Name Summary enhanceLogEntry [jvm]open override fun enhanceLogEntry(builder: LogEntry.Builder)fun enhanceLogEntry(tracer: Tracer, builder: LogEntry.Builder)"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/-tracing-logging-enhancer/","title":"TracingLoggingEnhancer - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.tracing/TracingLoggingEnhancer/TracingLoggingEnhancer</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/-tracing-logging-enhancer/#tracingloggingenhancer","title":"TracingLoggingEnhancer","text":"<p>[jvm]\\ fun TracingLoggingEnhancer()</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/enhance-log-entry/","title":"enhanceLogEntry - Misk","text":"<p>//misk-gcp/misk.cloud.gcp.tracing/TracingLoggingEnhancer/enhanceLogEntry</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/enhance-log-entry/#enhancelogentry","title":"enhanceLogEntry","text":"<p>[jvm]\\ open override fun enhanceLogEntry(builder: LogEntry.Builder)</p> <p>fun enhanceLogEntry(tracer: Tracer, builder: LogEntry.Builder)</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.logging/","title":"Package misk.logging - Misk","text":"<p>//misk-gcp/misk.logging</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.logging/#package-misklogging","title":"Package misk.logging","text":""},{"location":"0.x/misk-gcp/misk-gcp/misk.logging/#functions","title":"Functions","text":"Name Summary enableStackDriverLogging [jvm]fun enableStackDriverLogging(config: StackDriverLoggingConfig)Configures Misk to send application logs to StackDriver. If credentials are required to send logging, set the GOOGLE_APPLICATION_CREDENTIALS environment variable with the path to the JSON credentials."},{"location":"0.x/misk-gcp/misk-gcp/misk.logging/enable-stack-driver-logging/","title":"enableStackDriverLogging - Misk","text":"<p>//misk-gcp/misk.logging/enableStackDriverLogging</p>"},{"location":"0.x/misk-gcp/misk-gcp/misk.logging/enable-stack-driver-logging/#enablestackdriverlogging","title":"enableStackDriverLogging","text":"<p>[jvm]\\ fun enableStackDriverLogging(config: StackDriverLoggingConfig)</p> <p>Configures Misk to send application logs to StackDriver. If credentials are required to send logging, set the GOOGLE_APPLICATION_CREDENTIALS environment variable with the path to the JSON credentials.</p>"},{"location":"0.x/misk-grpc-reflect/","title":"misk-grpc-reflect - Misk","text":"<p>//misk-grpc-reflect</p>"},{"location":"0.x/misk-grpc-reflect/#misk-grpc-reflect","title":"misk-grpc-reflect","text":""},{"location":"0.x/misk-grpc-reflect/#packages","title":"Packages","text":"Name misk.grpc.reflect"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/","title":"Package misk.grpc.reflect - Misk","text":"<p>//misk-grpc-reflect/misk.grpc.reflect</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/#package-miskgrpcreflect","title":"Package misk.grpc.reflect","text":""},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/#types","title":"Types","text":"Name Summary GrpcReflectModule [jvm]class GrpcReflectModule : KAbstractModuleImplements gRPC reflect for all gRPC actions installed in this Misk application. ServerReflectionApi [jvm]class ServerReflectionApi@Injectconstructor(reflector: SchemaReflector) : ServerReflectionServerReflectionInfoBlockingServer, WebAction"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/","title":"GrpcReflectModule - Misk","text":"<p>//misk-grpc-reflect/misk.grpc.reflect/GrpcReflectModule</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/#grpcreflectmodule","title":"GrpcReflectModule","text":"<p>[jvm]\\ class GrpcReflectModule : KAbstractModule</p> <p>Implements gRPC reflect for all gRPC actions installed in this Misk application.</p> <p>This relies on .proto files being included in the .jar file. If they\u2019re missing, reflection won\u2019t work for them.</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/#constructors","title":"Constructors","text":"GrpcReflectModule [jvm]fun GrpcReflectModule()"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideSchema [jvm]@Provides@Singletonfun provideSchema(webActions: List&lt;WebActionEntry&gt;): SchemaInterrogate the installed gRPC actions and create a Wire schema from that. provideServiceReflector [jvm]@Provides@Singletonfun provideServiceReflector(schema: Schema): SchemaReflector requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/-grpc-reflect-module/","title":"GrpcReflectModule - Misk","text":"<p>//misk-grpc-reflect/misk.grpc.reflect/GrpcReflectModule/GrpcReflectModule</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/-grpc-reflect-module/#grpcreflectmodule","title":"GrpcReflectModule","text":"<p>[jvm]\\ fun GrpcReflectModule()</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/provide-schema/","title":"provideSchema - Misk","text":"<p>//misk-grpc-reflect/misk.grpc.reflect/GrpcReflectModule/provideSchema</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/provide-schema/#provideschema","title":"provideSchema","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideSchema(webActions: List&lt;WebActionEntry&gt;): Schema</p> <p>Interrogate the installed gRPC actions and create a Wire schema from that.</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/provide-service-reflector/","title":"provideServiceReflector - Misk","text":"<p>//misk-grpc-reflect/misk.grpc.reflect/GrpcReflectModule/provideServiceReflector</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/provide-service-reflector/#provideservicereflector","title":"provideServiceReflector","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideServiceReflector(schema: Schema): SchemaReflector</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/-companion/","title":"Companion - Misk","text":"<p>//misk-grpc-reflect/misk.grpc.reflect/GrpcReflectModule/Companion</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/","title":"ServerReflectionApi - Misk","text":"<p>//misk-grpc-reflect/misk.grpc.reflect/ServerReflectionApi</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/#serverreflectionapi","title":"ServerReflectionApi","text":"<p>[jvm]\\ class ServerReflectionApi@Injectconstructor(reflector: SchemaReflector) : ServerReflectionServerReflectionInfoBlockingServer, WebAction</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/#functions","title":"Functions","text":"Name Summary ServerReflectionInfo [jvm]open override fun ServerReflectionInfo(requests: MessageSource&lt;ServerReflectionRequest&gt;, responses: MessageSink&lt;ServerReflectionResponse&gt;)The reflection service is structured as a bidirectional stream, ensuring all related requests go to a single server."},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/-server-reflection-api/","title":"ServerReflectionApi - Misk","text":"<p>//misk-grpc-reflect/misk.grpc.reflect/ServerReflectionApi/ServerReflectionApi</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/-server-reflection-api/#serverreflectionapi","title":"ServerReflectionApi","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ServerReflectionApi(reflector: SchemaReflector)</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/-server-reflection-info/","title":"ServerReflectionInfo - Misk","text":"<p>//misk-grpc-reflect/misk.grpc.reflect/ServerReflectionApi/ServerReflectionInfo</p>"},{"location":"0.x/misk-grpc-reflect/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/-server-reflection-info/#serverreflectioninfo","title":"ServerReflectionInfo","text":"<p>[jvm]\\ open override fun ServerReflectionInfo(requests: MessageSource&lt;ServerReflectionRequest&gt;, responses: MessageSink&lt;ServerReflectionResponse&gt;)</p> <p>The reflection service is structured as a bidirectional stream, ensuring all related requests go to a single server.</p>"},{"location":"0.x/misk-grpc-tests/","title":"misk-grpc-tests - Misk","text":"<p>//misk-grpc-tests</p>"},{"location":"0.x/misk-grpc-tests/#misk-grpc-tests","title":"misk-grpc-tests","text":""},{"location":"0.x/misk-grpc-tests/#packages","title":"Packages","text":"Name misk.grpc.miskclient misk.grpc.miskserver misk.grpc.protocclient misk.grpc.protocserver"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/","title":"Package misk.grpc.miskclient - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskclient</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/#package-miskgrpcmiskclient","title":"Package misk.grpc.miskclient","text":""},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/#types","title":"Types","text":"Name Summary MiskGrpcClientModule [jvm]class MiskGrpcClientModule(url: HttpUrl) : KAbstractModule RouteGuideCallCounter [jvm]@Singletonclass RouteGuideCallCounter@Injectconstructor : ClientNetworkInterceptor.FactorySample network interceptor to confirm they\u2019re executed for outbound gRPC calls."},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/","title":"MiskGrpcClientModule - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskclient/MiskGrpcClientModule</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/#miskgrpcclientmodule","title":"MiskGrpcClientModule","text":"<p>[jvm]\\ class MiskGrpcClientModule(url: HttpUrl) : KAbstractModule</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideHttpClientsConfig [jvm]@Provides@Singletonfun provideHttpClientsConfig(): HttpClientsConfig requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder url [jvm]val url: HttpUrl"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/-misk-grpc-client-module/","title":"MiskGrpcClientModule - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskclient/MiskGrpcClientModule/MiskGrpcClientModule</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/-misk-grpc-client-module/#miskgrpcclientmodule","title":"MiskGrpcClientModule","text":"<p>[jvm]\\ fun MiskGrpcClientModule(url: HttpUrl)</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/provide-http-clients-config/","title":"provideHttpClientsConfig - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskclient/MiskGrpcClientModule/provideHttpClientsConfig</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/provide-http-clients-config/#providehttpclientsconfig","title":"provideHttpClientsConfig","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideHttpClientsConfig(): HttpClientsConfig</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/url/","title":"url - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskclient/MiskGrpcClientModule/url</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/url/#url","title":"url","text":"<p>[jvm]\\ val url: HttpUrl</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/","title":"RouteGuideCallCounter - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskclient/RouteGuideCallCounter</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/#routeguidecallcounter","title":"RouteGuideCallCounter","text":"<p>[jvm]\\ @Singleton</p> <p>class RouteGuideCallCounter@Injectconstructor : ClientNetworkInterceptor.Factory</p> <p>Sample network interceptor to confirm they\u2019re executed for outbound gRPC calls.</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/#constructors","title":"Constructors","text":"RouteGuideCallCounter [jvm]@Injectfun RouteGuideCallCounter()"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/#functions","title":"Functions","text":"Name Summary counter [jvm]fun counter(name: String): AtomicInteger create [jvm]open override fun create(action: ClientAction): ClientNetworkInterceptor?"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/#properties","title":"Properties","text":"Name Summary actionNameToCount [jvm]val actionNameToCount: &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/-route-guide-call-counter/","title":"RouteGuideCallCounter - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskclient/RouteGuideCallCounter/RouteGuideCallCounter</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/-route-guide-call-counter/#routeguidecallcounter","title":"RouteGuideCallCounter","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun RouteGuideCallCounter()</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/action-name-to-count/","title":"actionNameToCount - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskclient/RouteGuideCallCounter/actionNameToCount</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/action-name-to-count/#actionnametocount","title":"actionNameToCount","text":"<p>[jvm]\\ val actionNameToCount: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/counter/","title":"counter - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskclient/RouteGuideCallCounter/counter</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/counter/#counter","title":"counter","text":"<p>[jvm]\\ fun counter(name: String): AtomicInteger</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/create/","title":"create - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskclient/RouteGuideCallCounter/create</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(action: ClientAction): ClientNetworkInterceptor?</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/","title":"Package misk.grpc.miskserver - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskserver</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/#package-miskgrpcmiskserver","title":"Package misk.grpc.miskserver","text":""},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/#types","title":"Types","text":"Name Summary GetFeatureGrpcAction [jvm]class GetFeatureGrpcAction@Injectconstructor : WebAction, RouteGuideGetFeatureBlockingServer RouteChatGrpcAction [jvm]@Singletonclass RouteChatGrpcAction@Injectconstructor : WebAction, RouteGuideRouteChatBlockingServer RouteGuideMiskServiceModule [jvm]class RouteGuideMiskServiceModule : KAbstractModuleA module that runs a Misk gRPC server: Wire protos and a Jetty backend."},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/","title":"GetFeatureGrpcAction - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskserver/GetFeatureGrpcAction</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/#getfeaturegrpcaction","title":"GetFeatureGrpcAction","text":"<p>[jvm]\\ class GetFeatureGrpcAction@Injectconstructor : WebAction, RouteGuideGetFeatureBlockingServer</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/#functions","title":"Functions","text":"Name Summary GetFeature [jvm]open override fun GetFeature(request: Point): FeatureA simple RPC."},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/-get-feature-grpc-action/","title":"GetFeatureGrpcAction - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskserver/GetFeatureGrpcAction/GetFeatureGrpcAction</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/-get-feature-grpc-action/#getfeaturegrpcaction","title":"GetFeatureGrpcAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun GetFeatureGrpcAction()</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/-get-feature/","title":"GetFeature - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskserver/GetFeatureGrpcAction/GetFeature</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/-get-feature/#getfeature","title":"GetFeature","text":"<p>[jvm]\\ open override fun GetFeature(request: Point): Feature</p> <p>A simple RPC.</p> <p>Obtains the feature at a given position.</p> <p>A feature with an empty name is returned if there\u2019s no feature at the given position.</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/","title":"RouteChatGrpcAction - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskserver/RouteChatGrpcAction</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/#routechatgrpcaction","title":"RouteChatGrpcAction","text":"<p>[jvm]\\ @Singleton</p> <p>class RouteChatGrpcAction@Injectconstructor : WebAction, RouteGuideRouteChatBlockingServer</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/#functions","title":"Functions","text":"Name Summary RouteChat [jvm]open override fun RouteChat(request: MessageSource&lt;RouteNote&gt;, response: MessageSink&lt;RouteNote&gt;)A Bidirectional streaming RPC."},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/#properties","title":"Properties","text":"Name Summary welcomeMessage [jvm]var welcomeMessage: String? = null"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/-route-chat-grpc-action/","title":"RouteChatGrpcAction - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskserver/RouteChatGrpcAction/RouteChatGrpcAction</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/-route-chat-grpc-action/#routechatgrpcaction","title":"RouteChatGrpcAction","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun RouteChatGrpcAction()</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/-route-chat/","title":"RouteChat - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskserver/RouteChatGrpcAction/RouteChat</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/-route-chat/#routechat","title":"RouteChat","text":"<p>[jvm]\\ open override fun RouteChat(request: MessageSource&lt;RouteNote&gt;, response: MessageSink&lt;RouteNote&gt;)</p> <p>A Bidirectional streaming RPC.</p> <p>Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users).</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/welcome-message/","title":"welcomeMessage - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskserver/RouteChatGrpcAction/welcomeMessage</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/welcome-message/#welcomemessage","title":"welcomeMessage","text":"<p>[jvm]\\ var welcomeMessage: String? = null</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/","title":"RouteGuideMiskServiceModule - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskserver/RouteGuideMiskServiceModule</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/#routeguidemiskservicemodule","title":"RouteGuideMiskServiceModule","text":"<p>[jvm]\\ class RouteGuideMiskServiceModule : KAbstractModule</p> <p>A module that runs a Misk gRPC server: Wire protos and a Jetty backend.</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/#constructors","title":"Constructors","text":"RouteGuideMiskServiceModule [jvm]fun RouteGuideMiskServiceModule()"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideServerUrl [jvm]@Provides@Named(value = \u201cgrpc server\u201d)fun provideServerUrl(jetty: JettyService): HttpUrl requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/-route-guide-misk-service-module/","title":"RouteGuideMiskServiceModule - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskserver/RouteGuideMiskServiceModule/RouteGuideMiskServiceModule</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/-route-guide-misk-service-module/#routeguidemiskservicemodule","title":"RouteGuideMiskServiceModule","text":"<p>[jvm]\\ fun RouteGuideMiskServiceModule()</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/provide-server-url/","title":"provideServerUrl - Misk","text":"<p>//misk-grpc-tests/misk.grpc.miskserver/RouteGuideMiskServiceModule/provideServerUrl</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/provide-server-url/#provideserverurl","title":"provideServerUrl","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Named(value = \u201cgrpc server\u201d)</p> <p>fun provideServerUrl(jetty: JettyService): HttpUrl</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/","title":"Package misk.grpc.protocclient - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocclient</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/#package-miskgrpcprotocclient","title":"Package misk.grpc.protocclient","text":""},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/#types","title":"Types","text":"Name Summary GrpcChannelFactory [jvm]@Singletonclass GrpcChannelFactory@Injectconstructor(resourceLoader: ResourceLoader) ProtocGrpcClientModule [jvm]class ProtocGrpcClientModule : KAbstractModule"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/","title":"GrpcChannelFactory - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocclient/GrpcChannelFactory</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/#grpcchannelfactory","title":"GrpcChannelFactory","text":"<p>[jvm]\\ @Singleton</p> <p>class GrpcChannelFactory@Injectconstructor(resourceLoader: ResourceLoader)</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/#functions","title":"Functions","text":"Name Summary createClientChannel [jvm]@JvmOverloadsfun createClientChannel(serverAddress: SocketAddress, serverCertResource: String = \u201cclasspath:/ssl/server_cert.pem\u201d): ManagedChannel"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/#properties","title":"Properties","text":"Name Summary resourceLoader [jvm]val resourceLoader: ResourceLoader"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/-grpc-channel-factory/","title":"GrpcChannelFactory - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocclient/GrpcChannelFactory/GrpcChannelFactory</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/-grpc-channel-factory/#grpcchannelfactory","title":"GrpcChannelFactory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun GrpcChannelFactory(resourceLoader: ResourceLoader)</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/create-client-channel/","title":"createClientChannel - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocclient/GrpcChannelFactory/createClientChannel</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/create-client-channel/#createclientchannel","title":"createClientChannel","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun createClientChannel(serverAddress: SocketAddress, serverCertResource: String = \u201cclasspath:/ssl/server_cert.pem\u201d): ManagedChannel</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/resource-loader/","title":"resourceLoader - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocclient/GrpcChannelFactory/resourceLoader</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/resource-loader/#resourceloader","title":"resourceLoader","text":"<p>[jvm]\\ val resourceLoader: ResourceLoader</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/","title":"ProtocGrpcClientModule - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocclient/ProtocGrpcClientModule</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/#protocgrpcclientmodule","title":"ProtocGrpcClientModule","text":"<p>[jvm]\\ class ProtocGrpcClientModule : KAbstractModule</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideChannel [jvm]@Provides@Singletonfun provideChannel(@Named(value = \u201cgrpc server\u201d)url: HttpUrl, grpcChannelFactory: GrpcChannelFactory): ManagedChannel requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/-protoc-grpc-client-module/","title":"ProtocGrpcClientModule - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocclient/ProtocGrpcClientModule/ProtocGrpcClientModule</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/-protoc-grpc-client-module/#protocgrpcclientmodule","title":"ProtocGrpcClientModule","text":"<p>[jvm]\\ fun ProtocGrpcClientModule()</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/provide-channel/","title":"provideChannel - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocclient/ProtocGrpcClientModule/provideChannel</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/provide-channel/#providechannel","title":"provideChannel","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideChannel(@Named(value = \u201cgrpc server\u201d)url: HttpUrl, grpcChannelFactory: GrpcChannelFactory): ManagedChannel</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/","title":"Package misk.grpc.protocserver - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocserver</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/#package-miskgrpcprotocserver","title":"Package misk.grpc.protocserver","text":""},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/#types","title":"Types","text":"Name Summary ProtocGrpcService [jvm]@Singletonclass ProtocGrpcService@Injectconstructor(services: List&lt;BindableService&gt;, resourceLoader: ResourceLoader) : AbstractIdleServiceRuns a standard gRPC server: generated protoc protos and a Netty backend. This isn\u2019t how Misk does gRPC, but it should be useful to confirm interoperability. RouteGuideProtocServiceModule [jvm]class RouteGuideProtocServiceModule : KAbstractModuleA module that runs a standard gRPC server: generated protoc protos and a Netty backend."},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/","title":"ProtocGrpcService - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocserver/ProtocGrpcService</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/#protocgrpcservice","title":"ProtocGrpcService","text":"<p>[jvm]\\ @Singleton</p> <p>class ProtocGrpcService@Injectconstructor(services: List&lt;BindableService&gt;, resourceLoader: ResourceLoader) : AbstractIdleService</p> <p>Runs a standard gRPC server: generated protoc protos and a Netty backend. This isn\u2019t how Misk does gRPC, but it should be useful to confirm interoperability.</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/#constructors","title":"Constructors","text":"ProtocGrpcService [jvm]@Injectfun ProtocGrpcService(services: List&lt;BindableService&gt;, resourceLoader: ResourceLoader)"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/#properties","title":"Properties","text":"Name Summary server [jvm]lateinit var server: Server url [jvm]val url: HttpUrl"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/-protoc-grpc-service/","title":"ProtocGrpcService - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocserver/ProtocGrpcService/ProtocGrpcService</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/-protoc-grpc-service/#protocgrpcservice","title":"ProtocGrpcService","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ProtocGrpcService(services: List&lt;BindableService&gt;, resourceLoader: ResourceLoader)</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/server/","title":"server - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocserver/ProtocGrpcService/server</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/server/#server","title":"server","text":"<p>[jvm]\\ lateinit var server: Server</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/url/","title":"url - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocserver/ProtocGrpcService/url</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/url/#url","title":"url","text":"<p>[jvm]\\ val url: HttpUrl</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/","title":"RouteGuideProtocServiceModule - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocserver/RouteGuideProtocServiceModule</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/#routeguideprotocservicemodule","title":"RouteGuideProtocServiceModule","text":"<p>[jvm]\\ class RouteGuideProtocServiceModule : KAbstractModule</p> <p>A module that runs a standard gRPC server: generated protoc protos and a Netty backend.</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/#constructors","title":"Constructors","text":"RouteGuideProtocServiceModule [jvm]fun RouteGuideProtocServiceModule()"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideServerUrl [jvm]@Provides@Named(value = \u201cgrpc server\u201d)fun provideServerUrl(protocGrpcService: ProtocGrpcService): HttpUrl requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/-route-guide-protoc-service-module/","title":"RouteGuideProtocServiceModule - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocserver/RouteGuideProtocServiceModule/RouteGuideProtocServiceModule</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/-route-guide-protoc-service-module/#routeguideprotocservicemodule","title":"RouteGuideProtocServiceModule","text":"<p>[jvm]\\ fun RouteGuideProtocServiceModule()</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/provide-server-url/","title":"provideServerUrl - Misk","text":"<p>//misk-grpc-tests/misk.grpc.protocserver/RouteGuideProtocServiceModule/provideServerUrl</p>"},{"location":"0.x/misk-grpc-tests/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/provide-server-url/#provideserverurl","title":"provideServerUrl","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Named(value = \u201cgrpc server\u201d)</p> <p>fun provideServerUrl(protocGrpcService: ProtocGrpcService): HttpUrl</p>"},{"location":"0.x/misk-hibernate/","title":"misk-hibernate - Misk","text":"<p>//misk-hibernate</p>"},{"location":"0.x/misk-hibernate/#misk-hibernate","title":"misk-hibernate","text":""},{"location":"0.x/misk-hibernate/#packages","title":"Packages","text":"Name misk.hibernate misk.hibernate.annotation misk.hibernate.migrate misk.hibernate.pagination"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/","title":"Package misk.hibernate - Misk","text":"<p>//misk-hibernate/misk.hibernate</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/#package-miskhibernate","title":"Package misk.hibernate","text":""},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/#types","title":"Types","text":"Name Summary BindPolicy [jvm]enum BindPolicy : Enum&lt;BindPolicy&gt; Control how we register listeners. Check [jvm]typealias Check = misk.jdbc.Check Constraint [jvm]annotation class Constraint(path: String, operator: Operator)Annotates a function on a subinterface of Query to indicate which column (or path of columns) it constrains and using which operator. DbChild [jvm]interface DbChild&lt;R : DbRoot&lt;R&gt;, T : DbChild&lt;R, T&gt;&gt; : DbSharded&lt;R, T&gt; Marker interface for sharded entities that stay with their root inside an entity group. Entity group children will always stay inside the same shard regardless of shard splits and so on. That means transactions inside an entity group is always safe. A typical sharding strategy has a DbCustomer as a root and all of the entities that belong to that customer as children. DbEntity [jvm]interface DbEntity&lt;T : DbEntity&lt;T&gt;&gt;Marker interface for persistent entities. Ensures that only persistent entities can be passed into Session methods. DbRoot [jvm]interface DbRoot&lt;T : DbRoot&lt;T&gt;&gt; : DbSharded&lt;T, T&gt; Marker interface for sharded entity group roots. Entity group roots are spread out across shards they can also have children in the form of DbChild subclasses that always stay in the same shard as their roots. A typical root is for example DbCustomer. DbSharded [jvm]interface DbSharded&lt;R : DbRoot&lt;R&gt;, T : DbSharded&lt;R, T&gt;&gt; : DbEntity&lt;T&gt; Marker interface for sharded persistent entities. Do not subclass directly, instead subclass either DbRoot for entity group roots or DbChild for entity group children. DbTimestampedEntity [jvm]interface DbTimestampedEntityThis complements DbEntity for entities that keep updated_at and created_at timestamps. DbUnsharded [jvm]interface DbUnsharded&lt;T : DbUnsharded&lt;T&gt;&gt; : DbEntity&lt;T&gt; Marker interface for persistent entities that have a bounded growth and do not require sharding. Fetch [jvm]annotation class Fetch(path: String, joinType: JoinType)Annotates a function on a subinterface of Query to specify that the association at the given path should be fetched in a single query. The type of join used will be specified by joinType. Gid [jvm]@Embeddabledata class Gid&lt;R : DbRoot&lt;R&gt;, T : DbSharded&lt;R, T&gt;&gt;(rootId: Id&lt;R&gt;, id: Id&lt;T&gt;) : SerializableEntity group id, maps to two long columns one for the root id and one for the row GidGenerator [jvm]class GidGenerator : AbstractPostInsertGenerator, Configurable HibernateEntityModule [jvm]abstract class HibernateEntityModule(qualifier: KClass&lt;out Annotation&gt;) : KAbstractModuleBinds hibernate entities and event listeners intended for the Transacter annotated by qualifier. HibernateModule [jvm]class HibernateModule@JvmOverloadsconstructor(qualifier: KClass&lt;out Annotation&gt;, config: DataSourceConfig, readerQualifier: KClass&lt;out Annotation&gt;?, readerConfig: DataSourceConfig?, databasePool: DatabasePool) : KAbstractModule Id [jvm]data class Id&lt;T : DbEntity&lt;T&gt;&gt;(id: Long) : Serializable, Comparable&lt;Id&lt;T&gt;&gt; Type-safe persistent identifier, mapped to a long column. IdType [jvm]class IdType : UserType, ResultSetIdentifierConsumerBinds Id&lt;*&gt; in the DB to a bigint in MySQL. JsonColumn [jvm]@Target(allowedTargets = [AnnotationTarget.FIELD])annotation class JsonColumnPut this on a column field to get Hibernate to persist it as JSON using Moshi. It will use the injector\u2019s configured Moshi instance. Use misk.moshi.MoshiModule to customize. Operator [jvm]enum Operator : Enum&lt;Operator&gt; OrBuilder [jvm]interface OrBuilder&lt;Q : Query&lt;*&gt;&gt;This functional interface accepts a set of options. Each option lambda is executed within the scope of a query. It is inappropriate to call methods like list() and uniqueResult() on this query. Order [jvm]annotation class Order(path: String, asc: Boolean)Annotates a function on a subinterface of Query to indicate which columns to order the the selected columns. Path [jvm]data class Path(schema: String?, table: String?, column: String?) PostCommitHookFailedException [jvm]class PostCommitHookFailedException(cause: Throwable) : ExceptionPostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook Projection [jvm]interface ProjectionMarker interface for query projections. Property [jvm]annotation class Property(path: String)Annotates a parameter of a Projection data class to indicate which column (or path of columns) to populate the parameter with. ProtoColumn [jvm]@Target(allowedTargets = [AnnotationTarget.FIELD])annotation class ProtoColumnPut this on a column field for a class generated by Wire to get Hibernate to persist with protobuf serialization. Query [jvm]interface Query&lt;T&gt;Base class for SQL queries. RetryTransactionException [jvm]class RetryTransactionException@JvmOverloadsconstructor(message: String?, cause: Throwable?) : ExceptionThrown to explicitly trigger a retry, subject to retry limits and config such as noRetries(). SecretColumn [jvm]@Target(allowedTargets = [AnnotationTarget.FIELD])annotation class SecretColumn(keyName: String, indexable: Boolean)SecretColumn is an annotation used to get Hibernate to encrypt a field before writing it to the database. Select [jvm]annotation class Select(path: String)Annotates a function on a subinterface of Query to execute a SELECT query. Functions with this annotation must return a List to fetch multiple rows results, or a regular type to fetch a unique result. Session [jvm]interface Session : Session Transacter [jvm]interface TransacterProvides explicit block-based transaction demarcation. TransacterService [jvm]interface TransacterService : ServiceMarker interface for services that provide database transactors. TransformedType [jvm]@Target(allowedTargets = [AnnotationTarget.ANNOTATION_CLASS])annotation class TransformedType(transformer: KClass&lt;out Transformer&gt;, targetType: KClass&lt;*&gt;)TransformedType is a meta-annotation for assigning arbitrary transformers to entity fields. Use it to annotate attributes that will mark a field to be transformed. Transformer [jvm]abstract class Transformer(context: TransformerContext) TransformerContext [jvm]data class TransformerContext(tableName: String, columnName: String, arguments: Map&lt;String, &gt;, field: KClass&lt;&gt;) ValidationReport [jvm]data class ValidationReport(schemas: Set&lt;String&gt;, tables: Set&lt;String&gt;, columns: Set&lt;String&gt;) VitessDialect [jvm]class VitessDialect : MySQL57Dialect"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/#functions","title":"Functions","text":"Name Summary allowFullScatter [jvm]inline fun &lt;T, Q : Query&lt;T&gt;&gt; Q.allowFullScatter(): Q allowTableScan [jvm]inline fun &lt;T, Q : Query&lt;T&gt;&gt; Q.allowTableScan(): Q constraint [jvm]fun &lt;T, Q : Query&lt;T&gt;&gt; Q.constraint(block: CriteriaBuilder.(root: Root&lt;*&gt;) -&gt; Predicate): QEquivalent to Query.addConstraint, but takes the CriteriaBuilder as a receiver and returns this. This may be easier to use with method chaining. failSafeRead [jvm]fun &lt;T&gt; Transacter.failSafeRead(block: (session: Session) -&gt; T): TRuns a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions.[jvm]fun &lt;T&gt; Transacter.failSafeRead(shard: Shard, block: (session: Session) -&gt; T): T getByType [jvm]fun ResultSet.getByType(klass: KClass&lt;*&gt;?, columnLabel: String): Serializable? load [jvm]inline fun &lt;T : DbEntity&lt;T&gt;&gt; Session.load(id: Id&lt;T&gt;): T loadOrNull [jvm]inline fun &lt;T : DbEntity&lt;T&gt;&gt; Session.loadOrNull(id: Id&lt;T&gt;): T? loadSharded [jvm]inline fun &lt;R : DbRoot&lt;R&gt;, S : DbSharded&lt;R, S&gt;&gt; Session.loadSharded(gid: Gid&lt;R, S&gt;): S newQuery [jvm]inline fun &lt;T : Query&lt;*&gt;&gt; Query.Factory.newQuery(): T or [jvm]inline fun &lt;T, Q : Query&lt;T&gt;&gt; Q.or(lambda: OrBuilder&lt;Q&gt;.() -&gt; Unit): QCollects options that are all OR\u2019d together. If any are true the predicate matches. queryHint [jvm]fun &lt;T, Q : Query&lt;T&gt;&gt; Q.queryHint(hint: String): QAdds query hint to the query. (Chainable version of Query.addQueryHint.) setByType [jvm]fun PreparedStatement.setByType(klass: KClass&lt;*&gt;?, index: Int, value: Any) shards [jvm]fun Transacter.shards(): Set&lt;Shard&gt;fun Transacter.shards(keyspace: Keyspace): Collection&lt;Shard&gt; transaction [jvm]fun &lt;T&gt; Transacter.transaction(shard: Shard, block: (session: Session) -&gt; T): TCommits a transaction with operations of block."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/allow-full-scatter/","title":"allowFullScatter - Misk","text":"<p>//misk-hibernate/misk.hibernate/allowFullScatter</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/allow-full-scatter/#allowfullscatter","title":"allowFullScatter","text":"<p>[jvm]\\ inline fun &lt;T, Q : Query&lt;T&gt;&gt; Q.allowFullScatter(): Q</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/allow-table-scan/","title":"allowTableScan - Misk","text":"<p>//misk-hibernate/misk.hibernate/allowTableScan</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/allow-table-scan/#allowtablescan","title":"allowTableScan","text":"<p>[jvm]\\ inline fun &lt;T, Q : Query&lt;T&gt;&gt; Q.allowTableScan(): Q</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/constraint/","title":"constraint - Misk","text":"<p>//misk-hibernate/misk.hibernate/constraint</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/constraint/#constraint","title":"constraint","text":"<p>[jvm]\\ fun &lt;T, Q : Query&lt;T&gt;&gt; Q.constraint(block: CriteriaBuilder.(root: Root&lt;*&gt;) -&gt; Predicate): Q</p> <p>Equivalent to Query.addConstraint, but takes the CriteriaBuilder as a receiver and returns this. This may be easier to use with method chaining.</p> <p>The root parameter should be used to select which property of the target entity to match against.</p> <p>queryFactory.newQuery&lt;OperatorsMovieQuery&gt;()\\     .constraint { root -&gt; like(root.get(\u201cname\u201d), \u201cJurassic%\u201d) }\\     .count(session)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/fail-safe-read/","title":"failSafeRead - Misk","text":"<p>//misk-hibernate/misk.hibernate/failSafeRead</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/fail-safe-read/#failsaferead","title":"failSafeRead","text":"<p>[jvm]\\ fun &lt;T&gt; Transacter.failSafeRead(block: (session: Session) -&gt; T): T</p> <p>Runs a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions.</p> <p>[jvm]\\ fun &lt;T&gt; Transacter.failSafeRead(shard: Shard, block: (session: Session) -&gt; T): T</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/get-by-type/","title":"getByType - Misk","text":"<p>//misk-hibernate/misk.hibernate/getByType</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/get-by-type/#getbytype","title":"getByType","text":"<p>[jvm]\\ fun ResultSet.getByType(klass: KClass&lt;*&gt;?, columnLabel: String): Serializable?</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/load-or-null/","title":"loadOrNull - Misk","text":"<p>//misk-hibernate/misk.hibernate/loadOrNull</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/load-or-null/#loadornull","title":"loadOrNull","text":"<p>[jvm]\\ inline fun &lt;T : DbEntity&lt;T&gt;&gt; Session.loadOrNull(id: Id&lt;T&gt;): T?</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/load-sharded/","title":"loadSharded - Misk","text":"<p>//misk-hibernate/misk.hibernate/loadSharded</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/load-sharded/#loadsharded","title":"loadSharded","text":"<p>[jvm]\\ inline fun &lt;R : DbRoot&lt;R&gt;, S : DbSharded&lt;R, S&gt;&gt; Session.loadSharded(gid: Gid&lt;R, S&gt;): S</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/load/","title":"load - Misk","text":"<p>//misk-hibernate/misk.hibernate/load</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/load/#load","title":"load","text":"<p>[jvm]\\ inline fun &lt;T : DbEntity&lt;T&gt;&gt; Session.load(id: Id&lt;T&gt;): T</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/new-query/","title":"newQuery - Misk","text":"<p>//misk-hibernate/misk.hibernate/newQuery</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/new-query/#newquery","title":"newQuery","text":"<p>[jvm]\\ inline fun &lt;T : Query&lt;*&gt;&gt; Query.Factory.newQuery(): T</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/or/","title":"or - Misk","text":"<p>//misk-hibernate/misk.hibernate/or</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/or/#or","title":"or","text":"<p>[jvm]\\ inline fun &lt;T, Q : Query&lt;T&gt;&gt; Q.or(lambda: OrBuilder&lt;Q&gt;.() -&gt; Unit): Q</p> <p>Collects options that are all OR\u2019d together. If any are true the predicate matches.</p> <p>queryFactory.newQuery&lt;OperatorsMovieQuery&gt;()\\     .or {\\       option { name(\u201cRocky 1\u201d) }\\       option { name(\u201cRocky 3\u201d) }\\     }\\     .list()</p> <p>Each option has a list of constraints that are themselves AND\u2019d together.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/query-hint/","title":"queryHint - Misk","text":"<p>//misk-hibernate/misk.hibernate/queryHint</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/query-hint/#queryhint","title":"queryHint","text":"<p>[jvm]\\ fun &lt;T, Q : Query&lt;T&gt;&gt; Q.queryHint(hint: String): Q</p> <p>Adds query hint to the query. (Chainable version of Query.addQueryHint.)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/set-by-type/","title":"setByType - Misk","text":"<p>//misk-hibernate/misk.hibernate/setByType</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/set-by-type/#setbytype","title":"setByType","text":"<p>[jvm]\\ fun PreparedStatement.setByType(klass: KClass&lt;*&gt;?, index: Int, value: Any)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/shards/","title":"shards - Misk","text":"<p>//misk-hibernate/misk.hibernate/shards</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/shards/#shards","title":"shards","text":"<p>[jvm]\\ fun Transacter.shards(): Set&lt;Shard&gt;</p> <p>fun Transacter.shards(keyspace: Keyspace): Collection&lt;Shard&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/transaction/","title":"transaction - Misk","text":"<p>//misk-hibernate/misk.hibernate/transaction</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/transaction/#transaction","title":"transaction","text":"<p>[jvm]\\ fun &lt;T&gt; Transacter.transaction(shard: Shard, block: (session: Session) -&gt; T): T</p> <p>Commits a transaction with operations of block.</p> <p>New objects must be persisted with an explicit call to Session.save. Updates are performed implicitly by modifying objects returned from a query.</p> <p>For example if we were to save a new movie to a movie database, and update the revenue of an existing movie:</p> <p>transacter.transaction { session -&gt;\\   // Saving a new entity to the database needs an explicit call.\\   val starWars = DbMovie(name = \u201cStar Wars\u201d, year = \u201c1977\u201d, revenue = 775_400_000)\\   session.save(starWars)\\ \\   // Updating a movie from the database is done by modifying the object.\\   // Changes are saved implicitly.\\   val movie: DbMovie = queryFactory.newQuery&lt;MovieQuery&gt;().id(id).uniqueResult(session)!!\\   movie.revenue = 100_000_000\\ }</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-bind-policy/","title":"BindPolicy - Misk","text":"<p>//misk-hibernate/misk.hibernate/BindPolicy</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-bind-policy/#bindpolicy","title":"BindPolicy","text":"<p>[jvm]\\ enum BindPolicy : Enum&lt;BindPolicy&gt; </p> <p>Control how we register listeners.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-bind-policy/#entries","title":"Entries","text":"APPEND [jvm]APPEND() REPLACE [jvm]REPLACE() PREPEND [jvm]PREPEND()"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-bind-policy/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-bind-policy/-a-p-p-e-n-d/","title":"APPEND - Misk","text":"<p>//misk-hibernate/misk.hibernate/BindPolicy/APPEND</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-bind-policy/-a-p-p-e-n-d/#append","title":"APPEND","text":"<p>[jvm]\\ APPEND()</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-bind-policy/-a-p-p-e-n-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-bind-policy/-p-r-e-p-e-n-d/","title":"PREPEND - Misk","text":"<p>//misk-hibernate/misk.hibernate/BindPolicy/PREPEND</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-bind-policy/-p-r-e-p-e-n-d/#prepend","title":"PREPEND","text":"<p>[jvm]\\ PREPEND()</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-bind-policy/-p-r-e-p-e-n-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-bind-policy/-r-e-p-l-a-c-e/","title":"REPLACE - Misk","text":"<p>//misk-hibernate/misk.hibernate/BindPolicy/REPLACE</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-bind-policy/-r-e-p-l-a-c-e/#replace","title":"REPLACE","text":"<p>[jvm]\\ REPLACE()</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-bind-policy/-r-e-p-l-a-c-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-constraint/","title":"Constraint - Misk","text":"<p>//misk-hibernate/misk.hibernate/Constraint</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-constraint/#constraint","title":"Constraint","text":"<p>[jvm]\\ annotation class Constraint(path: String, operator: Operator)</p> <p>Annotates a function on a subinterface of Query to indicate which column (or path of columns) it constrains and using which operator.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-constraint/#constructors","title":"Constructors","text":"Constraint [jvm]fun Constraint(path: String, operator: Operator = Operator.EQ)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-constraint/#properties","title":"Properties","text":"Name Summary operator [jvm]val operator: Operator path [jvm]val path: String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-constraint/-constraint/","title":"Constraint - Misk","text":"<p>//misk-hibernate/misk.hibernate/Constraint/Constraint</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-constraint/-constraint/#constraint","title":"Constraint","text":"<p>[jvm]\\ fun Constraint(path: String, operator: Operator = Operator.EQ)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-constraint/operator/","title":"operator - Misk","text":"<p>//misk-hibernate/misk.hibernate/Constraint/operator</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-constraint/operator/#operator","title":"operator","text":"<p>[jvm]\\ val operator: Operator</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-constraint/path/","title":"path - Misk","text":"<p>//misk-hibernate/misk.hibernate/Constraint/path</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-constraint/path/#path","title":"path","text":"<p>[jvm]\\ val path: String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-child/","title":"DbChild - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbChild</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-child/#dbchild","title":"DbChild","text":"<p>[jvm]\\ interface DbChild&lt;R : DbRoot&lt;R&gt;, T : DbChild&lt;R, T&gt;&gt; : DbSharded&lt;R, T&gt; </p> <p>Marker interface for sharded entities that stay with their root inside an entity group. Entity group children will always stay inside the same shard regardless of shard splits and so on. That means transactions inside an entity group is always safe. A typical sharding strategy has a DbCustomer as a root and all of the entities that belong to that customer as children.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-child/#properties","title":"Properties","text":"Name Summary gid [jvm]abstract val gid: Gid&lt;R, T&gt; id [jvm]open override val id: Id&lt;T&gt; rootId [jvm]abstract val rootId: Id&lt;R&gt;"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-child/id/","title":"id - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbChild/id</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-child/id/#id","title":"id","text":"<p>[jvm]\\ open override val id: Id&lt;T&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-entity/","title":"DbEntity - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbEntity</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-entity/#dbentity","title":"DbEntity","text":"<p>[jvm]\\ interface DbEntity&lt;T : DbEntity&lt;T&gt;&gt;</p> <p>Marker interface for persistent entities. Ensures that only persistent entities can be passed into Session methods.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-entity/#properties","title":"Properties","text":"Name Summary id [jvm]abstract val id: Id&lt;T&gt;"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-entity/#inheritors","title":"Inheritors","text":"Name DbSharded DbUnsharded"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-entity/id/","title":"id - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbEntity/id</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-entity/id/#id","title":"id","text":"<p>[jvm]\\ abstract val id: Id&lt;T&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-root/","title":"DbRoot - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbRoot</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-root/#dbroot","title":"DbRoot","text":"<p>[jvm]\\ interface DbRoot&lt;T : DbRoot&lt;T&gt;&gt; : DbSharded&lt;T, T&gt; </p> <p>Marker interface for sharded entity group roots. Entity group roots are spread out across shards they can also have children in the form of DbChild subclasses that always stay in the same shard as their roots. A typical root is for example DbCustomer.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-root/#properties","title":"Properties","text":"Name Summary gid [jvm]open override val gid: Gid&lt;T, T&gt; id [jvm]abstract val id: Id&lt;T&gt; rootId [jvm]open override val rootId: Id&lt;T&gt;"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-root/gid/","title":"gid - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbRoot/gid</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-root/gid/#gid","title":"gid","text":"<p>[jvm]\\ open override val gid: Gid&lt;T, T&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-root/root-id/","title":"rootId - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbRoot/rootId</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-root/root-id/#rootid","title":"rootId","text":"<p>[jvm]\\ open override val rootId: Id&lt;T&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-sharded/","title":"DbSharded - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbSharded</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-sharded/#dbsharded","title":"DbSharded","text":"<p>[jvm]\\ interface DbSharded&lt;R : DbRoot&lt;R&gt;, T : DbSharded&lt;R, T&gt;&gt; : DbEntity&lt;T&gt; </p> <p>Marker interface for sharded persistent entities. Do not subclass directly, instead subclass either DbRoot for entity group roots or DbChild for entity group children.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-sharded/#properties","title":"Properties","text":"Name Summary gid [jvm]abstract val gid: Gid&lt;R, T&gt; id [jvm]abstract val id: Id&lt;T&gt; rootId [jvm]abstract val rootId: Id&lt;R&gt;"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-sharded/#inheritors","title":"Inheritors","text":"Name DbChild DbRoot"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-sharded/gid/","title":"gid - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbSharded/gid</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-sharded/gid/#gid","title":"gid","text":"<p>[jvm]\\ abstract val gid: Gid&lt;R, T&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-sharded/root-id/","title":"rootId - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbSharded/rootId</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-sharded/root-id/#rootid","title":"rootId","text":"<p>[jvm]\\ abstract val rootId: Id&lt;R&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-timestamped-entity/","title":"DbTimestampedEntity - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbTimestampedEntity</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-timestamped-entity/#dbtimestampedentity","title":"DbTimestampedEntity","text":"<p>[jvm]\\ interface DbTimestampedEntity</p> <p>This complements DbEntity for entities that keep updated_at and created_at timestamps.</p> <p>Misk uses the application\u2019s clock time to set created_at and updated_at. We prefer the application\u2019s (ie. JVM\u2019s) clock over the database\u2019s clock because only the application\u2019s clock can be faked in tests.</p> <p>To use timestamped entities first add two columns in your CREATE TABLE statement. You may also add an optional index on updated_at:</p> <p>CREATE TABLE movies(\\   id bigint NOT NULL PRIMARY KEY AUTO_INCREMENT,\\   created_at timestamp(3) NOT NULL DEFAULT NOW(3),\\   updated_at timestamp(3) NOT NULL DEFAULT NOW(3) ON UPDATE NOW(3),\\   \u2026\\   KEY <code>idx_updated_at</code> (<code>updated_at</code>)\\ );</p> <p>The above SQL uses timestamp(3) and NOW(3) to get millisecond precision which interoperates nicely with Java. Although we declare DEFAULT NOW(3) and ON UPDATE NOW(3), these don\u2019t apply to writes from Hibernate because it always provides a value explicitly.</p> <p>Next implement this interface and add the following declarations to your entity class:</p> <p>@Entity\\ @Table(name = \u201cmovies\u201d)\\ class DbMovie() : DbEntity&lt;DbMovie&gt;, DbTimestampedEntity {\\ \\   \u2026\\ \\   @Column\\   override lateinit var updated_at: Instant\\ \\   @Column\\   override lateinit var created_at: Instant\\ \\   \u2026\\ \\ }</p> <p>The timestamp listener will automatically populate these values on save and update. (Incidentally, the @Columns are not marked nullable = false because the timestamp listener is triggered after the nullability check.)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-timestamped-entity/#properties","title":"Properties","text":"Name Summary created_at [jvm]abstract var created_at: Instant updated_at [jvm]abstract var updated_at: Instant"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-timestamped-entity/created_at/","title":"created_at - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbTimestampedEntity/created_at</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-timestamped-entity/created_at/#created_at","title":"created_at","text":"<p>[jvm]\\ abstract var created_at: Instant</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-timestamped-entity/updated_at/","title":"updated_at - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbTimestampedEntity/updated_at</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-timestamped-entity/updated_at/#updated_at","title":"updated_at","text":"<p>[jvm]\\ abstract var updated_at: Instant</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-unsharded/","title":"DbUnsharded - Misk","text":"<p>//misk-hibernate/misk.hibernate/DbUnsharded</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-unsharded/#dbunsharded","title":"DbUnsharded","text":"<p>[jvm]\\ interface DbUnsharded&lt;T : DbUnsharded&lt;T&gt;&gt; : DbEntity&lt;T&gt; </p> <p>Marker interface for persistent entities that have a bounded growth and do not require sharding.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-db-unsharded/#properties","title":"Properties","text":"Name Summary id [jvm]abstract val id: Id&lt;T&gt;"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-fetch/","title":"Fetch - Misk","text":"<p>//misk-hibernate/misk.hibernate/Fetch</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-fetch/#fetch","title":"Fetch","text":"<p>[jvm]\\ annotation class Fetch(path: String, joinType: JoinType)</p> <p>Annotates a function on a subinterface of Query to specify that the association at the given path should be fetched in a single query. The type of join used will be specified by joinType.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-fetch/#constructors","title":"Constructors","text":"Fetch [jvm]fun Fetch(path: String = \u201c\u201d, joinType: JoinType = LEFT)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-fetch/#properties","title":"Properties","text":"Name Summary joinType [jvm]val joinType: JoinType path [jvm]val path: String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-fetch/-fetch/","title":"Fetch - Misk","text":"<p>//misk-hibernate/misk.hibernate/Fetch/Fetch</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-fetch/-fetch/#fetch","title":"Fetch","text":"<p>[jvm]\\ fun Fetch(path: String = \u201c\u201d, joinType: JoinType = LEFT)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-fetch/join-type/","title":"joinType - Misk","text":"<p>//misk-hibernate/misk.hibernate/Fetch/joinType</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-fetch/join-type/#jointype","title":"joinType","text":"<p>[jvm]\\ val joinType: JoinType</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-fetch/path/","title":"path - Misk","text":"<p>//misk-hibernate/misk.hibernate/Fetch/path</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-fetch/path/#path","title":"path","text":"<p>[jvm]\\ val path: String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/","title":"Gid - Misk","text":"<p>//misk-hibernate/misk.hibernate/Gid</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/#gid","title":"Gid","text":"<p>[jvm]\\ @Embeddable</p> <p>data class Gid&lt;R : DbRoot&lt;R&gt;, T : DbSharded&lt;R, T&gt;&gt;(rootId: Id&lt;R&gt;, id: Id&lt;T&gt;) : Serializable</p> <p>Entity group id, maps to two long columns one for the root id and one for the row</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/#constructors","title":"Constructors","text":"Gid [jvm]fun &lt;R : DbRoot&lt;R&gt;, T : DbSharded&lt;R, T&gt;&gt; Gid(rootId: Id&lt;R&gt;, id: Id&lt;T&gt;)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/#functions","title":"Functions","text":"Name Summary shardKey [jvm]fun shardKey(): Shard.Key toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/#properties","title":"Properties","text":"Name Summary id [jvm]val id: Id&lt;T&gt; rootId [jvm]val rootId: Id&lt;R&gt;"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/-gid/","title":"Gid - Misk","text":"<p>//misk-hibernate/misk.hibernate/Gid/Gid</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/-gid/#gid","title":"Gid","text":"<p>[jvm]\\ fun &lt;R : DbRoot&lt;R&gt;, T : DbSharded&lt;R, T&gt;&gt; Gid(rootId: Id&lt;R&gt;, id: Id&lt;T&gt;)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/id/","title":"id - Misk","text":"<p>//misk-hibernate/misk.hibernate/Gid/id</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/id/#id","title":"id","text":"<p>[jvm]\\ val id: Id&lt;T&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/root-id/","title":"rootId - Misk","text":"<p>//misk-hibernate/misk.hibernate/Gid/rootId</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/root-id/#rootid","title":"rootId","text":"<p>[jvm]\\ val rootId: Id&lt;R&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/shard-key/","title":"shardKey - Misk","text":"<p>//misk-hibernate/misk.hibernate/Gid/shardKey</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/shard-key/#shardkey","title":"shardKey","text":"<p>[jvm]\\ fun shardKey(): Shard.Key</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/to-string/","title":"toString - Misk","text":"<p>//misk-hibernate/misk.hibernate/Gid/toString</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid-generator/","title":"GidGenerator - Misk","text":"<p>//misk-hibernate/misk.hibernate/GidGenerator</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid-generator/#gidgenerator","title":"GidGenerator","text":"<p>[jvm]\\ class GidGenerator : AbstractPostInsertGenerator, Configurable</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid-generator/#functions","title":"Functions","text":"Name Summary configure [jvm]open override fun configure(type: Type, params: Properties, serviceRegistry: ServiceRegistry) determineBulkInsertionIdentifierGenerationSelectFragment [jvm]open override fun determineBulkInsertionIdentifierGenerationSelectFragment(p0: Dialect): String generate [jvm]open override fun generate(p0: SharedSessionContractImplementor, p1: Any): Serializable getInsertGeneratedIdentifierDelegate [jvm]open override fun getInsertGeneratedIdentifierDelegate(persister: PostInsertIdentityPersister, dialect: Dialect, isGetGeneratedKeysEnabled: Boolean): InsertGeneratedIdentifierDelegate supportsBulkInsertionIdentifierGeneration [jvm]open override fun supportsBulkInsertionIdentifierGeneration(): Boolean supportsJdbcBatchInserts [jvm]open override fun supportsJdbcBatchInserts(): Boolean"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid-generator/-gid-generator/","title":"GidGenerator - Misk","text":"<p>//misk-hibernate/misk.hibernate/GidGenerator/GidGenerator</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid-generator/-gid-generator/#gidgenerator","title":"GidGenerator","text":"<p>[jvm]\\ fun GidGenerator()</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid-generator/configure/","title":"configure - Misk","text":"<p>//misk-hibernate/misk.hibernate/GidGenerator/configure</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid-generator/configure/#configure","title":"configure","text":"<p>[jvm]\\ open override fun configure(type: Type, params: Properties, serviceRegistry: ServiceRegistry)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid-generator/get-insert-generated-identifier-delegate/","title":"getInsertGeneratedIdentifierDelegate - Misk","text":"<p>//misk-hibernate/misk.hibernate/GidGenerator/getInsertGeneratedIdentifierDelegate</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-gid-generator/get-insert-generated-identifier-delegate/#getinsertgeneratedidentifierdelegate","title":"getInsertGeneratedIdentifierDelegate","text":"<p>[jvm]\\ open override fun getInsertGeneratedIdentifierDelegate(persister: PostInsertIdentityPersister, dialect: Dialect, isGetGeneratedKeysEnabled: Boolean): InsertGeneratedIdentifierDelegate</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-entity-module/","title":"HibernateEntityModule - Misk","text":"<p>//misk-hibernate/misk.hibernate/HibernateEntityModule</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-entity-module/#hibernateentitymodule","title":"HibernateEntityModule","text":"<p>[jvm]\\ abstract class HibernateEntityModule(qualifier: KClass&lt;out Annotation&gt;) : KAbstractModule</p> <p>Binds hibernate entities and event listeners intended for the Transacter annotated by qualifier.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-entity-module/#constructors","title":"Constructors","text":"HibernateEntityModule [jvm]fun HibernateEntityModule(qualifier: KClass&lt;out Annotation&gt;)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-entity-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) configureHibernate [jvm]abstract fun configureHibernate() convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-entity-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-entity-module/-hibernate-entity-module/","title":"HibernateEntityModule - Misk","text":"<p>//misk-hibernate/misk.hibernate/HibernateEntityModule/HibernateEntityModule</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-entity-module/-hibernate-entity-module/#hibernateentitymodule","title":"HibernateEntityModule","text":"<p>[jvm]\\ fun HibernateEntityModule(qualifier: KClass&lt;out Annotation&gt;)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-entity-module/configure-hibernate/","title":"configureHibernate - Misk","text":"<p>//misk-hibernate/misk.hibernate/HibernateEntityModule/configureHibernate</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-entity-module/configure-hibernate/#configurehibernate","title":"configureHibernate","text":"<p>[jvm]\\ abstract fun configureHibernate()</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-module/","title":"HibernateModule - Misk","text":"<p>//misk-hibernate/misk.hibernate/HibernateModule</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-module/#hibernatemodule","title":"HibernateModule","text":"<p>[jvm]\\ class HibernateModule@JvmOverloadsconstructor(qualifier: KClass&lt;out Annotation&gt;, config: DataSourceConfig, readerQualifier: KClass&lt;out Annotation&gt;?, readerConfig: DataSourceConfig?, databasePool: DatabasePool) : KAbstractModule</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-module/#constructors","title":"Constructors","text":"HibernateModule [jvm]fun HibernateModule(qualifier: KClass&lt;out Annotation&gt;, config: DataSourceConfig, databasePool: DatabasePool = RealDatabasePool) HibernateModule [jvm]fun HibernateModule(qualifier: KClass&lt;out Annotation&gt;, readerQualifier: KClass&lt;out Annotation&gt;, cluster: DataSourceClusterConfig, databasePool: DatabasePool = RealDatabasePool)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder config [jvm]val config: DataSourceConfig databasePool [jvm]val databasePool: DatabasePool readerConfig [jvm]val readerConfig: DataSourceConfig?"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-module/-hibernate-module/","title":"HibernateModule - Misk","text":"<p>//misk-hibernate/misk.hibernate/HibernateModule/HibernateModule</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-module/-hibernate-module/#hibernatemodule","title":"HibernateModule","text":"<p>[jvm]\\ fun HibernateModule(qualifier: KClass&lt;out Annotation&gt;, config: DataSourceConfig, databasePool: DatabasePool = RealDatabasePool)</p> <p>fun HibernateModule(qualifier: KClass&lt;out Annotation&gt;, readerQualifier: KClass&lt;out Annotation&gt;, cluster: DataSourceClusterConfig, databasePool: DatabasePool = RealDatabasePool)</p> <p>@JvmOverloads</p> <p>fun HibernateModule(qualifier: KClass&lt;out Annotation&gt;, config: DataSourceConfig, readerQualifier: KClass&lt;out Annotation&gt;?, readerConfig: DataSourceConfig?, databasePool: DatabasePool = RealDatabasePool)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-module/config/","title":"config - Misk","text":"<p>//misk-hibernate/misk.hibernate/HibernateModule/config</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-module/config/#config","title":"config","text":"<p>[jvm]\\ val config: DataSourceConfig</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-module/database-pool/","title":"databasePool - Misk","text":"<p>//misk-hibernate/misk.hibernate/HibernateModule/databasePool</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-module/database-pool/#databasepool","title":"databasePool","text":"<p>[jvm]\\ val databasePool: DatabasePool</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-module/reader-config/","title":"readerConfig - Misk","text":"<p>//misk-hibernate/misk.hibernate/HibernateModule/readerConfig</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-hibernate-module/reader-config/#readerconfig","title":"readerConfig","text":"<p>[jvm]\\ val readerConfig: DataSourceConfig?</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/","title":"Id - Misk","text":"<p>//misk-hibernate/misk.hibernate/Id</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/#id","title":"Id","text":"<p>[jvm]\\ data class Id&lt;T : DbEntity&lt;T&gt;&gt;(id: Long) : Serializable, Comparable&lt;Id&lt;T&gt;&gt; </p> <p>Type-safe persistent identifier, mapped to a long column.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/#constructors","title":"Constructors","text":"Id [jvm]fun Id(id: Long)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/#functions","title":"Functions","text":"Name Summary compareTo [jvm]open operator override fun compareTo(other: Id&lt;T&gt;): Int shardKey [jvm]fun shardKey(): Shard.Key toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/#properties","title":"Properties","text":"Name Summary id [jvm]val id: Long"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/-id/","title":"Id - Misk","text":"<p>//misk-hibernate/misk.hibernate/Id/Id</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/-id/#id","title":"Id","text":"<p>[jvm]\\ fun Id(id: Long)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/compare-to/","title":"compareTo - Misk","text":"<p>//misk-hibernate/misk.hibernate/Id/compareTo</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/compare-to/#compareto","title":"compareTo","text":"<p>[jvm]\\ open operator override fun compareTo(other: Id&lt;T&gt;): Int</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/id/","title":"id - Misk","text":"<p>//misk-hibernate/misk.hibernate/Id/id</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/id/#id","title":"id","text":"<p>[jvm]\\ val id: Long</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/shard-key/","title":"shardKey - Misk","text":"<p>//misk-hibernate/misk.hibernate/Id/shardKey</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/shard-key/#shardkey","title":"shardKey","text":"<p>[jvm]\\ fun shardKey(): Shard.Key</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/to-string/","title":"toString - Misk","text":"<p>//misk-hibernate/misk.hibernate/Id/toString</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/","title":"IdType - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/#idtype","title":"IdType","text":"<p>[jvm]\\ class IdType : UserType, ResultSetIdentifierConsumer</p> <p>Binds Id&lt;*&gt; in the DB to a bigint in MySQL.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/#constructors","title":"Constructors","text":"IdType [jvm]fun IdType()"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/#functions","title":"Functions","text":"Name Summary assemble [jvm]open override fun assemble(cached: Serializable, owner: Any?): Any consumeIdentifier [jvm]open override fun consumeIdentifier(resultSet: ResultSet): Serializable deepCopy [jvm]open override fun deepCopy(value: Any?): Any? disassemble [jvm]open override fun disassemble(value: Any?): Long equals [jvm]open override fun equals(x: Any?, y: Any?): Boolean hashCode [jvm]open override fun hashCode(x: Any?): Int isMutable [jvm]open override fun isMutable(): Boolean nullSafeGet [jvm]open override fun nullSafeGet(rs: ResultSet, names: Array&lt;out String&gt;, session: SharedSessionContractImplementor?, owner: Any?): Any? nullSafeSet [jvm]open override fun nullSafeSet(st: PreparedStatement, value: Any?, index: Int, session: SharedSessionContractImplementor?) replace [jvm]open override fun replace(original: Any, target: Any, owner: Any?): Any returnedClass [jvm]open override fun returnedClass(): &lt;ERROR CLASS&gt; sqlTypes [jvm]open override fun sqlTypes(): IntArray"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/-id-type/","title":"IdType - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType/IdType</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/-id-type/#idtype","title":"IdType","text":"<p>[jvm]\\ fun IdType()</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/assemble/","title":"assemble - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType/assemble</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/assemble/#assemble","title":"assemble","text":"<p>[jvm]\\ open override fun assemble(cached: Serializable, owner: Any?): Any</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/consume-identifier/","title":"consumeIdentifier - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType/consumeIdentifier</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/consume-identifier/#consumeidentifier","title":"consumeIdentifier","text":"<p>[jvm]\\ open override fun consumeIdentifier(resultSet: ResultSet): Serializable</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/deep-copy/","title":"deepCopy - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType/deepCopy</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/deep-copy/#deepcopy","title":"deepCopy","text":"<p>[jvm]\\ open override fun deepCopy(value: Any?): Any?</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/disassemble/","title":"disassemble - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType/disassemble</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/disassemble/#disassemble","title":"disassemble","text":"<p>[jvm]\\ open override fun disassemble(value: Any?): Long</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/equals/","title":"equals - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType/equals</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/equals/#equals","title":"equals","text":"<p>[jvm]\\ open override fun equals(x: Any?, y: Any?): Boolean</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/hash-code/","title":"hashCode - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType/hashCode</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open override fun hashCode(x: Any?): Int</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/is-mutable/","title":"isMutable - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType/isMutable</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/is-mutable/#ismutable","title":"isMutable","text":"<p>[jvm]\\ open override fun isMutable(): Boolean</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/null-safe-get/","title":"nullSafeGet - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType/nullSafeGet</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/null-safe-get/#nullsafeget","title":"nullSafeGet","text":"<p>[jvm]\\ open override fun nullSafeGet(rs: ResultSet, names: Array&lt;out String&gt;, session: SharedSessionContractImplementor?, owner: Any?): Any?</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/null-safe-set/","title":"nullSafeSet - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType/nullSafeSet</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/null-safe-set/#nullsafeset","title":"nullSafeSet","text":"<p>[jvm]\\ open override fun nullSafeSet(st: PreparedStatement, value: Any?, index: Int, session: SharedSessionContractImplementor?)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/replace/","title":"replace - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType/replace</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/replace/#replace","title":"replace","text":"<p>[jvm]\\ open override fun replace(original: Any, target: Any, owner: Any?): Any</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/returned-class/","title":"returnedClass - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType/returnedClass</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/returned-class/#returnedclass","title":"returnedClass","text":"<p>[jvm]\\ open override fun returnedClass(): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/sql-types/","title":"sqlTypes - Misk","text":"<p>//misk-hibernate/misk.hibernate/IdType/sqlTypes</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-id-type/sql-types/#sqltypes","title":"sqlTypes","text":"<p>[jvm]\\ open override fun sqlTypes(): IntArray</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-json-column/","title":"JsonColumn - Misk","text":"<p>//misk-hibernate/misk.hibernate/JsonColumn</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-json-column/#jsoncolumn","title":"JsonColumn","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FIELD])</p> <p>annotation class JsonColumn</p> <p>Put this on a column field to get Hibernate to persist it as JSON using Moshi. It will use the injector\u2019s configured Moshi instance. Use misk.moshi.MoshiModule to customize.</p> <p>It is an error to put this annotation on a mutable field. We don\u2019t defensively copy these when we read them out of the database.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-json-column/#constructors","title":"Constructors","text":"JsonColumn [jvm]fun JsonColumn()"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-json-column/-json-column/","title":"JsonColumn - Misk","text":"<p>//misk-hibernate/misk.hibernate/JsonColumn/JsonColumn</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-json-column/-json-column/#jsoncolumn","title":"JsonColumn","text":"<p>[jvm]\\ fun JsonColumn()</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/","title":"Operator - Misk","text":"<p>//misk-hibernate/misk.hibernate/Operator</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/#operator","title":"Operator","text":"<p>[jvm]\\ enum Operator : Enum&lt;Operator&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/#entries","title":"Entries","text":"IS_NULL [jvm]IS_NULL()a IS NULL IS_NOT_NULL [jvm]IS_NOT_NULL()a IS NOT NULL NOT_IN [jvm]NOT_IN()a NOT IN (b1, b2, b3, \u2026) IN [jvm]IN()a IN (b1, b2, b3, \u2026) NE [jvm]NE()a != b GT [jvm]GT()a &gt; b GE [jvm]GE()a &gt;= b EQ_OR_IS_NULL [jvm]EQ_OR_IS_NULL()a = b if b is not null, a is null if b is null EQ [jvm]EQ()a = b LE [jvm]LE()a &lt;= b LT [jvm]LT()a &lt; b"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-e-q/","title":"EQ - Misk","text":"<p>//misk-hibernate/misk.hibernate/Operator/EQ</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-e-q/#eq","title":"EQ","text":"<p>[jvm]\\ EQ()</p> <p>a = b</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-e-q/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-e-q_-o-r_-i-s_-n-u-l-l/","title":"EQ_OR_IS_NULL - Misk","text":"<p>//misk-hibernate/misk.hibernate/Operator/EQ_OR_IS_NULL</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-e-q_-o-r_-i-s_-n-u-l-l/#eq_or_is_null","title":"EQ_OR_IS_NULL","text":"<p>[jvm]\\ EQ_OR_IS_NULL()</p> <p>a = b if b is not null, a is null if b is null</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-e-q_-o-r_-i-s_-n-u-l-l/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-g-e/","title":"GE - Misk","text":"<p>//misk-hibernate/misk.hibernate/Operator/GE</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-g-e/#ge","title":"GE","text":"<p>[jvm]\\ GE()</p> <p>a &gt;= b</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-g-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-g-t/","title":"GT - Misk","text":"<p>//misk-hibernate/misk.hibernate/Operator/GT</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-g-t/#gt","title":"GT","text":"<p>[jvm]\\ GT()</p> <p>a &gt; b</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-g-t/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-i-n/","title":"IN - Misk","text":"<p>//misk-hibernate/misk.hibernate/Operator/IN</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-i-n/#in","title":"IN","text":"<p>[jvm]\\ IN()</p> <p>a IN (b1, b2, b3, \u2026)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-i-n/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-i-s_-n-o-t_-n-u-l-l/","title":"IS_NOT_NULL - Misk","text":"<p>//misk-hibernate/misk.hibernate/Operator/IS_NOT_NULL</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-i-s_-n-o-t_-n-u-l-l/#is_not_null","title":"IS_NOT_NULL","text":"<p>[jvm]\\ IS_NOT_NULL()</p> <p>a IS NOT NULL</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-i-s_-n-o-t_-n-u-l-l/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-i-s_-n-u-l-l/","title":"IS_NULL - Misk","text":"<p>//misk-hibernate/misk.hibernate/Operator/IS_NULL</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-i-s_-n-u-l-l/#is_null","title":"IS_NULL","text":"<p>[jvm]\\ IS_NULL()</p> <p>a IS NULL</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-i-s_-n-u-l-l/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-l-e/","title":"LE - Misk","text":"<p>//misk-hibernate/misk.hibernate/Operator/LE</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-l-e/#le","title":"LE","text":"<p>[jvm]\\ LE()</p> <p>a &lt;= b</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-l-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-l-t/","title":"LT - Misk","text":"<p>//misk-hibernate/misk.hibernate/Operator/LT</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-l-t/#lt","title":"LT","text":"<p>[jvm]\\ LT()</p> <p>a &lt; b</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-l-t/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-n-e/","title":"NE - Misk","text":"<p>//misk-hibernate/misk.hibernate/Operator/NE</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-n-e/#ne","title":"NE","text":"<p>[jvm]\\ NE()</p> <p>a != b</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-n-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-n-o-t_-i-n/","title":"NOT_IN - Misk","text":"<p>//misk-hibernate/misk.hibernate/Operator/NOT_IN</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-n-o-t_-i-n/#not_in","title":"NOT_IN","text":"<p>[jvm]\\ NOT_IN()</p> <p>a NOT IN (b1, b2, b3, \u2026)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-operator/-n-o-t_-i-n/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-or-builder/","title":"OrBuilder - Misk","text":"<p>//misk-hibernate/misk.hibernate/OrBuilder</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-or-builder/#orbuilder","title":"OrBuilder","text":"<p>[jvm]\\ interface OrBuilder&lt;Q : Query&lt;*&gt;&gt;</p> <p>This functional interface accepts a set of options. Each option lambda is executed within the scope of a query. It is inappropriate to call methods like list() and uniqueResult() on this query.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-or-builder/#functions","title":"Functions","text":"Name Summary option [jvm]abstract fun option(lambda: Q.() -&gt; Unit)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-or-builder/option/","title":"option - Misk","text":"<p>//misk-hibernate/misk.hibernate/OrBuilder/option</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-or-builder/option/#option","title":"option","text":"<p>[jvm]\\ abstract fun option(lambda: Q.() -&gt; Unit)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-order/","title":"Order - Misk","text":"<p>//misk-hibernate/misk.hibernate/Order</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-order/#order","title":"Order","text":"<p>[jvm]\\ annotation class Order(path: String, asc: Boolean)</p> <p>Annotates a function on a subinterface of Query to indicate which columns to order the the selected columns.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-order/#constructors","title":"Constructors","text":"Order [jvm]fun Order(path: String, asc: Boolean = true)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-order/#properties","title":"Properties","text":"Name Summary asc [jvm]val asc: Boolean = true path [jvm]val path: String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-order/-order/","title":"Order - Misk","text":"<p>//misk-hibernate/misk.hibernate/Order/Order</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-order/-order/#order","title":"Order","text":"<p>[jvm]\\ fun Order(path: String, asc: Boolean = true)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-order/asc/","title":"asc - Misk","text":"<p>//misk-hibernate/misk.hibernate/Order/asc</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-order/asc/#asc","title":"asc","text":"<p>[jvm]\\ val asc: Boolean = true</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-order/path/","title":"path - Misk","text":"<p>//misk-hibernate/misk.hibernate/Order/path</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-order/path/#path","title":"path","text":"<p>[jvm]\\ val path: String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/","title":"Path - Misk","text":"<p>//misk-hibernate/misk.hibernate/Path</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/#path","title":"Path","text":"<p>[jvm]\\ data class Path(schema: String?, table: String?, column: String?)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/#functions","title":"Functions","text":"Name Summary toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/#properties","title":"Properties","text":"Name Summary column [jvm]val column: String? schema [jvm]val schema: String? table [jvm]val table: String?"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/-path/","title":"Path - Misk","text":"<p>//misk-hibernate/misk.hibernate/Path/Path</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/-path/#path","title":"Path","text":"<p>[jvm]\\ fun Path(schema: String?, table: String?, column: String?)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/column/","title":"column - Misk","text":"<p>//misk-hibernate/misk.hibernate/Path/column</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/column/#column","title":"column","text":"<p>[jvm]\\ val column: String?</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/schema/","title":"schema - Misk","text":"<p>//misk-hibernate/misk.hibernate/Path/schema</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/schema/#schema","title":"schema","text":"<p>[jvm]\\ val schema: String?</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/table/","title":"table - Misk","text":"<p>//misk-hibernate/misk.hibernate/Path/table</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/table/#table","title":"table","text":"<p>[jvm]\\ val table: String?</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/to-string/","title":"toString - Misk","text":"<p>//misk-hibernate/misk.hibernate/Path/toString</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-path/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-post-commit-hook-failed-exception/","title":"PostCommitHookFailedException - Misk","text":"<p>//misk-hibernate/misk.hibernate/PostCommitHookFailedException</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-post-commit-hook-failed-exception/#postcommithookfailedexception","title":"PostCommitHookFailedException","text":"<p>[jvm]\\ class PostCommitHookFailedException(cause: Throwable) : Exception</p> <p>PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-post-commit-hook-failed-exception/#constructors","title":"Constructors","text":"PostCommitHookFailedException [jvm]fun PostCommitHookFailedException(cause: Throwable)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-post-commit-hook-failed-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-post-commit-hook-failed-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-post-commit-hook-failed-exception/-post-commit-hook-failed-exception/","title":"PostCommitHookFailedException - Misk","text":"<p>//misk-hibernate/misk.hibernate/PostCommitHookFailedException/PostCommitHookFailedException</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-post-commit-hook-failed-exception/-post-commit-hook-failed-exception/#postcommithookfailedexception","title":"PostCommitHookFailedException","text":"<p>[jvm]\\ fun PostCommitHookFailedException(cause: Throwable)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-projection/","title":"Projection - Misk","text":"<p>//misk-hibernate/misk.hibernate/Projection</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-projection/#projection","title":"Projection","text":"<p>[jvm]\\ interface Projection</p> <p>Marker interface for query projections.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-property/","title":"Property - Misk","text":"<p>//misk-hibernate/misk.hibernate/Property</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-property/#property","title":"Property","text":"<p>[jvm]\\ annotation class Property(path: String)</p> <p>Annotates a parameter of a Projection data class to indicate which column (or path of columns) to populate the parameter with.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-property/#constructors","title":"Constructors","text":"Property [jvm]fun Property(path: String)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-property/#properties","title":"Properties","text":"Name Summary path [jvm]val path: String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-property/-property/","title":"Property - Misk","text":"<p>//misk-hibernate/misk.hibernate/Property/Property</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-property/-property/#property","title":"Property","text":"<p>[jvm]\\ fun Property(path: String)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-property/path/","title":"path - Misk","text":"<p>//misk-hibernate/misk.hibernate/Property/path</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-property/path/#path","title":"path","text":"<p>[jvm]\\ val path: String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-proto-column/","title":"ProtoColumn - Misk","text":"<p>//misk-hibernate/misk.hibernate/ProtoColumn</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-proto-column/#protocolumn","title":"ProtoColumn","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FIELD])</p> <p>annotation class ProtoColumn</p> <p>Put this on a column field for a class generated by Wire to get Hibernate to persist with protobuf serialization.</p> <p>There is no defensive copy when reading from the database as protobufs are assumed to be immutable.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-proto-column/#constructors","title":"Constructors","text":"ProtoColumn [jvm]fun ProtoColumn()"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-proto-column/-proto-column/","title":"ProtoColumn - Misk","text":"<p>//misk-hibernate/misk.hibernate/ProtoColumn/ProtoColumn</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-proto-column/-proto-column/#protocolumn","title":"ProtoColumn","text":"<p>[jvm]\\ fun ProtoColumn()</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/","title":"Query - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/#query","title":"Query","text":"<p>[jvm]\\ interface Query&lt;T&gt;</p> <p>Base class for SQL queries.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/#types","title":"Types","text":"Name Summary Factory [jvm]interface FactoryCreates instances of queries."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/#functions","title":"Functions","text":"Name Summary addJpaConstraint [jvm]abstract fun addJpaConstraint(block: (root: Root&lt;*&gt;, builder: CriteriaBuilder) -&gt; Predicate)Constrain a query by operating directly on the JPA criteria builder. addQueryHint [jvm]abstract fun addQueryHint(hint: String)Adds a SQL hint to the query. clone [jvm]abstract fun &lt;Q : Query&lt;*&gt;&gt; clone(): Q count [jvm]abstract fun count(session: Session): LongReturns the number of rows that match the query. delete [jvm]abstract fun delete(session: Session): IntReturns the number of entities deleted. disableCheck [jvm]abstract fun disableCheck(check: Check) dynamicAddConstraint [jvm]abstract fun dynamicAddConstraint(path: String, operator: Operator, value: Any? = null)Constrain a query using a path known only at runtime. dynamicAddFetch [jvm]abstract fun dynamicAddFetch(path: String, joinType: JoinType)Fetch the given path as a join, using the given joinType dynamicAddOrder [jvm]abstract fun dynamicAddOrder(path: String, asc: Boolean) dynamicList [jvm]abstract fun dynamicList(session: Session, selection: (CriteriaBuilder, Root&lt;T&gt;) -&gt; Selection&lt;out Any&gt;): List&lt;List&lt;Any?&gt;&gt;Manual projections are returned as a list of rows containing a list of cells.[jvm]abstract fun dynamicList(session: Session, projectedPaths: List&lt;String&gt;): List&lt;List&lt;Any?&gt;&gt; dynamicUniqueResult [jvm]abstract fun dynamicUniqueResult(session: Session, selection: (CriteriaBuilder, Root&lt;T&gt;) -&gt; Selection&lt;out Any&gt;): List&lt;Any?&gt;?Manual projections are returned as a list of cells. Returns null if there were no results.[jvm]abstract fun dynamicUniqueResult(session: Session, projectedPaths: List&lt;String&gt;): List&lt;Any?&gt;? list [jvm]abstract fun list(session: Session): List&lt;T&gt; newOrBuilder [jvm]abstract fun &lt;T : Query&lt;*&gt;&gt; newOrBuilder(): OrBuilder&lt;T&gt; uniqueResult [jvm]abstract fun uniqueResult(session: Session): T?Asserts that there is either zero or one results."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/#properties","title":"Properties","text":"Name Summary firstResult [jvm]abstract var firstResult: IntSet the first row to retrieve. The default is 0. maxRows [jvm]abstract var maxRows: IntHow many rows to return. Must be -1 or in range 1..10_000."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/add-jpa-constraint/","title":"addJpaConstraint - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/addJpaConstraint</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/add-jpa-constraint/#addjpaconstraint","title":"addJpaConstraint","text":"<p>[jvm]\\ abstract fun addJpaConstraint(block: (root: Root&lt;*&gt;, builder: CriteriaBuilder) -&gt; Predicate)</p> <p>Constrain a query by operating directly on the JPA criteria builder.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/add-query-hint/","title":"addQueryHint - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/addQueryHint</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/add-query-hint/#addqueryhint","title":"addQueryHint","text":"<p>[jvm]\\ abstract fun addQueryHint(hint: String)</p> <p>Adds a SQL hint to the query.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/clone/","title":"clone - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/clone</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/clone/#clone","title":"clone","text":"<p>[jvm]\\ abstract fun &lt;Q : Query&lt;*&gt;&gt; clone(): Q</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/count/","title":"count - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/count</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/count/#count","title":"count","text":"<p>[jvm]\\ abstract fun count(session: Session): Long</p> <p>Returns the number of rows that match the query.</p> <p>Warning: The performance of this operation is comparable to a SELECT. MySQL scans all of the counted rows. A query that returns a count of 5000 is typically 10 times slower than a query that returns a count of 500.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/delete/","title":"delete - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/delete</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/delete/#delete","title":"delete","text":"<p>[jvm]\\ abstract fun delete(session: Session): Int</p> <p>Returns the number of entities deleted.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/disable-check/","title":"disableCheck - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/disableCheck</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/disable-check/#disablecheck","title":"disableCheck","text":"<p>[jvm]\\ abstract fun disableCheck(check: Check)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/dynamic-add-constraint/","title":"dynamicAddConstraint - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/dynamicAddConstraint</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/dynamic-add-constraint/#dynamicaddconstraint","title":"dynamicAddConstraint","text":"<p>[jvm]\\ abstract fun dynamicAddConstraint(path: String, operator: Operator, value: Any? = null)</p> <p>Constrain a query using a path known only at runtime.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/dynamic-add-fetch/","title":"dynamicAddFetch - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/dynamicAddFetch</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/dynamic-add-fetch/#dynamicaddfetch","title":"dynamicAddFetch","text":"<p>[jvm]\\ abstract fun dynamicAddFetch(path: String, joinType: JoinType)</p> <p>Fetch the given path as a join, using the given joinType</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/dynamic-add-order/","title":"dynamicAddOrder - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/dynamicAddOrder</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/dynamic-add-order/#dynamicaddorder","title":"dynamicAddOrder","text":"<p>[jvm]\\ abstract fun dynamicAddOrder(path: String, asc: Boolean)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/dynamic-list/","title":"dynamicList - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/dynamicList</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/dynamic-list/#dynamiclist","title":"dynamicList","text":"<p>[jvm]\\ abstract fun dynamicList(session: Session, selection: (CriteriaBuilder, Root&lt;T&gt;) -&gt; Selection&lt;out Any&gt;): List&lt;List&lt;Any?&gt;&gt;</p> <p>Manual projections are returned as a list of rows containing a list of cells.</p> <p>[jvm]\\ abstract fun dynamicList(session: Session, projectedPaths: List&lt;String&gt;): List&lt;List&lt;Any?&gt;&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/dynamic-unique-result/","title":"dynamicUniqueResult - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/dynamicUniqueResult</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/dynamic-unique-result/#dynamicuniqueresult","title":"dynamicUniqueResult","text":"<p>[jvm]\\ abstract fun dynamicUniqueResult(session: Session, selection: (CriteriaBuilder, Root&lt;T&gt;) -&gt; Selection&lt;out Any&gt;): List&lt;Any?&gt;?</p> <p>Manual projections are returned as a list of cells. Returns null if there were no results.</p> <p>[jvm]\\ abstract fun dynamicUniqueResult(session: Session, projectedPaths: List&lt;String&gt;): List&lt;Any?&gt;?</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/first-result/","title":"firstResult - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/firstResult</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/first-result/#firstresult","title":"firstResult","text":"<p>[jvm]\\ abstract var firstResult: Int</p> <p>Set the first row to retrieve. The default is 0.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/list/","title":"list - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/list</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/list/#list","title":"list","text":"<p>[jvm]\\ abstract fun list(session: Session): List&lt;T&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/max-rows/","title":"maxRows - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/maxRows</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/max-rows/#maxrows","title":"maxRows","text":"<p>[jvm]\\ abstract var maxRows: Int</p> <p>How many rows to return. Must be -1 or in range 1..10_000.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/new-or-builder/","title":"newOrBuilder - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/newOrBuilder</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/new-or-builder/#neworbuilder","title":"newOrBuilder","text":"<p>[jvm]\\ abstract fun &lt;T : Query&lt;*&gt;&gt; newOrBuilder(): OrBuilder&lt;T&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/unique-result/","title":"uniqueResult - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/uniqueResult</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/unique-result/#uniqueresult","title":"uniqueResult","text":"<p>[jvm]\\ abstract fun uniqueResult(session: Session): T?</p> <p>Asserts that there is either zero or one results.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/-factory/","title":"Factory - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/Factory</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ interface Factory</p> <p>Creates instances of queries.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/-factory/#functions","title":"Functions","text":"Name Summary dynamicQuery [jvm]abstract fun &lt;E : DbEntity&lt;E&gt;&gt; dynamicQuery(entityClass: KClass&lt;E&gt;): Query&lt;E&gt; newQuery [jvm]abstract fun &lt;Q : Query&lt;*&gt;&gt; newQuery(queryClass: KClass&lt;Q&gt;): Q"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/-factory/#extensions","title":"Extensions","text":"Name Summary newQuery [jvm]inline fun &lt;T : Query&lt;*&gt;&gt; Query.Factory.newQuery(): T"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/-factory/dynamic-query/","title":"dynamicQuery - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/Factory/dynamicQuery</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/-factory/dynamic-query/#dynamicquery","title":"dynamicQuery","text":"<p>[jvm]\\ abstract fun &lt;E : DbEntity&lt;E&gt;&gt; dynamicQuery(entityClass: KClass&lt;E&gt;): Query&lt;E&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/-factory/new-query/","title":"newQuery - Misk","text":"<p>//misk-hibernate/misk.hibernate/Query/Factory/newQuery</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-query/-factory/new-query/#newquery","title":"newQuery","text":"<p>[jvm]\\ abstract fun &lt;Q : Query&lt;*&gt;&gt; newQuery(queryClass: KClass&lt;Q&gt;): Q</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-retry-transaction-exception/","title":"RetryTransactionException - Misk","text":"<p>//misk-hibernate/misk.hibernate/RetryTransactionException</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-retry-transaction-exception/#retrytransactionexception","title":"RetryTransactionException","text":"<p>[jvm]\\ class RetryTransactionException@JvmOverloadsconstructor(message: String?, cause: Throwable?) : Exception</p> <p>Thrown to explicitly trigger a retry, subject to retry limits and config such as noRetries().</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-retry-transaction-exception/#constructors","title":"Constructors","text":"RetryTransactionException [jvm]@JvmOverloadsfun RetryTransactionException(message: String? = null, cause: Throwable? = null)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-retry-transaction-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-retry-transaction-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-retry-transaction-exception/-retry-transaction-exception/","title":"RetryTransactionException - Misk","text":"<p>//misk-hibernate/misk.hibernate/RetryTransactionException/RetryTransactionException</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-retry-transaction-exception/-retry-transaction-exception/#retrytransactionexception","title":"RetryTransactionException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun RetryTransactionException(message: String? = null, cause: Throwable? = null)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-secret-column/","title":"SecretColumn - Misk","text":"<p>//misk-hibernate/misk.hibernate/SecretColumn</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-secret-column/#secretcolumn","title":"SecretColumn","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FIELD])</p> <p>annotation class SecretColumn(keyName: String, indexable: Boolean)</p> <p>SecretColumn is an annotation used to get Hibernate to encrypt a field before writing it to the database.</p> <p>The keyName string is used to specify the name of the key to be used to encrypt and decrypt the value.</p> <p>The indexable attribute controls whether or not this data will be able to be indexed, defaulted to true. This uses deterministic encryption: encrypting the same plaintext will produce the same ciphertext. This is weaker than non-deterministic encryption, but makes searching for encrypted values possible. If searching for ciphertexts is not something your use case requires, set indexable to false for stronger security.</p> <p>Install misk.crypto.CryptoModule to configure the keys the app uses. Example: In app-common.yaml:</p> <p>crypto:\\   keys:\\     - key_name: \u201csecretColumnKey\u201d</p> <p>Then, in an entity class:</p> <p>@Column\\ @SecretColumn(keyName = \u201csecretColumnKey\u201d)\\ var secret: String</p> <p>A Column annotated with SecretColumn has the following limitations:</p> <ul> <li>It must be declared as VARBINARY() in its respective MySQL table. For example:</li> </ul> <p>CREATE TABLE my_table(\\   id BIGINT NOT NULL AUTO_INCREMENT,\\   secret VARBINARY(500)</p> <ul> <li>It cannot be annotates with any other custom column annotations like ProtoColumn or JsonColumn.</li> </ul> <p>Note:</p> <p>The resulting ciphertext that is persisted in the database may be much larger in size than the original plaintext because it also contains some metadata. Please make sure to allocate enough space when defining the column using VARBINARY().</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-secret-column/#constructors","title":"Constructors","text":"SecretColumn [jvm]fun SecretColumn(keyName: String, indexable: Boolean = true)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-secret-column/#properties","title":"Properties","text":"Name Summary indexable [jvm]val indexable: Boolean = true keyName [jvm]val keyName: String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-secret-column/-secret-column/","title":"SecretColumn - Misk","text":"<p>//misk-hibernate/misk.hibernate/SecretColumn/SecretColumn</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-secret-column/-secret-column/#secretcolumn","title":"SecretColumn","text":"<p>[jvm]\\ fun SecretColumn(keyName: String, indexable: Boolean = true)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-secret-column/indexable/","title":"indexable - Misk","text":"<p>//misk-hibernate/misk.hibernate/SecretColumn/indexable</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-secret-column/indexable/#indexable","title":"indexable","text":"<p>[jvm]\\ val indexable: Boolean = true</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-secret-column/key-name/","title":"keyName - Misk","text":"<p>//misk-hibernate/misk.hibernate/SecretColumn/keyName</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-secret-column/key-name/#keyname","title":"keyName","text":"<p>[jvm]\\ val keyName: String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-select/","title":"Select - Misk","text":"<p>//misk-hibernate/misk.hibernate/Select</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-select/#select","title":"Select","text":"<p>[jvm]\\ annotation class Select(path: String)</p> <p>Annotates a function on a subinterface of Query to execute a SELECT query. Functions with this annotation must return a List to fetch multiple rows results, or a regular type to fetch a unique result.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-select/#constructors","title":"Constructors","text":"Select [jvm]fun Select(path: String = \u201c\u201d)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-select/#properties","title":"Properties","text":"Name Summary path [jvm]val path: String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-select/-select/","title":"Select - Misk","text":"<p>//misk-hibernate/misk.hibernate/Select/Select</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-select/-select/#select","title":"Select","text":"<p>[jvm]\\ fun Select(path: String = \u201c\u201d)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-select/path/","title":"path - Misk","text":"<p>//misk-hibernate/misk.hibernate/Select/path</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-select/path/#path","title":"path","text":"<p>[jvm]\\ val path: String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/","title":"Session - Misk","text":"<p>//misk-hibernate/misk.hibernate/Session</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/#session","title":"Session","text":"<p>[jvm]\\ interface Session : Session</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/#functions","title":"Functions","text":"Name Summary delete [jvm]abstract fun &lt;T : DbEntity&lt;T&gt;&gt; delete(entity: T) disableChecks [jvm]abstract fun &lt;T&gt; disableChecks(checks: Collection&lt;Check&gt;, body: () -&gt; T): T load [jvm]abstract fun &lt;T : DbEntity&lt;T&gt;&gt; load(id: Id&lt;T&gt;, type: KClass&lt;T&gt;): T loadOrNull [jvm]abstract fun &lt;T : DbEntity&lt;T&gt;&gt; loadOrNull(id: Id&lt;T&gt;, type: KClass&lt;T&gt;): T? loadSharded [jvm]abstract fun &lt;R : DbRoot&lt;R&gt;, T : DbSharded&lt;R, T&gt;&gt; loadSharded(gid: Gid&lt;R, T&gt;, type: KClass&lt;T&gt;): T onPostCommit [jvm]abstract fun onPostCommit(work: () -&gt; Unit) onPreCommit [jvm]abstract fun onPreCommit(work: () -&gt; Unit) onSessionClose [jvm]abstract fun onSessionClose(work: () -&gt; Unit) save [jvm]abstract fun &lt;T : DbEntity&lt;T&gt;&gt; save(entity: T): Id&lt;T&gt; shards [jvm]abstract fun shards(): Set&lt;Shard&gt;abstract fun shards(keyspace: Keyspace): Collection&lt;Shard&gt; target [jvm]abstract fun &lt;T&gt; target(shard: Shard, function: () -&gt; T): T useConnection [jvm]abstract fun &lt;T&gt; useConnection(work: (Connection) -&gt; T): T withoutChecks [jvm]abstract fun &lt;T&gt; withoutChecks(vararg checks: Check, body: () -&gt; T): TDisable one or more checks for the duration of the execution of body. The passed in checks will entirely replace the other ignored checks at this point, they will not be merged with whatever is there currently."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/#properties","title":"Properties","text":"Name Summary hibernateSession [jvm]abstract val hibernateSession: Session"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/#extensions","title":"Extensions","text":"Name Summary load [jvm]inline fun &lt;T : DbEntity&lt;T&gt;&gt; Session.load(id: Id&lt;T&gt;): T loadOrNull [jvm]inline fun &lt;T : DbEntity&lt;T&gt;&gt; Session.loadOrNull(id: Id&lt;T&gt;): T? loadSharded [jvm]inline fun &lt;R : DbRoot&lt;R&gt;, S : DbSharded&lt;R, S&gt;&gt; Session.loadSharded(gid: Gid&lt;R, S&gt;): S"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/delete/","title":"delete - Misk","text":"<p>//misk-hibernate/misk.hibernate/Session/delete</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/delete/#delete","title":"delete","text":"<p>[jvm]\\ abstract fun &lt;T : DbEntity&lt;T&gt;&gt; delete(entity: T)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/delete/#throws","title":"Throws","text":"java.lang.IllegalStateException when delete is called on a read only session."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/disable-checks/","title":"disableChecks - Misk","text":"<p>//misk-hibernate/misk.hibernate/Session/disableChecks</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/disable-checks/#disablechecks","title":"disableChecks","text":"<p>[jvm]\\ abstract fun &lt;T&gt; disableChecks(checks: Collection&lt;Check&gt;, body: () -&gt; T): T</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/hibernate-session/","title":"hibernateSession - Misk","text":"<p>//misk-hibernate/misk.hibernate/Session/hibernateSession</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/hibernate-session/#hibernatesession","title":"hibernateSession","text":"<p>[jvm]\\ abstract val hibernateSession: Session</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/load-or-null/","title":"loadOrNull - Misk","text":"<p>//misk-hibernate/misk.hibernate/Session/loadOrNull</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/load-or-null/#loadornull","title":"loadOrNull","text":"<p>[jvm]\\ abstract fun &lt;T : DbEntity&lt;T&gt;&gt; loadOrNull(id: Id&lt;T&gt;, type: KClass&lt;T&gt;): T?</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/load-sharded/","title":"loadSharded - Misk","text":"<p>//misk-hibernate/misk.hibernate/Session/loadSharded</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/load-sharded/#loadsharded","title":"loadSharded","text":"<p>[jvm]\\ abstract fun &lt;R : DbRoot&lt;R&gt;, T : DbSharded&lt;R, T&gt;&gt; loadSharded(gid: Gid&lt;R, T&gt;, type: KClass&lt;T&gt;): T</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/load/","title":"load - Misk","text":"<p>//misk-hibernate/misk.hibernate/Session/load</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/load/#load","title":"load","text":"<p>[jvm]\\ abstract fun &lt;T : DbEntity&lt;T&gt;&gt; load(id: Id&lt;T&gt;, type: KClass&lt;T&gt;): T</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/save/","title":"save - Misk","text":"<p>//misk-hibernate/misk.hibernate/Session/save</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/save/#save","title":"save","text":"<p>[jvm]\\ abstract fun &lt;T : DbEntity&lt;T&gt;&gt; save(entity: T): Id&lt;T&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/save/#throws","title":"Throws","text":"java.lang.IllegalStateException when save is called on a read only session."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/shards/","title":"shards - Misk","text":"<p>//misk-hibernate/misk.hibernate/Session/shards</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/shards/#shards","title":"shards","text":"<p>[jvm]\\ abstract fun shards(): Set&lt;Shard&gt;</p> <p>abstract fun shards(keyspace: Keyspace): Collection&lt;Shard&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/target/","title":"target - Misk","text":"<p>//misk-hibernate/misk.hibernate/Session/target</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/target/#target","title":"target","text":"<p>[jvm]\\ abstract fun &lt;T&gt; target(shard: Shard, function: () -&gt; T): T</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/without-checks/","title":"withoutChecks - Misk","text":"<p>//misk-hibernate/misk.hibernate/Session/withoutChecks</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-session/without-checks/#withoutchecks","title":"withoutChecks","text":"<p>[jvm]\\ abstract fun &lt;T&gt; withoutChecks(vararg checks: Check, body: () -&gt; T): T</p> <p>Disable one or more checks for the duration of the execution of body. The passed in checks will entirely replace the other ignored checks at this point, they will not be merged with whatever is there currently.</p> <p>TODO: Deprecate. This can enable checks as a side-effect. Prefer disableChecks() which is cumulative</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/","title":"Transacter - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transacter</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/#transacter","title":"Transacter","text":"<p>[jvm]\\ interface Transacter</p> <p>Provides explicit block-based transaction demarcation.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/#functions","title":"Functions","text":"Name Summary allowCowrites [jvm]abstract fun allowCowrites(): TransacterDisable cowrite checks for the duration of the session. Useful for quickly setting up test data in testing. config [jvm]abstract fun config(): DataSourceConfig entities [jvm]abstract fun entities(): Set&lt;KClass&lt;out DbEntity&lt;*&gt;&gt;&gt;Returns KClasses for the bound DbEntities for the transacter isCheckEnabled [jvm]abstract fun isCheckEnabled(check: Check): BooleanIs the scalability check currently enabled. Use Session.withoutChecks to disable checks. noRetries [jvm]abstract fun noRetries(): Transacter readOnly [jvm]abstract fun readOnly(): TransacterCreates a new transacter that produces read only sessions. This does not mean the underlying datasource is read only, only that the session produced won\u2019t modify the database. replicaRead [jvm]abstract fun &lt;T&gt; replicaRead(block: (session: Session) -&gt; T): TRuns a non-transactional session against a read replica. retries [jvm]abstract fun retries(maxAttempts: Int = 2): Transacter transaction [jvm]abstract fun &lt;T&gt; transaction(block: (session: Session) -&gt; T): TStarts a transaction on the current thread, executes block, and commits the transaction. If the block raises an exception the transaction will be rolled back instead of committed."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/#properties","title":"Properties","text":"Name Summary inTransaction [jvm]abstract val inTransaction: BooleanReturns true if the calling thread is currently within a transaction block."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/#extensions","title":"Extensions","text":"Name Summary failSafeRead [jvm]fun &lt;T&gt; Transacter.failSafeRead(block: (session: Session) -&gt; T): TRuns a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions.[jvm]fun &lt;T&gt; Transacter.failSafeRead(shard: Shard, block: (session: Session) -&gt; T): T shards [jvm]fun Transacter.shards(): Set&lt;Shard&gt;fun Transacter.shards(keyspace: Keyspace): Collection&lt;Shard&gt; transaction [jvm]fun &lt;T&gt; Transacter.transaction(shard: Shard, block: (session: Session) -&gt; T): TCommits a transaction with operations of block."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/allow-cowrites/","title":"allowCowrites - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transacter/allowCowrites</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/allow-cowrites/#allowcowrites","title":"allowCowrites","text":"<p>[jvm]\\ abstract fun allowCowrites(): Transacter</p> <p>Disable cowrite checks for the duration of the session. Useful for quickly setting up test data in testing.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/config/","title":"config - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transacter/config</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/config/#config","title":"config","text":"<p>[jvm]\\ abstract fun config(): DataSourceConfig</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/entities/","title":"entities - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transacter/entities</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/entities/#entities","title":"entities","text":"<p>[jvm]\\ abstract fun entities(): Set&lt;KClass&lt;out DbEntity&lt;*&gt;&gt;&gt;</p> <p>Returns KClasses for the bound DbEntities for the transacter</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/in-transaction/","title":"inTransaction - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transacter/inTransaction</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/in-transaction/#intransaction","title":"inTransaction","text":"<p>[jvm]\\ abstract val inTransaction: Boolean</p> <p>Returns true if the calling thread is currently within a transaction block.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/is-check-enabled/","title":"isCheckEnabled - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transacter/isCheckEnabled</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/is-check-enabled/#ischeckenabled","title":"isCheckEnabled","text":"<p>[jvm]\\ abstract fun isCheckEnabled(check: Check): Boolean</p> <p>Is the scalability check currently enabled. Use Session.withoutChecks to disable checks.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/no-retries/","title":"noRetries - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transacter/noRetries</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/no-retries/#noretries","title":"noRetries","text":"<p>[jvm]\\ abstract fun noRetries(): Transacter</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/read-only/","title":"readOnly - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transacter/readOnly</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/read-only/#readonly","title":"readOnly","text":"<p>[jvm]\\ abstract fun readOnly(): Transacter</p> <p>Creates a new transacter that produces read only sessions. This does not mean the underlying datasource is read only, only that the session produced won\u2019t modify the database.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/replica-read/","title":"replicaRead - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transacter/replicaRead</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/replica-read/#replicaread","title":"replicaRead","text":"<p>[jvm]\\ abstract fun &lt;T&gt; replicaRead(block: (session: Session) -&gt; T): T</p> <p>Runs a non-transactional session against a read replica.</p> <p>A few things that are different with replica reads:</p> <ul> <li>Replica reads are (obviously?) read only.</li> <li>Consistency is eventual. If your application thread just wrote something in a transaction you may not see that write with a replica read as the write may not have replicated to the replica yet.</li> <li>There may be time jumping. As each query may end up at a separate replica that will likely be at a separate point in the replica stream. That means each query can jump back or forward in \u201ctime\u201d. (There is some support for internally consistent replica reads that peg a single replica in Vitess but we\u2019re not using that. If you need that functionality reach out to #vitess)</li> <li>Full scatters are allowed since you can increase the availability of these by adding more replicas.</li> <li>If no reader is configured for replica reads when installing the HibernateModule, this method will throw an IllegalStateException.</li> <li>Note: You can do it another way, where you annotate the Transacter with the readerQualifer defined by HibernateModule, which will use the read only replica as the datasource.</li> </ul>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/retries/","title":"retries - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transacter/retries</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/retries/#retries","title":"retries","text":"<p>[jvm]\\ abstract fun retries(maxAttempts: Int = 2): Transacter</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/transaction/","title":"transaction - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transacter/transaction</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter/transaction/#transaction","title":"transaction","text":"<p>[jvm]\\ abstract fun &lt;T&gt; transaction(block: (session: Session) -&gt; T): T</p> <p>Starts a transaction on the current thread, executes block, and commits the transaction. If the block raises an exception the transaction will be rolled back instead of committed.</p> <p>If retries are permitted (the default), a failed but recoverable transaction will be reattempted after rolling back.</p> <p>It is an error to start a transaction if another transaction is already in progress.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter-service/","title":"TransacterService - Misk","text":"<p>//misk-hibernate/misk.hibernate/TransacterService</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter-service/#transacterservice","title":"TransacterService","text":"<p>[jvm]\\ interface TransacterService : Service</p> <p>Marker interface for services that provide database transactors.</p> <p>Services that require a database connection should depend on this interface when they are installed in a module.</p> <p>e.g.</p> <p>install(ServiceModule&lt;MoviesService&gt;()\\     .dependsOn&lt;TransacterService&gt;(Movies::class))</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transacter-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]abstract fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]abstract fun awaitRunning()open fun awaitRunning(timeout: Duration)abstract fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]abstract fun awaitTerminated()open fun awaitTerminated(timeout: Duration)abstract fun awaitTerminated(timeout: Long, unit: TimeUnit) failureCause [jvm]abstract fun failureCause(): Throwable isRunning [jvm]abstract fun isRunning(): Boolean startAsync [jvm]@CanIgnoreReturnValueabstract fun startAsync(): Service state [jvm]abstract fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueabstract fun stopAsync(): Service"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformed-type/","title":"TransformedType - Misk","text":"<p>//misk-hibernate/misk.hibernate/TransformedType</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformed-type/#transformedtype","title":"TransformedType","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.ANNOTATION_CLASS])</p> <p>annotation class TransformedType(transformer: KClass&lt;out Transformer&gt;, targetType: KClass&lt;*&gt;)</p> <p>TransformedType is a meta-annotation for assigning arbitrary transformers to entity fields. Use it to annotate attributes that will mark a field to be transformed.</p> <p>transformer is a KClass instance of a class that implements assemble and disassemble methods. Assemble is called     when a value is read from the table, or from cache. Disassemble is called when a value is about to be written to     a table or cache.</p> <p>targetType specifies a KClass instance of the type that the field should have when disassembled. It is used to     determine the backing SQL type.</p> <p>The methods of Transformer additionally take a field representing the annotated field and a TransformerContext, which contains limited entity state, including the name of the table and the column, the arguments the annotation received.</p> <p>Note!: Wrapping basic numberic types may not behave as one would expect, especially when querying. This is partly due to Hibernate\u2019s inlining of primitive values.</p> <p>For example, one can define a transformer that appends a value to a string prior to storage, and removes it after retrieval. First, define the Transformer itself</p> <p>class AppendTransformer(val context: TransformerContext) { fun assemble(owner: Any?, value: Serializable): Any =     (value as String).removeSuffix(context.arguments\u201dsuffix\u201d as String))</p> <p>fun disassemble(value: Any): Serializable =     \u201c${value as String}${context.arguments\u201dsuffix\u201d as String}\u201d }</p> <p>Then, create the entity annotation:</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformed-type/#constructors","title":"Constructors","text":"TransformedType [jvm]fun TransformedType(transformer: KClass&lt;out Transformer&gt;, targetType: KClass&lt;*&gt;)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformed-type/#properties","title":"Properties","text":"Name Summary targetType [jvm]val targetType: KClass&lt;*&gt; transformer [jvm]val transformer: KClass&lt;out Transformer&gt;"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformed-type/-transformed-type/","title":"TransformedType - Misk","text":"<p>//misk-hibernate/misk.hibernate/TransformedType/TransformedType</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformed-type/-transformed-type/#transformedtype","title":"TransformedType","text":"<p>[jvm]\\ fun TransformedType(transformer: KClass&lt;out Transformer&gt;, targetType: KClass&lt;*&gt;)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformed-type/target-type/","title":"targetType - Misk","text":"<p>//misk-hibernate/misk.hibernate/TransformedType/targetType</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformed-type/target-type/#targettype","title":"targetType","text":"<p>[jvm]\\ val targetType: KClass&lt;*&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformed-type/transformer/","title":"transformer - Misk","text":"<p>//misk-hibernate/misk.hibernate/TransformedType/transformer</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformed-type/transformer/#transformer","title":"transformer","text":"<p>[jvm]\\ val transformer: KClass&lt;out Transformer&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer/","title":"Transformer - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transformer</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer/#transformer","title":"Transformer","text":"<p>[jvm]\\ abstract class Transformer(context: TransformerContext)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer/#functions","title":"Functions","text":"Name Summary assemble [jvm]abstract fun assemble(owner: Any?, value: Serializable): Any disassemble [jvm]abstract fun disassemble(value: Any): Serializable"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer/#properties","title":"Properties","text":"Name Summary context [jvm]val context: TransformerContext"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer/-transformer/","title":"Transformer - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transformer/Transformer</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer/-transformer/#transformer","title":"Transformer","text":"<p>[jvm]\\ fun Transformer(context: TransformerContext)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer/assemble/","title":"assemble - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transformer/assemble</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer/assemble/#assemble","title":"assemble","text":"<p>[jvm]\\ abstract fun assemble(owner: Any?, value: Serializable): Any</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer/context/","title":"context - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transformer/context</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer/context/#context","title":"context","text":"<p>[jvm]\\ val context: TransformerContext</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer/disassemble/","title":"disassemble - Misk","text":"<p>//misk-hibernate/misk.hibernate/Transformer/disassemble</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer/disassemble/#disassemble","title":"disassemble","text":"<p>[jvm]\\ abstract fun disassemble(value: Any): Serializable</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer-context/","title":"TransformerContext - Misk","text":"<p>//misk-hibernate/misk.hibernate/TransformerContext</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer-context/#transformercontext","title":"TransformerContext","text":"<p>[jvm]\\ data class TransformerContext(tableName: String, columnName: String, arguments: Map&lt;String, &gt;, field: KClass&lt;&gt;)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer-context/#properties","title":"Properties","text":"Name Summary arguments [jvm]var arguments: Map&lt;String, *&gt; columnName [jvm]val columnName: String field [jvm]var field: KClass&lt;*&gt; tableName [jvm]val tableName: String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer-context/-transformer-context/","title":"TransformerContext - Misk","text":"<p>//misk-hibernate/misk.hibernate/TransformerContext/TransformerContext</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer-context/-transformer-context/#transformercontext","title":"TransformerContext","text":"<p>[jvm]\\ fun TransformerContext(tableName: String, columnName: String, arguments: Map&lt;String, &gt;, field: KClass&lt;&gt;)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer-context/arguments/","title":"arguments - Misk","text":"<p>//misk-hibernate/misk.hibernate/TransformerContext/arguments</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer-context/arguments/#arguments","title":"arguments","text":"<p>[jvm]\\ var arguments: Map&lt;String, *&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer-context/column-name/","title":"columnName - Misk","text":"<p>//misk-hibernate/misk.hibernate/TransformerContext/columnName</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer-context/column-name/#columnname","title":"columnName","text":"<p>[jvm]\\ val columnName: String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer-context/field/","title":"field - Misk","text":"<p>//misk-hibernate/misk.hibernate/TransformerContext/field</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer-context/field/#field","title":"field","text":"<p>[jvm]\\ var field: KClass&lt;*&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer-context/table-name/","title":"tableName - Misk","text":"<p>//misk-hibernate/misk.hibernate/TransformerContext/tableName</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-transformer-context/table-name/#tablename","title":"tableName","text":"<p>[jvm]\\ val tableName: String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-validation-report/","title":"ValidationReport - Misk","text":"<p>//misk-hibernate/misk.hibernate/ValidationReport</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-validation-report/#validationreport","title":"ValidationReport","text":"<p>[jvm]\\ data class ValidationReport(schemas: Set&lt;String&gt;, tables: Set&lt;String&gt;, columns: Set&lt;String&gt;)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-validation-report/#properties","title":"Properties","text":"Name Summary columns [jvm]val columns: Set&lt;String&gt; schemas [jvm]val schemas: Set&lt;String&gt; tables [jvm]val tables: Set&lt;String&gt;"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-validation-report/-validation-report/","title":"ValidationReport - Misk","text":"<p>//misk-hibernate/misk.hibernate/ValidationReport/ValidationReport</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-validation-report/-validation-report/#validationreport","title":"ValidationReport","text":"<p>[jvm]\\ fun ValidationReport(schemas: Set&lt;String&gt;, tables: Set&lt;String&gt;, columns: Set&lt;String&gt;)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-validation-report/columns/","title":"columns - Misk","text":"<p>//misk-hibernate/misk.hibernate/ValidationReport/columns</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-validation-report/columns/#columns","title":"columns","text":"<p>[jvm]\\ val columns: Set&lt;String&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-validation-report/schemas/","title":"schemas - Misk","text":"<p>//misk-hibernate/misk.hibernate/ValidationReport/schemas</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-validation-report/schemas/#schemas","title":"schemas","text":"<p>[jvm]\\ val schemas: Set&lt;String&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-validation-report/tables/","title":"tables - Misk","text":"<p>//misk-hibernate/misk.hibernate/ValidationReport/tables</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-validation-report/tables/#tables","title":"tables","text":"<p>[jvm]\\ val tables: Set&lt;String&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-vitess-dialect/","title":"VitessDialect - Misk","text":"<p>//misk-hibernate/misk.hibernate/VitessDialect</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-vitess-dialect/#vitessdialect","title":"VitessDialect","text":"<p>[jvm]\\ class VitessDialect : MySQL57Dialect</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-vitess-dialect/#functions","title":"Functions","text":"Name Summary addSqlHintOrComment [jvm]open fun addSqlHintOrComment(p0: String, p1: QueryParameters, p2: Boolean): String appendLockHint [jvm]open fun appendLockHint(p0: LockOptions, p1: String): String applyLocksToSql [jvm]open fun applyLocksToSql(p0: String, p1: LockOptions, p2: MutableMap&lt;String, Array&lt;String&gt;&gt;): String areStringComparisonsCaseInsensitive [jvm]open override fun areStringComparisonsCaseInsensitive(): Boolean augmentRecognizedTableTypes [jvm]open fun augmentRecognizedTableTypes(p0: MutableList&lt;String&gt;) buildIdentifierHelper [jvm]open override fun buildIdentifierHelper(p0: IdentifierHelperBuilder, p1: DatabaseMetaData): IdentifierHelper buildSQLExceptionConversionDelegate [jvm]open override fun buildSQLExceptionConversionDelegate(): SQLExceptionConversionDelegate canCreateCatalog [jvm]open override fun canCreateCatalog(): Boolean canCreateSchema [jvm]open override fun canCreateSchema(): Boolean cast [jvm]open fun cast(p0: String, p1: Int, p2: Int): Stringopen fun cast(p0: String, p1: Int, p2: Int, p3: Int): Stringopen fun cast(p0: String, p1: Int, p2: Int, p3: Int, p4: Int): String closeQuote [jvm]open override fun closeQuote(): Char contributeTypes [jvm]open fun contributeTypes(p0: TypeContributions, p1: ServiceRegistry) createCaseFragment [jvm]open fun createCaseFragment(): CaseFragment createOuterJoinFragment [jvm]open fun createOuterJoinFragment(): JoinFragment defaultScrollMode [jvm]open fun defaultScrollMode(): ScrollMode doesReadCommittedCauseWritersToBlockReaders [jvm]open fun doesReadCommittedCauseWritersToBlockReaders(): Boolean doesRepeatableReadCauseReadersToBlockWriters [jvm]open fun doesRepeatableReadCauseReadersToBlockWriters(): Boolean dropConstraints [jvm]open override fun dropConstraints(): Boolean equivalentTypes [jvm]open fun equivalentTypes(p0: Int, p1: Int): Boolean escapeLiteral [jvm]open override fun escapeLiteral(p0: String): String fixedPointNumberCastTarget [jvm]open fun fixedPointNumberCastTarget(): String floatingPointNumberCastTarget [jvm]open fun floatingPointNumberCastTarget(): String forceLobAsLastValue [jvm]open fun forceLobAsLastValue(): Boolean forUpdateOfColumns [jvm]open fun forUpdateOfColumns(): Boolean getAddColumnString [jvm]open override fun getAddColumnString(): String getAddColumnSuffixString [jvm]open fun getAddColumnSuffixString(): String getAddForeignKeyConstraintString [jvm]open fun getAddForeignKeyConstraintString(p0: String, p1: String): Stringopen override fun getAddForeignKeyConstraintString(p0: String, p1: Array&lt;String&gt;, p2: String, p3: Array&lt;String&gt;, p4: Boolean): String getAddPrimaryKeyConstraintString [jvm]open fun getAddPrimaryKeyConstraintString(p0: String): String getAlterTableString [jvm]open fun getAlterTableString(p0: String): String getAuxiliaryDatabaseObjectExporter [jvm]open fun getAuxiliaryDatabaseObjectExporter(): Exporter&lt;AuxiliaryDatabaseObject&gt; getCallableStatementSupport [jvm]open fun getCallableStatementSupport(): CallableStatementSupport getCascadeConstraintsString [jvm]open fun getCascadeConstraintsString(): String getCaseInsensitiveLike [jvm]open fun getCaseInsensitiveLike(): String getCastTypeName [jvm]open override fun getCastTypeName(p0: Int): String getColumnAliasExtractor [jvm]open fun getColumnAliasExtractor(): ColumnAliasExtractor getColumnComment [jvm]open override fun getColumnComment(p0: String): String getCreateCatalogCommand [jvm]open override fun getCreateCatalogCommand(p0: String): Array&lt;String&gt; getCreateMultisetTableString [jvm]open fun getCreateMultisetTableString(): String getCreateSchemaCommand [jvm]open override fun getCreateSchemaCommand(p0: String): Array&lt;String&gt; getCreateSequenceString [jvm]open fun getCreateSequenceString(p0: String): Stringopen fun getCreateSequenceString(p0: String, p1: Int, p2: Int): String getCreateSequenceStrings [jvm]open fun getCreateSequenceStrings(p0: String, p1: Int, p2: Int): Array&lt;String&gt; getCreateTableString [jvm]open fun getCreateTableString(): String getCreateTemporaryTableColumnAnnotation [jvm]open fun getCreateTemporaryTableColumnAnnotation(p0: Int): String getCrossJoinSeparator [jvm]open fun getCrossJoinSeparator(): String getCurrentSchemaCommand [jvm]open fun getCurrentSchemaCommand(): String getCurrentTimestampSelectString [jvm]open override fun getCurrentTimestampSelectString(): String getCurrentTimestampSQLFunctionName [jvm]open fun getCurrentTimestampSQLFunctionName(): String getDefaultBatchLoadSizingStrategy [jvm]open fun getDefaultBatchLoadSizingStrategy(): BatchLoadSizingStrategy getDefaultMultiTableBulkIdStrategy [jvm]open override fun getDefaultMultiTableBulkIdStrategy(): MultiTableBulkIdStrategy getDefaultMySQLStorageEngine [jvm]open override fun getDefaultMySQLStorageEngine(): MySQLStorageEngine getDefaultProperties [jvm]fun getDefaultProperties(): Properties getDropCatalogCommand [jvm]open override fun getDropCatalogCommand(p0: String): Array&lt;String&gt; getDropForeignKeyString [jvm]open override fun getDropForeignKeyString(): String getDropSchemaCommand [jvm]open override fun getDropSchemaCommand(p0: String): Array&lt;String&gt; getDropSequenceString [jvm]open fun getDropSequenceString(p0: String): String getDropSequenceStrings [jvm]open fun getDropSequenceStrings(p0: String): Array&lt;String&gt; getDropTableString [jvm]open fun getDropTableString(p0: String): String getEngineKeyword [jvm]open override fun getEngineKeyword(): String getForeignKeyExporter [jvm]open fun getForeignKeyExporter(): Exporter&lt;ForeignKey&gt; getForUpdateNowaitString [jvm]open fun getForUpdateNowaitString(): Stringopen fun getForUpdateNowaitString(p0: String): String getForUpdateSkipLockedString [jvm]open fun getForUpdateSkipLockedString(): Stringopen fun getForUpdateSkipLockedString(p0: String): String getForUpdateString [jvm]open override fun getForUpdateString(): Stringopen fun getForUpdateString(p0: String): Stringopen fun getForUpdateString(p0: LockMode): Stringopen fun getForUpdateString(p0: LockOptions): Stringopen fun getForUpdateString(p0: String, p1: LockOptions): String getFunctions [jvm]fun getFunctions(): MutableMap&lt;String, SQLFunction&gt; getHibernateTypeName [jvm]open fun getHibernateTypeName(p0: Int): Stringopen fun getHibernateTypeName(p0: Int, p1: Int, p2: Int, p3: Int): String getIdentityColumnSupport [jvm]open override fun getIdentityColumnSupport(): IdentityColumnSupport getIndexExporter [jvm]open fun getIndexExporter(): Exporter&lt;Index&gt; getInExpressionCountLimit [jvm]open fun getInExpressionCountLimit(): Int getLimitHandler [jvm]open override fun getLimitHandler(): LimitHandler getLimitString [jvm]open override fun getLimitString(p0: String, p1: Boolean): String getLobMergeStrategy [jvm]open fun getLobMergeStrategy(): LobMergeStrategy getLockingStrategy [jvm]open fun getLockingStrategy(p0: Lockable, p1: LockMode): LockingStrategy getLowercaseFunction [jvm]open fun getLowercaseFunction(): String getMaxAliasLength [jvm]open fun getMaxAliasLength(): Int getNameQualifierSupport [jvm]open fun getNameQualifierSupport(): NameQualifierSupport getNativeIdentifierGeneratorStrategy [jvm]open fun getNativeIdentifierGeneratorStrategy(): String getNoColumnsInsertString [jvm]open fun getNoColumnsInsertString(): String getNotExpression [jvm]open override fun getNotExpression(p0: String): String getNullColumnString [jvm]open fun getNullColumnString(): String getQueryHintString [jvm]open fun getQueryHintString(p0: String, p1: MutableList&lt;String&gt;): Stringopen override fun getQueryHintString(p0: String, p1: String): String getQuerySequencesString [jvm]open fun getQuerySequencesString(): String getReadLockString [jvm]open override fun getReadLockString(p0: Int): Stringopen fun getReadLockString(p0: String, p1: Int): String getResultSet [jvm]open override fun getResultSet(p0: CallableStatement): ResultSetopen fun getResultSet(p0: CallableStatement, p1: Int): ResultSetopen fun getResultSet(p0: CallableStatement, p1: String): ResultSet getSchemaNameResolver [jvm]open fun getSchemaNameResolver(): SchemaNameResolver getSelectClauseNullString [jvm]open fun getSelectClauseNullString(p0: Int): String getSelectGUIDString [jvm]open override fun getSelectGUIDString(): String getSelectSequenceNextValString [jvm]open fun getSelectSequenceNextValString(p0: String): String getSequenceExporter [jvm]open fun getSequenceExporter(): Exporter&lt;Sequence&gt; getSequenceInformationExtractor [jvm]open fun getSequenceInformationExtractor(): SequenceInformationExtractor getSequenceNextValString [jvm]open fun getSequenceNextValString(p0: String): String getSqlTypeDescriptorOverride [jvm]open fun getSqlTypeDescriptorOverride(p0: Int): SqlTypeDescriptor getTableComment [jvm]open override fun getTableComment(p0: String): String getTableExporter [jvm]open fun getTableExporter(): Exporter&lt;Table&gt; getTableTypeString [jvm]open override fun getTableTypeString(): String getTypeName [jvm]open fun getTypeName(p0: Int): Stringopen fun getTypeName(p0: Int, p1: Long, p2: Int, p3: Int): String getUniqueDelegate [jvm]open override fun getUniqueDelegate(): UniqueDelegate getUniqueKeyExporter [jvm]open fun getUniqueKeyExporter(): Exporter&lt;Constraint&gt; getViolatedConstraintNameExtracter [jvm]open override fun getViolatedConstraintNameExtracter(): ViolatedConstraintNameExtracter getWriteLockString [jvm]open override fun getWriteLockString(p0: Int): Stringopen fun getWriteLockString(p0: String, p1: Int): String hasAlterTable [jvm]open fun hasAlterTable(): Boolean hasSelfReferentialForeignKeyBug [jvm]open override fun hasSelfReferentialForeignKeyBug(): Boolean inlineLiteral [jvm]open fun inlineLiteral(p0: String): String isCurrentTimestampSelectStringCallable [jvm]open override fun isCurrentTimestampSelectStringCallable(): Boolean isJdbcLogWarningsEnabledByDefault [jvm]open override fun isJdbcLogWarningsEnabledByDefault(): Boolean isLegacyLimitHandlerBehaviorEnabled [jvm]open fun isLegacyLimitHandlerBehaviorEnabled(): Boolean isLockTimeoutParameterized [jvm]open fun isLockTimeoutParameterized(): Boolean isTypeNameRegistered [jvm]open fun isTypeNameRegistered(p0: String): Boolean openQuote [jvm]open override fun openQuote(): Char prependComment [jvm]open fun prependComment(p0: String, p1: String): String qualifyIndexName [jvm]open override fun qualifyIndexName(): Boolean quote [jvm]fun quote(p0: String): String registerColumnType [jvm]open fun registerColumnType(p0: Int, p1: String)open fun registerColumnType(p0: Int, p1: Long, p2: String) registerFunction [jvm]open fun registerFunction(p0: String, p1: SQLFunction) registerHibernateType [jvm]open fun registerHibernateType(p0: Int, p1: String)open fun registerHibernateType(p0: Int, p1: Long, p2: String) registerKeyword [jvm]open fun registerKeyword(p0: String) registerResultSetOutParameter [jvm]open fun registerResultSetOutParameter(p0: CallableStatement, p1: String): Intopen override fun registerResultSetOutParameter(p0: CallableStatement, p1: Int): Int registerVarcharTypes [jvm]open override fun registerVarcharTypes() remapSqlTypeDescriptor [jvm]open fun remapSqlTypeDescriptor(p0: SqlTypeDescriptor): SqlTypeDescriptor renderOrderByElement [jvm]open override fun renderOrderByElement(p0: String, p1: String, p2: String, p3: NullPrecedence): String replaceResultVariableInOrderByClauseWithPosition [jvm]open fun replaceResultVariableInOrderByClauseWithPosition(): Boolean requiresCastingOfParametersInSelectClause [jvm]open fun requiresCastingOfParametersInSelectClause(): Boolean requiresParensForTupleDistinctCounts [jvm]open fun requiresParensForTupleDistinctCounts(): Boolean smallIntegerCastTarget [jvm]open fun smallIntegerCastTarget(): String supportsBindAsCallableArgument [jvm]open fun supportsBindAsCallableArgument(): Boolean supportsCascadeDelete [jvm]open override fun supportsCascadeDelete(): Boolean supportsCaseInsensitiveLike [jvm]open fun supportsCaseInsensitiveLike(): Boolean supportsCircularCascadeDeleteConstraints [jvm]open fun supportsCircularCascadeDeleteConstraints(): Boolean supportsColumnCheck [jvm]open override fun supportsColumnCheck(): Boolean supportsCommentOn [jvm]open fun supportsCommentOn(): Boolean supportsCurrentTimestampSelection [jvm]open override fun supportsCurrentTimestampSelection(): Boolean supportsEmptyInList [jvm]open override fun supportsEmptyInList(): Boolean supportsExistsInSelect [jvm]open fun supportsExistsInSelect(): Boolean supportsExpectedLobUsagePattern [jvm]open fun supportsExpectedLobUsagePattern(): Boolean supportsIfExistsAfterAlterTable [jvm]open fun supportsIfExistsAfterAlterTable(): Boolean supportsIfExistsAfterConstraintName [jvm]open fun supportsIfExistsAfterConstraintName(): Boolean supportsIfExistsAfterTableName [jvm]open fun supportsIfExistsAfterTableName(): Boolean supportsIfExistsBeforeConstraintName [jvm]open fun supportsIfExistsBeforeConstraintName(): Boolean supportsIfExistsBeforeTableName [jvm]open override fun supportsIfExistsBeforeTableName(): Boolean supportsJdbcConnectionLobCreation [jvm]open fun supportsJdbcConnectionLobCreation(p0: DatabaseMetaData): Boolean supportsLimit [jvm]open override fun supportsLimit(): Boolean supportsLobValueChangePropogation [jvm]open override fun supportsLobValueChangePropogation(): Boolean supportsLockTimeouts [jvm]open override fun supportsLockTimeouts(): Boolean supportsNamedParameters [jvm]open fun supportsNamedParameters(p0: DatabaseMetaData): Boolean supportsNationalizedTypes [jvm]open fun supportsNationalizedTypes(): Boolean supportsNoColumnsInsert [jvm]open fun supportsNoColumnsInsert(): Boolean supportsNonQueryWithCTE [jvm]open fun supportsNonQueryWithCTE(): Boolean supportsNoWait [jvm]open fun supportsNoWait(): Boolean supportsOuterJoinForUpdate [jvm]open fun supportsOuterJoinForUpdate(): Boolean supportsParametersInInsertSelect [jvm]open fun supportsParametersInInsertSelect(): Boolean supportsPartitionBy [jvm]open fun supportsPartitionBy(): Boolean supportsPooledSequences [jvm]open fun supportsPooledSequences(): Boolean supportsResultSetPositionQueryMethodsOnForwardOnlyCursor [jvm]open fun supportsResultSetPositionQueryMethodsOnForwardOnlyCursor(): Boolean supportsRowValueConstructorSyntax [jvm]open override fun supportsRowValueConstructorSyntax(): Boolean supportsRowValueConstructorSyntaxInInList [jvm]open override fun supportsRowValueConstructorSyntaxInInList(): Boolean supportsRowValueConstructorSyntaxInSet [jvm]open override fun supportsRowValueConstructorSyntaxInSet(): Boolean supportsSelectAliasInGroupByClause [jvm]open override fun supportsSelectAliasInGroupByClause(): Boolean supportsSequences [jvm]open fun supportsSequences(): Boolean supportsSkipLocked [jvm]open fun supportsSkipLocked(): Boolean supportsSubqueryOnMutatingTable [jvm]open override fun supportsSubqueryOnMutatingTable(): Boolean supportsSubselectAsInPredicateLHS [jvm]open fun supportsSubselectAsInPredicateLHS(): Boolean supportsTableCheck [jvm]open fun supportsTableCheck(): Boolean supportsTupleCounts [jvm]open fun supportsTupleCounts(): Boolean supportsTupleDistinctCounts [jvm]open fun supportsTupleDistinctCounts(): Boolean supportsTuplesInSubqueries [jvm]open fun supportsTuplesInSubqueries(): Boolean supportsUnboundedLobLocatorMaterialization [jvm]open fun supportsUnboundedLobLocatorMaterialization(): Boolean supportsUnionAll [jvm]open override fun supportsUnionAll(): Boolean supportsValuesList [jvm]open fun supportsValuesList(): Boolean toBooleanValueString [jvm]open fun toBooleanValueString(p0: Boolean): String toString [jvm]open override fun toString(): String transformSelectString [jvm]open fun transformSelectString(p0: String): String useFollowOnLocking [jvm]open fun useFollowOnLocking(p0: QueryParameters): Boolean useInputStreamToInsertBlob [jvm]open override fun useInputStreamToInsertBlob(): Boolean"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-vitess-dialect/#properties","title":"Properties","text":"Name Summary STANDARD_DEFAULT_BATCH_LOAD_SIZING_STRATEGY [jvm]val STANDARD_DEFAULT_BATCH_LOAD_SIZING_STRATEGY: BatchLoadSizingStrategy"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-vitess-dialect/-vitess-dialect/","title":"VitessDialect - Misk","text":"<p>//misk-hibernate/misk.hibernate/VitessDialect/VitessDialect</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-vitess-dialect/-vitess-dialect/#vitessdialect","title":"VitessDialect","text":"<p>[jvm]\\ fun VitessDialect()</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-vitess-dialect/build-s-q-l-exception-conversion-delegate/","title":"buildSQLExceptionConversionDelegate - Misk","text":"<p>//misk-hibernate/misk.hibernate/VitessDialect/buildSQLExceptionConversionDelegate</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-vitess-dialect/build-s-q-l-exception-conversion-delegate/#buildsqlexceptionconversiondelegate","title":"buildSQLExceptionConversionDelegate","text":"<p>[jvm]\\ open override fun buildSQLExceptionConversionDelegate(): SQLExceptionConversionDelegate</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-vitess-dialect/use-input-stream-to-insert-blob/","title":"useInputStreamToInsertBlob - Misk","text":"<p>//misk-hibernate/misk.hibernate/VitessDialect/useInputStreamToInsertBlob</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate/-vitess-dialect/use-input-stream-to-insert-blob/#useinputstreamtoinsertblob","title":"useInputStreamToInsertBlob","text":"<p>[jvm]\\ open override fun useInputStreamToInsertBlob(): Boolean</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/","title":"Package misk.hibernate.annotation - Misk","text":"<p>//misk-hibernate/misk.hibernate.annotation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/#package-miskhibernateannotation","title":"Package misk.hibernate.annotation","text":""},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/#types","title":"Types","text":"Name Summary Keyspace [jvm]@Target(allowedTargets = [AnnotationTarget.CLASS])annotation class Keyspace(value: String)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/#functions","title":"Functions","text":"Name Summary keyspace [jvm]fun Keyspace.keyspace(): Keyspace"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/keyspace/","title":"keyspace - Misk","text":"<p>//misk-hibernate/misk.hibernate.annotation/keyspace</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/keyspace/#keyspace","title":"keyspace","text":"<p>[jvm]\\ fun Keyspace.keyspace(): Keyspace</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/-keyspace/","title":"Keyspace - Misk","text":"<p>//misk-hibernate/misk.hibernate.annotation/Keyspace</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/-keyspace/#keyspace","title":"Keyspace","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.CLASS])</p> <p>annotation class Keyspace(value: String)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/-keyspace/#properties","title":"Properties","text":"Name Summary value [jvm]val value: String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/-keyspace/#extensions","title":"Extensions","text":"Name Summary keyspace [jvm]fun Keyspace.keyspace(): Keyspace"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/-keyspace/-keyspace/","title":"Keyspace - Misk","text":"<p>//misk-hibernate/misk.hibernate.annotation/Keyspace/Keyspace</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/-keyspace/-keyspace/#keyspace","title":"Keyspace","text":"<p>[jvm]\\ fun Keyspace(value: String)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/-keyspace/value/","title":"value - Misk","text":"<p>//misk-hibernate/misk.hibernate.annotation/Keyspace/value</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.annotation/-keyspace/value/#value","title":"value","text":"<p>[jvm]\\ val value: String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/","title":"Package misk.hibernate.migrate - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/#package-miskhibernatemigrate","title":"Package misk.hibernate.migrate","text":""},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/#types","title":"Types","text":"Name Summary BulkShardMigrator [jvm]class BulkShardMigrator&lt;R : DbRoot&lt;R&gt;, C : DbChild&lt;R, C&gt;&gt;BulkShardMigrator facilitates moving of child entities belonging to a source root entity to target root entity in bulk. Source or target entity can either live on the same or different shards."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/","title":"BulkShardMigrator - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/#bulkshardmigrator","title":"BulkShardMigrator","text":"<p>[jvm]\\ class BulkShardMigrator&lt;R : DbRoot&lt;R&gt;, C : DbChild&lt;R, C&gt;&gt;</p> <p>BulkShardMigrator facilitates moving of child entities belonging to a source root entity to target root entity in bulk. Source or target entity can either live on the same or different shards.</p> <p>If moving between shards it will copy the rows between shards using a SELECT and a batched INSERT statements. The mutations are applied to the result set in memory between the SELECT and the batch INSERT.</p> <p>An example of moving rows from characters table that is sharded by movie_id from source_id to target_id:</p> <p>bulkShardMigratorFactory.create(transacter, sessionFactory, DbMovie::class, DbCharacter::class)     .rootColumn(\u201cmovie_id\u201d)     .source(sourceId)     .target(targetId)     .execute()</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion Factory [jvm]@Singletonclass Factory@Injectconstructor IncMutation [jvm]class IncMutation(column: String) : BulkShardMigrator.Mutation Mutation [jvm]abstract class Mutation NowMutation [jvm]class NowMutation(column: String) : BulkShardMigrator.Mutation SetMappingMutation [jvm]class SetMappingMutation(column: String, valueMapper: Function&lt;Any, Any&gt;) : BulkShardMigrator.Mutation SetMutation [jvm]class SetMutation(column: String, value: Any) : BulkShardMigrator.Mutation"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/#functions","title":"Functions","text":"Name Summary batched [jvm]fun batched(): BulkShardMigrator&lt;R, C&gt; batchSize [jvm]fun batchSize(batchSize: Int): BulkShardMigrator&lt;R, C&gt; execute [jvm]@JvmOverloadsfun execute(insertIgnore: Boolean = false) inc [jvm]operator fun inc(column: String): BulkShardMigrator&lt;R, C&gt; latestBatchOnly [jvm]fun latestBatchOnly(latestBatchOnly: Boolean): BulkShardMigrator&lt;R, C&gt; now [jvm]fun now(column: String): BulkShardMigrator&lt;R, C&gt; rootColumn [jvm]fun rootColumn(columnName: String): BulkShardMigrator&lt;R, C&gt; set [jvm]operator fun set(column: String, valueMapper: Function&lt;Any, Any&gt;): BulkShardMigrator&lt;R, C&gt;operator fun set(column: String, value: Any): BulkShardMigrator&lt;R, C&gt; source [jvm]fun source(sourceRoot: Id&lt;R&gt;): BulkShardMigrator&lt;R, C&gt; target [jvm]fun target(targetRoot: Id&lt;R&gt;): BulkShardMigrator&lt;R, C&gt; where [jvm]fun where(where: String, vararg parameters: Any): BulkShardMigrator&lt;R, C&gt;fun where(where: String, parameters: List&lt;*&gt;): BulkShardMigrator&lt;R, C&gt;"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/batch-size/","title":"batchSize - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/batchSize</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/batch-size/#batchsize","title":"batchSize","text":"<p>[jvm]\\ fun batchSize(batchSize: Int): BulkShardMigrator&lt;R, C&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/batched/","title":"batched - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/batched</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/batched/#batched","title":"batched","text":"<p>[jvm]\\ fun batched(): BulkShardMigrator&lt;R, C&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/execute/","title":"execute - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/execute</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/execute/#execute","title":"execute","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun execute(insertIgnore: Boolean = false)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/inc/","title":"inc - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/inc</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/inc/#inc","title":"inc","text":"<p>[jvm]\\ operator fun inc(column: String): BulkShardMigrator&lt;R, C&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/latest-batch-only/","title":"latestBatchOnly - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/latestBatchOnly</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/latest-batch-only/#latestbatchonly","title":"latestBatchOnly","text":"<p>[jvm]\\ fun latestBatchOnly(latestBatchOnly: Boolean): BulkShardMigrator&lt;R, C&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/now/","title":"now - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/now</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/now/#now","title":"now","text":"<p>[jvm]\\ fun now(column: String): BulkShardMigrator&lt;R, C&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/root-column/","title":"rootColumn - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/rootColumn</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/root-column/#rootcolumn","title":"rootColumn","text":"<p>[jvm]\\ fun rootColumn(columnName: String): BulkShardMigrator&lt;R, C&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/set/","title":"set - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/set</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/set/#set","title":"set","text":"<p>[jvm]\\ operator fun set(column: String, value: Any): BulkShardMigrator&lt;R, C&gt;</p> <p>operator fun set(column: String, valueMapper: Function&lt;Any, Any&gt;): BulkShardMigrator&lt;R, C&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/source/","title":"source - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/source</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/source/#source","title":"source","text":"<p>[jvm]\\ fun source(sourceRoot: Id&lt;R&gt;): BulkShardMigrator&lt;R, C&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/target/","title":"target - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/target</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/target/#target","title":"target","text":"<p>[jvm]\\ fun target(targetRoot: Id&lt;R&gt;): BulkShardMigrator&lt;R, C&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/where/","title":"where - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/where</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/where/#where","title":"where","text":"<p>[jvm]\\ fun where(where: String, vararg parameters: Any): BulkShardMigrator&lt;R, C&gt;</p> <p>fun where(where: String, parameters: List&lt;*&gt;): BulkShardMigrator&lt;R, C&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-companion/","title":"Companion - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/Companion</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/","title":"Factory - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/Factory</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ @Singleton</p> <p>class Factory@Injectconstructor</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]fun &lt;R : DbRoot&lt;R&gt;, C : DbChild&lt;R, C&gt;&gt; create(transacter: Transacter, sessionFactory: SessionFactory, rootClass: KClass&lt;R&gt;, childClass: KClass&lt;C&gt;): BulkShardMigrator&lt;R, C&gt;"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/-factory/","title":"Factory - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/Factory/Factory</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/-factory/#factory","title":"Factory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun Factory()</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/create/","title":"create - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/Factory/create</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/create/#create","title":"create","text":"<p>[jvm]\\ fun &lt;R : DbRoot&lt;R&gt;, C : DbChild&lt;R, C&gt;&gt; create(transacter: Transacter, sessionFactory: SessionFactory, rootClass: KClass&lt;R&gt;, childClass: KClass&lt;C&gt;): BulkShardMigrator&lt;R, C&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/","title":"IncMutation - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/IncMutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/#incmutation","title":"IncMutation","text":"<p>[jvm]\\ class IncMutation(column: String) : BulkShardMigrator.Mutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/#functions","title":"Functions","text":"Name Summary bindInsert [jvm]open override fun bindInsert(insert: PreparedStatement, parameterIndex: Int, value: Any): Int bindUpdate [jvm]open override fun bindUpdate(update: PreparedStatement, parameterIndex: Int): Int insertSql [jvm]open fun insertSql(): String updateSql [jvm]open override fun updateSql(): String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/-inc-mutation/","title":"IncMutation - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/IncMutation/IncMutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/-inc-mutation/#incmutation","title":"IncMutation","text":"<p>[jvm]\\ fun IncMutation(column: String)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/bind-insert/","title":"bindInsert - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/IncMutation/bindInsert</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/bind-insert/#bindinsert","title":"bindInsert","text":"<p>[jvm]\\ open override fun bindInsert(insert: PreparedStatement, parameterIndex: Int, value: Any): Int</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/bind-update/","title":"bindUpdate - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/IncMutation/bindUpdate</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/bind-update/#bindupdate","title":"bindUpdate","text":"<p>[jvm]\\ open override fun bindUpdate(update: PreparedStatement, parameterIndex: Int): Int</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/update-sql/","title":"updateSql - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/IncMutation/updateSql</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/update-sql/#updatesql","title":"updateSql","text":"<p>[jvm]\\ open override fun updateSql(): String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/","title":"Mutation - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/Mutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/#mutation","title":"Mutation","text":"<p>[jvm]\\ abstract class Mutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/#functions","title":"Functions","text":"Name Summary bindInsert [jvm]open fun bindInsert(insert: PreparedStatement, parameterIndex: Int, value: Any): Int bindUpdate [jvm]abstract fun bindUpdate(update: PreparedStatement, parameterIndex: Int): Int insertSql [jvm]open fun insertSql(): String updateSql [jvm]open fun updateSql(): String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/#inheritors","title":"Inheritors","text":"Name SetMutation SetMappingMutation NowMutation IncMutation"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/-mutation/","title":"Mutation - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/Mutation/Mutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/-mutation/#mutation","title":"Mutation","text":"<p>[jvm]\\ fun Mutation()</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/bind-insert/","title":"bindInsert - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/Mutation/bindInsert</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/bind-insert/#bindinsert","title":"bindInsert","text":"<p>[jvm]\\ open fun bindInsert(insert: PreparedStatement, parameterIndex: Int, value: Any): Int</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/bind-update/","title":"bindUpdate - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/Mutation/bindUpdate</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/bind-update/#bindupdate","title":"bindUpdate","text":"<p>[jvm]\\ abstract fun bindUpdate(update: PreparedStatement, parameterIndex: Int): Int</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/insert-sql/","title":"insertSql - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/Mutation/insertSql</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/insert-sql/#insertsql","title":"insertSql","text":"<p>[jvm]\\ open fun insertSql(): String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/update-sql/","title":"updateSql - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/Mutation/updateSql</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/update-sql/#updatesql","title":"updateSql","text":"<p>[jvm]\\ open fun updateSql(): String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/","title":"NowMutation - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/NowMutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/#nowmutation","title":"NowMutation","text":"<p>[jvm]\\ class NowMutation(column: String) : BulkShardMigrator.Mutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/#functions","title":"Functions","text":"Name Summary bindInsert [jvm]open override fun bindInsert(insert: PreparedStatement, parameterIndex: Int, value: Any): Int bindUpdate [jvm]open override fun bindUpdate(update: PreparedStatement, parameterIndex: Int): Int insertSql [jvm]open override fun insertSql(): String updateSql [jvm]open override fun updateSql(): String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/-now-mutation/","title":"NowMutation - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/NowMutation/NowMutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/-now-mutation/#nowmutation","title":"NowMutation","text":"<p>[jvm]\\ fun NowMutation(column: String)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/bind-insert/","title":"bindInsert - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/NowMutation/bindInsert</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/bind-insert/#bindinsert","title":"bindInsert","text":"<p>[jvm]\\ open override fun bindInsert(insert: PreparedStatement, parameterIndex: Int, value: Any): Int</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/bind-update/","title":"bindUpdate - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/NowMutation/bindUpdate</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/bind-update/#bindupdate","title":"bindUpdate","text":"<p>[jvm]\\ open override fun bindUpdate(update: PreparedStatement, parameterIndex: Int): Int</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/insert-sql/","title":"insertSql - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/NowMutation/insertSql</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/insert-sql/#insertsql","title":"insertSql","text":"<p>[jvm]\\ open override fun insertSql(): String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/update-sql/","title":"updateSql - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/NowMutation/updateSql</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/update-sql/#updatesql","title":"updateSql","text":"<p>[jvm]\\ open override fun updateSql(): String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/","title":"SetMappingMutation - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/SetMappingMutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/#setmappingmutation","title":"SetMappingMutation","text":"<p>[jvm]\\ class SetMappingMutation(column: String, valueMapper: Function&lt;Any, Any&gt;) : BulkShardMigrator.Mutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/#functions","title":"Functions","text":"Name Summary bindInsert [jvm]open override fun bindInsert(insert: PreparedStatement, parameterIndex: Int, value: Any): Int bindUpdate [jvm]open override fun bindUpdate(update: PreparedStatement, parameterIndex: Int): Int insertSql [jvm]open fun insertSql(): String updateSql [jvm]open fun updateSql(): String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/-set-mapping-mutation/","title":"SetMappingMutation - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/SetMappingMutation/SetMappingMutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/-set-mapping-mutation/#setmappingmutation","title":"SetMappingMutation","text":"<p>[jvm]\\ fun SetMappingMutation(column: String, valueMapper: Function&lt;Any, Any&gt;)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/bind-insert/","title":"bindInsert - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/SetMappingMutation/bindInsert</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/bind-insert/#bindinsert","title":"bindInsert","text":"<p>[jvm]\\ open override fun bindInsert(insert: PreparedStatement, parameterIndex: Int, value: Any): Int</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/bind-update/","title":"bindUpdate - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/SetMappingMutation/bindUpdate</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/bind-update/#bindupdate","title":"bindUpdate","text":"<p>[jvm]\\ open override fun bindUpdate(update: PreparedStatement, parameterIndex: Int): Int</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/","title":"SetMutation - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/SetMutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/#setmutation","title":"SetMutation","text":"<p>[jvm]\\ class SetMutation(column: String, value: Any) : BulkShardMigrator.Mutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/#functions","title":"Functions","text":"Name Summary bindInsert [jvm]open override fun bindInsert(insert: PreparedStatement, parameterIndex: Int, value: Any): Int bindUpdate [jvm]open override fun bindUpdate(update: PreparedStatement, parameterIndex: Int): Int insertSql [jvm]open fun insertSql(): String updateSql [jvm]open fun updateSql(): String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/-set-mutation/","title":"SetMutation - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/SetMutation/SetMutation</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/-set-mutation/#setmutation","title":"SetMutation","text":"<p>[jvm]\\ fun SetMutation(column: String, value: Any)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/bind-insert/","title":"bindInsert - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/SetMutation/bindInsert</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/bind-insert/#bindinsert","title":"bindInsert","text":"<p>[jvm]\\ open override fun bindInsert(insert: PreparedStatement, parameterIndex: Int, value: Any): Int</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/bind-update/","title":"bindUpdate - Misk","text":"<p>//misk-hibernate/misk.hibernate.migrate/BulkShardMigrator/SetMutation/bindUpdate</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/bind-update/#bindupdate","title":"bindUpdate","text":"<p>[jvm]\\ open override fun bindUpdate(update: PreparedStatement, parameterIndex: Int): Int</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/","title":"Package misk.hibernate.pagination - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/#package-miskhibernatepagination","title":"Package misk.hibernate.pagination","text":""},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/#types","title":"Types","text":"Name Summary Offset [jvm]data class Offset(offset: String)Offset into a query. Typically this is a string-encoded ID like 5, or a composite containing a date followed by an ID, like \u201c2019-08-16T:10:26:51Z/5\u201d. Page [jvm]data class Page&lt;T&gt;(contents: List&lt;T&gt;, nextOffset: Offset?) Pager [jvm]interface Pager&lt;T&gt; Paginator [jvm]interface Paginator&lt;T, in Q : Query&lt;T&gt;&gt;Breaks a query into pages. Each page break is delimited by a string that is the offset of the last row of the preceding page."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/#functions","title":"Functions","text":"Name Summary idAscPaginator [jvm]fun &lt;T : DbEntity&lt;T&gt;&gt; idAscPaginator(idPath: String = \u201cid\u201d): Paginator&lt;T, Query&lt;T&gt;&gt;Pages through entities by ascending ID. idDescPaginator [jvm]fun &lt;T : DbEntity&lt;T&gt;&gt; idDescPaginator(idPath: String = \u201cid\u201d): Paginator&lt;T, Query&lt;T&gt;&gt;Pages through entities by descending ID. listAll [jvm]fun &lt;T : DbEntity&lt;T&gt;, R&gt; Pager&lt;T&gt;.listAll(transacter: Transacter, transform: (T) -&gt; R): List&lt;R&gt; newPager [jvm]fun &lt;T : DbEntity&lt;T&gt;, Q : Query&lt;T&gt;&gt; Q.newPager(paginator: Paginator&lt;T, Q&gt;, initialOffset: Offset? = null, pageSize: Int = 100): Pager&lt;T&gt;Use a null initialOffset to start at the beginning."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/id-asc-paginator/","title":"idAscPaginator - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/idAscPaginator</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/id-asc-paginator/#idascpaginator","title":"idAscPaginator","text":"<p>[jvm]\\ fun &lt;T : DbEntity&lt;T&gt;&gt; idAscPaginator(idPath: String = \u201cid\u201d): Paginator&lt;T, Query&lt;T&gt;&gt;</p> <p>Pages through entities by ascending ID.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/id-desc-paginator/","title":"idDescPaginator - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/idDescPaginator</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/id-desc-paginator/#iddescpaginator","title":"idDescPaginator","text":"<p>[jvm]\\ fun &lt;T : DbEntity&lt;T&gt;&gt; idDescPaginator(idPath: String = \u201cid\u201d): Paginator&lt;T, Query&lt;T&gt;&gt;</p> <p>Pages through entities by descending ID.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/list-all/","title":"listAll - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/listAll</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/list-all/#listall","title":"listAll","text":"<p>[jvm]\\ fun &lt;T : DbEntity&lt;T&gt;, R&gt; Pager&lt;T&gt;.listAll(transacter: Transacter, transform: (T) -&gt; R): List&lt;R&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/new-pager/","title":"newPager - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/newPager</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/new-pager/#newpager","title":"newPager","text":"<p>[jvm]\\ fun &lt;T : DbEntity&lt;T&gt;, Q : Query&lt;T&gt;&gt; Q.newPager(paginator: Paginator&lt;T, Q&gt;, initialOffset: Offset? = null, pageSize: Int = 100): Pager&lt;T&gt;</p> <p>Use a null initialOffset to start at the beginning.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-offset/","title":"Offset - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Offset</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-offset/#offset","title":"Offset","text":"<p>[jvm]\\ data class Offset(offset: String)</p> <p>Offset into a query. Typically this is a string-encoded ID like 5, or a composite containing a date followed by an ID, like \u201c2019-08-16T:10:26:51Z/5\u201d.</p> <p>Don\u2019t put PII in here. Clients see these in URLs and API calls, and can manipulate them. This could also potentially leak database growth information!</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-offset/#constructors","title":"Constructors","text":"Offset [jvm]fun Offset(offset: String)"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-offset/#properties","title":"Properties","text":"Name Summary offset [jvm]val offset: String"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-offset/-offset/","title":"Offset - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Offset/Offset</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-offset/-offset/#offset","title":"Offset","text":"<p>[jvm]\\ fun Offset(offset: String)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-offset/offset/","title":"offset - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Offset/offset</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-offset/offset/#offset","title":"offset","text":"<p>[jvm]\\ val offset: String</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/","title":"Page - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Page</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/#page","title":"Page","text":"<p>[jvm]\\ data class Page&lt;T&gt;(contents: List&lt;T&gt;, nextOffset: Offset?)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/#properties","title":"Properties","text":"Name Summary contents [jvm]val contents: List&lt;T&gt; nextOffset [jvm]val nextOffset: Offset?Null if there are no more results. Pass this in a subsequent call to Query.newPager."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/-page/","title":"Page - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Page/Page</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/-page/#page","title":"Page","text":"<p>[jvm]\\ fun &lt;T&gt; Page(contents: List&lt;T&gt;, nextOffset: Offset?)</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/contents/","title":"contents - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Page/contents</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/contents/#contents","title":"contents","text":"<p>[jvm]\\ val contents: List&lt;T&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/next-offset/","title":"nextOffset - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Page/nextOffset</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/next-offset/#nextoffset","title":"nextOffset","text":"<p>[jvm]\\ val nextOffset: Offset?</p> <p>Null if there are no more results. Pass this in a subsequent call to Query.newPager.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/-companion/","title":"Companion - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Page/Companion</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/-companion/#functions","title":"Functions","text":"Name Summary empty [jvm]fun &lt;T&gt; empty(): Page&lt;T&gt;"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/-companion/empty/","title":"empty - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Page/Companion/empty</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-page/-companion/empty/#empty","title":"empty","text":"<p>[jvm]\\ fun &lt;T&gt; empty(): Page&lt;T&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-pager/","title":"Pager - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Pager</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-pager/#pager","title":"Pager","text":"<p>[jvm]\\ interface Pager&lt;T&gt;</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-pager/#functions","title":"Functions","text":"Name Summary hasNext [jvm]abstract fun hasNext(): BooleanReturns true when there are more pages to load. nextPage [jvm]abstract fun nextPage(session: Session): Page&lt;T&gt;?Returns null when there are no more pages."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-pager/#extensions","title":"Extensions","text":"Name Summary listAll [jvm]fun &lt;T : DbEntity&lt;T&gt;, R&gt; Pager&lt;T&gt;.listAll(transacter: Transacter, transform: (T) -&gt; R): List&lt;R&gt;"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-pager/has-next/","title":"hasNext - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Pager/hasNext</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-pager/has-next/#hasnext","title":"hasNext","text":"<p>[jvm]\\ abstract fun hasNext(): Boolean</p> <p>Returns true when there are more pages to load.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-pager/next-page/","title":"nextPage - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Pager/nextPage</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-pager/next-page/#nextpage","title":"nextPage","text":"<p>[jvm]\\ abstract fun nextPage(session: Session): Page&lt;T&gt;?</p> <p>Returns null when there are no more pages.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-paginator/","title":"Paginator - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Paginator</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-paginator/#paginator","title":"Paginator","text":"<p>[jvm]\\ interface Paginator&lt;T, in Q : Query&lt;T&gt;&gt;</p> <p>Breaks a query into pages. Each page break is delimited by a string that is the offset of the last row of the preceding page.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-paginator/#functions","title":"Functions","text":"Name Summary applyOffset [jvm]abstract fun applyOffset(query: Q, offset: Offset?)Adjust query so that is in paging order and offset by offset (if non-null). Most implementations will add an ORDER BY clause. They should also add a WHERE column &gt; offset constraint if the offset is non-null. getOffset [jvm]abstract fun getOffset(row: T): OffsetFigure out what the offset of row is, and encode that as a string."},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-paginator/apply-offset/","title":"applyOffset - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Paginator/applyOffset</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-paginator/apply-offset/#applyoffset","title":"applyOffset","text":"<p>[jvm]\\ abstract fun applyOffset(query: Q, offset: Offset?)</p> <p>Adjust query so that is in paging order and offset by offset (if non-null). Most implementations will add an ORDER BY clause. They should also add a WHERE column &gt; offset constraint if the offset is non-null.</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-paginator/get-offset/","title":"getOffset - Misk","text":"<p>//misk-hibernate/misk.hibernate.pagination/Paginator/getOffset</p>"},{"location":"0.x/misk-hibernate/misk-hibernate/misk.hibernate.pagination/-paginator/get-offset/#getoffset","title":"getOffset","text":"<p>[jvm]\\ abstract fun getOffset(row: T): Offset</p> <p>Figure out what the offset of row is, and encode that as a string.</p>"},{"location":"0.x/misk-hotwire/","title":"misk-hotwire - Misk","text":"<p>//misk-hotwire</p>"},{"location":"0.x/misk-hotwire/#misk-hotwire","title":"misk-hotwire","text":""},{"location":"0.x/misk-hotwire/#packages","title":"Packages","text":"Name misk.hotwire misk.turbo"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.hotwire/","title":"Package misk.hotwire - Misk","text":"<p>//misk-hotwire/misk.hotwire</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.hotwire/#package-miskhotwire","title":"Package misk.hotwire","text":""},{"location":"0.x/misk-hotwire/misk-hotwire/misk.hotwire/#functions","title":"Functions","text":"Name Summary buildHtml [jvm]fun buildHtml(renderer: TagConsumer&lt;*&gt;.() -&gt; Unit): &lt;ERROR CLASS&gt; buildHtmlResponseBody [jvm]fun buildHtmlResponseBody(renderer: TagConsumer&lt;*&gt;.() -&gt; Unit): ResponseBody"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.hotwire/build-html-response-body/","title":"buildHtmlResponseBody - Misk","text":"<p>//misk-hotwire/misk.hotwire/buildHtmlResponseBody</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.hotwire/build-html-response-body/#buildhtmlresponsebody","title":"buildHtmlResponseBody","text":"<p>[jvm]\\ fun buildHtmlResponseBody(renderer: TagConsumer&lt;*&gt;.() -&gt; Unit): ResponseBody</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.hotwire/build-html/","title":"buildHtml - Misk","text":"<p>//misk-hotwire/misk.hotwire/buildHtml</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.hotwire/build-html/#buildhtml","title":"buildHtml","text":"<p>[jvm]\\ fun buildHtml(renderer: TagConsumer&lt;*&gt;.() -&gt; Unit): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/","title":"Package misk.turbo - Misk","text":"<p>//misk-hotwire/misk.turbo</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/#package-miskturbo","title":"Package misk.turbo","text":""},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/#types","title":"Types","text":"Name Summary TurboFrame [jvm]class TurboFrame(id: String, consumer: TagConsumer&lt;*&gt;) : HTMLTag, HtmlInlineTagProduces  HTML tag as required to define Hotwire Turbo using kotlinx.html. TurboStream [jvm]class TurboStream(action: TurboStreamAction, targetId: String, consumer: TagConsumer&lt;*&gt;) : HTMLTag, HtmlInlineTagProduces  HTML tag as required to define Hotwire Turbo using kotlinx.html. TurboStreamAction [jvm]enum TurboStreamAction : Enum&lt;TurboStreamAction&gt; Different modes for TurboStream to be handled and result in DOM changes when it arrives via WebSocket or in HTTP response."},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/#functions","title":"Functions","text":"Name Summary addHotwireHeadImports [jvm]fun TagConsumer&lt;*&gt;.addHotwireHeadImports(appRoot: String)HTML tags to add to Head to configure Hotwire (Turbo, Stimulus) dependencies and default controllers turbo_frame [jvm]fun TagConsumer&lt;*&gt;.turbo_frame(id: String, block: TurboFrame.() -&gt; Unit = {}) turbo_stream [jvm]fun TagConsumer&lt;*&gt;.turbo_stream(action: TurboStreamAction, targetId: String, block: TurboStream.() -&gt; Unit = {})"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/add-hotwire-head-imports/","title":"addHotwireHeadImports - Misk","text":"<p>//misk-hotwire/misk.turbo/addHotwireHeadImports</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/add-hotwire-head-imports/#addhotwireheadimports","title":"addHotwireHeadImports","text":"<p>[jvm]\\ fun TagConsumer&lt;*&gt;.addHotwireHeadImports(appRoot: String)</p> <p>HTML tags to add to Head to configure Hotwire (Turbo, Stimulus) dependencies and default controllers</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/turbo_frame/","title":"turbo_frame - Misk","text":"<p>//misk-hotwire/misk.turbo/turbo_frame</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/turbo_frame/#turbo_frame","title":"turbo_frame","text":"<p>[jvm]\\ fun TagConsumer&lt;*&gt;.turbo_frame(id: String, block: TurboFrame.() -&gt; Unit = {})</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/turbo_stream/","title":"turbo_stream - Misk","text":"<p>//misk-hotwire/misk.turbo/turbo_stream</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/turbo_stream/#turbo_stream","title":"turbo_stream","text":"<p>[jvm]\\ fun TagConsumer&lt;*&gt;.turbo_stream(action: TurboStreamAction, targetId: String, block: TurboStream.() -&gt; Unit = {})</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-frame/","title":"TurboFrame - Misk","text":"<p>//misk-hotwire/misk.turbo/TurboFrame</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-frame/#turboframe","title":"TurboFrame","text":"<p>[jvm]\\ class TurboFrame(id: String, consumer: TagConsumer&lt;*&gt;) : HTMLTag, HtmlInlineTag</p> <p>Produces  HTML tag as required to define Hotwire Turbo using kotlinx.html.</p> <p>Follows the spec from Hotwire docs: https://turbo.hotwired.dev/handbook/frames</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-frame/#constructors","title":"Constructors","text":"TurboFrame [jvm]fun TurboFrame(id: String, consumer: TagConsumer&lt;*&gt;)"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-frame/#functions","title":"Functions","text":"Name Summary comment [jvm]open fun comment(s: String) entity [jvm]open fun entity(e: Entities) text [jvm]open fun text(n: Number)open fun text(s: String) unaryPlus [jvm]open operator fun String.unaryPlus()open operator fun Entities.unaryPlus()"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-frame/#properties","title":"Properties","text":"Name Summary attributes [jvm]open override val attributes: DelegatingMap attributesEntries [jvm]open override val attributesEntries: Collection&lt;Map.Entry&lt;String, String&gt;&gt; consumer [jvm]open override val consumer: TagConsumer&lt;*&gt; emptyTag [jvm]open override val emptyTag: Boolean inlineTag [jvm]open override val inlineTag: Boolean namespace [jvm]open override val namespace: String? tagName [jvm]open override val tagName: String"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-frame/-turbo-frame/","title":"TurboFrame - Misk","text":"<p>//misk-hotwire/misk.turbo/TurboFrame/TurboFrame</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-frame/-turbo-frame/#turboframe","title":"TurboFrame","text":"<p>[jvm]\\ fun TurboFrame(id: String, consumer: TagConsumer&lt;*&gt;)</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream/","title":"TurboStream - Misk","text":"<p>//misk-hotwire/misk.turbo/TurboStream</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream/#turbostream","title":"TurboStream","text":"<p>[jvm]\\ class TurboStream(action: TurboStreamAction, targetId: String, consumer: TagConsumer&lt;*&gt;) : HTMLTag, HtmlInlineTag</p> <p>Produces  HTML tag as required to define Hotwire Turbo using kotlinx.html.</p> <p>Example Produced HTML</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream/#constructors","title":"Constructors","text":"TurboStream [jvm]fun TurboStream(action: TurboStreamAction, targetId: String, consumer: TagConsumer&lt;*&gt;)"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream/#functions","title":"Functions","text":"Name Summary comment [jvm]open fun comment(s: String) entity [jvm]open fun entity(e: Entities) text [jvm]open fun text(n: Number)open fun text(s: String) unaryPlus [jvm]open operator fun String.unaryPlus()open operator fun Entities.unaryPlus()"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream/#properties","title":"Properties","text":"Name Summary attributes [jvm]open override val attributes: DelegatingMap attributesEntries [jvm]open override val attributesEntries: Collection&lt;Map.Entry&lt;String, String&gt;&gt; consumer [jvm]open override val consumer: TagConsumer&lt;*&gt; emptyTag [jvm]open override val emptyTag: Boolean inlineTag [jvm]open override val inlineTag: Boolean namespace [jvm]open override val namespace: String? tagName [jvm]open override val tagName: String"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream/-turbo-stream/","title":"TurboStream - Misk","text":"<p>//misk-hotwire/misk.turbo/TurboStream/TurboStream</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream/-turbo-stream/#turbostream","title":"TurboStream","text":"<p>[jvm]\\ fun TurboStream(action: TurboStreamAction, targetId: String, consumer: TagConsumer&lt;*&gt;)</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/","title":"TurboStreamAction - Misk","text":"<p>//misk-hotwire/misk.turbo/TurboStreamAction</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/#turbostreamaction","title":"TurboStreamAction","text":"<p>[jvm]\\ enum TurboStreamAction : Enum&lt;TurboStreamAction&gt; </p> <p>Different modes for TurboStream to be handled and result in DOM changes when it arrives via WebSocket or in HTTP response.</p> <p>https://turbo.hotwired.dev/handbook/streams</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/#entries","title":"Entries","text":"AFTER [jvm]AFTER() BEFORE [jvm]BEFORE() REMOVE [jvm]REMOVE() UPDATE [jvm]UPDATE() REPLACE [jvm]REPLACE() PREPEND [jvm]PREPEND() APPEND [jvm]APPEND()"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-a-f-t-e-r/","title":"AFTER - Misk","text":"<p>//misk-hotwire/misk.turbo/TurboStreamAction/AFTER</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-a-f-t-e-r/#after","title":"AFTER","text":"<p>[jvm]\\ AFTER()</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-a-f-t-e-r/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-a-p-p-e-n-d/","title":"APPEND - Misk","text":"<p>//misk-hotwire/misk.turbo/TurboStreamAction/APPEND</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-a-p-p-e-n-d/#append","title":"APPEND","text":"<p>[jvm]\\ APPEND()</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-a-p-p-e-n-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-b-e-f-o-r-e/","title":"BEFORE - Misk","text":"<p>//misk-hotwire/misk.turbo/TurboStreamAction/BEFORE</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-b-e-f-o-r-e/#before","title":"BEFORE","text":"<p>[jvm]\\ BEFORE()</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-b-e-f-o-r-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-p-r-e-p-e-n-d/","title":"PREPEND - Misk","text":"<p>//misk-hotwire/misk.turbo/TurboStreamAction/PREPEND</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-p-r-e-p-e-n-d/#prepend","title":"PREPEND","text":"<p>[jvm]\\ PREPEND()</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-p-r-e-p-e-n-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-r-e-m-o-v-e/","title":"REMOVE - Misk","text":"<p>//misk-hotwire/misk.turbo/TurboStreamAction/REMOVE</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-r-e-m-o-v-e/#remove","title":"REMOVE","text":"<p>[jvm]\\ REMOVE()</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-r-e-m-o-v-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-r-e-p-l-a-c-e/","title":"REPLACE - Misk","text":"<p>//misk-hotwire/misk.turbo/TurboStreamAction/REPLACE</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-r-e-p-l-a-c-e/#replace","title":"REPLACE","text":"<p>[jvm]\\ REPLACE()</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-r-e-p-l-a-c-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-u-p-d-a-t-e/","title":"UPDATE - Misk","text":"<p>//misk-hotwire/misk.turbo/TurboStreamAction/UPDATE</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-u-p-d-a-t-e/#update","title":"UPDATE","text":"<p>[jvm]\\ UPDATE()</p>"},{"location":"0.x/misk-hotwire/misk-hotwire/misk.turbo/-turbo-stream-action/-u-p-d-a-t-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-inject/","title":"misk-inject - Misk","text":"<p>//misk-inject</p>"},{"location":"0.x/misk-inject/#misk-inject","title":"misk-inject","text":""},{"location":"0.x/misk-inject/#packages","title":"Packages","text":"Name misk.inject"},{"location":"0.x/misk-inject/misk-inject/misk.inject/","title":"Package misk.inject - Misk","text":"<p>//misk-inject/misk.inject</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/#package-miskinject","title":"Package misk.inject","text":""},{"location":"0.x/misk-inject/misk-inject/misk.inject/#types","title":"Types","text":"Name Summary KAbstractModule [jvm]abstract class KAbstractModule : AbstractModuleA class that provides helper methods for working with Kotlin and Guice, allowing implementing classes to operate in the Kotlin type system rather than converting to Java. KInstallOnceModule [jvm]abstract class KInstallOnceModule : KAbstractModuleMake it safe to install multiple instances of this module. Guice will only install it once."},{"location":"0.x/misk-inject/misk-inject/misk.inject/#functions","title":"Functions","text":"Name Summary asSingleton [jvm]fun ScopedBindingBuilder.asSingleton() getInstance [jvm]inline fun &lt;T : Any&gt; Injector.getInstance(annotation: Annotation? = null): T getSetOf [jvm]fun &lt;T : Any&gt; Injector.getSetOf(type: KClass&lt;T&gt;, annotation: KClass&lt;out Annotation&gt;? = null): Set&lt;T&gt; keyOf [jvm]inline fun &lt;T : Any&gt; keyOf(): Key&lt;T&gt;inline fun &lt;T : Any&gt; keyOf(a: Annotation): Key&lt;T&gt;[jvm]inline fun &lt;T : Any&gt; keyOf(a: KClass&lt;out Annotation&gt;?): Key&lt;T&gt;If annotation is not null, returns a key for @Annotation T, otherwise a key for T. listOfType [jvm]inline fun &lt;T : Any&gt; listOfType(): TypeLiteral&lt;List&lt;T&gt;&gt;fun &lt;T&gt; listOfType(elementType: TypeLiteral&lt;T&gt;): TypeLiteral&lt;List&lt;T&gt;&gt;fun &lt;T : Any&gt; listOfType(elementType: KClass&lt;T&gt;): TypeLiteral&lt;List&lt;T&gt;&gt; mapOfType [jvm]inline fun &lt;K : Any, V : Any&gt; mapOfType(): TypeLiteral&lt;Map&lt;K, V&gt;&gt;fun &lt;K, V&gt; mapOfType(keyType: TypeLiteral&lt;K&gt;, valueType: TypeLiteral&lt;V&gt;): TypeLiteral&lt;Map&lt;K, V&gt;&gt;fun &lt;K : Any, V : Any&gt; mapOfType(keyType: KClass&lt;K&gt;, valueType: KClass&lt;V&gt;): TypeLiteral&lt;Map&lt;K, V&gt;&gt; parameterizedType [jvm]inline fun &lt;T : Any&gt; parameterizedType(vararg typeParameters: Type): ParameterizedType setOfType [jvm]inline fun &lt;T : Any&gt; setOfType(): TypeLiteral&lt;Set&lt;T&gt;&gt;fun &lt;T&gt; setOfType(elementType: TypeLiteral&lt;T&gt;): TypeLiteral&lt;Set&lt;T&gt;&gt;fun &lt;T : Any&gt; setOfType(elementType: KClass&lt;T&gt;): TypeLiteral&lt;Set&lt;T&gt;&gt; subtypeOf [jvm]inline fun &lt;T : Any&gt; subtypeOf(): WildcardType toKey [jvm]fun &lt;T : Any&gt; TypeLiteral&lt;T&gt;.toKey(annotation: KClass&lt;out Annotation&gt;? = null): Key&lt;T&gt;fun &lt;T : Any&gt; KClass&lt;T&gt;.toKey(qualifier: KClass&lt;out Annotation&gt;? = null): Key&lt;T&gt; typeLiteral [jvm]fun Type.typeLiteral(): TypeLiteral&lt;&gt;fun &lt;T : Any&gt; KClass&lt;T&gt;.typeLiteral(): TypeLiteral&lt;T&gt;fun KType.typeLiteral(): TypeLiteral&lt;&gt; uninject [jvm]fun uninject(target: Any)"},{"location":"0.x/misk-inject/misk-inject/misk.inject/as-singleton/","title":"asSingleton - Misk","text":"<p>//misk-inject/misk.inject/asSingleton</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/as-singleton/#assingleton","title":"asSingleton","text":"<p>[jvm]\\ fun ScopedBindingBuilder.asSingleton()</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/get-instance/","title":"getInstance - Misk","text":"<p>//misk-inject/misk.inject/getInstance</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/get-instance/#getinstance","title":"getInstance","text":"<p>[jvm]\\ inline fun &lt;T : Any&gt; Injector.getInstance(annotation: Annotation? = null): T</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/get-set-of/","title":"getSetOf - Misk","text":"<p>//misk-inject/misk.inject/getSetOf</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/get-set-of/#getsetof","title":"getSetOf","text":"<p>[jvm]\\ fun &lt;T : Any&gt; Injector.getSetOf(type: KClass&lt;T&gt;, annotation: KClass&lt;out Annotation&gt;? = null): Set&lt;T&gt;</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/key-of/","title":"keyOf - Misk","text":"<p>//misk-inject/misk.inject/keyOf</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/key-of/#keyof","title":"keyOf","text":"<p>[jvm]\\ inline fun &lt;T : Any&gt; keyOf(): Key&lt;T&gt;</p> <p>inline fun &lt;T : Any&gt; keyOf(a: Annotation): Key&lt;T&gt;</p> <p>[jvm]\\ inline fun &lt;T : Any&gt; keyOf(a: KClass&lt;out Annotation&gt;?): Key&lt;T&gt;</p> <p>If annotation is not null, returns a key for @Annotation T, otherwise a key for T.</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/list-of-type/","title":"listOfType - Misk","text":"<p>//misk-inject/misk.inject/listOfType</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/list-of-type/#listoftype","title":"listOfType","text":"<p>[jvm]\\ fun &lt;T&gt; listOfType(elementType: TypeLiteral&lt;T&gt;): TypeLiteral&lt;List&lt;T&gt;&gt;</p> <p>fun &lt;T : Any&gt; listOfType(elementType: KClass&lt;T&gt;): TypeLiteral&lt;List&lt;T&gt;&gt;</p> <p>inline fun &lt;T : Any&gt; listOfType(): TypeLiteral&lt;List&lt;T&gt;&gt;</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/map-of-type/","title":"mapOfType - Misk","text":"<p>//misk-inject/misk.inject/mapOfType</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/map-of-type/#mapoftype","title":"mapOfType","text":"<p>[jvm]\\ inline fun &lt;K : Any, V : Any&gt; mapOfType(): TypeLiteral&lt;Map&lt;K, V&gt;&gt;</p> <p>fun &lt;K : Any, V : Any&gt; mapOfType(keyType: KClass&lt;K&gt;, valueType: KClass&lt;V&gt;): TypeLiteral&lt;Map&lt;K, V&gt;&gt;</p> <p>fun &lt;K, V&gt; mapOfType(keyType: TypeLiteral&lt;K&gt;, valueType: TypeLiteral&lt;V&gt;): TypeLiteral&lt;Map&lt;K, V&gt;&gt;</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/parameterized-type/","title":"parameterizedType - Misk","text":"<p>//misk-inject/misk.inject/parameterizedType</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/parameterized-type/#parameterizedtype","title":"parameterizedType","text":"<p>[jvm]\\ inline fun &lt;T : Any&gt; parameterizedType(vararg typeParameters: Type): ParameterizedType</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/set-of-type/","title":"setOfType - Misk","text":"<p>//misk-inject/misk.inject/setOfType</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/set-of-type/#setoftype","title":"setOfType","text":"<p>[jvm]\\ fun &lt;T&gt; setOfType(elementType: TypeLiteral&lt;T&gt;): TypeLiteral&lt;Set&lt;T&gt;&gt;</p> <p>fun &lt;T : Any&gt; setOfType(elementType: KClass&lt;T&gt;): TypeLiteral&lt;Set&lt;T&gt;&gt;</p> <p>inline fun &lt;T : Any&gt; setOfType(): TypeLiteral&lt;Set&lt;T&gt;&gt;</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/subtype-of/","title":"subtypeOf - Misk","text":"<p>//misk-inject/misk.inject/subtypeOf</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/subtype-of/#subtypeof","title":"subtypeOf","text":"<p>[jvm]\\ inline fun &lt;T : Any&gt; subtypeOf(): WildcardType</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/to-key/","title":"toKey - Misk","text":"<p>//misk-inject/misk.inject/toKey</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/to-key/#tokey","title":"toKey","text":"<p>[jvm]\\ fun &lt;T : Any&gt; TypeLiteral&lt;T&gt;.toKey(annotation: KClass&lt;out Annotation&gt;? = null): Key&lt;T&gt;</p> <p>fun &lt;T : Any&gt; KClass&lt;T&gt;.toKey(qualifier: KClass&lt;out Annotation&gt;? = null): Key&lt;T&gt;</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/type-literal/","title":"typeLiteral - Misk","text":"<p>//misk-inject/misk.inject/typeLiteral</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/type-literal/#typeliteral","title":"typeLiteral","text":"<p>[jvm]\\ fun Type.typeLiteral(): TypeLiteral&lt;*&gt;</p> <p>fun KType.typeLiteral(): TypeLiteral&lt;*&gt;</p> <p>fun &lt;T : Any&gt; KClass&lt;T&gt;.typeLiteral(): TypeLiteral&lt;T&gt;</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/uninject/","title":"uninject - Misk","text":"<p>//misk-inject/misk.inject/uninject</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/uninject/#uninject","title":"uninject","text":"<p>[jvm]\\ fun uninject(target: Any)</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-abstract-module/","title":"KAbstractModule - Misk","text":"<p>//misk-inject/misk.inject/KAbstractModule</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-abstract-module/#kabstractmodule","title":"KAbstractModule","text":"<p>[jvm]\\ abstract class KAbstractModule : AbstractModule</p> <p>A class that provides helper methods for working with Kotlin and Guice, allowing implementing classes to operate in the Kotlin type system rather than converting to Java.</p> <p>The more Kotlin friendly API allows calls like:</p> <p>bind(Foo::class.java).to(RealFoo::class.java)</p> <p>To be rewritten as:</p> <p>bind&lt;Foo&gt;().to&lt;RealFoo&gt;()</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-abstract-module/#constructors","title":"Constructors","text":"KAbstractModule [jvm]fun KAbstractModule()"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-abstract-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]open fun configure()override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-abstract-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-abstract-module/#inheritors","title":"Inheritors","text":"Name KInstallOnceModule"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-abstract-module/-k-abstract-module/","title":"KAbstractModule - Misk","text":"<p>//misk-inject/misk.inject/KAbstractModule/KAbstractModule</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-abstract-module/-k-abstract-module/#kabstractmodule","title":"KAbstractModule","text":"<p>[jvm]\\ fun KAbstractModule()</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-install-once-module/","title":"KInstallOnceModule - Misk","text":"<p>//misk-inject/misk.inject/KInstallOnceModule</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-install-once-module/#kinstalloncemodule","title":"KInstallOnceModule","text":"<p>[jvm]\\ abstract class KInstallOnceModule : KAbstractModule</p> <p>Make it safe to install multiple instances of this module. Guice will only install it once.</p> <p>This eases dependency management of library/core dependencies which benefit from multiple installation sites in varying configurations.</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-install-once-module/#constructors","title":"Constructors","text":"KInstallOnceModule [jvm]fun KInstallOnceModule()"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-install-once-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]open fun configure()override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage equals [jvm]operator override fun equals(other: Any?): Boolean getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; hashCode [jvm]override fun hashCode(): Int install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-install-once-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-install-once-module/-k-install-once-module/","title":"KInstallOnceModule - Misk","text":"<p>//misk-inject/misk.inject/KInstallOnceModule/KInstallOnceModule</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-install-once-module/-k-install-once-module/#kinstalloncemodule","title":"KInstallOnceModule","text":"<p>[jvm]\\ fun KInstallOnceModule()</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-install-once-module/equals/","title":"equals - Misk","text":"<p>//misk-inject/misk.inject/KInstallOnceModule/equals</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-install-once-module/equals/#equals","title":"equals","text":"<p>[jvm]\\ operator override fun equals(other: Any?): Boolean</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-install-once-module/hash-code/","title":"hashCode - Misk","text":"<p>//misk-inject/misk.inject/KInstallOnceModule/hashCode</p>"},{"location":"0.x/misk-inject/misk-inject/misk.inject/-k-install-once-module/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ override fun hashCode(): Int</p>"},{"location":"0.x/misk-jdbc/","title":"misk-jdbc - Misk","text":"<p>//misk-jdbc</p>"},{"location":"0.x/misk-jdbc/#misk-jdbc","title":"misk-jdbc","text":""},{"location":"0.x/misk-jdbc/#packages","title":"Packages","text":"Name misk.database misk.jdbc misk.vitess"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/","title":"Package misk.database - Misk","text":"<p>//misk-jdbc/misk.database</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/#package-miskdatabase","title":"Package misk.database","text":""},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/#types","title":"Types","text":"Name Summary CockroachCluster [jvm]class CockroachCluster(name: String, config: DataSourceConfig) DatabaseServer [jvm]interface DatabaseServerRepresents a database server for development/testing generally running in Docker. DockerCockroachCluster [jvm]class DockerCockroachCluster(name: String, moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig, docker: DockerClient) : DatabaseServer DockerPostgresServer [jvm]class DockerPostgresServer(config: DataSourceConfig, docker: DockerClient) : DatabaseServer DockerTidbCluster [jvm]class DockerTidbCluster(moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig, docker: DockerClient) : DatabaseServer DockerVitessCluster [jvm]class DockerVitessCluster(name: String, moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig, docker: DockerClient) : DatabaseServer Keyspace [jvm]class Keyspace(sharded: Boolean, tables: Map&lt;String, Table&gt;) StartDatabaseService [jvm]class StartDatabaseService(qualifier: KClass&lt;out Annotation&gt;, deployment: Deployment, config: DataSourceConfig) : AbstractIdleServiceAll Vitess clusters used by the app/test are tracked in a global cache as a DockerVitessCluster. StartVitessService [jvm]class StartVitessService Table [jvm]class Table TidbCluster [jvm]class TidbCluster(resourceLoader: ResourceLoader, config: DataSourceConfig) VitessCluster [jvm]class VitessCluster@JvmOverloadsconstructor(name: String, resourceLoader: ResourceLoader, config: DataSourceConfig, moshi: Moshi)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/#functions","title":"Functions","text":"Name Summary runCommand [jvm]fun runCommand(command: String): Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/run-command/","title":"runCommand - Misk","text":"<p>//misk-jdbc/misk.database/runCommand</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/run-command/#runcommand","title":"runCommand","text":"<p>[jvm]\\ fun runCommand(command: String): Int</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/","title":"CockroachCluster - Misk","text":"<p>//misk-jdbc/misk.database/CockroachCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/#cockroachcluster","title":"CockroachCluster","text":"<p>[jvm]\\ class CockroachCluster(name: String, config: DataSourceConfig)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/#functions","title":"Functions","text":"Name Summary openConnection [jvm]fun openConnection(): ConnectionConnect to vtgate."},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/#properties","title":"Properties","text":"Name Summary config [jvm]val config: DataSourceConfig externalHttpPort [jvm]val externalHttpPort: Int = 26258 internalHttpPort [jvm]val internalHttpPort: Int = 8080 name [jvm]val name: String postgresPort [jvm]val postgresPort: Int = 26257"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/-cockroach-cluster/","title":"CockroachCluster - Misk","text":"<p>//misk-jdbc/misk.database/CockroachCluster/CockroachCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/-cockroach-cluster/#cockroachcluster","title":"CockroachCluster","text":"<p>[jvm]\\ fun CockroachCluster(name: String, config: DataSourceConfig)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/config/","title":"config - Misk","text":"<p>//misk-jdbc/misk.database/CockroachCluster/config</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/config/#config","title":"config","text":"<p>[jvm]\\ val config: DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/external-http-port/","title":"externalHttpPort - Misk","text":"<p>//misk-jdbc/misk.database/CockroachCluster/externalHttpPort</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/external-http-port/#externalhttpport","title":"externalHttpPort","text":"<p>[jvm]\\ val externalHttpPort: Int = 26258</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/internal-http-port/","title":"internalHttpPort - Misk","text":"<p>//misk-jdbc/misk.database/CockroachCluster/internalHttpPort</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/internal-http-port/#internalhttpport","title":"internalHttpPort","text":"<p>[jvm]\\ val internalHttpPort: Int = 8080</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/name/","title":"name - Misk","text":"<p>//misk-jdbc/misk.database/CockroachCluster/name</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/open-connection/","title":"openConnection - Misk","text":"<p>//misk-jdbc/misk.database/CockroachCluster/openConnection</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/open-connection/#openconnection","title":"openConnection","text":"<p>[jvm]\\ fun openConnection(): Connection</p> <p>Connect to vtgate.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/postgres-port/","title":"postgresPort - Misk","text":"<p>//misk-jdbc/misk.database/CockroachCluster/postgresPort</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-cockroach-cluster/postgres-port/#postgresport","title":"postgresPort","text":"<p>[jvm]\\ val postgresPort: Int = 26257</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-database-server/","title":"DatabaseServer - Misk","text":"<p>//misk-jdbc/misk.database/DatabaseServer</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-database-server/#databaseserver","title":"DatabaseServer","text":"<p>[jvm]\\ interface DatabaseServer</p> <p>Represents a database server for development/testing generally running in Docker.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-database-server/#functions","title":"Functions","text":"Name Summary pullImage [jvm]abstract fun pullImage() start [jvm]abstract fun start() stop [jvm]abstract fun stop()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-database-server/#inheritors","title":"Inheritors","text":"Name DockerCockroachCluster DockerPostgresServer DockerTidbCluster DockerVitessCluster"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-database-server/pull-image/","title":"pullImage - Misk","text":"<p>//misk-jdbc/misk.database/DatabaseServer/pullImage</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-database-server/pull-image/#pullimage","title":"pullImage","text":"<p>[jvm]\\ abstract fun pullImage()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-database-server/start/","title":"start - Misk","text":"<p>//misk-jdbc/misk.database/DatabaseServer/start</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-database-server/start/#start","title":"start","text":"<p>[jvm]\\ abstract fun start()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-database-server/stop/","title":"stop - Misk","text":"<p>//misk-jdbc/misk.database/DatabaseServer/stop</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-database-server/stop/#stop","title":"stop","text":"<p>[jvm]\\ abstract fun stop()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/","title":"DockerCockroachCluster - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/#dockercockroachcluster","title":"DockerCockroachCluster","text":"<p>[jvm]\\ class DockerCockroachCluster(name: String, moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig, docker: DockerClient) : DatabaseServer</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion LogContainerResultCallback [jvm]class LogContainerResultCallback : ResultCallbackTemplate&lt;DockerCockroachCluster.LogContainerResultCallback, Frame&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/#functions","title":"Functions","text":"Name Summary pullImage [jvm]open override fun pullImage() start [jvm]open override fun start() stop [jvm]open override fun stop()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/#properties","title":"Properties","text":"Name Summary cluster [jvm]val cluster: CockroachCluster config [jvm]val config: DataSourceConfig docker [jvm]val docker: DockerClient moshi [jvm]val moshi: Moshi name [jvm]val name: String resourceLoader [jvm]val resourceLoader: ResourceLoader"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-docker-cockroach-cluster/","title":"DockerCockroachCluster - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/DockerCockroachCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-docker-cockroach-cluster/#dockercockroachcluster","title":"DockerCockroachCluster","text":"<p>[jvm]\\ fun DockerCockroachCluster(name: String, moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig, docker: DockerClient)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/cluster/","title":"cluster - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/cluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/cluster/#cluster","title":"cluster","text":"<p>[jvm]\\ val cluster: CockroachCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/config/","title":"config - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/config</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/config/#config","title":"config","text":"<p>[jvm]\\ val config: DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/docker/","title":"docker - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/docker</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/docker/#docker","title":"docker","text":"<p>[jvm]\\ val docker: DockerClient</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/moshi/","title":"moshi - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/moshi</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/moshi/#moshi","title":"moshi","text":"<p>[jvm]\\ val moshi: Moshi</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/name/","title":"name - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/name</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/pull-image/","title":"pullImage - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/pullImage</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/pull-image/#pullimage","title":"pullImage","text":"<p>[jvm]\\ open override fun pullImage()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/resource-loader/","title":"resourceLoader - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/resourceLoader</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/resource-loader/#resourceloader","title":"resourceLoader","text":"<p>[jvm]\\ val resourceLoader: ResourceLoader</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/start/","title":"start - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/start</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/start/#start","title":"start","text":"<p>[jvm]\\ open override fun start()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/stop/","title":"stop - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/stop</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/stop/#stop","title":"stop","text":"<p>[jvm]\\ open override fun stop()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/","title":"Companion - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/#functions","title":"Functions","text":"Name Summary pullImage [jvm]fun pullImage()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/#properties","title":"Properties","text":"Name Summary CONTAINER_NAME [jvm]const val CONTAINER_NAME: String IMAGE [jvm]const val IMAGE: String logger [jvm]val logger: KLogger SHA [jvm]const val SHA: String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/-c-o-n-t-a-i-n-e-r_-n-a-m-e/","title":"CONTAINER_NAME - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/Companion/CONTAINER_NAME</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/-c-o-n-t-a-i-n-e-r_-n-a-m-e/#container_name","title":"CONTAINER_NAME","text":"<p>[jvm]\\ const val CONTAINER_NAME: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/-i-m-a-g-e/","title":"IMAGE - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/Companion/IMAGE</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/-i-m-a-g-e/#image","title":"IMAGE","text":"<p>[jvm]\\ const val IMAGE: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/-s-h-a/","title":"SHA - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/Companion/SHA</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/-s-h-a/#sha","title":"SHA","text":"<p>[jvm]\\ const val SHA: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/logger/","title":"logger - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/Companion/logger</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/logger/#logger","title":"logger","text":"<p>[jvm]\\ val logger: KLogger</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/pull-image/","title":"pullImage - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/Companion/pullImage</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-companion/pull-image/#pullimage","title":"pullImage","text":"<p>[jvm]\\ fun pullImage()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/","title":"LogContainerResultCallback - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/LogContainerResultCallback</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/#logcontainerresultcallback","title":"LogContainerResultCallback","text":"<p>[jvm]\\ class LogContainerResultCallback : ResultCallbackTemplate&lt;DockerCockroachCluster.LogContainerResultCallback, Frame&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/#functions","title":"Functions","text":"Name Summary awaitCompletion [jvm]open fun awaitCompletion(): DockerCockroachCluster.LogContainerResultCallbackopen fun awaitCompletion(p0: Long, p1: TimeUnit): Boolean awaitStarted [jvm]open fun awaitStarted(): DockerCockroachCluster.LogContainerResultCallbackopen fun awaitStarted(p0: Long, p1: TimeUnit): Boolean close [jvm]open override fun close() onComplete [jvm]open override fun onComplete() onError [jvm]open override fun onError(p0: Throwable) onNext [jvm]open override fun onNext(item: Frame) onStart [jvm]open override fun onStart(p0: Closeable) throwFirstError [jvm]open fun throwFirstError()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/-log-container-result-callback/","title":"LogContainerResultCallback - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/LogContainerResultCallback/LogContainerResultCallback</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/-log-container-result-callback/#logcontainerresultcallback","title":"LogContainerResultCallback","text":"<p>[jvm]\\ fun LogContainerResultCallback()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/on-next/","title":"onNext - Misk","text":"<p>//misk-jdbc/misk.database/DockerCockroachCluster/LogContainerResultCallback/onNext</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/on-next/#onnext","title":"onNext","text":"<p>[jvm]\\ open override fun onNext(item: Frame)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/","title":"DockerPostgresServer - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/#dockerpostgresserver","title":"DockerPostgresServer","text":"<p>[jvm]\\ class DockerPostgresServer(config: DataSourceConfig, docker: DockerClient) : DatabaseServer</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion LogContainerResultCallback [jvm]class LogContainerResultCallback : ResultCallbackTemplate&lt;DockerPostgresServer.LogContainerResultCallback, Frame&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/#functions","title":"Functions","text":"Name Summary pullImage [jvm]open override fun pullImage() start [jvm]open override fun start() stop [jvm]open override fun stop()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/#properties","title":"Properties","text":"Name Summary config [jvm]val config: DataSourceConfig docker [jvm]val docker: DockerClient"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-docker-postgres-server/","title":"DockerPostgresServer - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/DockerPostgresServer</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-docker-postgres-server/#dockerpostgresserver","title":"DockerPostgresServer","text":"<p>[jvm]\\ fun DockerPostgresServer(config: DataSourceConfig, docker: DockerClient)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/config/","title":"config - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/config</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/config/#config","title":"config","text":"<p>[jvm]\\ val config: DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/docker/","title":"docker - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/docker</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/docker/#docker","title":"docker","text":"<p>[jvm]\\ val docker: DockerClient</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/pull-image/","title":"pullImage - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/pullImage</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/pull-image/#pullimage","title":"pullImage","text":"<p>[jvm]\\ open override fun pullImage()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/start/","title":"start - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/start</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/start/#start","title":"start","text":"<p>[jvm]\\ open override fun start()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/stop/","title":"stop - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/stop</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/stop/#stop","title":"stop","text":"<p>[jvm]\\ open override fun stop()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/","title":"Companion - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/#functions","title":"Functions","text":"Name Summary pullImage [jvm]fun pullImage()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/#properties","title":"Properties","text":"Name Summary CONTAINER_NAME [jvm]const val CONTAINER_NAME: String IMAGE [jvm]const val IMAGE: String logger [jvm]val logger: KLogger SHA [jvm]const val SHA: String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/-c-o-n-t-a-i-n-e-r_-n-a-m-e/","title":"CONTAINER_NAME - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/Companion/CONTAINER_NAME</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/-c-o-n-t-a-i-n-e-r_-n-a-m-e/#container_name","title":"CONTAINER_NAME","text":"<p>[jvm]\\ const val CONTAINER_NAME: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/-i-m-a-g-e/","title":"IMAGE - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/Companion/IMAGE</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/-i-m-a-g-e/#image","title":"IMAGE","text":"<p>[jvm]\\ const val IMAGE: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/-s-h-a/","title":"SHA - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/Companion/SHA</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/-s-h-a/#sha","title":"SHA","text":"<p>[jvm]\\ const val SHA: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/logger/","title":"logger - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/Companion/logger</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/logger/#logger","title":"logger","text":"<p>[jvm]\\ val logger: KLogger</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/pull-image/","title":"pullImage - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/Companion/pullImage</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-companion/pull-image/#pullimage","title":"pullImage","text":"<p>[jvm]\\ fun pullImage()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/","title":"LogContainerResultCallback - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/LogContainerResultCallback</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/#logcontainerresultcallback","title":"LogContainerResultCallback","text":"<p>[jvm]\\ class LogContainerResultCallback : ResultCallbackTemplate&lt;DockerPostgresServer.LogContainerResultCallback, Frame&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/#functions","title":"Functions","text":"Name Summary awaitCompletion [jvm]open fun awaitCompletion(): DockerPostgresServer.LogContainerResultCallbackopen fun awaitCompletion(p0: Long, p1: TimeUnit): Boolean awaitStarted [jvm]open fun awaitStarted(): DockerPostgresServer.LogContainerResultCallbackopen fun awaitStarted(p0: Long, p1: TimeUnit): Boolean close [jvm]open override fun close() onComplete [jvm]open override fun onComplete() onError [jvm]open override fun onError(p0: Throwable) onNext [jvm]open override fun onNext(item: Frame) onStart [jvm]open override fun onStart(p0: Closeable) throwFirstError [jvm]open fun throwFirstError()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/-log-container-result-callback/","title":"LogContainerResultCallback - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/LogContainerResultCallback/LogContainerResultCallback</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/-log-container-result-callback/#logcontainerresultcallback","title":"LogContainerResultCallback","text":"<p>[jvm]\\ fun LogContainerResultCallback()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/on-next/","title":"onNext - Misk","text":"<p>//misk-jdbc/misk.database/DockerPostgresServer/LogContainerResultCallback/onNext</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/on-next/#onnext","title":"onNext","text":"<p>[jvm]\\ open override fun onNext(item: Frame)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/","title":"DockerTidbCluster - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/#dockertidbcluster","title":"DockerTidbCluster","text":"<p>[jvm]\\ class DockerTidbCluster(moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig, docker: DockerClient) : DatabaseServer</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion LogContainerResultCallback [jvm]class LogContainerResultCallback : ResultCallbackTemplate&lt;DockerTidbCluster.LogContainerResultCallback, Frame&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/#functions","title":"Functions","text":"Name Summary pullImage [jvm]open override fun pullImage() start [jvm]open override fun start() stop [jvm]open override fun stop()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/#properties","title":"Properties","text":"Name Summary cluster [jvm]val cluster: TidbCluster config [jvm]val config: DataSourceConfig docker [jvm]val docker: DockerClient moshi [jvm]val moshi: Moshi resourceLoader [jvm]val resourceLoader: ResourceLoader"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-docker-tidb-cluster/","title":"DockerTidbCluster - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/DockerTidbCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-docker-tidb-cluster/#dockertidbcluster","title":"DockerTidbCluster","text":"<p>[jvm]\\ fun DockerTidbCluster(moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig, docker: DockerClient)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/cluster/","title":"cluster - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/cluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/cluster/#cluster","title":"cluster","text":"<p>[jvm]\\ val cluster: TidbCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/config/","title":"config - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/config</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/config/#config","title":"config","text":"<p>[jvm]\\ val config: DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/docker/","title":"docker - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/docker</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/docker/#docker","title":"docker","text":"<p>[jvm]\\ val docker: DockerClient</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/moshi/","title":"moshi - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/moshi</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/moshi/#moshi","title":"moshi","text":"<p>[jvm]\\ val moshi: Moshi</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/pull-image/","title":"pullImage - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/pullImage</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/pull-image/#pullimage","title":"pullImage","text":"<p>[jvm]\\ open override fun pullImage()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/resource-loader/","title":"resourceLoader - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/resourceLoader</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/resource-loader/#resourceloader","title":"resourceLoader","text":"<p>[jvm]\\ val resourceLoader: ResourceLoader</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/start/","title":"start - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/start</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/start/#start","title":"start","text":"<p>[jvm]\\ open override fun start()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/stop/","title":"stop - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/stop</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/stop/#stop","title":"stop","text":"<p>[jvm]\\ open override fun stop()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/","title":"Companion - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/#functions","title":"Functions","text":"Name Summary pullImage [jvm]fun pullImage()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/#properties","title":"Properties","text":"Name Summary CONTAINER_NAME [jvm]const val CONTAINER_NAME: String IMAGE [jvm]const val IMAGE: String logger [jvm]val logger: KLogger SHA [jvm]const val SHA: String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/-c-o-n-t-a-i-n-e-r_-n-a-m-e/","title":"CONTAINER_NAME - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/Companion/CONTAINER_NAME</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/-c-o-n-t-a-i-n-e-r_-n-a-m-e/#container_name","title":"CONTAINER_NAME","text":"<p>[jvm]\\ const val CONTAINER_NAME: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/-i-m-a-g-e/","title":"IMAGE - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/Companion/IMAGE</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/-i-m-a-g-e/#image","title":"IMAGE","text":"<p>[jvm]\\ const val IMAGE: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/-s-h-a/","title":"SHA - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/Companion/SHA</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/-s-h-a/#sha","title":"SHA","text":"<p>[jvm]\\ const val SHA: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/logger/","title":"logger - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/Companion/logger</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/logger/#logger","title":"logger","text":"<p>[jvm]\\ val logger: KLogger</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/pull-image/","title":"pullImage - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/Companion/pullImage</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-companion/pull-image/#pullimage","title":"pullImage","text":"<p>[jvm]\\ fun pullImage()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/","title":"LogContainerResultCallback - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/LogContainerResultCallback</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/#logcontainerresultcallback","title":"LogContainerResultCallback","text":"<p>[jvm]\\ class LogContainerResultCallback : ResultCallbackTemplate&lt;DockerTidbCluster.LogContainerResultCallback, Frame&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/#functions","title":"Functions","text":"Name Summary awaitCompletion [jvm]open fun awaitCompletion(): DockerTidbCluster.LogContainerResultCallbackopen fun awaitCompletion(p0: Long, p1: TimeUnit): Boolean awaitStarted [jvm]open fun awaitStarted(): DockerTidbCluster.LogContainerResultCallbackopen fun awaitStarted(p0: Long, p1: TimeUnit): Boolean close [jvm]open override fun close() onComplete [jvm]open override fun onComplete() onError [jvm]open override fun onError(p0: Throwable) onNext [jvm]open override fun onNext(item: Frame) onStart [jvm]open override fun onStart(p0: Closeable) throwFirstError [jvm]open fun throwFirstError()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/-log-container-result-callback/","title":"LogContainerResultCallback - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/LogContainerResultCallback/LogContainerResultCallback</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/-log-container-result-callback/#logcontainerresultcallback","title":"LogContainerResultCallback","text":"<p>[jvm]\\ fun LogContainerResultCallback()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/on-next/","title":"onNext - Misk","text":"<p>//misk-jdbc/misk.database/DockerTidbCluster/LogContainerResultCallback/onNext</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/on-next/#onnext","title":"onNext","text":"<p>[jvm]\\ open override fun onNext(item: Frame)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/","title":"DockerVitessCluster - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/#dockervitesscluster","title":"DockerVitessCluster","text":"<p>[jvm]\\ class DockerVitessCluster(name: String, moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig, docker: DockerClient) : DatabaseServer</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion LogContainerResultCallback [jvm]class LogContainerResultCallback : ResultCallbackTemplate&lt;DockerVitessCluster.LogContainerResultCallback, Frame&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/#functions","title":"Functions","text":"Name Summary pullImage [jvm]open override fun pullImage() start [jvm]open override fun start() stop [jvm]open override fun stop()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/#properties","title":"Properties","text":"Name Summary cluster [jvm]val cluster: VitessCluster config [jvm]val config: DataSourceConfig docker [jvm]val docker: DockerClient moshi [jvm]val moshi: Moshi name [jvm]val name: String resourceLoader [jvm]val resourceLoader: ResourceLoader"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-docker-vitess-cluster/","title":"DockerVitessCluster - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/DockerVitessCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-docker-vitess-cluster/#dockervitesscluster","title":"DockerVitessCluster","text":"<p>[jvm]\\ fun DockerVitessCluster(name: String, moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig, docker: DockerClient)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/cluster/","title":"cluster - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/cluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/cluster/#cluster","title":"cluster","text":"<p>[jvm]\\ val cluster: VitessCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/config/","title":"config - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/config</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/config/#config","title":"config","text":"<p>[jvm]\\ val config: DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/docker/","title":"docker - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/docker</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/docker/#docker","title":"docker","text":"<p>[jvm]\\ val docker: DockerClient</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/moshi/","title":"moshi - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/moshi</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/moshi/#moshi","title":"moshi","text":"<p>[jvm]\\ val moshi: Moshi</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/name/","title":"name - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/name</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/pull-image/","title":"pullImage - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/pullImage</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/pull-image/#pullimage","title":"pullImage","text":"<p>[jvm]\\ open override fun pullImage()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/resource-loader/","title":"resourceLoader - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/resourceLoader</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/resource-loader/#resourceloader","title":"resourceLoader","text":"<p>[jvm]\\ val resourceLoader: ResourceLoader</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/start/","title":"start - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/start</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/start/#start","title":"start","text":"<p>[jvm]\\ open override fun start()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/stop/","title":"stop - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/stop</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/stop/#stop","title":"stop","text":"<p>[jvm]\\ open override fun stop()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/","title":"Companion - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/#functions","title":"Functions","text":"Name Summary pullImage [jvm]fun pullImage() startVitessDaemon [jvm]fun startVitessDaemon(qualifier: KClass&lt;out Annotation&gt;, config: DataSourceConfig)A helper method to start the Vitess cluster outside of the dev server or test process, to enable rapid iteration. This should be called directly a main() function, for example:"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/#properties","title":"Properties","text":"Name Summary CONTAINER_NAME_PREFIX [jvm]const val CONTAINER_NAME_PREFIX: String logger [jvm]val logger: KLogger VITESS_IMAGE [jvm]const val VITESS_IMAGE: String VITESS_SHA [jvm]const val VITESS_SHA: String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/-c-o-n-t-a-i-n-e-r_-n-a-m-e_-p-r-e-f-i-x/","title":"CONTAINER_NAME_PREFIX - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/Companion/CONTAINER_NAME_PREFIX</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/-c-o-n-t-a-i-n-e-r_-n-a-m-e_-p-r-e-f-i-x/#container_name_prefix","title":"CONTAINER_NAME_PREFIX","text":"<p>[jvm]\\ const val CONTAINER_NAME_PREFIX: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/-v-i-t-e-s-s_-i-m-a-g-e/","title":"VITESS_IMAGE - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/Companion/VITESS_IMAGE</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/-v-i-t-e-s-s_-i-m-a-g-e/#vitess_image","title":"VITESS_IMAGE","text":"<p>[jvm]\\ const val VITESS_IMAGE: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/-v-i-t-e-s-s_-s-h-a/","title":"VITESS_SHA - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/Companion/VITESS_SHA</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/-v-i-t-e-s-s_-s-h-a/#vitess_sha","title":"VITESS_SHA","text":"<p>[jvm]\\ const val VITESS_SHA: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/logger/","title":"logger - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/Companion/logger</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/logger/#logger","title":"logger","text":"<p>[jvm]\\ val logger: KLogger</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/pull-image/","title":"pullImage - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/Companion/pullImage</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/pull-image/#pullimage","title":"pullImage","text":"<p>[jvm]\\ fun pullImage()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/start-vitess-daemon/","title":"startVitessDaemon - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/Companion/startVitessDaemon</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-companion/start-vitess-daemon/#startvitessdaemon","title":"startVitessDaemon","text":"<p>[jvm]\\ fun startVitessDaemon(qualifier: KClass&lt;out Annotation&gt;, config: DataSourceConfig)</p> <p>A helper method to start the Vitess cluster outside of the dev server or test process, to enable rapid iteration. This should be called directly a main() function, for example:</p> <p>MyAppVitessDaemon.kt:</p> <p>fun main() {     val config = MiskConfig.load(\u201cmyapp\u201d, Environment.TESTING)     startVitessDaemon(MyAppDb::class, config.data_source_clusters.values.first().writer) }"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/","title":"LogContainerResultCallback - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/LogContainerResultCallback</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/#logcontainerresultcallback","title":"LogContainerResultCallback","text":"<p>[jvm]\\ class LogContainerResultCallback : ResultCallbackTemplate&lt;DockerVitessCluster.LogContainerResultCallback, Frame&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/#functions","title":"Functions","text":"Name Summary awaitCompletion [jvm]open fun awaitCompletion(): DockerVitessCluster.LogContainerResultCallbackopen fun awaitCompletion(p0: Long, p1: TimeUnit): Boolean awaitStarted [jvm]open fun awaitStarted(): DockerVitessCluster.LogContainerResultCallbackopen fun awaitStarted(p0: Long, p1: TimeUnit): Boolean close [jvm]open override fun close() onComplete [jvm]open override fun onComplete() onError [jvm]open override fun onError(p0: Throwable) onNext [jvm]open override fun onNext(item: Frame) onStart [jvm]open override fun onStart(p0: Closeable) throwFirstError [jvm]open fun throwFirstError()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/-log-container-result-callback/","title":"LogContainerResultCallback - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/LogContainerResultCallback/LogContainerResultCallback</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/-log-container-result-callback/#logcontainerresultcallback","title":"LogContainerResultCallback","text":"<p>[jvm]\\ fun LogContainerResultCallback()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/on-next/","title":"onNext - Misk","text":"<p>//misk-jdbc/misk.database/DockerVitessCluster/LogContainerResultCallback/onNext</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/on-next/#onnext","title":"onNext","text":"<p>[jvm]\\ open override fun onNext(item: Frame)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-keyspace/","title":"Keyspace - Misk","text":"<p>//misk-jdbc/misk.database/Keyspace</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-keyspace/#keyspace","title":"Keyspace","text":"<p>[jvm]\\ class Keyspace(sharded: Boolean, tables: Map&lt;String, Table&gt;)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-keyspace/#functions","title":"Functions","text":"Name Summary shardCount [jvm]fun shardCount(): Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-keyspace/#properties","title":"Properties","text":"Name Summary sharded [jvm]val sharded: Boolean tables [jvm]val tables: Map&lt;String, Table&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-keyspace/-keyspace/","title":"Keyspace - Misk","text":"<p>//misk-jdbc/misk.database/Keyspace/Keyspace</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-keyspace/-keyspace/#keyspace","title":"Keyspace","text":"<p>[jvm]\\ fun Keyspace(sharded: Boolean, tables: Map&lt;String, Table&gt;)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-keyspace/shard-count/","title":"shardCount - Misk","text":"<p>//misk-jdbc/misk.database/Keyspace/shardCount</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-keyspace/shard-count/#shardcount","title":"shardCount","text":"<p>[jvm]\\ fun shardCount(): Int</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-keyspace/sharded/","title":"sharded - Misk","text":"<p>//misk-jdbc/misk.database/Keyspace/sharded</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-keyspace/sharded/#sharded","title":"sharded","text":"<p>[jvm]\\ val sharded: Boolean</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-keyspace/tables/","title":"tables - Misk","text":"<p>//misk-jdbc/misk.database/Keyspace/tables</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-keyspace/tables/#tables","title":"tables","text":"<p>[jvm]\\ val tables: Map&lt;String, Table&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/","title":"StartDatabaseService - Misk","text":"<p>//misk-jdbc/misk.database/StartDatabaseService</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/#startdatabaseservice","title":"StartDatabaseService","text":"<p>[jvm]\\ class StartDatabaseService(qualifier: KClass&lt;out Annotation&gt;, deployment: Deployment, config: DataSourceConfig) : AbstractIdleService</p> <p>All Vitess clusters used by the app/test are tracked in a global cache as a DockerVitessCluster.</p> <p>On startup, the service will look for a cluster in the cache, and if not found, look for it in Docker by container name, or as a last resort start the container itself.</p> <p>On shutdown, the cache is invalidated by a JVM shutdown hook. On invalidation, the cache will call the each entry\u2019s stop() method. If the cluster container was created in this JVM, it will be stopped and removed. Otherwise (if the container was started by a different process), it will be left running.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/#constructors","title":"Constructors","text":"StartDatabaseService [jvm]fun StartDatabaseService(qualifier: KClass&lt;out Annotation&gt;, deployment: Deployment, config: DataSourceConfig)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/#types","title":"Types","text":"Name Summary CacheKey [jvm]data class CacheKey(name: String, config: DataSourceConfig, deployment: Deployment) Companion [jvm]object Companion"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable init [jvm]fun init(): StartDatabaseService isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/#properties","title":"Properties","text":"Name Summary server [jvm]var server: DatabaseServer? = null"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-start-database-service/","title":"StartDatabaseService - Misk","text":"<p>//misk-jdbc/misk.database/StartDatabaseService/StartDatabaseService</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-start-database-service/#startdatabaseservice","title":"StartDatabaseService","text":"<p>[jvm]\\ fun StartDatabaseService(qualifier: KClass&lt;out Annotation&gt;, deployment: Deployment, config: DataSourceConfig)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/init/","title":"init - Misk","text":"<p>//misk-jdbc/misk.database/StartDatabaseService/init</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/init/#init","title":"init","text":"<p>[jvm]\\ fun init(): StartDatabaseService</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/server/","title":"server - Misk","text":"<p>//misk-jdbc/misk.database/StartDatabaseService/server</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/server/#server","title":"server","text":"<p>[jvm]\\ var server: DatabaseServer? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-cache-key/","title":"CacheKey - Misk","text":"<p>//misk-jdbc/misk.database/StartDatabaseService/CacheKey</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-cache-key/#cachekey","title":"CacheKey","text":"<p>[jvm]\\ data class CacheKey(name: String, config: DataSourceConfig, deployment: Deployment)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-cache-key/#properties","title":"Properties","text":"Name Summary config [jvm]val config: DataSourceConfig deployment [jvm]val deployment: Deployment name [jvm]val name: String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-cache-key/-cache-key/","title":"CacheKey - Misk","text":"<p>//misk-jdbc/misk.database/StartDatabaseService/CacheKey/CacheKey</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-cache-key/-cache-key/#cachekey","title":"CacheKey","text":"<p>[jvm]\\ fun CacheKey(name: String, config: DataSourceConfig, deployment: Deployment)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-cache-key/config/","title":"config - Misk","text":"<p>//misk-jdbc/misk.database/StartDatabaseService/CacheKey/config</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-cache-key/config/#config","title":"config","text":"<p>[jvm]\\ val config: DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-cache-key/deployment/","title":"deployment - Misk","text":"<p>//misk-jdbc/misk.database/StartDatabaseService/CacheKey/deployment</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-cache-key/deployment/#deployment","title":"deployment","text":"<p>[jvm]\\ val deployment: Deployment</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-cache-key/name/","title":"name - Misk","text":"<p>//misk-jdbc/misk.database/StartDatabaseService/CacheKey/name</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-cache-key/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-companion/","title":"Companion - Misk","text":"<p>//misk-jdbc/misk.database/StartDatabaseService/Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-companion/#properties","title":"Properties","text":"Name Summary logger [jvm]val logger: KLogger servers [jvm]lateinit var servers: LoadingCache&lt;StartDatabaseService.CacheKey, Optional&lt;DatabaseServer&gt;&gt;Global cache of running database servers."},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-companion/logger/","title":"logger - Misk","text":"<p>//misk-jdbc/misk.database/StartDatabaseService/Companion/logger</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-companion/logger/#logger","title":"logger","text":"<p>[jvm]\\ val logger: KLogger</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-companion/servers/","title":"servers - Misk","text":"<p>//misk-jdbc/misk.database/StartDatabaseService/Companion/servers</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-database-service/-companion/servers/#servers","title":"servers","text":"<p>[jvm]\\ lateinit var servers: LoadingCache&lt;StartDatabaseService.CacheKey, Optional&lt;DatabaseServer&gt;&gt;</p> <p>Global cache of running database servers.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-vitess-service/","title":"StartVitessService - Misk","text":"<p>//misk-jdbc/misk.database/StartVitessService</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-vitess-service/#startvitessservice","title":"StartVitessService","text":"<p>[jvm]\\ class StartVitessService</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-vitess-service/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-vitess-service/-start-vitess-service/","title":"StartVitessService - Misk","text":"<p>//misk-jdbc/misk.database/StartVitessService/StartVitessService</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-vitess-service/-start-vitess-service/#startvitessservice","title":"StartVitessService","text":"<p>[jvm]\\ fun StartVitessService()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-vitess-service/-companion/","title":"Companion - Misk","text":"<p>//misk-jdbc/misk.database/StartVitessService/Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-start-vitess-service/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-table/","title":"Table - Misk","text":"<p>//misk-jdbc/misk.database/Table</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-table/#table","title":"Table","text":"<p>[jvm]\\ class Table</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-table/-table/","title":"Table - Misk","text":"<p>//misk-jdbc/misk.database/Table/Table</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-table/-table/#table","title":"Table","text":"<p>[jvm]\\ fun Table()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/","title":"TidbCluster - Misk","text":"<p>//misk-jdbc/misk.database/TidbCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/#tidbcluster","title":"TidbCluster","text":"<p>[jvm]\\ class TidbCluster(resourceLoader: ResourceLoader, config: DataSourceConfig)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/#functions","title":"Functions","text":"Name Summary openConnection [jvm]fun openConnection(): ConnectionConnect to vtgate."},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/#properties","title":"Properties","text":"Name Summary config [jvm]val config: DataSourceConfig configDir [jvm]val configDir: Path httpPort [jvm]val httpPort: Int = 10080 mysqlPort [jvm]val mysqlPort: Int = 4000 resourceLoader [jvm]val resourceLoader: ResourceLoader"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/-tidb-cluster/","title":"TidbCluster - Misk","text":"<p>//misk-jdbc/misk.database/TidbCluster/TidbCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/-tidb-cluster/#tidbcluster","title":"TidbCluster","text":"<p>[jvm]\\ fun TidbCluster(resourceLoader: ResourceLoader, config: DataSourceConfig)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/config-dir/","title":"configDir - Misk","text":"<p>//misk-jdbc/misk.database/TidbCluster/configDir</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/config-dir/#configdir","title":"configDir","text":"<p>[jvm]\\ val configDir: Path</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/config/","title":"config - Misk","text":"<p>//misk-jdbc/misk.database/TidbCluster/config</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/config/#config","title":"config","text":"<p>[jvm]\\ val config: DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/http-port/","title":"httpPort - Misk","text":"<p>//misk-jdbc/misk.database/TidbCluster/httpPort</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/http-port/#httpport","title":"httpPort","text":"<p>[jvm]\\ val httpPort: Int = 10080</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/mysql-port/","title":"mysqlPort - Misk","text":"<p>//misk-jdbc/misk.database/TidbCluster/mysqlPort</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/mysql-port/#mysqlport","title":"mysqlPort","text":"<p>[jvm]\\ val mysqlPort: Int = 4000</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/open-connection/","title":"openConnection - Misk","text":"<p>//misk-jdbc/misk.database/TidbCluster/openConnection</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/open-connection/#openconnection","title":"openConnection","text":"<p>[jvm]\\ fun openConnection(): Connection</p> <p>Connect to vtgate.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/resource-loader/","title":"resourceLoader - Misk","text":"<p>//misk-jdbc/misk.database/TidbCluster/resourceLoader</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-tidb-cluster/resource-loader/#resourceloader","title":"resourceLoader","text":"<p>[jvm]\\ val resourceLoader: ResourceLoader</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/","title":"VitessCluster - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/#vitesscluster","title":"VitessCluster","text":"<p>[jvm]\\ class VitessCluster@JvmOverloadsconstructor(name: String, resourceLoader: ResourceLoader, config: DataSourceConfig, moshi: Moshi)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/#functions","title":"Functions","text":"Name Summary keyspaces [jvm]fun keyspaces(): Map&lt;String, Keyspace&gt; openMysqlConnection [jvm]fun openMysqlConnection(): ConnectionConnect to the underlying MySQL database, bypassing Vitess entirely. openVtgateConnection [jvm]fun openVtgateConnection(): ConnectionConnect to vtgate."},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/#properties","title":"Properties","text":"Name Summary config [jvm]val config: DataSourceConfig configDir [jvm]val configDir: Path grpcPort [jvm]val grpcPort: Int httpPort [jvm]val httpPort: Int = 27000 keyspaceAdapter [jvm]val keyspaceAdapter: &lt;ERROR CLASS&gt; moshi [jvm]val moshi: Moshi mysqlPort [jvm]val mysqlPort: Int name [jvm]val name: String schemaDir [jvm]val schemaDir: Path vtgateMysqlPort [jvm]val vtgateMysqlPort: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/-vitess-cluster/","title":"VitessCluster - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/VitessCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/-vitess-cluster/#vitesscluster","title":"VitessCluster","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun VitessCluster(name: String, resourceLoader: ResourceLoader, config: DataSourceConfig, moshi: Moshi = defaultKotlinMoshi)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/config-dir/","title":"configDir - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/configDir</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/config-dir/#configdir","title":"configDir","text":"<p>[jvm]\\ val configDir: Path</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/config/","title":"config - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/config</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/config/#config","title":"config","text":"<p>[jvm]\\ val config: DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/grpc-port/","title":"grpcPort - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/grpcPort</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/grpc-port/#grpcport","title":"grpcPort","text":"<p>[jvm]\\ val grpcPort: Int</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/http-port/","title":"httpPort - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/httpPort</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/http-port/#httpport","title":"httpPort","text":"<p>[jvm]\\ val httpPort: Int = 27000</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/keyspace-adapter/","title":"keyspaceAdapter - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/keyspaceAdapter</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/keyspace-adapter/#keyspaceadapter","title":"keyspaceAdapter","text":"<p>[jvm]\\ val keyspaceAdapter: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/keyspaces/","title":"keyspaces - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/keyspaces</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/keyspaces/#keyspaces","title":"keyspaces","text":"<p>[jvm]\\ fun keyspaces(): Map&lt;String, Keyspace&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/moshi/","title":"moshi - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/moshi</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/moshi/#moshi","title":"moshi","text":"<p>[jvm]\\ val moshi: Moshi</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/mysql-port/","title":"mysqlPort - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/mysqlPort</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/mysql-port/#mysqlport","title":"mysqlPort","text":"<p>[jvm]\\ val mysqlPort: Int</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/name/","title":"name - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/name</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/open-mysql-connection/","title":"openMysqlConnection - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/openMysqlConnection</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/open-mysql-connection/#openmysqlconnection","title":"openMysqlConnection","text":"<p>[jvm]\\ fun openMysqlConnection(): Connection</p> <p>Connect to the underlying MySQL database, bypassing Vitess entirely.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/open-vtgate-connection/","title":"openVtgateConnection - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/openVtgateConnection</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/open-vtgate-connection/#openvtgateconnection","title":"openVtgateConnection","text":"<p>[jvm]\\ fun openVtgateConnection(): Connection</p> <p>Connect to vtgate.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/schema-dir/","title":"schemaDir - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/schemaDir</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/schema-dir/#schemadir","title":"schemaDir","text":"<p>[jvm]\\ val schemaDir: Path</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/vtgate-mysql-port/","title":"vtgateMysqlPort - Misk","text":"<p>//misk-jdbc/misk.database/VitessCluster/vtgateMysqlPort</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.database/-vitess-cluster/vtgate-mysql-port/#vtgatemysqlport","title":"vtgateMysqlPort","text":"<p>[jvm]\\ val vtgateMysqlPort: Int</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/","title":"Package misk.jdbc - Misk","text":"<p>//misk-jdbc/misk.jdbc</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/#package-miskjdbc","title":"Package misk.jdbc","text":""},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/#types","title":"Types","text":"Name Summary Check [jvm]enum Check : Enum&lt;Check&gt; CheckDisabler [jvm]object CheckDisabler CheckException [jvm]open class CheckException@JvmOverloadsconstructor(message: String?, cause: Throwable?) : SQLExceptionAn exception that is thrown when a Check fails. Cluster [jvm]interface Cluster&lt;T&gt;Cluster provides a consistent abstraction for interacting with various database-related resources T based on their role in the underlying database topology. DatabasePool [jvm]interface DatabasePoolFigures out what database name to use for a given config. Tests use this to pool many databases for concurrent execution. In development, staging, and production the database never changes. DatabaseReadyService [jvm]interface DatabaseReadyService : ServiceMarker interface for indicating that the database is ready. DataSourceCluster [jvm]class DataSourceCluster(writer: DataSource, reader: DataSource) : Cluster&lt;DataSource&gt; DataSourceClusterConfig [jvm]data class DataSourceClusterConfig(writer: DataSourceConfig, reader: DataSourceConfig?)Configuration element for a cluster of DataSources DataSourceClustersConfig [jvm]class DataSourceClustersConfig : ConfigTop-level configuration element for all datasource clusters DataSourceConfig [jvm]data class DataSourceConfig@JvmOverloadsconstructor(type: DataSourceType, host: String?, port: Int?, database: String?, username: String?, password: String?, fixed_pool_size: Int, connection_timeout: Duration, validation_timeout: Duration, connection_idle_timeout: Duration?, connection_max_lifetime: Duration, query_timeout: Duration?, migrations_resource: String?, migrations_resources: List&lt;String&gt;?, migrations_resources_exclusion: List&lt;String&gt;?, migrations_resources_regex: String, vitess_schema_resource_root: String?, trust_certificate_key_store_url: String?, trust_certificate_key_store_password: String?, client_certificate_key_store_url: String?, client_certificate_key_store_password: String?, trust_certificate_key_store_path: String?, client_certificate_key_store_path: String?, verify_server_identity: Boolean, enabledTlsProtocols: List&lt;String&gt;, show_sql: String?, generate_hibernate_stats: String?, jdbc_statement_batch_size: Int?, use_fixed_pool_size: Boolean, allow_public_key_retrieval: Boolean, jdbc_url_query_parameters: Map&lt;String, Any&gt;)Configuration element for an individual datasource DataSourceConnector [jvm]interface DataSourceConnector DataSourceDecorator [jvm]interface DataSourceDecorator DataSourceService [jvm]@Singletonclass DataSourceService@JvmOverloadsconstructor(qualifier: KClass&lt;out Annotation&gt;, baseConfig: DataSourceConfig, deployment: Deployment, dataSourceDecorators: Set&lt;DataSourceDecorator&gt;, databasePool: DatabasePool, collectorRegistry: CollectorRegistry?) : AbstractIdleService, DataSourceConnector, Provider&lt;DataSource&gt; Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation. DataSourceType [jvm]enum DataSourceType : Enum&lt;DataSourceType&gt; Defines a type of datasource JdbcModule [jvm]class JdbcModule@JvmOverloadsconstructor(qualifier: KClass&lt;out Annotation&gt;, config: DataSourceConfig, readerQualifier: KClass&lt;out Annotation&gt;?, readerConfig: DataSourceConfig?, databasePool: DatabasePool, installHealthCheck: Boolean) : KAbstractModuleBinds database connectivity for a qualified data source. This binds the following public types: JDBCSession [jvm]class JDBCSession(connection: Connection) : Session PingDatabaseService [jvm]@Singletonclass PingDatabaseService@Injectconstructor(config: DataSourceConfig, deployment: Deployment) : AbstractIdleServiceService that waits for the database to become healthy. This is needed if we\u2019re booting up a Vitess cluster as part of the test run. PostCommitHookFailedException [jvm]class PostCommitHookFailedException(cause: Throwable) : ExceptionPostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook RealDatabasePool [jvm]object RealDatabasePool : DatabasePool RealTransacter [jvm]class RealTransacter(dataSource: DataSource) : Transacter SchemaMigratorService [jvm]class SchemaMigratorService : AbstractIdleService, HealthCheck, DatabaseReadyService Session [jvm]interface Session SpanInjector [jvm]class SpanInjector(tracer: Tracer?, config: DataSourceConfig) : QueryTransformer, DataSourceDecoratorOn the fly decorates queries with the span context, so the query call can be traced all the way through Vitess StringBuilderCarrier [jvm]class StringBuilderCarrier : TextMap TableScanException [jvm]class TableScanException@JvmOverloadsconstructor(message: String?, cause: Throwable?) : CheckExceptionException thrown if we execute a query lacking an index. Transacter [jvm]interface Transacter"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/#functions","title":"Functions","text":"Name Summary map [jvm]fun &lt;T&gt; ResultSet.map(function: (ResultSet) -&gt; T): List&lt;T&gt; maybeInt [jvm]fun ResultSet.maybeInt(): Int? maybeLong [jvm]fun ResultSet.maybeLong(): Long? maybeResult [jvm]fun &lt;T&gt; ResultSet.maybeResult(function: (ResultSet) -&gt; T): T? maybeString [jvm]fun ResultSet.maybeString(): String? uniqueInt [jvm]fun ResultSet.uniqueInt(): Int uniqueLong [jvm]fun ResultSet.uniqueLong(): Long uniqueResult [jvm]fun &lt;T&gt; ResultSet.uniqueResult(function: (ResultSet) -&gt; T): T uniqueString [jvm]fun ResultSet.uniqueString(): String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/map/","title":"map - Misk","text":"<p>//misk-jdbc/misk.jdbc/map</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/map/#map","title":"map","text":"<p>[jvm]\\ fun &lt;T&gt; ResultSet.map(function: (ResultSet) -&gt; T): List&lt;T&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/maybe-int/","title":"maybeInt - Misk","text":"<p>//misk-jdbc/misk.jdbc/maybeInt</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/maybe-int/#maybeint","title":"maybeInt","text":"<p>[jvm]\\ fun ResultSet.maybeInt(): Int?</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/maybe-long/","title":"maybeLong - Misk","text":"<p>//misk-jdbc/misk.jdbc/maybeLong</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/maybe-long/#maybelong","title":"maybeLong","text":"<p>[jvm]\\ fun ResultSet.maybeLong(): Long?</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/maybe-result/","title":"maybeResult - Misk","text":"<p>//misk-jdbc/misk.jdbc/maybeResult</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/maybe-result/#mayberesult","title":"maybeResult","text":"<p>[jvm]\\ fun &lt;T&gt; ResultSet.maybeResult(function: (ResultSet) -&gt; T): T?</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/maybe-string/","title":"maybeString - Misk","text":"<p>//misk-jdbc/misk.jdbc/maybeString</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/maybe-string/#maybestring","title":"maybeString","text":"<p>[jvm]\\ fun ResultSet.maybeString(): String?</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/unique-int/","title":"uniqueInt - Misk","text":"<p>//misk-jdbc/misk.jdbc/uniqueInt</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/unique-int/#uniqueint","title":"uniqueInt","text":"<p>[jvm]\\ fun ResultSet.uniqueInt(): Int</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/unique-long/","title":"uniqueLong - Misk","text":"<p>//misk-jdbc/misk.jdbc/uniqueLong</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/unique-long/#uniquelong","title":"uniqueLong","text":"<p>[jvm]\\ fun ResultSet.uniqueLong(): Long</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/unique-result/","title":"uniqueResult - Misk","text":"<p>//misk-jdbc/misk.jdbc/uniqueResult</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/unique-result/#uniqueresult","title":"uniqueResult","text":"<p>[jvm]\\ fun &lt;T&gt; ResultSet.uniqueResult(function: (ResultSet) -&gt; T): T</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/unique-string/","title":"uniqueString - Misk","text":"<p>//misk-jdbc/misk.jdbc/uniqueString</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/unique-string/#uniquestring","title":"uniqueString","text":"<p>[jvm]\\ fun ResultSet.uniqueString(): String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check/","title":"Check - Misk","text":"<p>//misk-jdbc/misk.jdbc/Check</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check/#check","title":"Check","text":"<p>[jvm]\\ enum Check : Enum&lt;Check&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check/#entries","title":"Entries","text":"COWRITE [jvm]COWRITE() TABLE_SCAN [jvm]TABLE_SCAN() FULL_SCATTER [jvm]FULL_SCATTER()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check/-c-o-w-r-i-t-e/","title":"COWRITE - Misk","text":"<p>//misk-jdbc/misk.jdbc/Check/COWRITE</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check/-c-o-w-r-i-t-e/#cowrite","title":"COWRITE","text":"<p>[jvm]\\ COWRITE()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check/-c-o-w-r-i-t-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check/-f-u-l-l_-s-c-a-t-t-e-r/","title":"FULL_SCATTER - Misk","text":"<p>//misk-jdbc/misk.jdbc/Check/FULL_SCATTER</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check/-f-u-l-l_-s-c-a-t-t-e-r/#full_scatter","title":"FULL_SCATTER","text":"<p>[jvm]\\ FULL_SCATTER()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check/-f-u-l-l_-s-c-a-t-t-e-r/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check/-t-a-b-l-e_-s-c-a-n/","title":"TABLE_SCAN - Misk","text":"<p>//misk-jdbc/misk.jdbc/Check/TABLE_SCAN</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check/-t-a-b-l-e_-s-c-a-n/#table_scan","title":"TABLE_SCAN","text":"<p>[jvm]\\ TABLE_SCAN()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check/-t-a-b-l-e_-s-c-a-n/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-disabler/","title":"CheckDisabler - Misk","text":"<p>//misk-jdbc/misk.jdbc/CheckDisabler</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-disabler/#checkdisabler","title":"CheckDisabler","text":"<p>[jvm]\\ object CheckDisabler</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-disabler/#functions","title":"Functions","text":"Name Summary disableChecks [jvm]fun &lt;T&gt; disableChecks(checks: Collection&lt;Check&gt;, body: () -&gt; T): T isCheckEnabled [jvm]fun isCheckEnabled(check: Check): Boolean withoutChecks [jvm]fun &lt;T&gt; withoutChecks(vararg checks: Check, body: () -&gt; T): T"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-disabler/#properties","title":"Properties","text":"Name Summary disabledChecks [jvm]val disabledChecks: ThreadLocal&lt;Collection&lt;Check&gt;&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-disabler/disable-checks/","title":"disableChecks - Misk","text":"<p>//misk-jdbc/misk.jdbc/CheckDisabler/disableChecks</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-disabler/disable-checks/#disablechecks","title":"disableChecks","text":"<p>[jvm]\\ fun &lt;T&gt; disableChecks(checks: Collection&lt;Check&gt;, body: () -&gt; T): T</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-disabler/disabled-checks/","title":"disabledChecks - Misk","text":"<p>//misk-jdbc/misk.jdbc/CheckDisabler/disabledChecks</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-disabler/disabled-checks/#disabledchecks","title":"disabledChecks","text":"<p>[jvm]\\ val disabledChecks: ThreadLocal&lt;Collection&lt;Check&gt;&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-disabler/is-check-enabled/","title":"isCheckEnabled - Misk","text":"<p>//misk-jdbc/misk.jdbc/CheckDisabler/isCheckEnabled</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-disabler/is-check-enabled/#ischeckenabled","title":"isCheckEnabled","text":"<p>[jvm]\\ fun isCheckEnabled(check: Check): Boolean</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-disabler/without-checks/","title":"withoutChecks - Misk","text":"<p>//misk-jdbc/misk.jdbc/CheckDisabler/withoutChecks</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-disabler/without-checks/#withoutchecks","title":"withoutChecks","text":"<p>[jvm]\\ fun &lt;T&gt; withoutChecks(vararg checks: Check, body: () -&gt; T): T</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-exception/","title":"CheckException - Misk","text":"<p>//misk-jdbc/misk.jdbc/CheckException</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-exception/#checkexception","title":"CheckException","text":"<p>[jvm]\\ open class CheckException@JvmOverloadsconstructor(message: String?, cause: Throwable?) : SQLException</p> <p>An exception that is thrown when a Check fails.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-exception/#constructors","title":"Constructors","text":"CheckException [jvm]@JvmOverloadsfun CheckException(message: String? = null, cause: Throwable? = null)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable forEach [jvm]open fun forEach(p0: Consumer&lt;in Throwable&gt;) getErrorCode [jvm]open fun getErrorCode(): Int getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getNextException [jvm]open fun getNextException(): SQLException getSQLState [jvm]open fun getSQLState(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable iterator [jvm]open operator override fun iterator(): MutableIterator&lt;Throwable&gt; printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setNextException [jvm]open fun setNextException(p0: SQLException) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;) spliterator [jvm]open fun spliterator(): Spliterator&lt;Throwable&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-exception/#inheritors","title":"Inheritors","text":"Name TableScanException CowriteException FullScatterException"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-exception/-check-exception/","title":"CheckException - Misk","text":"<p>//misk-jdbc/misk.jdbc/CheckException/CheckException</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-check-exception/-check-exception/#checkexception","title":"CheckException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun CheckException(message: String? = null, cause: Throwable? = null)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-cluster/","title":"Cluster - Misk","text":"<p>//misk-jdbc/misk.jdbc/Cluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-cluster/#cluster","title":"Cluster","text":"<p>[jvm]\\ interface Cluster&lt;T&gt;</p> <p>Cluster provides a consistent abstraction for interacting with various database-related resources T based on their role in the underlying database topology.</p> <p>Database clusters are often composed of a Read/Write master instance and a set of Read-Only replica instances.</p> <p>Misk defers management of these replicas to the underlying persistence layer and requires a single addressable endpoint.</p> <p>Examples include a Read-Only DataSource or a Read/Write SessionFactory in Hibernate.</p> <p>N.B. If a Read-Only resource is not provided Misk will default to the Read/Write resource.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-cluster/#properties","title":"Properties","text":"Name Summary reader [jvm]abstract val reader: T writer [jvm]abstract val writer: T"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-cluster/#inheritors","title":"Inheritors","text":"Name DataSourceCluster"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-cluster/reader/","title":"reader - Misk","text":"<p>//misk-jdbc/misk.jdbc/Cluster/reader</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-cluster/reader/#reader","title":"reader","text":"<p>[jvm]\\ abstract val reader: T</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-cluster/writer/","title":"writer - Misk","text":"<p>//misk-jdbc/misk.jdbc/Cluster/writer</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-cluster/writer/#writer","title":"writer","text":"<p>[jvm]\\ abstract val writer: T</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster/","title":"DataSourceCluster - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster/#datasourcecluster","title":"DataSourceCluster","text":"<p>[jvm]\\ class DataSourceCluster(writer: DataSource, reader: DataSource) : Cluster&lt;DataSource&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster/#properties","title":"Properties","text":"Name Summary reader [jvm]open override val reader: DataSource writer [jvm]open override val writer: DataSource"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster/-data-source-cluster/","title":"DataSourceCluster - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceCluster/DataSourceCluster</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster/-data-source-cluster/#datasourcecluster","title":"DataSourceCluster","text":"<p>[jvm]\\ fun DataSourceCluster(writer: DataSource, reader: DataSource)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster/reader/","title":"reader - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceCluster/reader</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster/reader/#reader","title":"reader","text":"<p>[jvm]\\ open override val reader: DataSource</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster/writer/","title":"writer - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceCluster/writer</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster/writer/#writer","title":"writer","text":"<p>[jvm]\\ open override val writer: DataSource</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster-config/","title":"DataSourceClusterConfig - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceClusterConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster-config/#datasourceclusterconfig","title":"DataSourceClusterConfig","text":"<p>[jvm]\\ data class DataSourceClusterConfig(writer: DataSourceConfig, reader: DataSourceConfig?)</p> <p>Configuration element for a cluster of DataSources</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster-config/#constructors","title":"Constructors","text":"DataSourceClusterConfig [jvm]fun DataSourceClusterConfig(writer: DataSourceConfig, reader: DataSourceConfig?)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster-config/#properties","title":"Properties","text":"Name Summary reader [jvm]val reader: DataSourceConfig? writer [jvm]val writer: DataSourceConfig"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster-config/-data-source-cluster-config/","title":"DataSourceClusterConfig - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceClusterConfig/DataSourceClusterConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster-config/-data-source-cluster-config/#datasourceclusterconfig","title":"DataSourceClusterConfig","text":"<p>[jvm]\\ fun DataSourceClusterConfig(writer: DataSourceConfig, reader: DataSourceConfig?)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster-config/reader/","title":"reader - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceClusterConfig/reader</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster-config/reader/#reader","title":"reader","text":"<p>[jvm]\\ val reader: DataSourceConfig?</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster-config/writer/","title":"writer - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceClusterConfig/writer</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-cluster-config/writer/#writer","title":"writer","text":"<p>[jvm]\\ val writer: DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-clusters-config/","title":"DataSourceClustersConfig - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceClustersConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-clusters-config/#datasourceclustersconfig","title":"DataSourceClustersConfig","text":"<p>[jvm]\\ class DataSourceClustersConfig : Config</p> <p>Top-level configuration element for all datasource clusters</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-clusters-config/#constructors","title":"Constructors","text":"DataSourceClustersConfig [jvm]fun DataSourceClustersConfig() DataSourceClustersConfig [jvm]fun DataSourceClustersConfig(m: Map&lt;String, DataSourceClusterConfig&gt;)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-clusters-config/-data-source-clusters-config/","title":"DataSourceClustersConfig - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceClustersConfig/DataSourceClustersConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-clusters-config/-data-source-clusters-config/#datasourceclustersconfig","title":"DataSourceClustersConfig","text":"<p>[jvm]\\ fun DataSourceClustersConfig()</p> <p>fun DataSourceClustersConfig(m: Map&lt;String, DataSourceClusterConfig&gt;)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/","title":"DataSourceConfig - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/#datasourceconfig","title":"DataSourceConfig","text":"<p>[jvm]\\ data class DataSourceConfig@JvmOverloadsconstructor(type: DataSourceType, host: String?, port: Int?, database: String?, username: String?, password: String?, fixed_pool_size: Int, connection_timeout: Duration, validation_timeout: Duration, connection_idle_timeout: Duration?, connection_max_lifetime: Duration, query_timeout: Duration?, migrations_resource: String?, migrations_resources: List&lt;String&gt;?, migrations_resources_exclusion: List&lt;String&gt;?, migrations_resources_regex: String, vitess_schema_resource_root: String?, trust_certificate_key_store_url: String?, trust_certificate_key_store_password: String?, client_certificate_key_store_url: String?, client_certificate_key_store_password: String?, trust_certificate_key_store_path: String?, client_certificate_key_store_path: String?, verify_server_identity: Boolean, enabledTlsProtocols: List&lt;String&gt;, show_sql: String?, generate_hibernate_stats: String?, jdbc_statement_batch_size: Int?, use_fixed_pool_size: Boolean, allow_public_key_retrieval: Boolean, jdbc_url_query_parameters: Map&lt;String, Any&gt;)</p> <p>Configuration element for an individual datasource</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/#constructors","title":"Constructors","text":"DataSourceConfig [jvm]@JvmOverloadsfun DataSourceConfig(type: DataSourceType, host: String? = null, port: Int? = null, database: String? = null, username: String? = null, password: String? = null, fixed_pool_size: Int = 10, connection_timeout: Duration = Duration.ofSeconds(10), validation_timeout: Duration = Duration.ofSeconds(3), connection_idle_timeout: Duration? = null, connection_max_lifetime: Duration = Duration.ofMinutes(1), query_timeout: Duration? = Duration.ofMinutes(1), migrations_resource: String? = null, migrations_resources: List&lt;String&gt;? = null, migrations_resources_exclusion: List&lt;String&gt;? = null, migrations_resources_regex: String = \u201c(^"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/#functions","title":"Functions","text":"Name Summary asReplica [jvm]fun asReplica(): DataSourceConfig buildJdbcUrl [jvm]fun buildJdbcUrl(deployment: Deployment): String canRecoverOnReplica [jvm]fun canRecoverOnReplica(): Boolean withDefaults [jvm]fun withDefaults(): DataSourceConfig"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/#properties","title":"Properties","text":"Name Summary allow_public_key_retrieval [jvm]val allow_public_key_retrieval: Boolean = false client_certificate_key_store_password [jvm]val client_certificate_key_store_password: String? = null client_certificate_key_store_path [jvm]val client_certificate_key_store_path: String? = null client_certificate_key_store_url [jvm]val client_certificate_key_store_url: String? = null connection_idle_timeout [jvm]val connection_idle_timeout: Duration? = null connection_max_lifetime [jvm]val connection_max_lifetime: Duration connection_timeout [jvm]val connection_timeout: Duration database [jvm]val database: String? = null enabledTlsProtocols [jvm]val enabledTlsProtocols: List&lt;String&gt; fixed_pool_size [jvm]val fixed_pool_size: Int = 10 generate_hibernate_stats [jvm]val generate_hibernate_stats: String? host [jvm]val host: String? = null jdbc_statement_batch_size [jvm]val jdbc_statement_batch_size: Int? = null jdbc_url_query_parameters [jvm]val jdbc_url_query_parameters: Map&lt;String, Any&gt; migrations_resource [jvm]val migrations_resource: String? = null migrations_resources [jvm]val migrations_resources: List&lt;String&gt;? = null migrations_resources_exclusion [jvm]val migrations_resources_exclusion: List&lt;String&gt;? = nullList of filenames to exclude from being processed in database schema migrations migrations_resources_regex [jvm]val migrations_resources_regex: StringRegular expression migration files names should match. Any migration filename that doesn\u2019t match the given regular expression will cause an exception, unless it was explicitly mentioned in migrations_resources_exclusion. password [jvm]val password: String? = null port [jvm]val port: Int? = null query_timeout [jvm]val query_timeout: Duration? show_sql [jvm]val show_sql: String? trust_certificate_key_store_password [jvm]val trust_certificate_key_store_password: String? = null trust_certificate_key_store_path [jvm]val trust_certificate_key_store_path: String? = null trust_certificate_key_store_url [jvm]val trust_certificate_key_store_url: String? = null type [jvm]val type: DataSourceType use_fixed_pool_size [jvm]val use_fixed_pool_size: Boolean = false username [jvm]val username: String? = null validation_timeout [jvm]val validation_timeout: Duration verify_server_identity [jvm]val verify_server_identity: Boolean = false vitess_schema_resource_root [jvm]val vitess_schema_resource_root: String? = null"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/-data-source-config/","title":"DataSourceConfig - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/-data-source-config/#datasourceconfig","title":"DataSourceConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun DataSourceConfig(type: DataSourceType, host: String? = null, port: Int? = null, database: String? = null, username: String? = null, password: String? = null, fixed_pool_size: Int = 10, connection_timeout: Duration = Duration.ofSeconds(10), validation_timeout: Duration = Duration.ofSeconds(3), connection_idle_timeout: Duration? = null, connection_max_lifetime: Duration = Duration.ofMinutes(1), query_timeout: Duration? = Duration.ofMinutes(1), migrations_resource: String? = null, migrations_resources: List&lt;String&gt;? = null, migrations_resources_exclusion: List&lt;String&gt;? = null, migrations_resources_regex: String = \u201c(^|.*/)v(\u201c, vitess_schema_resource_root: String? = null, trust_certificate_key_store_url: String? = null, trust_certificate_key_store_password: String? = null, client_certificate_key_store_url: String? = null, client_certificate_key_store_password: String? = null, trust_certificate_key_store_path: String? = null, client_certificate_key_store_path: String? = null, verify_server_identity: Boolean = false, enabledTlsProtocols: List&lt;String&gt; = listOf(\u201cTLSv1.2\u201d, \u201cTLSv1.3\u201d), show_sql: String? = \u201cfalse\u201d, generate_hibernate_stats: String? = \u201cfalse\u201d, jdbc_statement_batch_size: Int? = null, use_fixed_pool_size: Boolean = false, allow_public_key_retrieval: Boolean = false, jdbc_url_query_parameters: Map&lt;String, Any&gt; = mapOf())</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/allow_public_key_retrieval/","title":"allow_public_key_retrieval - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/allow_public_key_retrieval</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/allow_public_key_retrieval/#allow_public_key_retrieval","title":"allow_public_key_retrieval","text":"<p>[jvm]\\ val allow_public_key_retrieval: Boolean = false</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/as-replica/","title":"asReplica - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/asReplica</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/as-replica/#asreplica","title":"asReplica","text":"<p>[jvm]\\ fun asReplica(): DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/build-jdbc-url/","title":"buildJdbcUrl - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/buildJdbcUrl</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/build-jdbc-url/#buildjdbcurl","title":"buildJdbcUrl","text":"<p>[jvm]\\ fun buildJdbcUrl(deployment: Deployment): String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/can-recover-on-replica/","title":"canRecoverOnReplica - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/canRecoverOnReplica</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/can-recover-on-replica/#canrecoveronreplica","title":"canRecoverOnReplica","text":"<p>[jvm]\\ fun canRecoverOnReplica(): Boolean</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/client_certificate_key_store_password/","title":"client_certificate_key_store_password - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/client_certificate_key_store_password</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/client_certificate_key_store_password/#client_certificate_key_store_password","title":"client_certificate_key_store_password","text":"<p>[jvm]\\ val client_certificate_key_store_password: String? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/client_certificate_key_store_path/","title":"client_certificate_key_store_path - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/client_certificate_key_store_path</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/client_certificate_key_store_path/#client_certificate_key_store_path","title":"client_certificate_key_store_path","text":"<p>[jvm]\\ val client_certificate_key_store_path: String? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/client_certificate_key_store_url/","title":"client_certificate_key_store_url - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/client_certificate_key_store_url</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/client_certificate_key_store_url/#client_certificate_key_store_url","title":"client_certificate_key_store_url","text":"<p>[jvm]\\ val client_certificate_key_store_url: String? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/connection_idle_timeout/","title":"connection_idle_timeout - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/connection_idle_timeout</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/connection_idle_timeout/#connection_idle_timeout","title":"connection_idle_timeout","text":"<p>[jvm]\\ val connection_idle_timeout: Duration? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/connection_max_lifetime/","title":"connection_max_lifetime - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/connection_max_lifetime</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/connection_max_lifetime/#connection_max_lifetime","title":"connection_max_lifetime","text":"<p>[jvm]\\ val connection_max_lifetime: Duration</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/connection_timeout/","title":"connection_timeout - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/connection_timeout</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/connection_timeout/#connection_timeout","title":"connection_timeout","text":"<p>[jvm]\\ val connection_timeout: Duration</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/database/","title":"database - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/database</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/database/#database","title":"database","text":"<p>[jvm]\\ val database: String? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/enabled-tls-protocols/","title":"enabledTlsProtocols - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/enabledTlsProtocols</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/enabled-tls-protocols/#enabledtlsprotocols","title":"enabledTlsProtocols","text":"<p>[jvm]\\ val enabledTlsProtocols: List&lt;String&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/fixed_pool_size/","title":"fixed_pool_size - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/fixed_pool_size</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/fixed_pool_size/#fixed_pool_size","title":"fixed_pool_size","text":"<p>[jvm]\\ val fixed_pool_size: Int = 10</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/generate_hibernate_stats/","title":"generate_hibernate_stats - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/generate_hibernate_stats</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/generate_hibernate_stats/#generate_hibernate_stats","title":"generate_hibernate_stats","text":"<p>[jvm]\\ val generate_hibernate_stats: String?</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/host/","title":"host - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/host</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/host/#host","title":"host","text":"<p>[jvm]\\ val host: String? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/jdbc_statement_batch_size/","title":"jdbc_statement_batch_size - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/jdbc_statement_batch_size</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/jdbc_statement_batch_size/#jdbc_statement_batch_size","title":"jdbc_statement_batch_size","text":"<p>[jvm]\\ val jdbc_statement_batch_size: Int? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/jdbc_url_query_parameters/","title":"jdbc_url_query_parameters - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/jdbc_url_query_parameters</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/jdbc_url_query_parameters/#jdbc_url_query_parameters","title":"jdbc_url_query_parameters","text":"<p>[jvm]\\ val jdbc_url_query_parameters: Map&lt;String, Any&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/migrations_resource/","title":"migrations_resource - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/migrations_resource</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/migrations_resource/#migrations_resource","title":"migrations_resource","text":"<p>[jvm]\\ val migrations_resource: String? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/migrations_resources/","title":"migrations_resources - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/migrations_resources</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/migrations_resources/#migrations_resources","title":"migrations_resources","text":"<p>[jvm]\\ val migrations_resources: List&lt;String&gt;? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/migrations_resources_exclusion/","title":"migrations_resources_exclusion - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/migrations_resources_exclusion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/migrations_resources_exclusion/#migrations_resources_exclusion","title":"migrations_resources_exclusion","text":"<p>[jvm]\\ val migrations_resources_exclusion: List&lt;String&gt;? = null</p> <p>List of filenames to exclude from being processed in database schema migrations</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/migrations_resources_regex/","title":"migrations_resources_regex - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/migrations_resources_regex</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/migrations_resources_regex/#migrations_resources_regex","title":"migrations_resources_regex","text":"<p>[jvm]\\ val migrations_resources_regex: String</p> <p>Regular expression migration files names should match. Any migration filename that doesn\u2019t match the given regular expression will cause an exception, unless it was explicitly mentioned in migrations_resources_exclusion.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/password/","title":"password - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/password</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/password/#password","title":"password","text":"<p>[jvm]\\ val password: String? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/port/","title":"port - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/port</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/port/#port","title":"port","text":"<p>[jvm]\\ val port: Int? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/query_timeout/","title":"query_timeout - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/query_timeout</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/query_timeout/#query_timeout","title":"query_timeout","text":"<p>[jvm]\\ val query_timeout: Duration?</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/show_sql/","title":"show_sql - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/show_sql</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/show_sql/#show_sql","title":"show_sql","text":"<p>[jvm]\\ val show_sql: String?</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/trust_certificate_key_store_password/","title":"trust_certificate_key_store_password - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/trust_certificate_key_store_password</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/trust_certificate_key_store_password/#trust_certificate_key_store_password","title":"trust_certificate_key_store_password","text":"<p>[jvm]\\ val trust_certificate_key_store_password: String? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/trust_certificate_key_store_path/","title":"trust_certificate_key_store_path - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/trust_certificate_key_store_path</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/trust_certificate_key_store_path/#trust_certificate_key_store_path","title":"trust_certificate_key_store_path","text":"<p>[jvm]\\ val trust_certificate_key_store_path: String? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/trust_certificate_key_store_url/","title":"trust_certificate_key_store_url - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/trust_certificate_key_store_url</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/trust_certificate_key_store_url/#trust_certificate_key_store_url","title":"trust_certificate_key_store_url","text":"<p>[jvm]\\ val trust_certificate_key_store_url: String? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/type/","title":"type - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/type</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/type/#type","title":"type","text":"<p>[jvm]\\ val type: DataSourceType</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/use_fixed_pool_size/","title":"use_fixed_pool_size - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/use_fixed_pool_size</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/use_fixed_pool_size/#use_fixed_pool_size","title":"use_fixed_pool_size","text":"<p>[jvm]\\ val use_fixed_pool_size: Boolean = false</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/username/","title":"username - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/username</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/username/#username","title":"username","text":"<p>[jvm]\\ val username: String? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/validation_timeout/","title":"validation_timeout - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/validation_timeout</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/validation_timeout/#validation_timeout","title":"validation_timeout","text":"<p>[jvm]\\ val validation_timeout: Duration</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/verify_server_identity/","title":"verify_server_identity - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/verify_server_identity</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/verify_server_identity/#verify_server_identity","title":"verify_server_identity","text":"<p>[jvm]\\ val verify_server_identity: Boolean = false</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/vitess_schema_resource_root/","title":"vitess_schema_resource_root - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/vitess_schema_resource_root</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/vitess_schema_resource_root/#vitess_schema_resource_root","title":"vitess_schema_resource_root","text":"<p>[jvm]\\ val vitess_schema_resource_root: String? = null</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/with-defaults/","title":"withDefaults - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConfig/withDefaults</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-config/with-defaults/#withdefaults","title":"withDefaults","text":"<p>[jvm]\\ fun withDefaults(): DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-connector/","title":"DataSourceConnector - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConnector</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-connector/#datasourceconnector","title":"DataSourceConnector","text":"<p>[jvm]\\ interface DataSourceConnector</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-connector/#functions","title":"Functions","text":"Name Summary config [jvm]abstract fun config(): DataSourceConfig"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-connector/#inheritors","title":"Inheritors","text":"Name DataSourceService"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-connector/config/","title":"config - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceConnector/config</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-connector/config/#config","title":"config","text":"<p>[jvm]\\ abstract fun config(): DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-decorator/","title":"DataSourceDecorator - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceDecorator</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-decorator/#datasourcedecorator","title":"DataSourceDecorator","text":"<p>[jvm]\\ interface DataSourceDecorator</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-decorator/#functions","title":"Functions","text":"Name Summary decorate [jvm]abstract fun decorate(dataSource: DataSource): DataSource"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-decorator/#inheritors","title":"Inheritors","text":"Name SpanInjector"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-decorator/decorate/","title":"decorate - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceDecorator/decorate</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-decorator/decorate/#decorate","title":"decorate","text":"<p>[jvm]\\ abstract fun decorate(dataSource: DataSource): DataSource</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/","title":"DataSourceService - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceService</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/#datasourceservice","title":"DataSourceService","text":"<p>[jvm]\\ @Singleton</p> <p>class DataSourceService@JvmOverloadsconstructor(qualifier: KClass&lt;out Annotation&gt;, baseConfig: DataSourceConfig, deployment: Deployment, dataSourceDecorators: Set&lt;DataSourceDecorator&gt;, databasePool: DatabasePool, collectorRegistry: CollectorRegistry?) : AbstractIdleService, DataSourceConnector, Provider&lt;DataSource&gt; </p> <p>Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/#parameters","title":"Parameters","text":"<p>jvm</p> baseConfig the configuration to connect to. The actual database name used may vary as     the databasePool can pick an alternate database name for testing."},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/#constructors","title":"Constructors","text":"DataSourceService [jvm]@JvmOverloadsfun DataSourceService(qualifier: KClass&lt;out Annotation&gt;, baseConfig: DataSourceConfig, deployment: Deployment, dataSourceDecorators: Set&lt;DataSourceDecorator&gt;, databasePool: DatabasePool, collectorRegistry: CollectorRegistry? = null)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) config [jvm]open override fun config(): DataSourceConfig executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable get [jvm]open override fun get(): DataSource isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/-data-source-service/","title":"DataSourceService - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceService/DataSourceService</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/-data-source-service/#datasourceservice","title":"DataSourceService","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun DataSourceService(qualifier: KClass&lt;out Annotation&gt;, baseConfig: DataSourceConfig, deployment: Deployment, dataSourceDecorators: Set&lt;DataSourceDecorator&gt;, databasePool: DatabasePool, collectorRegistry: CollectorRegistry? = null)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/-data-source-service/#parameters","title":"Parameters","text":"<p>jvm</p> baseConfig the configuration to connect to. The actual database name used may vary as     the databasePool can pick an alternate database name for testing."},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/config/","title":"config - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceService/config</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/config/#config","title":"config","text":"<p>[jvm]\\ open override fun config(): DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/get/","title":"get - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceService/get</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(): DataSource</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/-companion/","title":"Companion - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceService/Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/-companion/#properties","title":"Properties","text":"Name Summary logger [jvm]val logger: &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/-companion/logger/","title":"logger - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceService/Companion/logger</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-service/-companion/logger/#logger","title":"logger","text":"<p>[jvm]\\ val logger: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/","title":"DataSourceType - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceType</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/#datasourcetype","title":"DataSourceType","text":"<p>[jvm]\\ enum DataSourceType : Enum&lt;DataSourceType&gt; </p> <p>Defines a type of datasource</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/#entries","title":"Entries","text":"TIDB [jvm]TIDB(\u201cio.opentracing.contrib.jdbc.TracingDriver\u201d, \u201corg.hibernate.dialect.MySQL57Dialect\u201d, false) POSTGRESQL [jvm]POSTGRESQL(\u201corg.postgresql.Driver\u201d, \u201corg.hibernate.dialect.PostgreSQL95Dialect\u201d, false) COCKROACHDB [jvm]COCKROACHDB(\u201corg.postgresql.Driver\u201d, \u201corg.hibernate.dialect.PostgreSQL95Dialect\u201d, false) VITESS_MYSQL [jvm]VITESS_MYSQL(MYSQL.driverClassName, \u201cmisk.hibernate.VitessDialect\u201d, true) HSQLDB [jvm]HSQLDB(\u201corg.hsqldb.jdbcDriver\u201d, \u201corg.hibernate.dialect.H2Dialect\u201d, false) MYSQL [jvm]MYSQL(\u201cio.opentracing.contrib.jdbc.TracingDriver\u201d, \u201corg.hibernate.dialect.MySQL57Dialect\u201d, false)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/#properties","title":"Properties","text":"Name Summary driverClassName [jvm]val driverClassName: String hibernateDialect [jvm]val hibernateDialect: String isVitess [jvm]val isVitess: Boolean name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/driver-class-name/","title":"driverClassName - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceType/driverClassName</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/driver-class-name/#driverclassname","title":"driverClassName","text":"<p>[jvm]\\ val driverClassName: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/hibernate-dialect/","title":"hibernateDialect - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceType/hibernateDialect</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/hibernate-dialect/#hibernatedialect","title":"hibernateDialect","text":"<p>[jvm]\\ val hibernateDialect: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/is-vitess/","title":"isVitess - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceType/isVitess</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/is-vitess/#isvitess","title":"isVitess","text":"<p>[jvm]\\ val isVitess: Boolean</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-c-o-c-k-r-o-a-c-h-d-b/","title":"COCKROACHDB - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceType/COCKROACHDB</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-c-o-c-k-r-o-a-c-h-d-b/#cockroachdb","title":"COCKROACHDB","text":"<p>[jvm]\\ COCKROACHDB(\u201corg.postgresql.Driver\u201d, \u201corg.hibernate.dialect.PostgreSQL95Dialect\u201d, false)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-c-o-c-k-r-o-a-c-h-d-b/#properties","title":"Properties","text":"Name Summary driverClassName [jvm]val driverClassName: String hibernateDialect [jvm]val hibernateDialect: String isVitess [jvm]val isVitess: Boolean name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-h-s-q-l-d-b/","title":"HSQLDB - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceType/HSQLDB</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-h-s-q-l-d-b/#hsqldb","title":"HSQLDB","text":"<p>[jvm]\\ HSQLDB(\u201corg.hsqldb.jdbcDriver\u201d, \u201corg.hibernate.dialect.H2Dialect\u201d, false)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-h-s-q-l-d-b/#properties","title":"Properties","text":"Name Summary driverClassName [jvm]val driverClassName: String hibernateDialect [jvm]val hibernateDialect: String isVitess [jvm]val isVitess: Boolean name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-m-y-s-q-l/","title":"MYSQL - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceType/MYSQL</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-m-y-s-q-l/#mysql","title":"MYSQL","text":"<p>[jvm]\\ MYSQL(\u201cio.opentracing.contrib.jdbc.TracingDriver\u201d, \u201corg.hibernate.dialect.MySQL57Dialect\u201d, false)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-m-y-s-q-l/#properties","title":"Properties","text":"Name Summary driverClassName [jvm]val driverClassName: String hibernateDialect [jvm]val hibernateDialect: String isVitess [jvm]val isVitess: Boolean name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-p-o-s-t-g-r-e-s-q-l/","title":"POSTGRESQL - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceType/POSTGRESQL</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-p-o-s-t-g-r-e-s-q-l/#postgresql","title":"POSTGRESQL","text":"<p>[jvm]\\ POSTGRESQL(\u201corg.postgresql.Driver\u201d, \u201corg.hibernate.dialect.PostgreSQL95Dialect\u201d, false)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-p-o-s-t-g-r-e-s-q-l/#properties","title":"Properties","text":"Name Summary driverClassName [jvm]val driverClassName: String hibernateDialect [jvm]val hibernateDialect: String isVitess [jvm]val isVitess: Boolean name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-t-i-d-b/","title":"TIDB - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceType/TIDB</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-t-i-d-b/#tidb","title":"TIDB","text":"<p>[jvm]\\ TIDB(\u201cio.opentracing.contrib.jdbc.TracingDriver\u201d, \u201corg.hibernate.dialect.MySQL57Dialect\u201d, false)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-t-i-d-b/#properties","title":"Properties","text":"Name Summary driverClassName [jvm]val driverClassName: String hibernateDialect [jvm]val hibernateDialect: String isVitess [jvm]val isVitess: Boolean name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-v-i-t-e-s-s_-m-y-s-q-l/","title":"VITESS_MYSQL - Misk","text":"<p>//misk-jdbc/misk.jdbc/DataSourceType/VITESS_MYSQL</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-v-i-t-e-s-s_-m-y-s-q-l/#vitess_mysql","title":"VITESS_MYSQL","text":"<p>[jvm]\\ VITESS_MYSQL(MYSQL.driverClassName, \u201cmisk.hibernate.VitessDialect\u201d, true)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-data-source-type/-v-i-t-e-s-s_-m-y-s-q-l/#properties","title":"Properties","text":"Name Summary driverClassName [jvm]val driverClassName: String hibernateDialect [jvm]val hibernateDialect: String isVitess [jvm]val isVitess: Boolean name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-database-pool/","title":"DatabasePool - Misk","text":"<p>//misk-jdbc/misk.jdbc/DatabasePool</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-database-pool/#databasepool","title":"DatabasePool","text":"<p>[jvm]\\ interface DatabasePool</p> <p>Figures out what database name to use for a given config. Tests use this to pool many databases for concurrent execution. In development, staging, and production the database never changes.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-database-pool/#functions","title":"Functions","text":"Name Summary releaseDatabase [jvm]abstract fun releaseDatabase(config: DataSourceConfig)Releases a config created by takeDatabase. takeDatabase [jvm]abstract fun takeDatabase(config: DataSourceConfig): DataSourceConfigFinds a database to satisfy config and returns a new config that targets it."},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-database-pool/#inheritors","title":"Inheritors","text":"Name RealDatabasePool"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-database-pool/release-database/","title":"releaseDatabase - Misk","text":"<p>//misk-jdbc/misk.jdbc/DatabasePool/releaseDatabase</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-database-pool/release-database/#releasedatabase","title":"releaseDatabase","text":"<p>[jvm]\\ abstract fun releaseDatabase(config: DataSourceConfig)</p> <p>Releases a config created by takeDatabase.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-database-pool/take-database/","title":"takeDatabase - Misk","text":"<p>//misk-jdbc/misk.jdbc/DatabasePool/takeDatabase</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-database-pool/take-database/#takedatabase","title":"takeDatabase","text":"<p>[jvm]\\ abstract fun takeDatabase(config: DataSourceConfig): DataSourceConfig</p> <p>Finds a database to satisfy config and returns a new config that targets it.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-database-ready-service/","title":"DatabaseReadyService - Misk","text":"<p>//misk-jdbc/misk.jdbc/DatabaseReadyService</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-database-ready-service/#databasereadyservice","title":"DatabaseReadyService","text":"<p>[jvm]\\ interface DatabaseReadyService : Service</p> <p>Marker interface for indicating that the database is ready.</p> <p>Services that require a database connection should depend on this interface when they are installed in a module.</p> <p>e.g.</p> <p>install(ServiceModule&lt;MoviesService&gt;()\\     .dependsOn&lt;DatabaseReadyService&gt;(Movies::class))</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-database-ready-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]abstract fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]abstract fun awaitRunning()open fun awaitRunning(timeout: Duration)abstract fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]abstract fun awaitTerminated()open fun awaitTerminated(timeout: Duration)abstract fun awaitTerminated(timeout: Long, unit: TimeUnit) failureCause [jvm]abstract fun failureCause(): Throwable isRunning [jvm]abstract fun isRunning(): Boolean startAsync [jvm]@CanIgnoreReturnValueabstract fun startAsync(): Service state [jvm]abstract fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueabstract fun stopAsync(): Service"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-database-ready-service/#inheritors","title":"Inheritors","text":"Name SchemaMigratorService"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/","title":"JDBCSession - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/#jdbcsession","title":"JDBCSession","text":"<p>[jvm]\\ class JDBCSession(connection: Connection) : Session</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/#types","title":"Types","text":"Name Summary HookType [jvm]enum HookType : Enum&lt;JDBCSession.HookType&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/#functions","title":"Functions","text":"Name Summary add [jvm]fun ConcurrentMap&lt;JDBCSession.HookType, List&lt;() -&gt; Unit&gt;&gt;.add(hookType: JDBCSession.HookType, work: () -&gt; Unit) component1 [jvm]operator fun component1(): ConnectionAllows for destructuring the JooqSession and writing simpler code like this transacter.transaction { (connection) -&gt; \u2026 } executePostCommitHooks [jvm]fun executePostCommitHooks() executePreCommitHooks [jvm]fun executePreCommitHooks() executeSessionCloseHooks [jvm]fun executeSessionCloseHooks() onPostCommit [jvm]open override fun onPostCommit(work: () -&gt; Unit)Registers a hook that fires after the session transaction commits. Post-commit hooks cannot affect the disposition of the transaction; if a post-commit hook fails, the failure will be logged but not propagated to the application, as the transaction will have already committed onPreCommit [jvm]open override fun onPreCommit(work: () -&gt; Unit)Registers a hook that fires before the session\u2019s transaction commits. Failures in a pre-commit hook will cause the transaction to be rolled back. onSessionClose [jvm]open override fun onSessionClose(work: () -&gt; Unit)Registers a hook that fires after a session is closed. This is called regardless if a session was successfully committed or rolled back. useConnection [jvm]open override fun &lt;T&gt; useConnection(work: (Connection) -&gt; T): T"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/#properties","title":"Properties","text":"Name Summary connection [jvm]val connection: Connection"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-j-d-b-c-session/","title":"JDBCSession - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/JDBCSession</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-j-d-b-c-session/#jdbcsession","title":"JDBCSession","text":"<p>[jvm]\\ fun JDBCSession(connection: Connection)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/add/","title":"add - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/add</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/add/#add","title":"add","text":"<p>[jvm]\\ fun ConcurrentMap&lt;JDBCSession.HookType, List&lt;() -&gt; Unit&gt;&gt;.add(hookType: JDBCSession.HookType, work: () -&gt; Unit)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/component1/","title":"component1 - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/component1</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/component1/#component1","title":"component1","text":"<p>[jvm]\\ operator fun component1(): Connection</p> <p>Allows for destructuring the JooqSession and writing simpler code like this transacter.transaction { (connection) -&gt; \u2026 }</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/connection/","title":"connection - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/connection</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/connection/#connection","title":"connection","text":"<p>[jvm]\\ val connection: Connection</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/execute-post-commit-hooks/","title":"executePostCommitHooks - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/executePostCommitHooks</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/execute-post-commit-hooks/#executepostcommithooks","title":"executePostCommitHooks","text":"<p>[jvm]\\ fun executePostCommitHooks()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/execute-pre-commit-hooks/","title":"executePreCommitHooks - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/executePreCommitHooks</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/execute-pre-commit-hooks/#executeprecommithooks","title":"executePreCommitHooks","text":"<p>[jvm]\\ fun executePreCommitHooks()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/execute-session-close-hooks/","title":"executeSessionCloseHooks - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/executeSessionCloseHooks</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/execute-session-close-hooks/#executesessionclosehooks","title":"executeSessionCloseHooks","text":"<p>[jvm]\\ fun executeSessionCloseHooks()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/on-post-commit/","title":"onPostCommit - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/onPostCommit</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/on-post-commit/#onpostcommit","title":"onPostCommit","text":"<p>[jvm]\\ open override fun onPostCommit(work: () -&gt; Unit)</p> <p>Registers a hook that fires after the session transaction commits. Post-commit hooks cannot affect the disposition of the transaction; if a post-commit hook fails, the failure will be logged but not propagated to the application, as the transaction will have already committed</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/on-pre-commit/","title":"onPreCommit - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/onPreCommit</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/on-pre-commit/#onprecommit","title":"onPreCommit","text":"<p>[jvm]\\ open override fun onPreCommit(work: () -&gt; Unit)</p> <p>Registers a hook that fires before the session\u2019s transaction commits. Failures in a pre-commit hook will cause the transaction to be rolled back.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/on-session-close/","title":"onSessionClose - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/onSessionClose</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/on-session-close/#onsessionclose","title":"onSessionClose","text":"<p>[jvm]\\ open override fun onSessionClose(work: () -&gt; Unit)</p> <p>Registers a hook that fires after a session is closed. This is called regardless if a session was successfully committed or rolled back.</p> <p>A new transaction can be initiated as part of this hook.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/use-connection/","title":"useConnection - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/useConnection</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/use-connection/#useconnection","title":"useConnection","text":"<p>[jvm]\\ open override fun &lt;T&gt; useConnection(work: (Connection) -&gt; T): T</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/","title":"HookType - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/HookType</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/#hooktype","title":"HookType","text":"<p>[jvm]\\ enum HookType : Enum&lt;JDBCSession.HookType&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/#entries","title":"Entries","text":"SESSION_CLOSE [jvm]SESSION_CLOSE() POST [jvm]POST() PRE [jvm]PRE()"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-p-o-s-t/","title":"POST - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/HookType/POST</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-p-o-s-t/#post","title":"POST","text":"<p>[jvm]\\ POST()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-p-o-s-t/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-p-r-e/","title":"PRE - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/HookType/PRE</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-p-r-e/#pre","title":"PRE","text":"<p>[jvm]\\ PRE()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-p-r-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-s-e-s-s-i-o-n_-c-l-o-s-e/","title":"SESSION_CLOSE - Misk","text":"<p>//misk-jdbc/misk.jdbc/JDBCSession/HookType/SESSION_CLOSE</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-s-e-s-s-i-o-n_-c-l-o-s-e/#session_close","title":"SESSION_CLOSE","text":"<p>[jvm]\\ SESSION_CLOSE()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-s-e-s-s-i-o-n_-c-l-o-s-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-jdbc-module/","title":"JdbcModule - Misk","text":"<p>//misk-jdbc/misk.jdbc/JdbcModule</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-jdbc-module/#jdbcmodule","title":"JdbcModule","text":"<p>[jvm]\\ class JdbcModule@JvmOverloadsconstructor(qualifier: KClass&lt;out Annotation&gt;, config: DataSourceConfig, readerQualifier: KClass&lt;out Annotation&gt;?, readerConfig: DataSourceConfig?, databasePool: DatabasePool, installHealthCheck: Boolean) : KAbstractModule</p> <p>Binds database connectivity for a qualified data source. This binds the following public types:</p> <ul> <li>@Qualifier javax.sql.DataSource</li> <li>@Qualifier misk.jdbc.DataSourceConfig</li> </ul> <p>DataSource.getConnection can be used to get JDBC connections to your database.</p> <p>This also registers services to connect to the database (DataSourceService) and to verify that the schema is up-to-date (SchemaMigratorService).</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-jdbc-module/#constructors","title":"Constructors","text":"JdbcModule [jvm]fun JdbcModule(qualifier: KClass&lt;out Annotation&gt;, config: DataSourceConfig, databasePool: DatabasePool = RealDatabasePool) JdbcModule [jvm]@JvmOverloadsfun JdbcModule(qualifier: KClass&lt;out Annotation&gt;, config: DataSourceConfig, readerQualifier: KClass&lt;out Annotation&gt;?, readerConfig: DataSourceConfig?, databasePool: DatabasePool = RealDatabasePool, installHealthCheck: Boolean = true)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-jdbc-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-jdbc-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder config [jvm]val config: DataSourceConfig databasePool [jvm]val databasePool: DatabasePool readerConfig [jvm]val readerConfig: DataSourceConfig?"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-jdbc-module/-jdbc-module/","title":"JdbcModule - Misk","text":"<p>//misk-jdbc/misk.jdbc/JdbcModule/JdbcModule</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-jdbc-module/-jdbc-module/#jdbcmodule","title":"JdbcModule","text":"<p>[jvm]\\ fun JdbcModule(qualifier: KClass&lt;out Annotation&gt;, config: DataSourceConfig, databasePool: DatabasePool = RealDatabasePool)</p> <p>@JvmOverloads</p> <p>fun JdbcModule(qualifier: KClass&lt;out Annotation&gt;, config: DataSourceConfig, readerQualifier: KClass&lt;out Annotation&gt;?, readerConfig: DataSourceConfig?, databasePool: DatabasePool = RealDatabasePool, installHealthCheck: Boolean = true)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-jdbc-module/config/","title":"config - Misk","text":"<p>//misk-jdbc/misk.jdbc/JdbcModule/config</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-jdbc-module/config/#config","title":"config","text":"<p>[jvm]\\ val config: DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-jdbc-module/database-pool/","title":"databasePool - Misk","text":"<p>//misk-jdbc/misk.jdbc/JdbcModule/databasePool</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-jdbc-module/database-pool/#databasepool","title":"databasePool","text":"<p>[jvm]\\ val databasePool: DatabasePool</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-jdbc-module/reader-config/","title":"readerConfig - Misk","text":"<p>//misk-jdbc/misk.jdbc/JdbcModule/readerConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-jdbc-module/reader-config/#readerconfig","title":"readerConfig","text":"<p>[jvm]\\ val readerConfig: DataSourceConfig?</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-ping-database-service/","title":"PingDatabaseService - Misk","text":"<p>//misk-jdbc/misk.jdbc/PingDatabaseService</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-ping-database-service/#pingdatabaseservice","title":"PingDatabaseService","text":"<p>[jvm]\\ @Singleton</p> <p>class PingDatabaseService@Injectconstructor(config: DataSourceConfig, deployment: Deployment) : AbstractIdleService</p> <p>Service that waits for the database to become healthy. This is needed if we\u2019re booting up a Vitess cluster as part of the test run.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-ping-database-service/#constructors","title":"Constructors","text":"PingDatabaseService [jvm]@Injectfun PingDatabaseService(config: DataSourceConfig, deployment: Deployment)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-ping-database-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-ping-database-service/-ping-database-service/","title":"PingDatabaseService - Misk","text":"<p>//misk-jdbc/misk.jdbc/PingDatabaseService/PingDatabaseService</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-ping-database-service/-ping-database-service/#pingdatabaseservice","title":"PingDatabaseService","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun PingDatabaseService(config: DataSourceConfig, deployment: Deployment)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-post-commit-hook-failed-exception/","title":"PostCommitHookFailedException - Misk","text":"<p>//misk-jdbc/misk.jdbc/PostCommitHookFailedException</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-post-commit-hook-failed-exception/#postcommithookfailedexception","title":"PostCommitHookFailedException","text":"<p>[jvm]\\ class PostCommitHookFailedException(cause: Throwable) : Exception</p> <p>PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-post-commit-hook-failed-exception/#constructors","title":"Constructors","text":"PostCommitHookFailedException [jvm]fun PostCommitHookFailedException(cause: Throwable)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-post-commit-hook-failed-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-post-commit-hook-failed-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-post-commit-hook-failed-exception/-post-commit-hook-failed-exception/","title":"PostCommitHookFailedException - Misk","text":"<p>//misk-jdbc/misk.jdbc/PostCommitHookFailedException/PostCommitHookFailedException</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-post-commit-hook-failed-exception/-post-commit-hook-failed-exception/#postcommithookfailedexception","title":"PostCommitHookFailedException","text":"<p>[jvm]\\ fun PostCommitHookFailedException(cause: Throwable)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-database-pool/","title":"RealDatabasePool - Misk","text":"<p>//misk-jdbc/misk.jdbc/RealDatabasePool</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-database-pool/#realdatabasepool","title":"RealDatabasePool","text":"<p>[jvm]\\ object RealDatabasePool : DatabasePool</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-database-pool/#functions","title":"Functions","text":"Name Summary releaseDatabase [jvm]open override fun releaseDatabase(config: DataSourceConfig)Releases a config created by takeDatabase. takeDatabase [jvm]open override fun takeDatabase(config: DataSourceConfig): DataSourceConfigFinds a database to satisfy config and returns a new config that targets it."},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-database-pool/release-database/","title":"releaseDatabase - Misk","text":"<p>//misk-jdbc/misk.jdbc/RealDatabasePool/releaseDatabase</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-database-pool/release-database/#releasedatabase","title":"releaseDatabase","text":"<p>[jvm]\\ open override fun releaseDatabase(config: DataSourceConfig)</p> <p>Releases a config created by takeDatabase.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-database-pool/take-database/","title":"takeDatabase - Misk","text":"<p>//misk-jdbc/misk.jdbc/RealDatabasePool/takeDatabase</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-database-pool/take-database/#takedatabase","title":"takeDatabase","text":"<p>[jvm]\\ open override fun takeDatabase(config: DataSourceConfig): DataSourceConfig</p> <p>Finds a database to satisfy config and returns a new config that targets it.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-transacter/","title":"RealTransacter - Misk","text":"<p>//misk-jdbc/misk.jdbc/RealTransacter</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-transacter/#realtransacter","title":"RealTransacter","text":"<p>[jvm]\\ class RealTransacter(dataSource: DataSource) : Transacter</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-transacter/#functions","title":"Functions","text":"Name Summary transaction [jvm]open override fun &lt;T&gt; transaction(work: (connection: Connection) -&gt; T): TStarts a transaction on the current thread, executes work, and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed. transactionWithSession [jvm]open override fun &lt;T&gt; transactionWithSession(work: (session: JDBCSession) -&gt; T): TStarts a transaction on the current thread, executes work, and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed."},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-transacter/#properties","title":"Properties","text":"Name Summary inTransaction [jvm]open override val inTransaction: BooleanReturns true if the calling thread is currently within a transaction block."},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-transacter/-real-transacter/","title":"RealTransacter - Misk","text":"<p>//misk-jdbc/misk.jdbc/RealTransacter/RealTransacter</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-transacter/-real-transacter/#realtransacter","title":"RealTransacter","text":"<p>[jvm]\\ fun RealTransacter(dataSource: DataSource)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-transacter/in-transaction/","title":"inTransaction - Misk","text":"<p>//misk-jdbc/misk.jdbc/RealTransacter/inTransaction</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-transacter/in-transaction/#intransaction","title":"inTransaction","text":"<p>[jvm]\\ open override val inTransaction: Boolean</p> <p>Returns true if the calling thread is currently within a transaction block.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-transacter/transaction-with-session/","title":"transactionWithSession - Misk","text":"<p>//misk-jdbc/misk.jdbc/RealTransacter/transactionWithSession</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-transacter/transaction-with-session/#transactionwithsession","title":"transactionWithSession","text":"<p>[jvm]\\ open override fun &lt;T&gt; transactionWithSession(work: (session: JDBCSession) -&gt; T): T</p> <p>Starts a transaction on the current thread, executes work, and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed.</p> <p>This session object passed in wraps a connection and provides a way to add pre and post commit hooks that execute before and after a transaction is committed.</p> <p>It is an error to start a transaction if another transaction is already in progress.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-transacter/transaction/","title":"transaction - Misk","text":"<p>//misk-jdbc/misk.jdbc/RealTransacter/transaction</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-real-transacter/transaction/#transaction","title":"transaction","text":"<p>[jvm]\\ open override fun &lt;T&gt; transaction(work: (connection: Connection) -&gt; T): T</p> <p>Starts a transaction on the current thread, executes work, and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed.</p> <p>It is an error to start a transaction if another transaction is already in progress.</p> <p>Prefer using transactionWithSession instead of this method as it has more functionality such as commit hooks.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-schema-migrator-service/","title":"SchemaMigratorService - Misk","text":"<p>//misk-jdbc/misk.jdbc/SchemaMigratorService</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-schema-migrator-service/#schemamigratorservice","title":"SchemaMigratorService","text":"<p>[jvm]\\ class SchemaMigratorService : AbstractIdleService, HealthCheck, DatabaseReadyService</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-schema-migrator-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State status [jvm]open override fun status(): HealthStatus stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-schema-migrator-service/status/","title":"status - Misk","text":"<p>//misk-jdbc/misk.jdbc/SchemaMigratorService/status</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-schema-migrator-service/status/#status","title":"status","text":"<p>[jvm]\\ open override fun status(): HealthStatus</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-session/","title":"Session - Misk","text":"<p>//misk-jdbc/misk.jdbc/Session</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-session/#session","title":"Session","text":"<p>[jvm]\\ interface Session</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-session/#functions","title":"Functions","text":"Name Summary onPostCommit [jvm]abstract fun onPostCommit(work: () -&gt; Unit)Registers a hook that fires after the session transaction commits. Post-commit hooks cannot affect the disposition of the transaction; if a post-commit hook fails, the failure will be logged but not propagated to the application, as the transaction will have already committed onPreCommit [jvm]abstract fun onPreCommit(work: () -&gt; Unit)Registers a hook that fires before the session\u2019s transaction commits. Failures in a pre-commit hook will cause the transaction to be rolled back. onSessionClose [jvm]abstract fun onSessionClose(work: () -&gt; Unit)Registers a hook that fires after a session is closed. This is called regardless if a session was successfully committed or rolled back. useConnection [jvm]abstract fun &lt;T&gt; useConnection(work: (Connection) -&gt; T): T"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-session/#inheritors","title":"Inheritors","text":"Name JDBCSession"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-session/on-post-commit/","title":"onPostCommit - Misk","text":"<p>//misk-jdbc/misk.jdbc/Session/onPostCommit</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-session/on-post-commit/#onpostcommit","title":"onPostCommit","text":"<p>[jvm]\\ abstract fun onPostCommit(work: () -&gt; Unit)</p> <p>Registers a hook that fires after the session transaction commits. Post-commit hooks cannot affect the disposition of the transaction; if a post-commit hook fails, the failure will be logged but not propagated to the application, as the transaction will have already committed</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-session/on-pre-commit/","title":"onPreCommit - Misk","text":"<p>//misk-jdbc/misk.jdbc/Session/onPreCommit</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-session/on-pre-commit/#onprecommit","title":"onPreCommit","text":"<p>[jvm]\\ abstract fun onPreCommit(work: () -&gt; Unit)</p> <p>Registers a hook that fires before the session\u2019s transaction commits. Failures in a pre-commit hook will cause the transaction to be rolled back.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-session/on-session-close/","title":"onSessionClose - Misk","text":"<p>//misk-jdbc/misk.jdbc/Session/onSessionClose</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-session/on-session-close/#onsessionclose","title":"onSessionClose","text":"<p>[jvm]\\ abstract fun onSessionClose(work: () -&gt; Unit)</p> <p>Registers a hook that fires after a session is closed. This is called regardless if a session was successfully committed or rolled back.</p> <p>A new transaction can be initiated as part of this hook.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-session/use-connection/","title":"useConnection - Misk","text":"<p>//misk-jdbc/misk.jdbc/Session/useConnection</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-session/use-connection/#useconnection","title":"useConnection","text":"<p>[jvm]\\ abstract fun &lt;T&gt; useConnection(work: (Connection) -&gt; T): T</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/","title":"SpanInjector - Misk","text":"<p>//misk-jdbc/misk.jdbc/SpanInjector</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/#spaninjector","title":"SpanInjector","text":"<p>[jvm]\\ class SpanInjector(tracer: Tracer?, config: DataSourceConfig) : QueryTransformer, DataSourceDecorator</p> <p>On the fly decorates queries with the span context, so the query call can be traced all the way through Vitess</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/#constructors","title":"Constructors","text":"SpanInjector [jvm]fun SpanInjector(tracer: Tracer?, config: DataSourceConfig)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/#functions","title":"Functions","text":"Name Summary decorate [jvm]open override fun decorate(dataSource: DataSource): DataSource transformQuery [jvm]open override fun transformQuery(transformInfo: TransformInfo?): String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/#properties","title":"Properties","text":"Name Summary config [jvm]val config: DataSourceConfig tracer [jvm]val tracer: Tracer?"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/-span-injector/","title":"SpanInjector - Misk","text":"<p>//misk-jdbc/misk.jdbc/SpanInjector/SpanInjector</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/-span-injector/#spaninjector","title":"SpanInjector","text":"<p>[jvm]\\ fun SpanInjector(tracer: Tracer?, config: DataSourceConfig)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/config/","title":"config - Misk","text":"<p>//misk-jdbc/misk.jdbc/SpanInjector/config</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/config/#config","title":"config","text":"<p>[jvm]\\ val config: DataSourceConfig</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/decorate/","title":"decorate - Misk","text":"<p>//misk-jdbc/misk.jdbc/SpanInjector/decorate</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/decorate/#decorate","title":"decorate","text":"<p>[jvm]\\ open override fun decorate(dataSource: DataSource): DataSource</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/tracer/","title":"tracer - Misk","text":"<p>//misk-jdbc/misk.jdbc/SpanInjector/tracer</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/tracer/#tracer","title":"tracer","text":"<p>[jvm]\\ val tracer: Tracer?</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/transform-query/","title":"transformQuery - Misk","text":"<p>//misk-jdbc/misk.jdbc/SpanInjector/transformQuery</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-span-injector/transform-query/#transformquery","title":"transformQuery","text":"<p>[jvm]\\ open override fun transformQuery(transformInfo: TransformInfo?): String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/","title":"StringBuilderCarrier - Misk","text":"<p>//misk-jdbc/misk.jdbc/StringBuilderCarrier</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/#stringbuildercarrier","title":"StringBuilderCarrier","text":"<p>[jvm]\\ class StringBuilderCarrier : TextMap</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/#functions","title":"Functions","text":"Name Summary forEach [jvm]open fun forEach(p0: Consumer&lt;in MutableMap.MutableEntry&lt;String, String&gt;&gt;) iterator [jvm]open operator override fun iterator(): MutableIterator&lt;MutableMap.MutableEntry&lt;String, String&gt;&gt; put [jvm]open override fun put(key: String?, value: String?) spliterator [jvm]open fun spliterator(): Spliterator&lt;MutableMap.MutableEntry&lt;String, String&gt;&gt; toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/#properties","title":"Properties","text":"Name Summary map [jvm]val map: &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/-string-builder-carrier/","title":"StringBuilderCarrier - Misk","text":"<p>//misk-jdbc/misk.jdbc/StringBuilderCarrier/StringBuilderCarrier</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/-string-builder-carrier/#stringbuildercarrier","title":"StringBuilderCarrier","text":"<p>[jvm]\\ fun StringBuilderCarrier()</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/iterator/","title":"iterator - Misk","text":"<p>//misk-jdbc/misk.jdbc/StringBuilderCarrier/iterator</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/iterator/#iterator","title":"iterator","text":"<p>[jvm]\\ open operator override fun iterator(): MutableIterator&lt;MutableMap.MutableEntry&lt;String, String&gt;&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/map/","title":"map - Misk","text":"<p>//misk-jdbc/misk.jdbc/StringBuilderCarrier/map</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/map/#map","title":"map","text":"<p>[jvm]\\ val map: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/put/","title":"put - Misk","text":"<p>//misk-jdbc/misk.jdbc/StringBuilderCarrier/put</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/put/#put","title":"put","text":"<p>[jvm]\\ open override fun put(key: String?, value: String?)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/to-string/","title":"toString - Misk","text":"<p>//misk-jdbc/misk.jdbc/StringBuilderCarrier/toString</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-string-builder-carrier/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-table-scan-exception/","title":"TableScanException - Misk","text":"<p>//misk-jdbc/misk.jdbc/TableScanException</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-table-scan-exception/#tablescanexception","title":"TableScanException","text":"<p>[jvm]\\ class TableScanException@JvmOverloadsconstructor(message: String?, cause: Throwable?) : CheckException</p> <p>Exception thrown if we execute a query lacking an index.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-table-scan-exception/#constructors","title":"Constructors","text":"TableScanException [jvm]@JvmOverloadsfun TableScanException(message: String? = null, cause: Throwable? = null)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-table-scan-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable forEach [jvm]open fun forEach(p0: Consumer&lt;in Throwable&gt;) getErrorCode [jvm]open fun getErrorCode(): Int getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getNextException [jvm]open fun getNextException(): SQLException getSQLState [jvm]open fun getSQLState(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable iterator [jvm]open operator override fun iterator(): MutableIterator&lt;Throwable&gt; printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setNextException [jvm]open fun setNextException(p0: SQLException) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;) spliterator [jvm]open fun spliterator(): Spliterator&lt;Throwable&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-table-scan-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-table-scan-exception/-table-scan-exception/","title":"TableScanException - Misk","text":"<p>//misk-jdbc/misk.jdbc/TableScanException/TableScanException</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-table-scan-exception/-table-scan-exception/#tablescanexception","title":"TableScanException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun TableScanException(message: String? = null, cause: Throwable? = null)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-transacter/","title":"Transacter - Misk","text":"<p>//misk-jdbc/misk.jdbc/Transacter</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-transacter/#transacter","title":"Transacter","text":"<p>[jvm]\\ interface Transacter</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-transacter/#functions","title":"Functions","text":"Name Summary transactionWithSession [jvm]abstract fun &lt;T&gt; transactionWithSession(work: (session: JDBCSession) -&gt; T): TStarts a transaction on the current thread, executes work, and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed."},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-transacter/#properties","title":"Properties","text":"Name Summary inTransaction [jvm]abstract val inTransaction: BooleanReturns true if the calling thread is currently within a transaction block."},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-transacter/#inheritors","title":"Inheritors","text":"Name RealTransacter"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-transacter/in-transaction/","title":"inTransaction - Misk","text":"<p>//misk-jdbc/misk.jdbc/Transacter/inTransaction</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-transacter/in-transaction/#intransaction","title":"inTransaction","text":"<p>[jvm]\\ abstract val inTransaction: Boolean</p> <p>Returns true if the calling thread is currently within a transaction block.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-transacter/transaction-with-session/","title":"transactionWithSession - Misk","text":"<p>//misk-jdbc/misk.jdbc/Transacter/transactionWithSession</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.jdbc/-transacter/transaction-with-session/#transactionwithsession","title":"transactionWithSession","text":"<p>[jvm]\\ abstract fun &lt;T&gt; transactionWithSession(work: (session: JDBCSession) -&gt; T): T</p> <p>Starts a transaction on the current thread, executes work, and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed.</p> <p>This session object passed in wraps a connection and provides a way to add pre and post commit hooks that execute before and after a transaction is committed.</p> <p>It is an error to start a transaction if another transaction is already in progress.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/","title":"Package misk.vitess - Misk","text":"<p>//misk-jdbc/misk.vitess</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/#package-miskvitess","title":"Package misk.vitess","text":""},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/#types","title":"Types","text":"Name Summary CowriteException [jvm]class CowriteException@JvmOverloadsconstructor(message: String?, cause: Throwable?) : CheckExceptionThrown when a transaction that writes to multiple entity groups is detected. Destination [jvm]data class Destination(keyspace: Keyspace?, shard: Shard?, tabletType: TabletType?) FullScatterException [jvm]class FullScatterException@JvmOverloadsconstructor(message: String?, cause: Throwable?) : CheckExceptionException thrown if we use a scatter query that is too wide in the wrong context. Keyspace [jvm]data class Keyspace(name: String) Shard [jvm]data class Shard(keyspace: Keyspace, name: String) TabletType [jvm]enum TabletType : Enum&lt;TabletType&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/#functions","title":"Functions","text":"Name Summary checkValidShardIdentifier [jvm]fun checkValidShardIdentifier(identifier: String) failSafeRead [jvm]fun &lt;T&gt; Connection.failSafeRead(block: (conn: Connection) -&gt; T): TRuns a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions.[jvm]fun &lt;T&gt; Connection.failSafeRead(shard: Shard, block: (conn: Connection) -&gt; T): T getRootCause [jvm]fun getRootCause(throwable: Throwable): Throwable shards [jvm]fun shards(dataSourceService: DataSourceService): Supplier&lt;Set&lt;Shard&gt;&gt; tabletDoesNotExists [jvm]fun tabletDoesNotExists(e: Exception): Boolean target [jvm]fun &lt;T&gt; Connection.target(shard: Shard, block: (conn: Connection) -&gt; T): T"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/check-valid-shard-identifier/","title":"checkValidShardIdentifier - Misk","text":"<p>//misk-jdbc/misk.vitess/checkValidShardIdentifier</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/check-valid-shard-identifier/#checkvalidshardidentifier","title":"checkValidShardIdentifier","text":"<p>[jvm]\\ fun checkValidShardIdentifier(identifier: String)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/fail-safe-read/","title":"failSafeRead - Misk","text":"<p>//misk-jdbc/misk.vitess/failSafeRead</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/fail-safe-read/#failsaferead","title":"failSafeRead","text":"<p>[jvm]\\ fun &lt;T&gt; Connection.failSafeRead(block: (conn: Connection) -&gt; T): T</p> <p>Runs a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions.</p> <p>[jvm]\\ fun &lt;T&gt; Connection.failSafeRead(shard: Shard, block: (conn: Connection) -&gt; T): T</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/get-root-cause/","title":"getRootCause - Misk","text":"<p>//misk-jdbc/misk.vitess/getRootCause</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/get-root-cause/#getrootcause","title":"getRootCause","text":"<p>[jvm]\\ fun getRootCause(throwable: Throwable): Throwable</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/shards/","title":"shards - Misk","text":"<p>//misk-jdbc/misk.vitess/shards</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/shards/#shards","title":"shards","text":"<p>[jvm]\\ fun shards(dataSourceService: DataSourceService): Supplier&lt;Set&lt;Shard&gt;&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/tablet-does-not-exists/","title":"tabletDoesNotExists - Misk","text":"<p>//misk-jdbc/misk.vitess/tabletDoesNotExists</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/tablet-does-not-exists/#tabletdoesnotexists","title":"tabletDoesNotExists","text":"<p>[jvm]\\ fun tabletDoesNotExists(e: Exception): Boolean</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/target/","title":"target - Misk","text":"<p>//misk-jdbc/misk.vitess/target</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/target/#target","title":"target","text":"<p>[jvm]\\ fun &lt;T&gt; Connection.target(shard: Shard, block: (conn: Connection) -&gt; T): T</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-cowrite-exception/","title":"CowriteException - Misk","text":"<p>//misk-jdbc/misk.vitess/CowriteException</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-cowrite-exception/#cowriteexception","title":"CowriteException","text":"<p>[jvm]\\ class CowriteException@JvmOverloadsconstructor(message: String?, cause: Throwable?) : CheckException</p> <p>Thrown when a transaction that writes to multiple entity groups is detected.</p> <p>Multi shard transactions are not safe and while multiple entity groups may currently reside on the same shard there is no guarantee they will do so across shard splits.</p> <p>A transaction never spans a shard split. That is they never start before the split and end after, either they commit before the split or they start after the split. That said a transaction may start before a shard split and then time out or cancel and be retried after the shard split. If two entity groups resided on the same shard before the transaction they may no longer do so when the transaction is retried.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-cowrite-exception/#constructors","title":"Constructors","text":"CowriteException [jvm]@JvmOverloadsfun CowriteException(message: String? = null, cause: Throwable? = null)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-cowrite-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable forEach [jvm]open fun forEach(p0: Consumer&lt;in Throwable&gt;) getErrorCode [jvm]open fun getErrorCode(): Int getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getNextException [jvm]open fun getNextException(): SQLException getSQLState [jvm]open fun getSQLState(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable iterator [jvm]open operator override fun iterator(): MutableIterator&lt;Throwable&gt; printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setNextException [jvm]open fun setNextException(p0: SQLException) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;) spliterator [jvm]open fun spliterator(): Spliterator&lt;Throwable&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-cowrite-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-cowrite-exception/-cowrite-exception/","title":"CowriteException - Misk","text":"<p>//misk-jdbc/misk.vitess/CowriteException/CowriteException</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-cowrite-exception/-cowrite-exception/#cowriteexception","title":"CowriteException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun CowriteException(message: String? = null, cause: Throwable? = null)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/","title":"Destination - Misk","text":"<p>//misk-jdbc/misk.vitess/Destination</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/#destination","title":"Destination","text":"<p>[jvm]\\ data class Destination(keyspace: Keyspace?, shard: Shard?, tabletType: TabletType?)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/#constructors","title":"Constructors","text":"Destination [jvm]fun Destination(shard: Shard) Destination [jvm]fun Destination(tabletType: TabletType) Destination [jvm]fun Destination(shard: Shard, tabletType: TabletType)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/#functions","title":"Functions","text":"Name Summary isBlank [jvm]fun isBlank(): Boolean mergedWith [jvm]fun mergedWith(other: Destination): Destination toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/#properties","title":"Properties","text":"Name Summary keyspace [jvm]val keyspace: Keyspace? shard [jvm]val shard: Shard? tabletType [jvm]val tabletType: TabletType?"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/-destination/","title":"Destination - Misk","text":"<p>//misk-jdbc/misk.vitess/Destination/Destination</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/-destination/#destination","title":"Destination","text":"<p>[jvm]\\ fun Destination(shard: Shard)</p> <p>fun Destination(tabletType: TabletType)</p> <p>fun Destination(shard: Shard, tabletType: TabletType)</p> <p>fun Destination(keyspace: Keyspace?, shard: Shard?, tabletType: TabletType?)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/is-blank/","title":"isBlank - Misk","text":"<p>//misk-jdbc/misk.vitess/Destination/isBlank</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/is-blank/#isblank","title":"isBlank","text":"<p>[jvm]\\ fun isBlank(): Boolean</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/keyspace/","title":"keyspace - Misk","text":"<p>//misk-jdbc/misk.vitess/Destination/keyspace</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/keyspace/#keyspace","title":"keyspace","text":"<p>[jvm]\\ val keyspace: Keyspace?</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/merged-with/","title":"mergedWith - Misk","text":"<p>//misk-jdbc/misk.vitess/Destination/mergedWith</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/merged-with/#mergedwith","title":"mergedWith","text":"<p>[jvm]\\ fun mergedWith(other: Destination): Destination</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/shard/","title":"shard - Misk","text":"<p>//misk-jdbc/misk.vitess/Destination/shard</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/shard/#shard","title":"shard","text":"<p>[jvm]\\ val shard: Shard?</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/tablet-type/","title":"tabletType - Misk","text":"<p>//misk-jdbc/misk.vitess/Destination/tabletType</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/tablet-type/#tablettype","title":"tabletType","text":"<p>[jvm]\\ val tabletType: TabletType?</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/to-string/","title":"toString - Misk","text":"<p>//misk-jdbc/misk.vitess/Destination/toString</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/-companion/","title":"Companion - Misk","text":"<p>//misk-jdbc/misk.vitess/Destination/Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/-companion/#functions","title":"Functions","text":"Name Summary parse [jvm]fun parse(string: String): Destination"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/-companion/parse/","title":"parse - Misk","text":"<p>//misk-jdbc/misk.vitess/Destination/Companion/parse</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-destination/-companion/parse/#parse","title":"parse","text":"<p>[jvm]\\ fun parse(string: String): Destination</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-full-scatter-exception/","title":"FullScatterException - Misk","text":"<p>//misk-jdbc/misk.vitess/FullScatterException</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-full-scatter-exception/#fullscatterexception","title":"FullScatterException","text":"<p>[jvm]\\ class FullScatterException@JvmOverloadsconstructor(message: String?, cause: Throwable?) : CheckException</p> <p>Exception thrown if we use a scatter query that is too wide in the wrong context.</p> <p>Strongly consistent reads require reads from the master of a cluster. The master of a cluster is a limited resource that we can\u2019t add more of. We can split shards but a wide scatter query will still hit all of the shards so we can\u2019t scale if we have too many wide scatters. For this reason we do not allow wide scatters for strongly consistent reads.</p> <p>Note: For eventually consistent reads (that go to replicas) we may very well allow wide scatter queries because we can tune the availability by adding more replicas. Currently we do NOT differentiate between these types of reads for the detector but if you do need this it can be implemented.</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-full-scatter-exception/#constructors","title":"Constructors","text":"FullScatterException [jvm]@JvmOverloadsfun FullScatterException(message: String? = null, cause: Throwable? = null)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-full-scatter-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable forEach [jvm]open fun forEach(p0: Consumer&lt;in Throwable&gt;) getErrorCode [jvm]open fun getErrorCode(): Int getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getNextException [jvm]open fun getNextException(): SQLException getSQLState [jvm]open fun getSQLState(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable iterator [jvm]open operator override fun iterator(): MutableIterator&lt;Throwable&gt; printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setNextException [jvm]open fun setNextException(p0: SQLException) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;) spliterator [jvm]open fun spliterator(): Spliterator&lt;Throwable&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-full-scatter-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-full-scatter-exception/-full-scatter-exception/","title":"FullScatterException - Misk","text":"<p>//misk-jdbc/misk.vitess/FullScatterException/FullScatterException</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-full-scatter-exception/-full-scatter-exception/#fullscatterexception","title":"FullScatterException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun FullScatterException(message: String? = null, cause: Throwable? = null)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-keyspace/","title":"Keyspace - Misk","text":"<p>//misk-jdbc/misk.vitess/Keyspace</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-keyspace/#keyspace","title":"Keyspace","text":"<p>[jvm]\\ data class Keyspace(name: String)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-keyspace/#functions","title":"Functions","text":"Name Summary toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-keyspace/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-keyspace/-keyspace/","title":"Keyspace - Misk","text":"<p>//misk-jdbc/misk.vitess/Keyspace/Keyspace</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-keyspace/-keyspace/#keyspace","title":"Keyspace","text":"<p>[jvm]\\ fun Keyspace(name: String)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-keyspace/name/","title":"name - Misk","text":"<p>//misk-jdbc/misk.vitess/Keyspace/name</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-keyspace/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-keyspace/to-string/","title":"toString - Misk","text":"<p>//misk-jdbc/misk.vitess/Keyspace/toString</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-keyspace/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/","title":"Shard - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/#shard","title":"Shard","text":"<p>[jvm]\\ data class Shard(keyspace: Keyspace, name: String)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion Key [jvm]data class Key(bytes: ByteString) : Comparable&lt;Shard.Key&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/#functions","title":"Functions","text":"Name Summary contains [jvm]operator fun contains(keyspaceId: Shard.Key): Boolean keyRange [jvm]fun keyRange(): Range&lt;Shard.Key&gt; toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/#properties","title":"Properties","text":"Name Summary keyspace [jvm]val keyspace: Keyspace name [jvm]val name: String"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-shard/","title":"Shard - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Shard</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-shard/#shard","title":"Shard","text":"<p>[jvm]\\ fun Shard(keyspace: Keyspace, name: String)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/contains/","title":"contains - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/contains</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/contains/#contains","title":"contains","text":"<p>[jvm]\\ operator fun contains(keyspaceId: Shard.Key): Boolean</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/key-range/","title":"keyRange - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/keyRange</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/key-range/#keyrange","title":"keyRange","text":"<p>[jvm]\\ fun keyRange(): Range&lt;Shard.Key&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/keyspace/","title":"keyspace - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/keyspace</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/keyspace/#keyspace","title":"keyspace","text":"<p>[jvm]\\ val keyspace: Keyspace</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/name/","title":"name - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/name</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/to-string/","title":"toString - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/toString</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/","title":"Companion - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/#functions","title":"Functions","text":"Name Summary parse [jvm]fun parse(string: String): Shard"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/#properties","title":"Properties","text":"Name Summary MAX_LENGTH [jvm]const val MAX_LENGTH: Int = 8 SINGLE_KEYSPACE [jvm]val SINGLE_KEYSPACE: Keyspace SINGLE_SHARD [jvm]val SINGLE_SHARD: Shard SINGLE_SHARD_ID [jvm]const val SINGLE_SHARD_ID: String SINGLE_SHARD_SET [jvm]val SINGLE_SHARD_SET: ImmutableSet&lt;Shard&gt;"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/-m-a-x_-l-e-n-g-t-h/","title":"MAX_LENGTH - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Companion/MAX_LENGTH</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/-m-a-x_-l-e-n-g-t-h/#max_length","title":"MAX_LENGTH","text":"<p>[jvm]\\ const val MAX_LENGTH: Int = 8</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/-s-i-n-g-l-e_-k-e-y-s-p-a-c-e/","title":"SINGLE_KEYSPACE - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Companion/SINGLE_KEYSPACE</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/-s-i-n-g-l-e_-k-e-y-s-p-a-c-e/#single_keyspace","title":"SINGLE_KEYSPACE","text":"<p>[jvm]\\ val SINGLE_KEYSPACE: Keyspace</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/-s-i-n-g-l-e_-s-h-a-r-d/","title":"SINGLE_SHARD - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Companion/SINGLE_SHARD</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/-s-i-n-g-l-e_-s-h-a-r-d/#single_shard","title":"SINGLE_SHARD","text":"<p>[jvm]\\ val SINGLE_SHARD: Shard</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/-s-i-n-g-l-e_-s-h-a-r-d_-i-d/","title":"SINGLE_SHARD_ID - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Companion/SINGLE_SHARD_ID</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/-s-i-n-g-l-e_-s-h-a-r-d_-i-d/#single_shard_id","title":"SINGLE_SHARD_ID","text":"<p>[jvm]\\ const val SINGLE_SHARD_ID: String</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/-s-i-n-g-l-e_-s-h-a-r-d_-s-e-t/","title":"SINGLE_SHARD_SET - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Companion/SINGLE_SHARD_SET</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/-s-i-n-g-l-e_-s-h-a-r-d_-s-e-t/#single_shard_set","title":"SINGLE_SHARD_SET","text":"<p>[jvm]\\ val SINGLE_SHARD_SET: ImmutableSet&lt;Shard&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/parse/","title":"parse - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Companion/parse</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-companion/parse/#parse","title":"parse","text":"<p>[jvm]\\ fun parse(string: String): Shard</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/","title":"Key - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Key</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/#key","title":"Key","text":"<p>[jvm]\\ data class Key(bytes: ByteString) : Comparable&lt;Shard.Key&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/#constructors","title":"Constructors","text":"Key [jvm]fun Key(hex: String)Vitess always converts sharding keys to a left-justified binary string for computing a shard. This left-justification makes the right-most zeroes insignificant and optional."},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/#functions","title":"Functions","text":"Name Summary compareTo [jvm]open operator override fun compareTo(other: Shard.Key): Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/#properties","title":"Properties","text":"Name Summary bytes [jvm]val bytes: ByteString"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/-key/","title":"Key - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Key/Key</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/-key/#key","title":"Key","text":"<p>[jvm]\\ fun Key(hex: String)</p> <p>Vitess always converts sharding keys to a left-justified binary string for computing a shard. This left-justification makes the right-most zeroes insignificant and optional.</p> <p>To make compareTo, equals and hashCode work properly in Java, these keys are force padded with 0\u2019s at the end. Dynamic end padding when comparing would break the equals/hashCode contract in Java.</p> <p>[jvm]\\ fun Key(bytes: ByteString)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/bytes/","title":"bytes - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Key/bytes</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/bytes/#bytes","title":"bytes","text":"<p>[jvm]\\ val bytes: ByteString</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/compare-to/","title":"compareTo - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Key/compareTo</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/compare-to/#compareto","title":"compareTo","text":"<p>[jvm]\\ open operator override fun compareTo(other: Shard.Key): Int</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/-companion/","title":"Companion - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Key/Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/-companion/#functions","title":"Functions","text":"Name Summary hash [jvm]fun hash(id: Long): Shard.Key"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/-companion/hash/","title":"hash - Misk","text":"<p>//misk-jdbc/misk.vitess/Shard/Key/Companion/hash</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-shard/-key/-companion/hash/#hash","title":"hash","text":"<p>[jvm]\\ fun hash(id: Long): Shard.Key</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-tablet-type/","title":"TabletType - Misk","text":"<p>//misk-jdbc/misk.vitess/TabletType</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-tablet-type/#tablettype","title":"TabletType","text":"<p>[jvm]\\ enum TabletType : Enum&lt;TabletType&gt;</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-tablet-type/#entries","title":"Entries","text":"REPLICA [jvm]REPLICA(2) MASTER [jvm]MASTER(1)"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-tablet-type/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int value [jvm]val value: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-tablet-type/value/","title":"value - Misk","text":"<p>//misk-jdbc/misk.vitess/TabletType/value</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-tablet-type/value/#value","title":"value","text":"<p>[jvm]\\ val value: Int</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-tablet-type/-m-a-s-t-e-r/","title":"MASTER - Misk","text":"<p>//misk-jdbc/misk.vitess/TabletType/MASTER</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-tablet-type/-m-a-s-t-e-r/#master","title":"MASTER","text":"<p>[jvm]\\ MASTER(1)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-tablet-type/-m-a-s-t-e-r/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int value [jvm]val value: Int"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-tablet-type/-r-e-p-l-i-c-a/","title":"REPLICA - Misk","text":"<p>//misk-jdbc/misk.vitess/TabletType/REPLICA</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-tablet-type/-r-e-p-l-i-c-a/#replica","title":"REPLICA","text":"<p>[jvm]\\ REPLICA(2)</p>"},{"location":"0.x/misk-jdbc/misk-jdbc/misk.vitess/-tablet-type/-r-e-p-l-i-c-a/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int value [jvm]val value: Int"},{"location":"0.x/misk-jobqueue/","title":"misk-jobqueue - Misk","text":"<p>//misk-jobqueue</p>"},{"location":"0.x/misk-jobqueue/#misk-jobqueue","title":"misk-jobqueue","text":""},{"location":"0.x/misk-jobqueue/#packages","title":"Packages","text":"Name misk.jobqueue"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/","title":"Package misk.jobqueue - Misk","text":"<p>//misk-jobqueue/misk.jobqueue</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/#package-miskjobqueue","title":"Package misk.jobqueue","text":""},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/#types","title":"Types","text":"Name Summary Job [jvm]interface JobIncoming job JobConsumer [jvm]interface JobConsumerA JobConsumer allows applications to subscribe to receive incoming jobs JobHandler [jvm]interface JobHandlerA JobHandler is an application implemented interface that handles jobs received by this service. JobHandlers must explicitly call Job.acknowledge after successful processing to cause the to be deleted from the underlying queue and not redelivered, or can call Job.deadLetter to put the job onto the associated dead letter queue. The jobqueue framework assumes that the underlying queueing system is at-least-once, so handlers must be prepared for the possibility that a job will be delivered more than once (for example if the process fails or the visibility timeout expires after processing but before acknowledgement). Typically this is handled by either storing some sort of ticket in the local database when the job is enqueued and deleting it as part of the application transaction when the job is processed but prior to acknowledgement, or by storing some sort of \u201cprocessed marker\u201d in the local database during job processing and ignoring jobs whose marker is already recorded. JobQueue [jvm]interface JobQueueA JobQueue enqueues jobs for asynchronous execution, possibly in another process. Jobs are enqueued immediately and may involve an RPC to the underlying job queueing system, so should not be done from within a database transaction. Applications that need to enqueue jobs atomically with a local database transaction should use the TransactionalJobQueue interface QueueName [jvm]data class QueueName(value: String)"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/#functions","title":"Functions","text":"Name Summary subscribe [jvm]inline fun JobConsumer.subscribe(queueName: QueueName, crossinline handler: (Job) -&gt; Unit)"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/subscribe/","title":"subscribe - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/subscribe</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/subscribe/#subscribe","title":"subscribe","text":"<p>[jvm]\\ inline fun JobConsumer.subscribe(queueName: QueueName, crossinline handler: (Job) -&gt; Unit)</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/","title":"Job - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/Job</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/#job","title":"Job","text":"<p>[jvm]\\ interface Job</p> <p>Incoming job</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/#functions","title":"Functions","text":"Name Summary acknowledge [jvm]abstract fun acknowledge()Acknowledges the job and deletes it from the underlying queue. May perform an RPC, and thus should not be called while holding database transactions or other resources deadLetter [jvm]abstract fun deadLetter()Moves the job from the main queue onto the associated dead letter queue. May perform an RPC"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/#properties","title":"Properties","text":"Name Summary attributes [jvm]abstract val attributes: Map&lt;String, String&gt;context attributes associated with the job body [jvm]abstract val body: Stringbody of the job id [jvm]abstract val id: Stringsystem assigned globally unique id for the job idempotenceKey [jvm]abstract val idempotenceKey: StringApplication assigned key for a job. queueName [jvm]abstract val queueName: QueueNamename of the queue on which the job was received"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/acknowledge/","title":"acknowledge - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/Job/acknowledge</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/acknowledge/#acknowledge","title":"acknowledge","text":"<p>[jvm]\\ abstract fun acknowledge()</p> <p>Acknowledges the job and deletes it from the underlying queue. May perform an RPC, and thus should not be called while holding database transactions or other resources</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/attributes/","title":"attributes - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/Job/attributes</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/attributes/#attributes","title":"attributes","text":"<p>[jvm]\\ abstract val attributes: Map&lt;String, String&gt;</p> <p>context attributes associated with the job</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/body/","title":"body - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/Job/body</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/body/#body","title":"body","text":"<p>[jvm]\\ abstract val body: String</p> <p>body of the job</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/dead-letter/","title":"deadLetter - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/Job/deadLetter</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/dead-letter/#deadletter","title":"deadLetter","text":"<p>[jvm]\\ abstract fun deadLetter()</p> <p>Moves the job from the main queue onto the associated dead letter queue. May perform an RPC</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/id/","title":"id - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/Job/id</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/id/#id","title":"id","text":"<p>[jvm]\\ abstract val id: String</p> <p>system assigned globally unique id for the job</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/idempotence-key/","title":"idempotenceKey - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/Job/idempotenceKey</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/idempotence-key/#idempotencekey","title":"idempotenceKey","text":"<p>[jvm]\\ abstract val idempotenceKey: String</p> <p>Application assigned key for a job.</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/idempotence-key/#see-also","title":"See also","text":"<p>jvm</p> misk.jobqueue.JobQueue"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/queue-name/","title":"queueName - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/Job/queueName</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job/queue-name/#queuename","title":"queueName","text":"<p>[jvm]\\ abstract val queueName: QueueName</p> <p>name of the queue on which the job was received</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-consumer/","title":"JobConsumer - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobConsumer</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-consumer/#jobconsumer","title":"JobConsumer","text":"<p>[jvm]\\ interface JobConsumer</p> <p>A JobConsumer allows applications to subscribe to receive incoming jobs</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-consumer/#functions","title":"Functions","text":"Name Summary subscribe [jvm]abstract fun subscribe(queueName: QueueName, handler: JobHandler)Registers a handler to receive messages. Once registered, the consumer will immediately begin receiving messages from the underlying job queue and dispatch them to the provided handler. A service may only have one subscription outstanding per queue unsubscribe [jvm]abstract fun unsubscribe(queueName: QueueName)"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-consumer/#extensions","title":"Extensions","text":"Name Summary subscribe [jvm]inline fun JobConsumer.subscribe(queueName: QueueName, crossinline handler: (Job) -&gt; Unit)"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-consumer/subscribe/","title":"subscribe - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobConsumer/subscribe</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-consumer/subscribe/#subscribe","title":"subscribe","text":"<p>[jvm]\\ abstract fun subscribe(queueName: QueueName, handler: JobHandler)</p> <p>Registers a handler to receive messages. Once registered, the consumer will immediately begin receiving messages from the underlying job queue and dispatch them to the provided handler. A service may only have one subscription outstanding per queue</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-consumer/unsubscribe/","title":"unsubscribe - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobConsumer/unsubscribe</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-consumer/unsubscribe/#unsubscribe","title":"unsubscribe","text":"<p>[jvm]\\ abstract fun unsubscribe(queueName: QueueName)</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-handler/","title":"JobHandler - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobHandler</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-handler/#jobhandler","title":"JobHandler","text":"<p>[jvm]\\ interface JobHandler</p> <p>A JobHandler is an application implemented interface that handles jobs received by this service. JobHandlers must explicitly call Job.acknowledge after successful processing to cause the to be deleted from the underlying queue and not redelivered, or can call Job.deadLetter to put the job onto the associated dead letter queue. The jobqueue framework assumes that the underlying queueing system is at-least-once, so handlers must be prepared for the possibility that a job will be delivered more than once (for example if the process fails or the visibility timeout expires after processing but before acknowledgement). Typically this is handled by either storing some sort of ticket in the local database when the job is enqueued and deleting it as part of the application transaction when the job is processed but prior to acknowledgement, or by storing some sort of \u201cprocessed marker\u201d in the local database during job processing and ignoring jobs whose marker is already recorded.</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-handler/#functions","title":"Functions","text":"Name Summary handleJob [jvm]abstract fun handleJob(job: Job)"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-handler/handle-job/","title":"handleJob - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobHandler/handleJob</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-handler/handle-job/#handlejob","title":"handleJob","text":"<p>[jvm]\\ abstract fun handleJob(job: Job)</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/","title":"JobQueue - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/#jobqueue","title":"JobQueue","text":"<p>[jvm]\\ interface JobQueue</p> <p>A JobQueue enqueues jobs for asynchronous execution, possibly in another process. Jobs are enqueued immediately and may involve an RPC to the underlying job queueing system, so should not be done from within a database transaction. Applications that need to enqueue jobs atomically with a local database transaction should use the TransactionalJobQueue interface</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/#types","title":"Types","text":"Name Summary BatchEnqueueException [jvm]data class BatchEnqueueException(queueName: QueueName, successful: List&lt;String&gt;, failed: List&lt;JobQueue.EnqueueErrorResult&gt;) : ExceptionException Data class containing the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned Companion [jvm]object Companion EnqueueErrorResult [jvm]data class EnqueueErrorResult(idempotenceKey: String, clientError: Boolean, code: String, message: String)Data class containing the error result of a failed job enqueue JobRequest [jvm]data class JobRequest@JvmOverloadsconstructor(body: String, idempotenceKey: String, deliveryDelay: Duration?, attributes: Map&lt;String, String&gt;)Data class containing the necessary information to be enqueued in a batch enqueue"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/#functions","title":"Functions","text":"Name Summary batchEnqueue [jvm]abstract fun batchEnqueue(queueName: QueueName, jobs: List&lt;JobQueue.JobRequest&gt;)throws BatchEnqueueException contains the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned enqueue [jvm]open fun enqueue(queueName: QueueName, body: String, deliveryDelay: Duration? = null, attributes: Map&lt;String, String&gt; = mapOf())[jvm]abstract fun enqueue(queueName: QueueName, body: String, idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration? = null, attributes: Map&lt;String, String&gt; = mapOf())Enqueue a job onto the given queue, along with a set of job attributes."},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/batch-enqueue/","title":"batchEnqueue - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/batchEnqueue</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/batch-enqueue/#batchenqueue","title":"batchEnqueue","text":"<p>[jvm]\\ abstract fun batchEnqueue(queueName: QueueName, jobs: List&lt;JobQueue.JobRequest&gt;)</p> <p>throws BatchEnqueueException contains the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/enqueue/","title":"enqueue - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/enqueue</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/enqueue/#enqueue","title":"enqueue","text":"<p>[jvm]\\ open fun enqueue(queueName: QueueName, body: String, deliveryDelay: Duration? = null, attributes: Map&lt;String, String&gt; = mapOf())</p> <p>[jvm]\\ abstract fun enqueue(queueName: QueueName, body: String, idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration? = null, attributes: Map&lt;String, String&gt; = mapOf())</p> <p>Enqueue a job onto the given queue, along with a set of job attributes.</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/enqueue/#parameters","title":"Parameters","text":"<p>jvm</p> queueName The name of the queue on which to place the job. body The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body. idempotenceKey Client-assigned unique key, useful for application code to detect duplicate work. Implementations of both JobQueue and JobConsumer are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandlers). Defaults to a randomly generated UUID when not explicitly set. deliveryDelay If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. Note that depending on implementation, there may be an upper limit to this value. For instance, SQS implementation limits deliveryDelay to 900s (15m). If a longer delay is required by applications, use the TransactionalJobQueue interface instead. attributes Arbitrary contextual attributes associated with the job. Implementations may limit the number of attributes per message."},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/","title":"BatchEnqueueException - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/BatchEnqueueException</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/#batchenqueueexception","title":"BatchEnqueueException","text":"<p>[jvm]\\ data class BatchEnqueueException(queueName: QueueName, successful: List&lt;String&gt;, failed: List&lt;JobQueue.EnqueueErrorResult&gt;) : Exception</p> <p>Exception Data class containing the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/#constructors","title":"Constructors","text":"BatchEnqueueException [jvm]fun BatchEnqueueException(queueName: QueueName, successful: List&lt;String&gt;, failed: List&lt;JobQueue.EnqueueErrorResult&gt;)"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? failed [jvm]val failed: List&lt;JobQueue.EnqueueErrorResult&gt; message [jvm]open val message: String? queueName [jvm]val queueName: QueueName successful [jvm]val successful: List&lt;String&gt;"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/-batch-enqueue-exception/","title":"BatchEnqueueException - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/BatchEnqueueException/BatchEnqueueException</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/-batch-enqueue-exception/#batchenqueueexception","title":"BatchEnqueueException","text":"<p>[jvm]\\ fun BatchEnqueueException(queueName: QueueName, successful: List&lt;String&gt;, failed: List&lt;JobQueue.EnqueueErrorResult&gt;)</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/failed/","title":"failed - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/BatchEnqueueException/failed</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/failed/#failed","title":"failed","text":"<p>[jvm]\\ val failed: List&lt;JobQueue.EnqueueErrorResult&gt;</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/queue-name/","title":"queueName - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/BatchEnqueueException/queueName</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/queue-name/#queuename","title":"queueName","text":"<p>[jvm]\\ val queueName: QueueName</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/successful/","title":"successful - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/BatchEnqueueException/successful</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/successful/#successful","title":"successful","text":"<p>[jvm]\\ val successful: List&lt;String&gt;</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-companion/","title":"Companion - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/Companion</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-companion/#properties","title":"Properties","text":"Name Summary SQS_MAX_BATCH_ENQUEUE_JOB_SIZE [jvm]const val SQS_MAX_BATCH_ENQUEUE_JOB_SIZE: Int = 10"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-companion/-s-q-s_-m-a-x_-b-a-t-c-h_-e-n-q-u-e-u-e_-j-o-b_-s-i-z-e/","title":"SQS_MAX_BATCH_ENQUEUE_JOB_SIZE - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/Companion/SQS_MAX_BATCH_ENQUEUE_JOB_SIZE</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-companion/-s-q-s_-m-a-x_-b-a-t-c-h_-e-n-q-u-e-u-e_-j-o-b_-s-i-z-e/#sqs_max_batch_enqueue_job_size","title":"SQS_MAX_BATCH_ENQUEUE_JOB_SIZE","text":"<p>[jvm]\\ const val SQS_MAX_BATCH_ENQUEUE_JOB_SIZE: Int = 10</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/","title":"EnqueueErrorResult - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/EnqueueErrorResult</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/#enqueueerrorresult","title":"EnqueueErrorResult","text":"<p>[jvm]\\ data class EnqueueErrorResult(idempotenceKey: String, clientError: Boolean, code: String, message: String)</p> <p>Data class containing the error result of a failed job enqueue</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/#parameters","title":"Parameters","text":"<p>jvm</p> idempotenceKey Client-assigned unique key for the failed enqueued job clientError Indicates whether the error is due to a clientside error code Error code returned by the JobQueue service message Error message returned by the JobQueue service"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/#constructors","title":"Constructors","text":"EnqueueErrorResult [jvm]fun EnqueueErrorResult(idempotenceKey: String, clientError: Boolean, code: String, message: String)"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/#properties","title":"Properties","text":"Name Summary clientError [jvm]val clientError: Boolean code [jvm]val code: String idempotenceKey [jvm]val idempotenceKey: String message [jvm]val message: String"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/-enqueue-error-result/","title":"EnqueueErrorResult - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/EnqueueErrorResult/EnqueueErrorResult</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/-enqueue-error-result/#enqueueerrorresult","title":"EnqueueErrorResult","text":"<p>[jvm]\\ fun EnqueueErrorResult(idempotenceKey: String, clientError: Boolean, code: String, message: String)</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/-enqueue-error-result/#parameters","title":"Parameters","text":"<p>jvm</p> idempotenceKey Client-assigned unique key for the failed enqueued job clientError Indicates whether the error is due to a clientside error code Error code returned by the JobQueue service message Error message returned by the JobQueue service"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/client-error/","title":"clientError - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/EnqueueErrorResult/clientError</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/client-error/#clienterror","title":"clientError","text":"<p>[jvm]\\ val clientError: Boolean</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/code/","title":"code - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/EnqueueErrorResult/code</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/code/#code","title":"code","text":"<p>[jvm]\\ val code: String</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/idempotence-key/","title":"idempotenceKey - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/EnqueueErrorResult/idempotenceKey</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/idempotence-key/#idempotencekey","title":"idempotenceKey","text":"<p>[jvm]\\ val idempotenceKey: String</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/message/","title":"message - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/EnqueueErrorResult/message</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/message/#message","title":"message","text":"<p>[jvm]\\ val message: String</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/","title":"JobRequest - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/JobRequest</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/#jobrequest","title":"JobRequest","text":"<p>[jvm]\\ data class JobRequest@JvmOverloadsconstructor(body: String, idempotenceKey: String, deliveryDelay: Duration?, attributes: Map&lt;String, String&gt;)</p> <p>Data class containing the necessary information to be enqueued in a batch enqueue</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/#parameters","title":"Parameters","text":"<p>jvm</p> body The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body. idempotenceKey Client-assigned unique key, useful for application code to detect duplicate work. Implementations of both JobQueue and JobConsumer are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandlers). Defaults to a randomly generated UUID when not explicitly set. deliveryDelay If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. Note that depending on implementation, there may be an upper limit to this value. For instance, SQS implementation limits deliveryDelay to 900s (15m). attributes Arbitrary contextual attributes associated with the job. Implementations may limit the number of attributes per message."},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/#constructors","title":"Constructors","text":"JobRequest [jvm]@JvmOverloadsfun JobRequest(body: String, idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration? = null, attributes: Map&lt;String, String&gt; = mapOf())"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/#properties","title":"Properties","text":"Name Summary attributes [jvm]val attributes: Map&lt;String, String&gt; body [jvm]val body: String deliveryDelay [jvm]val deliveryDelay: Duration? = null idempotenceKey [jvm]val idempotenceKey: String"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/-job-request/","title":"JobRequest - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/JobRequest/JobRequest</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/-job-request/#jobrequest","title":"JobRequest","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun JobRequest(body: String, idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration? = null, attributes: Map&lt;String, String&gt; = mapOf())</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/-job-request/#parameters","title":"Parameters","text":"<p>jvm</p> body The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body. idempotenceKey Client-assigned unique key, useful for application code to detect duplicate work. Implementations of both JobQueue and JobConsumer are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandlers). Defaults to a randomly generated UUID when not explicitly set. deliveryDelay If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. Note that depending on implementation, there may be an upper limit to this value. For instance, SQS implementation limits deliveryDelay to 900s (15m). attributes Arbitrary contextual attributes associated with the job. Implementations may limit the number of attributes per message."},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/attributes/","title":"attributes - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/JobRequest/attributes</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/attributes/#attributes","title":"attributes","text":"<p>[jvm]\\ val attributes: Map&lt;String, String&gt;</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/body/","title":"body - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/JobRequest/body</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/body/#body","title":"body","text":"<p>[jvm]\\ val body: String</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/delivery-delay/","title":"deliveryDelay - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/JobRequest/deliveryDelay</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/delivery-delay/#deliverydelay","title":"deliveryDelay","text":"<p>[jvm]\\ val deliveryDelay: Duration? = null</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/idempotence-key/","title":"idempotenceKey - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/JobQueue/JobRequest/idempotenceKey</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/idempotence-key/#idempotencekey","title":"idempotenceKey","text":"<p>[jvm]\\ val idempotenceKey: String</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-queue-name/","title":"QueueName - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/QueueName</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-queue-name/#queuename","title":"QueueName","text":"<p>[jvm]\\ data class QueueName(value: String)</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-queue-name/#properties","title":"Properties","text":"Name Summary value [jvm]val value: String"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-queue-name/-queue-name/","title":"QueueName - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/QueueName/QueueName</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-queue-name/-queue-name/#queuename","title":"QueueName","text":"<p>[jvm]\\ fun QueueName(value: String)</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-queue-name/value/","title":"value - Misk","text":"<p>//misk-jobqueue/misk.jobqueue/QueueName/value</p>"},{"location":"0.x/misk-jobqueue/misk-jobqueue/misk.jobqueue/-queue-name/value/#value","title":"value","text":"<p>[jvm]\\ val value: String</p>"},{"location":"0.x/misk-jooq/","title":"misk-jooq - Misk","text":"<p>//misk-jooq</p>"},{"location":"0.x/misk-jooq/#misk-jooq","title":"misk-jooq","text":""},{"location":"0.x/misk-jooq/#packages","title":"Packages","text":"Name misk.jooq misk.jooq.listeners misk.jooq.testgen misk.jooq.testgen.keys misk.jooq.testgen.tables misk.jooq.testgen.tables.records misk.jooq.testgen.tables.references"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/","title":"Package misk.jooq - Misk","text":"<p>//misk-jooq/misk.jooq</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/#package-miskjooq","title":"Package misk.jooq","text":""},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/#types","title":"Types","text":"Name Summary JooqHealthCheck [jvm]class JooqHealthCheck(qualifier: KClass&lt;out Annotation&gt;, dataSourceProvider: Provider&lt;out Service&gt;, jooqTransacterProvider: Provider&lt;JooqTransacter&gt;, clock: Clock) : HealthCheck JooqModule [jvm]class JooqModule@JvmOverloadsconstructor(qualifier: KClass&lt;out Annotation&gt;, dataSourceClusterConfig: DataSourceClusterConfig, jooqCodeGenSchemaName: String, databasePool: DatabasePool, readerQualifier: KClass&lt;out Annotation&gt;?, jooqTimestampRecordListenerOptions: JooqTimestampRecordListenerOptions, installHealthChecks: Boolean, jooqConfigExtension: Configuration.() -&gt; Unit) : KAbstractModule JooqSession [jvm]class JooqSession(ctx: DSLContext) : Session JooqTransacter [jvm]class JooqTransacter(dslContext: Lazy&lt;DSLContext&gt;)"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/#functions","title":"Functions","text":"Name Summary fetchOneOrNull [jvm]fun &lt;RECORD : Record?&gt; ResultQuery&lt;RECORD&gt;.fetchOneOrNull(): RECORD? getOrThrow [jvm]fun &lt;ANY&gt; ANY?.getOrThrow(): ANY ifNotNull [jvm]inline fun &lt;ANY&gt; ANY?.ifNotNull(condition: (ANY) -&gt; Condition): Condition toInstant [jvm]fun LocalDateTime.toInstant(): Instant toLocalDateTime [jvm]fun Instant.toLocalDateTime(): LocalDateTime"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/fetch-one-or-null/","title":"fetchOneOrNull - Misk","text":"<p>//misk-jooq/misk.jooq/fetchOneOrNull</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/fetch-one-or-null/#fetchoneornull","title":"fetchOneOrNull","text":"<p>[jvm]\\ fun &lt;RECORD : Record?&gt; ResultQuery&lt;RECORD&gt;.fetchOneOrNull(): RECORD?</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/get-or-throw/","title":"getOrThrow - Misk","text":"<p>//misk-jooq/misk.jooq/getOrThrow</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/get-or-throw/#getorthrow","title":"getOrThrow","text":"<p>[jvm]\\ fun &lt;ANY&gt; ANY?.getOrThrow(): ANY</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/if-not-null/","title":"ifNotNull - Misk","text":"<p>//misk-jooq/misk.jooq/ifNotNull</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/if-not-null/#ifnotnull","title":"ifNotNull","text":"<p>[jvm]\\ inline fun &lt;ANY&gt; ANY?.ifNotNull(condition: (ANY) -&gt; Condition): Condition</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/to-instant/","title":"toInstant - Misk","text":"<p>//misk-jooq/misk.jooq/toInstant</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/to-instant/#toinstant","title":"toInstant","text":"<p>[jvm]\\ fun LocalDateTime.toInstant(): Instant</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/to-local-date-time/","title":"toLocalDateTime - Misk","text":"<p>//misk-jooq/misk.jooq/toLocalDateTime</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/to-local-date-time/#tolocaldatetime","title":"toLocalDateTime","text":"<p>[jvm]\\ fun Instant.toLocalDateTime(): LocalDateTime</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/","title":"JooqHealthCheck - Misk","text":"<p>//misk-jooq/misk.jooq/JooqHealthCheck</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/#jooqhealthcheck","title":"JooqHealthCheck","text":"<p>[jvm]\\ class JooqHealthCheck(qualifier: KClass&lt;out Annotation&gt;, dataSourceProvider: Provider&lt;out Service&gt;, jooqTransacterProvider: Provider&lt;JooqTransacter&gt;, clock: Clock) : HealthCheck</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/#functions","title":"Functions","text":"Name Summary status [jvm]open override fun status(): HealthStatus"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/-jooq-health-check/","title":"JooqHealthCheck - Misk","text":"<p>//misk-jooq/misk.jooq/JooqHealthCheck/JooqHealthCheck</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/-jooq-health-check/#jooqhealthcheck","title":"JooqHealthCheck","text":"<p>[jvm]\\ fun JooqHealthCheck(qualifier: KClass&lt;out Annotation&gt;, dataSourceProvider: Provider&lt;out Service&gt;, jooqTransacterProvider: Provider&lt;JooqTransacter&gt;, clock: Clock)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/status/","title":"status - Misk","text":"<p>//misk-jooq/misk.jooq/JooqHealthCheck/status</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/status/#status","title":"status","text":"<p>[jvm]\\ open override fun status(): HealthStatus</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/-companion/","title":"Companion - Misk","text":"<p>//misk-jooq/misk.jooq/JooqHealthCheck/Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/-companion/#properties","title":"Properties","text":"Name Summary CLOCK_SKEW_UNHEALTHY_THRESHOLD [jvm]val CLOCK_SKEW_UNHEALTHY_THRESHOLD: Duration CLOCK_SKEW_WARN_THRESHOLD [jvm]val CLOCK_SKEW_WARN_THRESHOLD: Duration log [jvm]val log: &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/-companion/-c-l-o-c-k_-s-k-e-w_-u-n-h-e-a-l-t-h-y_-t-h-r-e-s-h-o-l-d/","title":"CLOCK_SKEW_UNHEALTHY_THRESHOLD - Misk","text":"<p>//misk-jooq/misk.jooq/JooqHealthCheck/Companion/CLOCK_SKEW_UNHEALTHY_THRESHOLD</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/-companion/-c-l-o-c-k_-s-k-e-w_-u-n-h-e-a-l-t-h-y_-t-h-r-e-s-h-o-l-d/#clock_skew_unhealthy_threshold","title":"CLOCK_SKEW_UNHEALTHY_THRESHOLD","text":"<p>[jvm]\\ val CLOCK_SKEW_UNHEALTHY_THRESHOLD: Duration</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/-companion/-c-l-o-c-k_-s-k-e-w_-w-a-r-n_-t-h-r-e-s-h-o-l-d/","title":"CLOCK_SKEW_WARN_THRESHOLD - Misk","text":"<p>//misk-jooq/misk.jooq/JooqHealthCheck/Companion/CLOCK_SKEW_WARN_THRESHOLD</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/-companion/-c-l-o-c-k_-s-k-e-w_-w-a-r-n_-t-h-r-e-s-h-o-l-d/#clock_skew_warn_threshold","title":"CLOCK_SKEW_WARN_THRESHOLD","text":"<p>[jvm]\\ val CLOCK_SKEW_WARN_THRESHOLD: Duration</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/-companion/log/","title":"log - Misk","text":"<p>//misk-jooq/misk.jooq/JooqHealthCheck/Companion/log</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-health-check/-companion/log/#log","title":"log","text":"<p>[jvm]\\ val log: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-module/","title":"JooqModule - Misk","text":"<p>//misk-jooq/misk.jooq/JooqModule</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-module/#jooqmodule","title":"JooqModule","text":"<p>[jvm]\\ class JooqModule@JvmOverloadsconstructor(qualifier: KClass&lt;out Annotation&gt;, dataSourceClusterConfig: DataSourceClusterConfig, jooqCodeGenSchemaName: String, databasePool: DatabasePool, readerQualifier: KClass&lt;out Annotation&gt;?, jooqTimestampRecordListenerOptions: JooqTimestampRecordListenerOptions, installHealthChecks: Boolean, jooqConfigExtension: Configuration.() -&gt; Unit) : KAbstractModule</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-module/-jooq-module/","title":"JooqModule - Misk","text":"<p>//misk-jooq/misk.jooq/JooqModule/JooqModule</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-module/-jooq-module/#jooqmodule","title":"JooqModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun JooqModule(qualifier: KClass&lt;out Annotation&gt;, dataSourceClusterConfig: DataSourceClusterConfig, jooqCodeGenSchemaName: String, databasePool: DatabasePool = RealDatabasePool, readerQualifier: KClass&lt;out Annotation&gt;? = null, jooqTimestampRecordListenerOptions: JooqTimestampRecordListenerOptions = JooqTimestampRecordListenerOptions(install = false), installHealthChecks: Boolean = true, jooqConfigExtension: Configuration.() -&gt; Unit = {})</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/","title":"JooqSession - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/#jooqsession","title":"JooqSession","text":"<p>[jvm]\\ class JooqSession(ctx: DSLContext) : Session</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/#types","title":"Types","text":"Name Summary HookType [jvm]enum HookType : Enum&lt;JooqSession.HookType&gt;"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/#functions","title":"Functions","text":"Name Summary add [jvm]fun ConcurrentMap&lt;JooqSession.HookType, List&lt;() -&gt; Unit&gt;&gt;.add(hookType: JooqSession.HookType, work: () -&gt; Unit) component1 [jvm]operator fun component1(): DSLContextAllows for destructuring the JooqSession and writing simpler code like this transacter.transaction { (ctx) -&gt; \u2026 } executePostCommitHooks [jvm]fun executePostCommitHooks() executePreCommitHooks [jvm]fun executePreCommitHooks() executeSessionCloseHooks [jvm]fun executeSessionCloseHooks() onPostCommit [jvm]open override fun onPostCommit(work: () -&gt; Unit) onPreCommit [jvm]open override fun onPreCommit(work: () -&gt; Unit) onSessionClose [jvm]open override fun onSessionClose(work: () -&gt; Unit) useConnection [jvm]open override fun &lt;T&gt; useConnection(work: (Connection) -&gt; T): T"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/#properties","title":"Properties","text":"Name Summary ctx [jvm]val ctx: DSLContext"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-jooq-session/","title":"JooqSession - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/JooqSession</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-jooq-session/#jooqsession","title":"JooqSession","text":"<p>[jvm]\\ fun JooqSession(ctx: DSLContext)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/add/","title":"add - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/add</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/add/#add","title":"add","text":"<p>[jvm]\\ fun ConcurrentMap&lt;JooqSession.HookType, List&lt;() -&gt; Unit&gt;&gt;.add(hookType: JooqSession.HookType, work: () -&gt; Unit)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/component1/","title":"component1 - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/component1</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/component1/#component1","title":"component1","text":"<p>[jvm]\\ operator fun component1(): DSLContext</p> <p>Allows for destructuring the JooqSession and writing simpler code like this transacter.transaction { (ctx) -&gt; \u2026 }</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/ctx/","title":"ctx - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/ctx</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/ctx/#ctx","title":"ctx","text":"<p>[jvm]\\ val ctx: DSLContext</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/execute-post-commit-hooks/","title":"executePostCommitHooks - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/executePostCommitHooks</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/execute-post-commit-hooks/#executepostcommithooks","title":"executePostCommitHooks","text":"<p>[jvm]\\ fun executePostCommitHooks()</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/execute-pre-commit-hooks/","title":"executePreCommitHooks - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/executePreCommitHooks</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/execute-pre-commit-hooks/#executeprecommithooks","title":"executePreCommitHooks","text":"<p>[jvm]\\ fun executePreCommitHooks()</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/execute-session-close-hooks/","title":"executeSessionCloseHooks - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/executeSessionCloseHooks</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/execute-session-close-hooks/#executesessionclosehooks","title":"executeSessionCloseHooks","text":"<p>[jvm]\\ fun executeSessionCloseHooks()</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/on-post-commit/","title":"onPostCommit - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/onPostCommit</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/on-post-commit/#onpostcommit","title":"onPostCommit","text":"<p>[jvm]\\ open override fun onPostCommit(work: () -&gt; Unit)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/on-pre-commit/","title":"onPreCommit - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/onPreCommit</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/on-pre-commit/#onprecommit","title":"onPreCommit","text":"<p>[jvm]\\ open override fun onPreCommit(work: () -&gt; Unit)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/on-session-close/","title":"onSessionClose - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/onSessionClose</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/on-session-close/#onsessionclose","title":"onSessionClose","text":"<p>[jvm]\\ open override fun onSessionClose(work: () -&gt; Unit)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/use-connection/","title":"useConnection - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/useConnection</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/use-connection/#useconnection","title":"useConnection","text":"<p>[jvm]\\ open override fun &lt;T&gt; useConnection(work: (Connection) -&gt; T): T</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-hook-type/","title":"HookType - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/HookType</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-hook-type/#hooktype","title":"HookType","text":"<p>[jvm]\\ enum HookType : Enum&lt;JooqSession.HookType&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-hook-type/#entries","title":"Entries","text":"SESSION_CLOSE [jvm]SESSION_CLOSE() POST [jvm]POST() PRE [jvm]PRE()"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-hook-type/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-hook-type/-p-o-s-t/","title":"POST - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/HookType/POST</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-hook-type/-p-o-s-t/#post","title":"POST","text":"<p>[jvm]\\ POST()</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-hook-type/-p-o-s-t/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-hook-type/-p-r-e/","title":"PRE - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/HookType/PRE</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-hook-type/-p-r-e/#pre","title":"PRE","text":"<p>[jvm]\\ PRE()</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-hook-type/-p-r-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-hook-type/-s-e-s-s-i-o-n_-c-l-o-s-e/","title":"SESSION_CLOSE - Misk","text":"<p>//misk-jooq/misk.jooq/JooqSession/HookType/SESSION_CLOSE</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-hook-type/-s-e-s-s-i-o-n_-c-l-o-s-e/#session_close","title":"SESSION_CLOSE","text":"<p>[jvm]\\ SESSION_CLOSE()</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-session/-hook-type/-s-e-s-s-i-o-n_-c-l-o-s-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/","title":"JooqTransacter - Misk","text":"<p>//misk-jooq/misk.jooq/JooqTransacter</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/#jooqtransacter","title":"JooqTransacter","text":"<p>[jvm]\\ class JooqTransacter(dslContext: Lazy&lt;DSLContext&gt;)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion TransacterOptions [jvm]data class TransacterOptions@JvmOverloadsconstructor(maxAttempts: Int, maxRetryDelayMillis: Long)"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/#functions","title":"Functions","text":"Name Summary transaction [jvm]@JvmOverloadsfun &lt;RETURN_TYPE&gt; transaction(options: JooqTransacter.TransacterOptions = TransacterOptions(), callback: (jooqSession: JooqSession) -&gt; RETURN_TYPE): RETURN_TYPE"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-jooq-transacter/","title":"JooqTransacter - Misk","text":"<p>//misk-jooq/misk.jooq/JooqTransacter/JooqTransacter</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-jooq-transacter/#jooqtransacter","title":"JooqTransacter","text":"<p>[jvm]\\ fun JooqTransacter(dslContext: Lazy&lt;DSLContext&gt;)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/transaction/","title":"transaction - Misk","text":"<p>//misk-jooq/misk.jooq/JooqTransacter/transaction</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/transaction/#transaction","title":"transaction","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun &lt;RETURN_TYPE&gt; transaction(options: JooqTransacter.TransacterOptions = TransacterOptions(), callback: (jooqSession: JooqSession) -&gt; RETURN_TYPE): RETURN_TYPE</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-companion/","title":"Companion - Misk","text":"<p>//misk-jooq/misk.jooq/JooqTransacter/Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-companion/#properties","title":"Properties","text":"Name Summary noRetriesOptions [jvm]val noRetriesOptions: JooqTransacter.TransacterOptions"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-companion/no-retries-options/","title":"noRetriesOptions - Misk","text":"<p>//misk-jooq/misk.jooq/JooqTransacter/Companion/noRetriesOptions</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-companion/no-retries-options/#noretriesoptions","title":"noRetriesOptions","text":"<p>[jvm]\\ val noRetriesOptions: JooqTransacter.TransacterOptions</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/","title":"TransacterOptions - Misk","text":"<p>//misk-jooq/misk.jooq/JooqTransacter/TransacterOptions</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/#transacteroptions","title":"TransacterOptions","text":"<p>[jvm]\\ data class TransacterOptions@JvmOverloadsconstructor(maxAttempts: Int, maxRetryDelayMillis: Long)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/#properties","title":"Properties","text":"Name Summary maxAttempts [jvm]val maxAttempts: Int = 3 maxRetryDelayMillis [jvm]val maxRetryDelayMillis: Long = 500"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/-transacter-options/","title":"TransacterOptions - Misk","text":"<p>//misk-jooq/misk.jooq/JooqTransacter/TransacterOptions/TransacterOptions</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/-transacter-options/#transacteroptions","title":"TransacterOptions","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun TransacterOptions(maxAttempts: Int = 3, maxRetryDelayMillis: Long = 500)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/max-attempts/","title":"maxAttempts - Misk","text":"<p>//misk-jooq/misk.jooq/JooqTransacter/TransacterOptions/maxAttempts</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/max-attempts/#maxattempts","title":"maxAttempts","text":"<p>[jvm]\\ val maxAttempts: Int = 3</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/max-retry-delay-millis/","title":"maxRetryDelayMillis - Misk","text":"<p>//misk-jooq/misk.jooq/JooqTransacter/TransacterOptions/maxRetryDelayMillis</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/max-retry-delay-millis/#maxretrydelaymillis","title":"maxRetryDelayMillis","text":"<p>[jvm]\\ val maxRetryDelayMillis: Long = 500</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/","title":"Package misk.jooq.listeners - Misk","text":"<p>//misk-jooq/misk.jooq.listeners</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/#package-miskjooqlisteners","title":"Package misk.jooq.listeners","text":""},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/#types","title":"Types","text":"Name Summary AvoidUsingSelectStarException [jvm]class AvoidUsingSelectStarException(message: String) : RuntimeException AvoidUsingSelectStarListener [jvm]class AvoidUsingSelectStarListener : DefaultExecuteListener JooqSQLLogger [jvm]class JooqSQLLogger : DefaultExecuteListener JooqTimestampRecordListener [jvm]class JooqTimestampRecordListener(clock: Clock, createdAtColumnName: String, updatedAtColumnName: String) : DefaultRecordListenerA Record Listener that will automatically set the current timestamp for the createdAtColumnName during insertions. And the current timestamp to the updatedAtColumnName while updating a row JooqTimestampRecordListenerOptions [jvm]data class JooqTimestampRecordListenerOptions@JvmOverloadsconstructor(install: Boolean, createdAtColumnName: String, updatedAtColumnName: String)Use this class to configure the installation of the misk.jooq.listeners.JooqTimestampRecordListener You can use both or configure just one of the createdAtColumnName to be set to the current timestamp when inserting or updating it. If you leave the one you don\u2019t want set as an empty string the JooqTimestampRecordListener will ignore it."},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-exception/","title":"AvoidUsingSelectStarException - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/AvoidUsingSelectStarException</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-exception/#avoidusingselectstarexception","title":"AvoidUsingSelectStarException","text":"<p>[jvm]\\ class AvoidUsingSelectStarException(message: String) : RuntimeException</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-exception/-avoid-using-select-star-exception/","title":"AvoidUsingSelectStarException - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/AvoidUsingSelectStarException/AvoidUsingSelectStarException</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-exception/-avoid-using-select-star-exception/#avoidusingselectstarexception","title":"AvoidUsingSelectStarException","text":"<p>[jvm]\\ fun AvoidUsingSelectStarException(message: String)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-listener/","title":"AvoidUsingSelectStarListener - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/AvoidUsingSelectStarListener</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-listener/#avoidusingselectstarlistener","title":"AvoidUsingSelectStarListener","text":"<p>[jvm]\\ class AvoidUsingSelectStarListener : DefaultExecuteListener</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-listener/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-listener/#functions","title":"Functions","text":"Name Summary bindEnd [jvm]open fun bindEnd(p0: ExecuteContext) bindStart [jvm]open fun bindStart(p0: ExecuteContext) end [jvm]open fun end(p0: ExecuteContext) exception [jvm]open fun exception(p0: ExecuteContext) executeEnd [jvm]open fun executeEnd(p0: ExecuteContext) executeStart [jvm]open fun executeStart(p0: ExecuteContext) fetchEnd [jvm]open fun fetchEnd(p0: ExecuteContext) fetchStart [jvm]open fun fetchStart(p0: ExecuteContext) outEnd [jvm]open fun outEnd(p0: ExecuteContext) outStart [jvm]open fun outStart(p0: ExecuteContext) prepareEnd [jvm]open fun prepareEnd(p0: ExecuteContext) prepareStart [jvm]open fun prepareStart(p0: ExecuteContext) recordEnd [jvm]open fun recordEnd(p0: ExecuteContext) recordStart [jvm]open fun recordStart(p0: ExecuteContext) renderEnd [jvm]open override fun renderEnd(ctx: ExecuteContext?)This catches any query that has a select * from or select table.* from. We don\u2019t want to use any query that uses a select * in it, as jooq has a hard time converting the result set into a jooq table record. It captures the result set via indexes and not the column names. If you try to fetch the result set into a jooq record, jooq will expect the order in which the columns are returned in the query matches the order of in which the columns are declared in the jooq generated code. I suppose it does ResultSet.get(0), ResulSet.get(1) instead of doing ResultSet.get( renderStart [jvm]open fun renderStart(p0: ExecuteContext) resultEnd [jvm]open fun resultEnd(p0: ExecuteContext) resultStart [jvm]open fun resultStart(p0: ExecuteContext) start [jvm]open fun start(p0: ExecuteContext) warning [jvm]open fun warning(p0: ExecuteContext)"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-listener/-avoid-using-select-star-listener/","title":"AvoidUsingSelectStarListener - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/AvoidUsingSelectStarListener/AvoidUsingSelectStarListener</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-listener/-avoid-using-select-star-listener/#avoidusingselectstarlistener","title":"AvoidUsingSelectStarListener","text":"<p>[jvm]\\ fun AvoidUsingSelectStarListener()</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-listener/render-end/","title":"renderEnd - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/AvoidUsingSelectStarListener/renderEnd</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-listener/render-end/#renderend","title":"renderEnd","text":"<p>[jvm]\\ open override fun renderEnd(ctx: ExecuteContext?)</p> <p>This catches any query that has a select * from or select table.* from. We don\u2019t want to use any query that uses a select * in it, as jooq has a hard time converting the result set into a jooq table record. It captures the result set via indexes and not the column names. If you try to fetch the result set into a jooq record, jooq will expect the order in which the columns are returned in the query matches the order of in which the columns are declared in the jooq generated code. I suppose it does ResultSet.get(0), ResulSet.get(1) instead of doing ResultSet.get(</p> <p>If the databases in dev, staging and prod don\u2019t all have the same column ordering, then things start to fail.</p> <p>Either way from a code maintainability point of view it is best to avoid select * from and always specify the columns you need. If you need all the columns in a table 2 ways of doing that in jooq</p> <p>ctx.selectFrom(&lt;table name&gt;)\u2026</p> <p>If you are joining multiple tables and need the columns of only one table</p> <p>ctx.select(&lt;jooq gen table&gt;.fields().toList()).from(&lt;table&gt;.innerJoin....)</p> <p>DO NOT DO THIS:</p> <p>ctx.select(&lt;jooq gen table&gt;.asterisk()).from(&lt;table&gt;)\u2026</p> <p>This listener\u2019s purpose is to catch the above and prevent it from happening.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-listener/-companion/","title":"Companion - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/AvoidUsingSelectStarListener/Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-listener/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-listener/-companion/#properties","title":"Properties","text":"Name Summary selectStarFromRegex [jvm]val selectStarFromRegex: &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-listener/-companion/select-star-from-regex/","title":"selectStarFromRegex - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/AvoidUsingSelectStarListener/Companion/selectStarFromRegex</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-avoid-using-select-star-listener/-companion/select-star-from-regex/#selectstarfromregex","title":"selectStarFromRegex","text":"<p>[jvm]\\ val selectStarFromRegex: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/","title":"JooqSQLLogger - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqSQLLogger</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/#jooqsqllogger","title":"JooqSQLLogger","text":"<p>[jvm]\\ class JooqSQLLogger : DefaultExecuteListener</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/#functions","title":"Functions","text":"Name Summary bindEnd [jvm]open fun bindEnd(p0: ExecuteContext) bindStart [jvm]open fun bindStart(p0: ExecuteContext) end [jvm]open fun end(p0: ExecuteContext) exception [jvm]open override fun exception(ctx: ExecuteContext) executeEnd [jvm]open override fun executeEnd(ctx: ExecuteContext) executeStart [jvm]open fun executeStart(p0: ExecuteContext) fetchEnd [jvm]open fun fetchEnd(p0: ExecuteContext) fetchStart [jvm]open fun fetchStart(p0: ExecuteContext) outEnd [jvm]open override fun outEnd(ctx: ExecuteContext) outStart [jvm]open fun outStart(p0: ExecuteContext) prepareEnd [jvm]open fun prepareEnd(p0: ExecuteContext) prepareStart [jvm]open fun prepareStart(p0: ExecuteContext) recordEnd [jvm]open override fun recordEnd(ctx: ExecuteContext) recordStart [jvm]open fun recordStart(p0: ExecuteContext) renderEnd [jvm]open override fun renderEnd(ctx: ExecuteContext) renderStart [jvm]open fun renderStart(p0: ExecuteContext) resultEnd [jvm]open override fun resultEnd(ctx: ExecuteContext) resultStart [jvm]open fun resultStart(p0: ExecuteContext) start [jvm]open fun start(p0: ExecuteContext) warning [jvm]open fun warning(p0: ExecuteContext)"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/-jooq-s-q-l-logger/","title":"JooqSQLLogger - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqSQLLogger/JooqSQLLogger</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/-jooq-s-q-l-logger/#jooqsqllogger","title":"JooqSQLLogger","text":"<p>[jvm]\\ fun JooqSQLLogger()</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/exception/","title":"exception - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqSQLLogger/exception</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/exception/#exception","title":"exception","text":"<p>[jvm]\\ open override fun exception(ctx: ExecuteContext)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/execute-end/","title":"executeEnd - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqSQLLogger/executeEnd</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/execute-end/#executeend","title":"executeEnd","text":"<p>[jvm]\\ open override fun executeEnd(ctx: ExecuteContext)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/out-end/","title":"outEnd - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqSQLLogger/outEnd</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/out-end/#outend","title":"outEnd","text":"<p>[jvm]\\ open override fun outEnd(ctx: ExecuteContext)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/record-end/","title":"recordEnd - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqSQLLogger/recordEnd</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/record-end/#recordend","title":"recordEnd","text":"<p>[jvm]\\ open override fun recordEnd(ctx: ExecuteContext)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/render-end/","title":"renderEnd - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqSQLLogger/renderEnd</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/render-end/#renderend","title":"renderEnd","text":"<p>[jvm]\\ open override fun renderEnd(ctx: ExecuteContext)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/result-end/","title":"resultEnd - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqSQLLogger/resultEnd</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/result-end/#resultend","title":"resultEnd","text":"<p>[jvm]\\ open override fun resultEnd(ctx: ExecuteContext)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/-companion/","title":"Companion - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqSQLLogger/Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/-companion/#properties","title":"Properties","text":"Name Summary log [jvm]val log: &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/-companion/log/","title":"log - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqSQLLogger/Companion/log</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/-companion/log/#log","title":"log","text":"<p>[jvm]\\ val log: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/","title":"JooqTimestampRecordListener - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqTimestampRecordListener</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/#jooqtimestamprecordlistener","title":"JooqTimestampRecordListener","text":"<p>[jvm]\\ class JooqTimestampRecordListener(clock: Clock, createdAtColumnName: String, updatedAtColumnName: String) : DefaultRecordListener</p> <p>A Record Listener that will automatically set the current timestamp for the createdAtColumnName during insertions. And the current timestamp to the updatedAtColumnName while updating a row</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/#constructors","title":"Constructors","text":"JooqTimestampRecordListener [jvm]fun JooqTimestampRecordListener(clock: Clock, createdAtColumnName: String, updatedAtColumnName: String)"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/#functions","title":"Functions","text":"Name Summary deleteEnd [jvm]open fun deleteEnd(p0: RecordContext) deleteStart [jvm]open fun deleteStart(p0: RecordContext) exception [jvm]open fun exception(p0: RecordContext) insertEnd [jvm]open fun insertEnd(p0: RecordContext) insertStart [jvm]open override fun insertStart(ctx: RecordContext?) loadEnd [jvm]open fun loadEnd(p0: RecordContext) loadStart [jvm]open fun loadStart(p0: RecordContext) mergeEnd [jvm]open fun mergeEnd(p0: RecordContext) mergeStart [jvm]open fun mergeStart(p0: RecordContext) refreshEnd [jvm]open fun refreshEnd(p0: RecordContext) refreshStart [jvm]open fun refreshStart(p0: RecordContext) storeEnd [jvm]open fun storeEnd(p0: RecordContext) storeStart [jvm]open fun storeStart(p0: RecordContext) updateEnd [jvm]open fun updateEnd(p0: RecordContext) updateStart [jvm]open override fun updateStart(ctx: RecordContext?)"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/-jooq-timestamp-record-listener/","title":"JooqTimestampRecordListener - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqTimestampRecordListener/JooqTimestampRecordListener</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/-jooq-timestamp-record-listener/#jooqtimestamprecordlistener","title":"JooqTimestampRecordListener","text":"<p>[jvm]\\ fun JooqTimestampRecordListener(clock: Clock, createdAtColumnName: String, updatedAtColumnName: String)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/insert-start/","title":"insertStart - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqTimestampRecordListener/insertStart</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/insert-start/#insertstart","title":"insertStart","text":"<p>[jvm]\\ open override fun insertStart(ctx: RecordContext?)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/update-start/","title":"updateStart - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqTimestampRecordListener/updateStart</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/update-start/#updatestart","title":"updateStart","text":"<p>[jvm]\\ open override fun updateStart(ctx: RecordContext?)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/","title":"JooqTimestampRecordListenerOptions - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqTimestampRecordListenerOptions</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/#jooqtimestamprecordlisteneroptions","title":"JooqTimestampRecordListenerOptions","text":"<p>[jvm]\\ data class JooqTimestampRecordListenerOptions@JvmOverloadsconstructor(install: Boolean, createdAtColumnName: String, updatedAtColumnName: String)</p> <p>Use this class to configure the installation of the misk.jooq.listeners.JooqTimestampRecordListener You can use both or configure just one of the createdAtColumnName to be set to the current timestamp when inserting or updating it. If you leave the one you don\u2019t want set as an empty string the JooqTimestampRecordListener will ignore it.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/#constructors","title":"Constructors","text":"JooqTimestampRecordListenerOptions [jvm]@JvmOverloadsfun JooqTimestampRecordListenerOptions(install: Boolean, createdAtColumnName: String = \u201c\u201d, updatedAtColumnName: String = \u201c\u201d)"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/#properties","title":"Properties","text":"Name Summary createdAtColumnName [jvm]val createdAtColumnName: String install [jvm]val install: Boolean updatedAtColumnName [jvm]val updatedAtColumnName: String"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/-jooq-timestamp-record-listener-options/","title":"JooqTimestampRecordListenerOptions - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqTimestampRecordListenerOptions/JooqTimestampRecordListenerOptions</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/-jooq-timestamp-record-listener-options/#jooqtimestamprecordlisteneroptions","title":"JooqTimestampRecordListenerOptions","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun JooqTimestampRecordListenerOptions(install: Boolean, createdAtColumnName: String = \u201c\u201d, updatedAtColumnName: String = \u201c\u201d)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/created-at-column-name/","title":"createdAtColumnName - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqTimestampRecordListenerOptions/createdAtColumnName</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/created-at-column-name/#createdatcolumnname","title":"createdAtColumnName","text":"<p>[jvm]\\ val createdAtColumnName: String</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/install/","title":"install - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqTimestampRecordListenerOptions/install</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/install/#install","title":"install","text":"<p>[jvm]\\ val install: Boolean</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/updated-at-column-name/","title":"updatedAtColumnName - Misk","text":"<p>//misk-jooq/misk.jooq.listeners/JooqTimestampRecordListenerOptions/updatedAtColumnName</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/updated-at-column-name/#updatedatcolumnname","title":"updatedAtColumnName","text":"<p>[jvm]\\ val updatedAtColumnName: String</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/","title":"Package misk.jooq.testgen - Misk","text":"<p>//misk-jooq/misk.jooq.testgen</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/#package-miskjooqtestgen","title":"Package misk.jooq.testgen","text":""},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/#types","title":"Types","text":"Name Summary DefaultCatalog [jvm]open class DefaultCatalog : CatalogImplThis class is generated by jOOQ. Jooq [jvm]open class Jooq : SchemaImplThis class is generated by jOOQ."},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/","title":"DefaultCatalog - Misk","text":"<p>//misk-jooq/misk.jooq.testgen/DefaultCatalog</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/#defaultcatalog","title":"DefaultCatalog","text":"<p>[jvm]\\ open class DefaultCatalog : CatalogImpl</p> <p>This class is generated by jOOQ.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/#constructors","title":"Constructors","text":"DefaultCatalog [jvm]fun DefaultCatalog()"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/#functions","title":"Functions","text":"Name Summary $name [jvm]override fun $name(): Name accept [jvm]override fun accept(p0: Context&lt;*&gt;) clauses [jvm]override fun clauses(p0: Context&lt;*&gt;): Array&lt;Clause&gt; configuration [jvm]open fun configuration(): Configuration declaresCTE [jvm]open override fun declaresCTE(): Boolean declaresFields [jvm]open override fun declaresFields(): Boolean declaresTables [jvm]open override fun declaresTables(): Boolean declaresWindows [jvm]open override fun declaresWindows(): Boolean equals [jvm]open operator override fun equals(other: Any?): Boolean generatesCast [jvm]open override fun generatesCast(): Boolean getComment [jvm]override fun getComment(): String getCommentPart [jvm]override fun getCommentPart(): Comment getName [jvm]override fun getName(): String getQualifiedName [jvm]open override fun getQualifiedName(): Name getSchema [jvm]override fun getSchema(p0: String): Schema?override fun getSchema(p0: Name): Schema? getSchemas [jvm]open override fun getSchemas(): List&lt;Schema&gt; getUnqualifiedName [jvm]override fun getUnqualifiedName(): Name hashCode [jvm]open override fun hashCode(): Int rendersContent [jvm]open override fun rendersContent(p0: Context&lt;*&gt;): Boolean schemaStream [jvm]override fun schemaStream(): Stream&lt;Schema&gt; toString [jvm]open override fun toString(): String translate [jvm]fun translate(p0: String, p1: SQLException): DataAccessException"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/#properties","title":"Properties","text":"Name Summary JOOQ [jvm]val JOOQ: JooqThe schema <code>jooq</code>."},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/-default-catalog/","title":"DefaultCatalog - Misk","text":"<p>//misk-jooq/misk.jooq.testgen/DefaultCatalog/DefaultCatalog</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/-default-catalog/#defaultcatalog","title":"DefaultCatalog","text":"<p>[jvm]\\ fun DefaultCatalog()</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/-j-o-o-q/","title":"JOOQ - Misk","text":"<p>//misk-jooq/misk.jooq.testgen/DefaultCatalog/JOOQ</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/-j-o-o-q/#jooq","title":"JOOQ","text":"<p>[jvm]\\ val JOOQ: Jooq</p> <p>The schema <code>jooq</code>.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/get-schemas/","title":"getSchemas - Misk","text":"<p>//misk-jooq/misk.jooq.testgen/DefaultCatalog/getSchemas</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/get-schemas/#getschemas","title":"getSchemas","text":"<p>[jvm]\\ open override fun getSchemas(): List&lt;Schema&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/-companion/","title":"Companion - Misk","text":"<p>//misk-jooq/misk.jooq.testgen/DefaultCatalog/Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/-companion/#properties","title":"Properties","text":"Name Summary DEFAULT_CATALOG [jvm]val DEFAULT_CATALOG: DefaultCatalogThe reference instance of <code>DEFAULT_CATALOG</code>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/-companion/-d-e-f-a-u-l-t_-c-a-t-a-l-o-g/","title":"DEFAULT_CATALOG - Misk","text":"<p>//misk-jooq/misk.jooq.testgen/DefaultCatalog/Companion/DEFAULT_CATALOG</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-default-catalog/-companion/-d-e-f-a-u-l-t_-c-a-t-a-l-o-g/#default_catalog","title":"DEFAULT_CATALOG","text":"<p>[jvm]\\ val DEFAULT_CATALOG: DefaultCatalog</p> <p>The reference instance of <code>DEFAULT_CATALOG</code></p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/","title":"Jooq - Misk","text":"<p>//misk-jooq/misk.jooq.testgen/Jooq</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/#jooq","title":"Jooq","text":"<p>[jvm]\\ open class Jooq : SchemaImpl</p> <p>This class is generated by jOOQ.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/#constructors","title":"Constructors","text":"Jooq [jvm]fun Jooq()"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/#functions","title":"Functions","text":"Name Summary $name [jvm]override fun $name(): Name accept [jvm]override fun accept(p0: Context&lt;*&gt;) clauses [jvm]override fun clauses(p0: Context&lt;*&gt;): Array&lt;Clause&gt; configuration [jvm]open fun configuration(): Configuration declaresCTE [jvm]open override fun declaresCTE(): Boolean declaresFields [jvm]open override fun declaresFields(): Boolean declaresTables [jvm]open override fun declaresTables(): Boolean declaresWindows [jvm]open override fun declaresWindows(): Boolean domainStream [jvm]override fun domainStream(): Stream&lt;Domain&lt;*&gt;&gt; equals [jvm]open operator override fun equals(other: Any?): Boolean foreignKeyStream [jvm]override fun foreignKeyStream(): Stream&lt;ForeignKey&lt;*, *&gt;&gt; generatesCast [jvm]open override fun generatesCast(): Boolean getCatalog [jvm]open override fun getCatalog(): Catalog getComment [jvm]override fun getComment(): String getCommentPart [jvm]override fun getCommentPart(): Comment getDomain [jvm]override fun getDomain(p0: String): Domain&lt;&gt;?override fun getDomain(p0: Name): Domain&lt;&gt;? getDomains [jvm]open override fun getDomains(): MutableList&lt;Domain&lt;*&gt;&gt; getForeignKeys [jvm]open override fun getForeignKeys(): MutableList&lt;ForeignKey&lt;, *&gt;&gt;override fun getForeignKeys(p0: String): MutableList&lt;ForeignKey&lt;, &gt;&gt;override fun getForeignKeys(p0: Name): MutableList&lt;ForeignKey&lt;, *&gt;&gt; getIndexes [jvm]open override fun getIndexes(): MutableList&lt;Index&gt;override fun getIndexes(p0: String): MutableList&lt;Index&gt;override fun getIndexes(p0: Name): MutableList&lt;Index&gt; getName [jvm]override fun getName(): String getPrimaryKeys [jvm]open override fun getPrimaryKeys(): MutableList&lt;UniqueKey&lt;&gt;&gt;override fun getPrimaryKeys(p0: String): MutableList&lt;UniqueKey&lt;&gt;&gt;override fun getPrimaryKeys(p0: Name): MutableList&lt;UniqueKey&lt;*&gt;&gt; getQualifiedName [jvm]open override fun getQualifiedName(): Name getSequence [jvm]override fun getSequence(p0: String): Sequence&lt;&gt;?override fun getSequence(p0: Name): Sequence&lt;&gt;? getSequences [jvm]open override fun getSequences(): MutableList&lt;Sequence&lt;*&gt;&gt; getTable [jvm]override fun getTable(p0: String): Table&lt;&gt;?override fun getTable(p0: Name): Table&lt;&gt;? getTables [jvm]open override fun getTables(): List&lt;Table&lt;*&gt;&gt; getUDT [jvm]override fun getUDT(p0: String): UDT&lt;&gt;?override fun getUDT(p0: Name): UDT&lt;&gt;? getUDTs [jvm]open override fun getUDTs(): MutableList&lt;UDT&lt;*&gt;&gt; getUniqueKeys [jvm]open override fun getUniqueKeys(): MutableList&lt;UniqueKey&lt;&gt;&gt;override fun getUniqueKeys(p0: String): MutableList&lt;UniqueKey&lt;&gt;&gt;override fun getUniqueKeys(p0: Name): MutableList&lt;UniqueKey&lt;*&gt;&gt; getUnqualifiedName [jvm]override fun getUnqualifiedName(): Name hashCode [jvm]open override fun hashCode(): Int indexStream [jvm]override fun indexStream(): Stream&lt;Index&gt; primaryKeyStream [jvm]override fun primaryKeyStream(): Stream&lt;UniqueKey&lt;*&gt;&gt; rendersContent [jvm]open override fun rendersContent(p0: Context&lt;*&gt;): Boolean sequenceStream [jvm]override fun sequenceStream(): Stream&lt;Sequence&lt;*&gt;&gt; tableStream [jvm]override fun tableStream(): Stream&lt;Table&lt;*&gt;&gt; toString [jvm]open override fun toString(): String translate [jvm]fun translate(p0: String, p1: SQLException): DataAccessException udtStream [jvm]override fun udtStream(): Stream&lt;UDT&lt;*&gt;&gt; uniqueKeyStream [jvm]override fun uniqueKeyStream(): Stream&lt;UniqueKey&lt;*&gt;&gt;"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/#properties","title":"Properties","text":"Name Summary MOVIE [jvm]val MOVIE: MovieThe table <code>jooq.movie</code>."},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/-jooq/","title":"Jooq - Misk","text":"<p>//misk-jooq/misk.jooq.testgen/Jooq/Jooq</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/-jooq/#jooq","title":"Jooq","text":"<p>[jvm]\\ fun Jooq()</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/-m-o-v-i-e/","title":"MOVIE - Misk","text":"<p>//misk-jooq/misk.jooq.testgen/Jooq/MOVIE</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/-m-o-v-i-e/#movie","title":"MOVIE","text":"<p>[jvm]\\ val MOVIE: Movie</p> <p>The table <code>jooq.movie</code>.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/get-catalog/","title":"getCatalog - Misk","text":"<p>//misk-jooq/misk.jooq.testgen/Jooq/getCatalog</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/get-catalog/#getcatalog","title":"getCatalog","text":"<p>[jvm]\\ open override fun getCatalog(): Catalog</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/get-tables/","title":"getTables - Misk","text":"<p>//misk-jooq/misk.jooq.testgen/Jooq/getTables</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/get-tables/#gettables","title":"getTables","text":"<p>[jvm]\\ open override fun getTables(): List&lt;Table&lt;*&gt;&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/-companion/","title":"Companion - Misk","text":"<p>//misk-jooq/misk.jooq.testgen/Jooq/Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/-companion/#properties","title":"Properties","text":"Name Summary JOOQ [jvm]val JOOQ: JooqThe reference instance of <code>jooq</code>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/-companion/-j-o-o-q/","title":"JOOQ - Misk","text":"<p>//misk-jooq/misk.jooq.testgen/Jooq/Companion/JOOQ</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen/-jooq/-companion/-j-o-o-q/#jooq","title":"JOOQ","text":"<p>[jvm]\\ val JOOQ: Jooq</p> <p>The reference instance of <code>jooq</code></p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.keys/","title":"Package misk.jooq.testgen.keys - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.keys</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.keys/#package-miskjooqtestgenkeys","title":"Package misk.jooq.testgen.keys","text":""},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.keys/#properties","title":"Properties","text":"Name Summary KEY_MOVIE_PRIMARY [jvm]val KEY_MOVIE_PRIMARY: UniqueKey&lt;MovieRecord&gt;"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.keys/-k-e-y_-m-o-v-i-e_-p-r-i-m-a-r-y/","title":"KEY_MOVIE_PRIMARY - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.keys/KEY_MOVIE_PRIMARY</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.keys/-k-e-y_-m-o-v-i-e_-p-r-i-m-a-r-y/#key_movie_primary","title":"KEY_MOVIE_PRIMARY","text":"<p>[jvm]\\ val KEY_MOVIE_PRIMARY: UniqueKey&lt;MovieRecord&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/","title":"Package misk.jooq.testgen.tables - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/#package-miskjooqtestgentables","title":"Package misk.jooq.testgen.tables","text":""},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/#types","title":"Types","text":"Name Summary Movie [jvm]open class Movie(alias: Name, child: Table&lt;out Record&gt;?, path: ForeignKey&lt;out Record, MovieRecord&gt;?, aliased: Table&lt;MovieRecord&gt;?, parameters: Array&lt;Field&lt;*&gt;?&gt;?) : TableImpl&lt;MovieRecord&gt; This class is generated by jOOQ."},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/","title":"Movie - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/#movie","title":"Movie","text":"<p>[jvm]\\ open class Movie(alias: Name, child: Table&lt;out Record&gt;?, path: ForeignKey&lt;out Record, MovieRecord&gt;?, aliased: Table&lt;MovieRecord&gt;?, parameters: Array&lt;Field&lt;*&gt;?&gt;?) : TableImpl&lt;MovieRecord&gt; </p> <p>This class is generated by jOOQ.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/#constructors","title":"Constructors","text":"Movie [jvm]fun Movie(alias: String)Create an aliased <code>jooq.movie</code> table reference Movie [jvm]fun Movie(alias: Name)Create an aliased <code>jooq.movie</code> table reference Movie [jvm]fun Movie()Create a <code>jooq.movie</code> table reference Movie [jvm]fun Movie(child: Table&lt;out Record&gt;, key: ForeignKey&lt;out Record, MovieRecord&gt;) Movie [jvm]fun Movie(alias: Name, child: Table&lt;out Record&gt;?, path: ForeignKey&lt;out Record, MovieRecord&gt;?, aliased: Table&lt;MovieRecord&gt;?, parameters: Array&lt;Field&lt;*&gt;?&gt;?)"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/#functions","title":"Functions","text":"Name Summary $alias [jvm]open override fun $alias(): Name? $aliased [jvm]open override fun $aliased(): Table&lt;MovieRecord&gt; $dataType [jvm]override fun $dataType(): DataType&lt;MovieRecord&gt; $name [jvm]override fun $name(): Name $schema [jvm]override fun $schema(): Schema? accept [jvm]override fun accept(p0: Context&lt;*&gt;) aliased [jvm]@Internalopen fun aliased(): Boolean as [jvm]open override fun as(alias: String): Movieopen override fun as(alias: Name): Movieoverride fun as(p0: Field&lt;&gt;): SelectField&lt;MovieRecord&gt;open override fun as(p0: Table&lt;&gt;): Table&lt;MovieRecord&gt;override fun as(p0: String, p1: BiFunction&lt;in Field&lt;&gt;, in Int, out String&gt;): Table&lt;MovieRecord&gt;override fun as(p0: String, p1: Function&lt;in Field&lt;&gt;, out String&gt;): Table&lt;MovieRecord&gt;override fun as(p0: String, vararg p1: String): Table&lt;MovieRecord&gt;override fun as(p0: String, p1: MutableCollection&lt;out String&gt;): Table&lt;MovieRecord&gt;override fun as(p0: Name, p1: BiFunction&lt;in Field&lt;&gt;, in Int, out Name&gt;): Table&lt;MovieRecord&gt;override fun as(p0: Name, p1: Function&lt;in Field&lt;&gt;, out Name&gt;): Table&lt;MovieRecord&gt;override fun as(p0: Name, p1: MutableCollection&lt;out Name&gt;): Table&lt;MovieRecord&gt;override fun as(p0: Table&lt;&gt;, p1: BiFunction&lt;in Field&lt;&gt;, in Int, out Field&lt;&gt;&gt;): Table&lt;MovieRecord&gt;override fun as(p0: Table&lt;&gt;, p1: Function&lt;in Field&lt;&gt;, out Field&lt;&gt;&gt;): Table&lt;MovieRecord&gt;override fun as(p0: Table&lt;&gt;, vararg p1: Field&lt;&gt;): Table&lt;MovieRecord&gt;override fun as(p0: Table&lt;&gt;, p1: MutableCollection&lt;out Field&lt;&gt;&gt;): Table&lt;MovieRecord&gt;open override fun as(p0: Name, vararg p1: Name): Table&lt;MovieRecord&gt; asMultiset [jvm]override fun asMultiset(): Field&lt;Result&lt;MovieRecord&gt;&gt;override fun asMultiset(p0: String): Field&lt;Result&lt;MovieRecord&gt;&gt;override fun asMultiset(p0: Field&lt;*&gt;): Field&lt;Result&lt;MovieRecord&gt;&gt;override fun asMultiset(p0: Name): Field&lt;Result&lt;MovieRecord&gt;&gt; asTable [jvm]override fun asTable(): Table&lt;MovieRecord&gt;override fun asTable(p0: String): Table&lt;MovieRecord&gt;override fun asTable(p0: Name): Table&lt;MovieRecord&gt;override fun asTable(p0: Table&lt;&gt;): Table&lt;MovieRecord&gt;override fun asTable(p0: String, p1: BiFunction&lt;in Field&lt;&gt;, in Int, out String&gt;): Table&lt;MovieRecord&gt;override fun asTable(p0: String, p1: Function&lt;in Field&lt;&gt;, out String&gt;): Table&lt;MovieRecord&gt;override fun asTable(p0: String, vararg p1: String): Table&lt;MovieRecord&gt;override fun asTable(p0: String, p1: MutableCollection&lt;out String&gt;): Table&lt;MovieRecord&gt;override fun asTable(p0: Name, vararg p1: Name): Table&lt;MovieRecord&gt;override fun asTable(p0: Name, p1: MutableCollection&lt;out Name&gt;): Table&lt;MovieRecord&gt;override fun asTable(p0: Table&lt;&gt;, vararg p1: Field&lt;&gt;): Table&lt;MovieRecord&gt;override fun asTable(p0: Table&lt;&gt;, p1: MutableCollection&lt;out Field&lt;*&gt;&gt;): Table&lt;MovieRecord&gt; asterisk [jvm]override fun asterisk(): QualifiedAsterisk clauses [jvm]override fun clauses(p0: Context&lt;*&gt;): Array&lt;Clause&gt; configuration [jvm]open fun configuration(): Configuration convert [jvm]override fun &lt;U : Any&gt; convert(p0: Binding&lt;MovieRecord, U&gt;): SelectField&lt;U&gt;override fun &lt;U : Any&gt; convert(p0: Converter&lt;MovieRecord, U&gt;): SelectField&lt;U&gt;override fun &lt;U : Any&gt; convert(p0: Class&lt;U&gt;, p1: Function&lt;in MovieRecord, out U&gt;, p2: Function&lt;in U, out MovieRecord&gt;): SelectField&lt;U&gt; convertFrom [jvm]override fun &lt;U : Any&gt; convertFrom(p0: Function&lt;in MovieRecord, out U&gt;): SelectField&lt;U&gt;override fun &lt;U : Any&gt; convertFrom(p0: Class&lt;U&gt;, p1: Function&lt;in MovieRecord, out U&gt;): SelectField&lt;U&gt; convertTo [jvm]override fun &lt;U : Any&gt; convertTo(p0: Function&lt;in U, out MovieRecord&gt;): SelectField&lt;U&gt;override fun &lt;U : Any&gt; convertTo(p0: Class&lt;U&gt;, p1: Function&lt;in U, out MovieRecord&gt;): SelectField&lt;U&gt; createField [jvm]fun &lt;T : Any&gt; createField(p0: Name, p1: DataType&lt;T&gt;): TableField&lt;MovieRecord, T&gt;fun &lt;T : Any&gt; createField(p0: Name, p1: DataType&lt;T&gt;, p2: String): TableField&lt;MovieRecord, T&gt;fun &lt;T : Any, U : Any&gt; createField(p0: Name, p1: DataType&lt;T&gt;, p2: String, p3: Binding&lt;T, U&gt;): TableField&lt;MovieRecord, U&gt;fun &lt;T : Any, U : Any&gt; createField(p0: Name, p1: DataType&lt;T&gt;, p2: String, p3: Converter&lt;T, U&gt;): TableField&lt;MovieRecord, U&gt;fun &lt;T : Any, X : Any, U : Any&gt; createField(p0: Name, p1: DataType&lt;T&gt;, p2: String, p3: Converter&lt;X, U&gt;, p4: Binding&lt;T, X&gt;): TableField&lt;MovieRecord, U&gt; createField0 [jvm]fun &lt;TR : Table&lt;MovieRecord&gt;, T : Any&gt; createField0(p0: Name, p1: DataType&lt;T&gt;, p2: TR, p3: String, p4: Generator&lt;MovieRecord, TR, T&gt;): TableField&lt;MovieRecord, T&gt;fun &lt;TR : Table&lt;MovieRecord&gt;, T : Any, U : Any&gt; createField0(p0: Name, p1: DataType&lt;T&gt;, p2: TR, p3: String, p4: Binding&lt;T, U&gt;, p5: Generator&lt;MovieRecord, TR, U&gt;): TableField&lt;MovieRecord, U&gt;fun &lt;TR : Table&lt;MovieRecord&gt;, T : Any, U : Any&gt; createField0(p0: Name, p1: DataType&lt;T&gt;, p2: TR, p3: String, p4: Converter&lt;T, U&gt;, p5: Generator&lt;MovieRecord, TR, U&gt;): TableField&lt;MovieRecord, U&gt;fun &lt;TR : Table&lt;MovieRecord&gt;, T : Any, X : Any, U : Any&gt; createField0(p0: Name, p1: DataType&lt;T&gt;, p2: TR, p3: String, p4: Converter&lt;X, U&gt;, p5: Binding&lt;T, X&gt;, p6: Generator&lt;MovieRecord, TR, U&gt;): TableField&lt;MovieRecord, U&gt; crossApply [jvm]override fun crossApply(p0: String): Table&lt;Record&gt;override fun crossApply(p0: Name): Table&lt;Record&gt;override fun crossApply(p0: SQL): Table&lt;Record&gt;override fun crossApply(p0: TableLike&lt;*&gt;): Table&lt;Record&gt;override fun crossApply(p0: String, vararg p1: Any): Table&lt;Record&gt;override fun crossApply(p0: String, vararg p1: QueryPart): Table&lt;Record&gt; crossJoin [jvm]override fun crossJoin(p0: String): Table&lt;Record&gt;override fun crossJoin(p0: Name): Table&lt;Record&gt;override fun crossJoin(p0: SQL): Table&lt;Record&gt;override fun crossJoin(p0: TableLike&lt;*&gt;): Table&lt;Record&gt;override fun crossJoin(p0: String, vararg p1: Any): Table&lt;Record&gt;override fun crossJoin(p0: String, vararg p1: QueryPart): Table&lt;Record&gt; dataType [jvm]@Nullableabstract fun dataType(p0: Int): @NullableDataType&lt;&gt;?@Nullableabstract fun dataType(p0: String): @NullableDataType&lt;&gt;?@Nullableabstract fun dataType(p0: Name): @NullableDataType&lt;*&gt;? dataTypes [jvm]@NotNullabstract fun dataTypes(): @NotNullArray&lt;@NotNullDataType&lt;*&gt;&gt; declaresCTE [jvm]open override fun declaresCTE(): Boolean declaresFields [jvm]open override fun declaresFields(): Boolean declaresTables [jvm]open override fun declaresTables(): Boolean declaresWindows [jvm]open override fun declaresWindows(): Boolean divideBy [jvm]override fun divideBy(p0: Table&lt;*&gt;): DivideByOnStep eq [jvm]override fun eq(p0: Table&lt;MovieRecord&gt;): Condition equal [jvm]override fun equal(p0: Table&lt;MovieRecord&gt;): Condition equals [jvm]open operator override fun equals(other: Any?): Boolean field [jvm]open override fun field(p0: String): Field&lt;&gt;?open override fun field(p0: Name): Field&lt;&gt;?@Nullableabstract fun field(p0: Int): @NullableField&lt;*&gt;?@Nullableabstract fun &lt;T : Any&gt; field(p0: Field&lt;T&gt;): @NullableField&lt;T&gt;?open override fun &lt;T : Any&gt; field(p0: String, p1: Class&lt;T&gt;): Field&lt;T&gt;?open override fun &lt;T : Any&gt; field(p0: String, p1: DataType&lt;T&gt;): Field&lt;T&gt;?open override fun &lt;T : Any&gt; field(p0: Name, p1: Class&lt;T&gt;): Field&lt;T&gt;?open override fun &lt;T : Any&gt; field(p0: Name, p1: DataType&lt;T&gt;): Field&lt;T&gt;?@Nullableabstract fun &lt;T : Any&gt; field(p0: Int, p1: Class&lt;T&gt;): @NullableField&lt;T&gt;?@Nullableabstract fun &lt;T : Any&gt; field(p0: Int, p1: DataType&lt;T&gt;): @NullableField&lt;T&gt;? fields [jvm]override fun fields(): Array&lt;Field&lt;&gt;&gt;@Nullableabstract fun fields(vararg p0: String): @NotNullArray&lt;@NullableField&lt;&gt;&gt;?@Nullableabstract fun fields(vararg p0: Field&lt;&gt;): @NotNullArray&lt;@NullableField&lt;&gt;&gt;?@Nullableabstract fun fields(vararg p0: Name): @NotNullArray&lt;@NullableField&lt;&gt;&gt;?@Nullableabstract fun fields(vararg p0: Int): @NotNullArray&lt;@NullableField&lt;&gt;&gt;? fields0 [jvm]override fun fields0(): FieldsImpl&lt;MovieRecord&gt; fieldsRow [jvm]open override fun fieldsRow(): Row6&lt;Long?, String?, String?, Int?, LocalDateTime?, LocalDateTime?&gt; fieldStream [jvm]@NotNullabstract fun fieldStream(): @NotNullStream&lt;Field&lt;*&gt;&gt; forceIndex [jvm]override fun forceIndex(vararg p0: String): Table&lt;MovieRecord&gt; forceIndexForGroupBy [jvm]override fun forceIndexForGroupBy(vararg p0: String): Table&lt;MovieRecord&gt; forceIndexForJoin [jvm]override fun forceIndexForJoin(vararg p0: String): Table&lt;MovieRecord&gt; forceIndexForOrderBy [jvm]override fun forceIndexForOrderBy(vararg p0: String): Table&lt;MovieRecord&gt; from [jvm]override fun from(p0: Record): MovieRecord fullJoin [jvm]override fun fullJoin(p0: String): TablePartitionByStep&lt;Record&gt;override fun fullJoin(p0: Name): TablePartitionByStep&lt;Record&gt;override fun fullJoin(p0: SQL): TablePartitionByStep&lt;Record&gt;override fun fullJoin(p0: TableLike&lt;*&gt;): TablePartitionByStep&lt;Record&gt;override fun fullJoin(p0: String, vararg p1: Any): TablePartitionByStep&lt;Record&gt;override fun fullJoin(p0: String, vararg p1: QueryPart): TablePartitionByStep&lt;Record&gt; fullOuterJoin [jvm]override fun fullOuterJoin(p0: String): TablePartitionByStep&lt;Record&gt;override fun fullOuterJoin(p0: Name): TablePartitionByStep&lt;Record&gt;override fun fullOuterJoin(p0: SQL): TablePartitionByStep&lt;Record&gt;override fun fullOuterJoin(p0: TableLike&lt;*&gt;): TablePartitionByStep&lt;Record&gt;override fun fullOuterJoin(p0: String, vararg p1: Any): TablePartitionByStep&lt;Record&gt;override fun fullOuterJoin(p0: String, vararg p1: QueryPart): TablePartitionByStep&lt;Record&gt; generatesCast [jvm]open override fun generatesCast(): Boolean getAliasedTable [jvm]@Nullableopen fun getAliasedTable(): @NullableTable&lt;MovieRecord&gt;? getBinding [jvm]override fun getBinding(): Binding&lt;*, MovieRecord&gt; getCatalog [jvm]override fun getCatalog(): Catalog? getChecks [jvm]open override fun getChecks(): MutableList&lt;Check&lt;MovieRecord&gt;&gt; getComment [jvm]override fun getComment(): String getCommentPart [jvm]override fun getCommentPart(): Comment getConverter [jvm]override fun getConverter(): ContextConverter&lt;*, MovieRecord&gt; getDataType [jvm]override fun getDataType(): DataType&lt;MovieRecord&gt;override fun getDataType(p0: Configuration): DataType&lt;MovieRecord&gt; getIdentity [jvm]open override fun getIdentity(): Identity&lt;MovieRecord, Long?&gt; getIndexes [jvm]open override fun getIndexes(): MutableList&lt;Index&gt; getKeys [jvm]open override fun getKeys(): List&lt;UniqueKey&lt;MovieRecord&gt;&gt; getName [jvm]override fun getName(): String getOptions [jvm]override fun getOptions(): TableOptions getPackage [jvm]override fun getPackage(): Package? getPrimaryKey [jvm]open override fun getPrimaryKey(): UniqueKey&lt;MovieRecord&gt; getQualifiedName [jvm]open override fun getQualifiedName(): Name getRecordTimestamp [jvm]open override fun getRecordTimestamp(): TableField&lt;MovieRecord, *&gt;? getRecordType [jvm]open override fun getRecordType(): Class&lt;MovieRecord&gt;The class holding records for this type getRecordVersion [jvm]open override fun getRecordVersion(): TableField&lt;MovieRecord, Int?&gt; getReferences [jvm]open override fun getReferences(): MutableList&lt;ForeignKey&lt;MovieRecord, *&gt;&gt; getReferencesFrom [jvm]override fun &lt;O : Record&gt; getReferencesFrom(p0: Table&lt;O&gt;): MutableList&lt;ForeignKey&lt;O, MovieRecord&gt;&gt; getReferencesTo [jvm]override fun &lt;O : Record&gt; getReferencesTo(p0: Table&lt;O&gt;): MutableList&lt;ForeignKey&lt;MovieRecord, O&gt;&gt; getSchema [jvm]open override fun getSchema(): Schema getTableType [jvm]override fun getTableType(): TableOptions.TableType getType [jvm]override fun getType(): Class&lt;MovieRecord&gt; getUniqueKeys [jvm]open override fun getUniqueKeys(): MutableList&lt;UniqueKey&lt;MovieRecord&gt;&gt; getUnqualifiedName [jvm]override fun getUnqualifiedName(): Name hashCode [jvm]open override fun hashCode(): Int ignoreIndex [jvm]override fun ignoreIndex(vararg p0: String): Table&lt;MovieRecord&gt; ignoreIndexForGroupBy [jvm]override fun ignoreIndexForGroupBy(vararg p0: String): Table&lt;MovieRecord&gt; ignoreIndexForJoin [jvm]override fun ignoreIndexForJoin(vararg p0: String): Table&lt;MovieRecord&gt; ignoreIndexForOrderBy [jvm]override fun ignoreIndexForOrderBy(vararg p0: String): Table&lt;MovieRecord&gt; indexOf [jvm]abstract fun indexOf(p0: String): Intabstract fun indexOf(p0: Field&lt;*&gt;): Intabstract fun indexOf(p0: Name): Int innerJoin [jvm]override fun innerJoin(p0: String): TableOnStep&lt;Record&gt;override fun innerJoin(p0: Name): TableOnStep&lt;Record&gt;override fun innerJoin(p0: SQL): TableOnStep&lt;Record&gt;override fun innerJoin(p0: TableLike&lt;*&gt;): TableOnStep&lt;Record&gt;override fun innerJoin(p0: String, vararg p1: Any): TableOnStep&lt;Record&gt;override fun innerJoin(p0: String, vararg p1: QueryPart): TableOnStep&lt;Record&gt; isSimple [jvm]@Internaloverride fun isSimple(p0: Context&lt;*&gt;): Boolean isSynthetic [jvm]@Internalopen fun isSynthetic(): Boolean join [jvm]override fun join(p0: String): TableOnStep&lt;Record&gt;override fun join(p0: Name): TableOnStep&lt;Record&gt;override fun join(p0: SQL): TableOnStep&lt;Record&gt;override fun join(p0: TableLike&lt;&gt;): TableOnStep&lt;Record&gt;override fun join(p0: String, vararg p1: Any): TableOnStep&lt;Record&gt;override fun join(p0: String, vararg p1: QueryPart): TableOnStep&lt;Record&gt;override fun join(p0: TableLike&lt;&gt;, p1: JoinType): JoinTable&lt;*&gt; leftAntiJoin [jvm]override fun leftAntiJoin(p0: TableLike&lt;*&gt;): TableOnStep&lt;MovieRecord&gt; leftJoin [jvm]override fun leftJoin(p0: String): TablePartitionByStep&lt;Record&gt;override fun leftJoin(p0: Name): TablePartitionByStep&lt;Record&gt;override fun leftJoin(p0: SQL): TablePartitionByStep&lt;Record&gt;override fun leftJoin(p0: TableLike&lt;*&gt;): TablePartitionByStep&lt;Record&gt;override fun leftJoin(p0: String, vararg p1: Any): TablePartitionByStep&lt;Record&gt;override fun leftJoin(p0: String, vararg p1: QueryPart): TablePartitionByStep&lt;Record&gt; leftOuterJoin [jvm]override fun leftOuterJoin(p0: String): TablePartitionByStep&lt;Record&gt;override fun leftOuterJoin(p0: Name): TablePartitionByStep&lt;Record&gt;override fun leftOuterJoin(p0: SQL): TablePartitionByStep&lt;Record&gt;override fun leftOuterJoin(p0: TableLike&lt;*&gt;): TablePartitionByStep&lt;Record&gt;override fun leftOuterJoin(p0: String, vararg p1: Any): TablePartitionByStep&lt;Record&gt;override fun leftOuterJoin(p0: String, vararg p1: QueryPart): TablePartitionByStep&lt;Record&gt; leftSemiJoin [jvm]override fun leftSemiJoin(p0: TableLike&lt;*&gt;): TableOnStep&lt;MovieRecord&gt; naturalFullOuterJoin [jvm]override fun naturalFullOuterJoin(p0: String): Table&lt;Record&gt;override fun naturalFullOuterJoin(p0: Name): Table&lt;Record&gt;override fun naturalFullOuterJoin(p0: SQL): Table&lt;Record&gt;override fun naturalFullOuterJoin(p0: TableLike&lt;*&gt;): Table&lt;Record&gt;override fun naturalFullOuterJoin(p0: String, vararg p1: Any): Table&lt;Record&gt;override fun naturalFullOuterJoin(p0: String, vararg p1: QueryPart): Table&lt;Record&gt; naturalJoin [jvm]override fun naturalJoin(p0: String): Table&lt;Record&gt;override fun naturalJoin(p0: Name): Table&lt;Record&gt;override fun naturalJoin(p0: SQL): Table&lt;Record&gt;override fun naturalJoin(p0: TableLike&lt;*&gt;): Table&lt;Record&gt;override fun naturalJoin(p0: String, vararg p1: Any): Table&lt;Record&gt;override fun naturalJoin(p0: String, vararg p1: QueryPart): Table&lt;Record&gt; naturalLeftOuterJoin [jvm]override fun naturalLeftOuterJoin(p0: String): Table&lt;Record&gt;override fun naturalLeftOuterJoin(p0: Name): Table&lt;Record&gt;override fun naturalLeftOuterJoin(p0: SQL): Table&lt;Record&gt;override fun naturalLeftOuterJoin(p0: TableLike&lt;*&gt;): Table&lt;Record&gt;override fun naturalLeftOuterJoin(p0: String, vararg p1: Any): Table&lt;Record&gt;override fun naturalLeftOuterJoin(p0: String, vararg p1: QueryPart): Table&lt;Record&gt; naturalRightOuterJoin [jvm]override fun naturalRightOuterJoin(p0: String): Table&lt;Record&gt;override fun naturalRightOuterJoin(p0: Name): Table&lt;Record&gt;override fun naturalRightOuterJoin(p0: SQL): Table&lt;Record&gt;override fun naturalRightOuterJoin(p0: TableLike&lt;*&gt;): Table&lt;Record&gt;override fun naturalRightOuterJoin(p0: String, vararg p1: Any): Table&lt;Record&gt;override fun naturalRightOuterJoin(p0: String, vararg p1: QueryPart): Table&lt;Record&gt; ne [jvm]override fun ne(p0: Table&lt;MovieRecord&gt;): Condition newRecord [jvm]override fun newRecord(): MovieRecord notEqual [jvm]override fun notEqual(p0: Table&lt;MovieRecord&gt;): Condition outerApply [jvm]override fun outerApply(p0: String): Table&lt;Record&gt;override fun outerApply(p0: Name): Table&lt;Record&gt;override fun outerApply(p0: SQL): Table&lt;Record&gt;override fun outerApply(p0: TableLike&lt;*&gt;): Table&lt;Record&gt;override fun outerApply(p0: String, vararg p1: Any): Table&lt;Record&gt;override fun outerApply(p0: String, vararg p1: QueryPart): Table&lt;Record&gt; recordType [jvm]override fun recordType(): RecordType&lt;MovieRecord&gt; rename [jvm]open override fun rename(name: String): Movieopen override fun rename(name: Name): MovieRename this table[jvm]open fun rename(p0: Table&lt;*&gt;): Table&lt;MovieRecord&gt; rendersContent [jvm]open override fun rendersContent(p0: Context&lt;*&gt;): Boolean rightJoin [jvm]override fun rightJoin(p0: String): TablePartitionByStep&lt;Record&gt;override fun rightJoin(p0: Name): TablePartitionByStep&lt;Record&gt;override fun rightJoin(p0: SQL): TablePartitionByStep&lt;Record&gt;override fun rightJoin(p0: TableLike&lt;*&gt;): TablePartitionByStep&lt;Record&gt;override fun rightJoin(p0: String, vararg p1: Any): TablePartitionByStep&lt;Record&gt;override fun rightJoin(p0: String, vararg p1: QueryPart): TablePartitionByStep&lt;Record&gt; rightOuterJoin [jvm]override fun rightOuterJoin(p0: String): TablePartitionByStep&lt;Record&gt;override fun rightOuterJoin(p0: Name): TablePartitionByStep&lt;Record&gt;override fun rightOuterJoin(p0: SQL): TablePartitionByStep&lt;Record&gt;override fun rightOuterJoin(p0: TableLike&lt;*&gt;): TablePartitionByStep&lt;Record&gt;override fun rightOuterJoin(p0: String, vararg p1: Any): TablePartitionByStep&lt;Record&gt;override fun rightOuterJoin(p0: String, vararg p1: QueryPart): TablePartitionByStep&lt;Record&gt; rootChild [jvm]@Nullablefun rootChild(): @NullableTable&lt;*&gt;? rowid [jvm]open override fun rowid(): Field&lt;RowId&gt; straightJoin [jvm]override fun straightJoin(p0: String): TableOptionalOnStep&lt;Record&gt;override fun straightJoin(p0: Name): TableOptionalOnStep&lt;Record&gt;override fun straightJoin(p0: SQL): TableOptionalOnStep&lt;Record&gt;override fun straightJoin(p0: TableLike&lt;*&gt;): TableOptionalOnStep&lt;Record&gt;override fun straightJoin(p0: String, vararg p1: Any): TableOptionalOnStep&lt;Record&gt;override fun straightJoin(p0: String, vararg p1: QueryPart): TableOptionalOnStep&lt;Record&gt; tf [jvm]fun tf(): TableAsField&lt;MovieRecord&gt; toString [jvm]open override fun toString(): String translate [jvm]fun translate(p0: String, p1: SQLException): DataAccessException type [jvm]@Nullableabstract fun type(p0: Int): @NullableClass&lt;&gt;?@Nullableabstract fun type(p0: String): @NullableClass&lt;&gt;?@Nullableabstract fun type(p0: Name): @NullableClass&lt;*&gt;? types [jvm]@NotNullabstract fun types(): @NotNullArray&lt;@NotNullClass&lt;*&gt;&gt; useIndex [jvm]override fun useIndex(vararg p0: String): Table&lt;MovieRecord&gt; useIndexForGroupBy [jvm]override fun useIndexForGroupBy(vararg p0: String): Table&lt;MovieRecord&gt; useIndexForJoin [jvm]override fun useIndexForJoin(vararg p0: String): Table&lt;MovieRecord&gt; useIndexForOrderBy [jvm]override fun useIndexForOrderBy(vararg p0: String): Table&lt;MovieRecord&gt; where [jvm]open override fun where(vararg p0: Condition): Table&lt;MovieRecord&gt;open override fun where(p0: String): Table&lt;MovieRecord&gt;open override fun where(p0: MutableCollection&lt;out Condition&gt;): Table&lt;MovieRecord&gt;open override fun where(p0: Condition): Table&lt;MovieRecord&gt;open override fun where(p0: Field&lt;Boolean&gt;): Table&lt;MovieRecord&gt;open override fun where(p0: SQL): Table&lt;MovieRecord&gt;open override fun where(p0: String, vararg p1: Any): Table&lt;MovieRecord&gt;open override fun where(p0: String, vararg p1: QueryPart): Table&lt;MovieRecord&gt; whereExists [jvm]open override fun whereExists(p0: Select&lt;*&gt;): Table&lt;MovieRecord&gt; whereNotExists [jvm]open override fun whereNotExists(p0: Select&lt;*&gt;): Table&lt;MovieRecord&gt; withOrdinality [jvm]override fun withOrdinality(): Table&lt;Record&gt;"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/#properties","title":"Properties","text":"Name Summary alias [jvm]val alias: Alias&lt;Table&lt;MovieRecord&gt;&gt; child [jvm]val child: Table&lt;*&gt; childPath [jvm]val childPath: ForeignKey&lt;*, MovieRecord&gt; CREATED_AT [jvm]val CREATED_AT: TableField&lt;MovieRecord, LocalDateTime?&gt;The column <code>jooq.movie.created_at</code>. fields [jvm]val fields: FieldsImpl&lt;MovieRecord&gt; GENRE [jvm]val GENRE: TableField&lt;MovieRecord, String?&gt;The column <code>jooq.movie.genre</code>. ID [jvm]val ID: TableField&lt;MovieRecord, Long?&gt;The column <code>jooq.movie.id</code>. NAME [jvm]val NAME: TableField&lt;MovieRecord, String?&gt;The column <code>jooq.movie.name</code>. parameters [jvm]val parameters: Array&lt;Field&lt;*&gt;&gt; UPDATED_AT [jvm]val UPDATED_AT: TableField&lt;MovieRecord, LocalDateTime?&gt;The column <code>jooq.movie.updated_at</code>. VERSION [jvm]val VERSION: TableField&lt;MovieRecord, Int?&gt;The column <code>jooq.movie.version</code>."},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-c-r-e-a-t-e-d_-a-t/","title":"CREATED_AT - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/CREATED_AT</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-c-r-e-a-t-e-d_-a-t/#created_at","title":"CREATED_AT","text":"<p>[jvm]\\ val CREATED_AT: TableField&lt;MovieRecord, LocalDateTime?&gt;</p> <p>The column <code>jooq.movie.created_at</code>.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-g-e-n-r-e/","title":"GENRE - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/GENRE</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-g-e-n-r-e/#genre","title":"GENRE","text":"<p>[jvm]\\ val GENRE: TableField&lt;MovieRecord, String?&gt;</p> <p>The column <code>jooq.movie.genre</code>.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-i-d/","title":"ID - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/ID</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-i-d/#id","title":"ID","text":"<p>[jvm]\\ val ID: TableField&lt;MovieRecord, Long?&gt;</p> <p>The column <code>jooq.movie.id</code>.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-movie/","title":"Movie - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/Movie</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-movie/#movie","title":"Movie","text":"<p>[jvm]\\ fun Movie(alias: String)</p> <p>fun Movie(alias: Name)</p> <p>Create an aliased <code>jooq.movie</code> table reference</p> <p>[jvm]\\ fun Movie()</p> <p>Create a <code>jooq.movie</code> table reference</p> <p>[jvm]\\ fun Movie(child: Table&lt;out Record&gt;, key: ForeignKey&lt;out Record, MovieRecord&gt;)</p> <p>fun Movie(alias: Name, child: Table&lt;out Record&gt;?, path: ForeignKey&lt;out Record, MovieRecord&gt;?, aliased: Table&lt;MovieRecord&gt;?, parameters: Array&lt;Field&lt;*&gt;?&gt;?)</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-n-a-m-e/","title":"NAME - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/NAME</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-n-a-m-e/#name","title":"NAME","text":"<p>[jvm]\\ val NAME: TableField&lt;MovieRecord, String?&gt;</p> <p>The column <code>jooq.movie.name</code>.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-u-p-d-a-t-e-d_-a-t/","title":"UPDATED_AT - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/UPDATED_AT</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-u-p-d-a-t-e-d_-a-t/#updated_at","title":"UPDATED_AT","text":"<p>[jvm]\\ val UPDATED_AT: TableField&lt;MovieRecord, LocalDateTime?&gt;</p> <p>The column <code>jooq.movie.updated_at</code>.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-v-e-r-s-i-o-n/","title":"VERSION - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/VERSION</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-v-e-r-s-i-o-n/#version","title":"VERSION","text":"<p>[jvm]\\ val VERSION: TableField&lt;MovieRecord, Int?&gt;</p> <p>The column <code>jooq.movie.version</code>.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/as/","title":"as - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/as</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/as/#as","title":"as","text":"<p>[jvm]\\ open override fun as(alias: String): Movie</p> <p>open override fun as(alias: Name): Movie</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/fields-row/","title":"fieldsRow - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/fieldsRow</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/fields-row/#fieldsrow","title":"fieldsRow","text":"<p>[jvm]\\ open override fun fieldsRow(): Row6&lt;Long?, String?, String?, Int?, LocalDateTime?, LocalDateTime?&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/get-identity/","title":"getIdentity - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/getIdentity</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/get-identity/#getidentity","title":"getIdentity","text":"<p>[jvm]\\ open override fun getIdentity(): Identity&lt;MovieRecord, Long?&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/get-keys/","title":"getKeys - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/getKeys</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/get-keys/#getkeys","title":"getKeys","text":"<p>[jvm]\\ open override fun getKeys(): List&lt;UniqueKey&lt;MovieRecord&gt;&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/get-primary-key/","title":"getPrimaryKey - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/getPrimaryKey</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/get-primary-key/#getprimarykey","title":"getPrimaryKey","text":"<p>[jvm]\\ open override fun getPrimaryKey(): UniqueKey&lt;MovieRecord&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/get-record-type/","title":"getRecordType - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/getRecordType</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/get-record-type/#getrecordtype","title":"getRecordType","text":"<p>[jvm]\\ open override fun getRecordType(): Class&lt;MovieRecord&gt;</p> <p>The class holding records for this type</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/get-record-version/","title":"getRecordVersion - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/getRecordVersion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/get-record-version/#getrecordversion","title":"getRecordVersion","text":"<p>[jvm]\\ open override fun getRecordVersion(): TableField&lt;MovieRecord, Int?&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/get-schema/","title":"getSchema - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/getSchema</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/get-schema/#getschema","title":"getSchema","text":"<p>[jvm]\\ open override fun getSchema(): Schema</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/rename/","title":"rename - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/rename</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/rename/#rename","title":"rename","text":"<p>[jvm]\\ open override fun rename(name: String): Movie</p> <p>open override fun rename(name: Name): Movie</p> <p>Rename this table</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-companion/","title":"Companion - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-companion/#properties","title":"Properties","text":"Name Summary MOVIE [jvm]val MOVIE: MovieThe reference instance of <code>jooq.movie</code>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-companion/-m-o-v-i-e/","title":"MOVIE - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables/Movie/Companion/MOVIE</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables/-movie/-companion/-m-o-v-i-e/#movie","title":"MOVIE","text":"<p>[jvm]\\ val MOVIE: Movie</p> <p>The reference instance of <code>jooq.movie</code></p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/","title":"Package misk.jooq.testgen.tables.records - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/#package-miskjooqtestgentablesrecords","title":"Package misk.jooq.testgen.tables.records","text":""},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/#types","title":"Types","text":"Name Summary MovieRecord [jvm]open class MovieRecord : UpdatableRecordImpl&lt;MovieRecord&gt; , Record6&lt;Long?, String?, String?, Int?, LocalDateTime?, LocalDateTime?&gt; This class is generated by jOOQ."},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/","title":"MovieRecord - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/#movierecord","title":"MovieRecord","text":"<p>[jvm]\\ open class MovieRecord : UpdatableRecordImpl&lt;MovieRecord&gt; , Record6&lt;Long?, String?, String?, Int?, LocalDateTime?, LocalDateTime?&gt; </p> <p>This class is generated by jOOQ.</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/#constructors","title":"Constructors","text":"MovieRecord [jvm]fun MovieRecord(id: Long? = null, name: String? = null, genre: String? = null, version: Int? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null)Create a detached, initialised MovieRecord MovieRecord [jvm]fun MovieRecord()"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/#functions","title":"Functions","text":"Name Summary addChangedValues [jvm]fun addChangedValues(p0: Array&lt;Field&lt;&gt;&gt;, p1: StoreQuery&lt;MovieRecord&gt;, p2: Boolean): MutableList&lt;Field&lt;&gt;&gt; addRecordTimestamp [jvm]fun addRecordTimestamp(p0: StoreQuery&lt;*&gt;, p1: Boolean): Timestamp addRecordVersion [jvm]fun addRecordVersion(p0: StoreQuery&lt;*&gt;, p1: Boolean): BigInteger addValue [jvm]fun &lt;T : Any&gt; addValue(p0: StoreQuery&lt;&gt;, p1: Field&lt;T&gt;, p2: Boolean)fun &lt;T : Any&gt; addValue(p0: StoreQuery&lt;&gt;, p1: Field&lt;T&gt;, p2: Any, p3: Boolean) asResult [jvm]fun asResult(): Result&lt;AbstractRecord&gt; attach [jvm]override fun attach(p0: Configuration) changed [jvm]override fun changed(): Booleanoverride fun changed(p0: Boolean)override fun changed(p0: Int): Booleanoverride fun changed(p0: String): Booleanoverride fun changed(p0: Field&lt;&gt;): Booleanoverride fun changed(p0: Name): Booleanoverride fun changed(p0: Int, p1: Boolean)override fun changed(p0: String, p1: Boolean)override fun changed(p0: Field&lt;&gt;, p1: Boolean)override fun changed(p0: Name, p1: Boolean) children [jvm]override fun &lt;O : TableRecord&lt;O&gt;&gt; children(p0: ForeignKey&lt;O, MovieRecord&gt;): Table&lt;O&gt; compare [jvm]fun compare(p0: Array&lt;Any&gt;, p1: Array&lt;Any&gt;): Intfun compare(p0: ByteArray, p1: ByteArray): Int compare0 [jvm]fun compare0(p0: Any, p1: Any): Int compareTo [jvm]open operator override fun compareTo(other: Record): Int component1 [jvm]open operator override fun component1(): Long? component2 [jvm]open operator override fun component2(): String? component3 [jvm]open operator override fun component3(): String? component4 [jvm]open operator override fun component4(): Int? component5 [jvm]open operator override fun component5(): LocalDateTime? component6 [jvm]open operator override fun component6(): LocalDateTime? configuration [jvm]override fun configuration(): Configuration? copy [jvm]override fun copy(): MovieRecord dataType [jvm]override fun dataType(p0: Int): DataType&lt;&gt;?override fun dataType(p0: String): DataType&lt;&gt;?override fun dataType(p0: Name): DataType&lt;*&gt;? dataTypes [jvm]override fun dataTypes(): Array&lt;DataType&lt;*&gt;&gt; defaultJSONFormat [jvm]override fun defaultJSONFormat(): JSONFormat defaultXMLFormat [jvm]override fun defaultXMLFormat(): XMLFormat delete [jvm]override fun delete(): Int detach [jvm]override fun detach() equals [jvm]open operator override fun equals(other: Any?): Boolean fetchChild [jvm]override fun &lt;O : TableRecord&lt;O&gt;&gt; fetchChild(p0: ForeignKey&lt;O, MovieRecord&gt;): O? fetchChildren [jvm]override fun &lt;O : TableRecord&lt;O&gt;&gt; fetchChildren(p0: ForeignKey&lt;O, MovieRecord&gt;): Result&lt;O&gt; fetchParent [jvm]override fun &lt;O : UpdatableRecord&lt;O&gt;&gt; fetchParent(p0: ForeignKey&lt;MovieRecord, O&gt;): O? field [jvm]override fun field(p0: Int): Field&lt;&gt;?override fun field(p0: String): Field&lt;&gt;?override fun &lt;T : Any&gt; field(p0: Field&lt;T&gt;): Field&lt;T&gt;?override fun field(p0: Name): Field&lt;*&gt;?override fun &lt;T : Any&gt; field(p0: Int, p1: Class&lt;T&gt;): Field&lt;T&gt;?override fun &lt;T : Any&gt; field(p0: Int, p1: DataType&lt;T&gt;): Field&lt;T&gt;?override fun &lt;T : Any&gt; field(p0: String, p1: Class&lt;T&gt;): Field&lt;T&gt;?override fun &lt;T : Any&gt; field(p0: String, p1: DataType&lt;T&gt;): Field&lt;T&gt;?override fun &lt;T : Any&gt; field(p0: Name, p1: Class&lt;T&gt;): Field&lt;T&gt;?override fun &lt;T : Any&gt; field(p0: Name, p1: DataType&lt;T&gt;): Field&lt;T&gt;? field1 [jvm]open override fun field1(): Field&lt;Long?&gt; field2 [jvm]open override fun field2(): Field&lt;String?&gt; field3 [jvm]open override fun field3(): Field&lt;String?&gt; field4 [jvm]open override fun field4(): Field&lt;Int?&gt; field5 [jvm]open override fun field5(): Field&lt;LocalDateTime?&gt; field6 [jvm]open override fun field6(): Field&lt;LocalDateTime?&gt; fields [jvm]override fun fields(): Array&lt;Field&lt;&gt;&gt;override fun fields(vararg p0: String): Array&lt;Field&lt;&gt;&gt;?override fun fields(vararg p0: Field&lt;&gt;): Array&lt;Field&lt;&gt;&gt;?override fun fields(vararg p0: Name): Array&lt;Field&lt;&gt;&gt;?override fun fields(vararg p0: Int): Array&lt;Field&lt;&gt;&gt;? fieldsRow [jvm]open override fun fieldsRow(): Row6&lt;Long?, String?, String?, Int?, LocalDateTime?, LocalDateTime?&gt; fieldStream [jvm]override fun fieldStream(): Stream&lt;Field&lt;*&gt;&gt; format [jvm]override fun format(): Stringoverride fun format(p0: OutputStream)override fun format(p0: Writer)override fun format(p0: Int): Stringoverride fun format(p0: TXTFormat): Stringoverride fun format(p0: OutputStream, p1: Int)override fun format(p0: OutputStream, p1: TXTFormat)override fun format(p0: Writer, p1: Int)override fun format(p0: Writer, p1: TXTFormat) formatChart [jvm]override fun formatChart(): Stringoverride fun formatChart(p0: OutputStream)override fun formatChart(p0: Writer)override fun formatChart(p0: ChartFormat): Stringoverride fun formatChart(p0: OutputStream, p1: ChartFormat)override fun formatChart(p0: Writer, p1: ChartFormat) formatCSV [jvm]override fun formatCSV(): Stringoverride fun formatCSV(p0: OutputStream)override fun formatCSV(p0: Writer)override fun formatCSV(p0: Boolean): Stringoverride fun formatCSV(p0: Char): Stringoverride fun formatCSV(p0: CSVFormat): Stringoverride fun formatCSV(p0: OutputStream, p1: Boolean)override fun formatCSV(p0: OutputStream, p1: Char)override fun formatCSV(p0: OutputStream, p1: CSVFormat)override fun formatCSV(p0: Writer, p1: Boolean)override fun formatCSV(p0: Writer, p1: Char)override fun formatCSV(p0: Boolean, p1: Char): Stringoverride fun formatCSV(p0: Char, p1: String): Stringoverride fun formatCSV(p0: Writer, p1: CSVFormat)override fun formatCSV(p0: OutputStream, p1: Boolean, p2: Char)override fun formatCSV(p0: OutputStream, p1: Char, p2: String)override fun formatCSV(p0: Writer, p1: Boolean, p2: Char)override fun formatCSV(p0: Writer, p1: Char, p2: String)override fun formatCSV(p0: Boolean, p1: Char, p2: String): Stringoverride fun formatCSV(p0: OutputStream, p1: Boolean, p2: Char, p3: String)override fun formatCSV(p0: Writer, p1: Boolean, p2: Char, p3: String) formatHTML [jvm]override fun formatHTML(): Stringoverride fun formatHTML(p0: OutputStream)override fun formatHTML(p0: Writer) formatInsert [jvm]override fun formatInsert(): Stringoverride fun formatInsert(p0: OutputStream)override fun formatInsert(p0: Writer)override fun formatInsert(p0: Table&lt;&gt;, vararg p1: Field&lt;&gt;): Stringoverride fun formatInsert(p0: OutputStream, p1: Table&lt;&gt;, vararg p2: Field&lt;&gt;)override fun formatInsert(p0: Writer, p1: Table&lt;&gt;, vararg p2: Field&lt;&gt;) formatJSON [jvm]override fun formatJSON(): Stringoverride fun formatJSON(p0: OutputStream)override fun formatJSON(p0: Writer)override fun formatJSON(p0: JSONFormat): Stringoverride fun formatJSON(p0: OutputStream, p1: JSONFormat)override fun formatJSON(p0: Writer, p1: JSONFormat) formatXML [jvm]override fun formatXML(): Stringoverride fun formatXML(p0: OutputStream)override fun formatXML(p0: Writer)override fun formatXML(p0: XMLFormat): Stringoverride fun formatXML(p0: OutputStream, p1: XMLFormat)override fun formatXML(p0: Writer, p1: XMLFormat) from [jvm]override fun from(p0: Any)fun from(p0: Record)override fun from(p0: Any, vararg p1: String)override fun from(p0: Any, vararg p1: Field&lt;*&gt;)override fun from(p0: Any, vararg p1: Name)override fun from(p0: Any, vararg p1: Int)fun from(p0: Record, p1: IntArray) fromArray [jvm]override fun fromArray(vararg p0: Any)override fun fromArray(p0: Array&lt;Any&gt;, vararg p1: String)override fun fromArray(p0: Array&lt;Any&gt;, vararg p1: Field&lt;*&gt;)override fun fromArray(p0: Array&lt;Any&gt;, vararg p1: Name)override fun fromArray(p0: Array&lt;Any&gt;, vararg p1: Int) fromMap [jvm]override fun fromMap(p0: MutableMap&lt;String, &gt;)override fun fromMap(p0: MutableMap&lt;String, *&gt;, vararg p1: String)override fun fromMap(p0: MutableMap&lt;String, *&gt;, vararg p1: Field&lt;&gt;)override fun fromMap(p0: MutableMap&lt;String, *&gt;, vararg p1: Name)override fun fromMap(p0: MutableMap&lt;String, *&gt;, vararg p1: Int) get [jvm]operator override fun get(p0: Int): Any?operator override fun get(p0: String): Any?operator override fun &lt;T : Any&gt; get(p0: Field&lt;T&gt;): Toperator override fun get(p0: Name): Any?operator override fun &lt;U : Any&gt; get(p0: Int, p1: Class&lt;out U&gt;): Uoperator override fun &lt;U : Any&gt; get(p0: Int, p1: Converter&lt;, out U&gt;): Uoperator override fun &lt;T : Any&gt; get(p0: String, p1: Class&lt;out T&gt;): Toperator override fun &lt;U : Any&gt; get(p0: String, p1: Converter&lt;, out U&gt;): Uoperator override fun &lt;U : Any&gt; get(p0: Field&lt;&gt;, p1: Class&lt;out U&gt;): Uoperator override fun &lt;T : Any, U : Any&gt; get(p0: Field&lt;T&gt;, p1: Converter&lt;in T, out U&gt;): Uoperator override fun &lt;T : Any&gt; get(p0: Name, p1: Class&lt;out T&gt;): Toperator override fun &lt;U : Any&gt; get(p0: Name, p1: Converter&lt;, out U&gt;): U getAttachables [jvm]override fun getAttachables(): MutableList&lt;Attachable&gt; getPrimaryKey [jvm]override fun getPrimaryKey(): UniqueKey&lt;MovieRecord&gt; getQualifier [jvm]override fun getQualifier(): RecordQualifier&lt;MovieRecord&gt; getRecordTimestamp [jvm]fun getRecordTimestamp(): Any getRecordVersion [jvm]fun getRecordVersion(): Any getReturning [jvm]fun getReturning(p0: StoreQuery&lt;MovieRecord&gt;): MutableCollection&lt;Field&lt;*&gt;&gt; getReturningIfNeeded [jvm]fun getReturningIfNeeded(p0: StoreQuery&lt;MovieRecord&gt;, p1: MutableCollection&lt;Field&lt;*&gt;&gt;) getSQLTypeName [jvm]override fun getSQLTypeName(): String getTable [jvm]override fun getTable(): Table&lt;MovieRecord&gt; getValue [jvm]override fun getValue(p0: Int): Anyoverride fun getValue(p0: String): Anyoverride fun &lt;T : Any&gt; getValue(p0: Field&lt;T&gt;): Toverride fun getValue(p0: Name): Anyoverride fun &lt;T : Any&gt; getValue(p0: Int, p1: Class&lt;out T&gt;): Toverride fun &lt;U : Any&gt; getValue(p0: Int, p1: Converter&lt;, out U&gt;): Uoverride fun &lt;T : Any&gt; getValue(p0: String, p1: Class&lt;out T&gt;): Toverride fun &lt;U : Any&gt; getValue(p0: String, p1: Converter&lt;, out U&gt;): Uoverride fun &lt;T : Any&gt; getValue(p0: Field&lt;&gt;, p1: Class&lt;out T&gt;): Toverride fun &lt;T : Any, U : Any&gt; getValue(p0: Field&lt;T&gt;, p1: Converter&lt;in T, out U&gt;): Uoverride fun &lt;T : Any&gt; getValue(p0: Name, p1: Class&lt;out T&gt;): Toverride fun &lt;U : Any&gt; getValue(p0: Name, p1: Converter&lt;, out U&gt;): U hashCode [jvm]open override fun hashCode(): Int indexOf [jvm]override fun indexOf(p0: String): Intoverride fun indexOf(p0: Field&lt;*&gt;): Intoverride fun indexOf(p0: Name): Int insert [jvm]override fun insert(): Intoverride fun insert(vararg p0: Field&lt;&gt;): Intoverride fun insert(p0: MutableCollection&lt;out Field&lt;&gt;&gt;): Int intern [jvm]fun intern(p0: String): String intern0 [jvm]fun intern0(p0: Int) into [jvm]open override fun &lt;E : Any&gt; into(p0: E): Eoverride fun &lt;E : Any&gt; into(p0: Class&lt;out E&gt;): Eoverride fun into(vararg p0: Field&lt;*&gt;): Recordoverride fun &lt;T1 : Any&gt; into(p0: Field&lt;T1&gt;): Record1&lt;T1&gt;override fun &lt;R : Record&gt; into(p0: Table&lt;R&gt;): Roverride fun &lt;T1 : Any, T2 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;): Record2&lt;T1, T2&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;): Record3&lt;T1, T2, T3&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;): Record4&lt;T1, T2, T3, T4&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;): Record5&lt;T1, T2, T3, T4, T5&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;): Record6&lt;T1, T2, T3, T4, T5, T6&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;): Record7&lt;T1, T2, T3, T4, T5, T6, T7&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;): Record8&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;): Record9&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any, T10 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;, p9: Field&lt;T10&gt;): Record10&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any, T10 : Any, T11 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;, p9: Field&lt;T10&gt;, p10: Field&lt;T11&gt;): Record11&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any, T10 : Any, T11 : Any, T12 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;, p9: Field&lt;T10&gt;, p10: Field&lt;T11&gt;, p11: Field&lt;T12&gt;): Record12&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any, T10 : Any, T11 : Any, T12 : Any, T13 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;, p9: Field&lt;T10&gt;, p10: Field&lt;T11&gt;, p11: Field&lt;T12&gt;, p12: Field&lt;T13&gt;): Record13&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any, T10 : Any, T11 : Any, T12 : Any, T13 : Any, T14 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;, p9: Field&lt;T10&gt;, p10: Field&lt;T11&gt;, p11: Field&lt;T12&gt;, p12: Field&lt;T13&gt;, p13: Field&lt;T14&gt;): Record14&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any, T10 : Any, T11 : Any, T12 : Any, T13 : Any, T14 : Any, T15 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;, p9: Field&lt;T10&gt;, p10: Field&lt;T11&gt;, p11: Field&lt;T12&gt;, p12: Field&lt;T13&gt;, p13: Field&lt;T14&gt;, p14: Field&lt;T15&gt;): Record15&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any, T10 : Any, T11 : Any, T12 : Any, T13 : Any, T14 : Any, T15 : Any, T16 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;, p9: Field&lt;T10&gt;, p10: Field&lt;T11&gt;, p11: Field&lt;T12&gt;, p12: Field&lt;T13&gt;, p13: Field&lt;T14&gt;, p14: Field&lt;T15&gt;, p15: Field&lt;T16&gt;): Record16&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any, T10 : Any, T11 : Any, T12 : Any, T13 : Any, T14 : Any, T15 : Any, T16 : Any, T17 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;, p9: Field&lt;T10&gt;, p10: Field&lt;T11&gt;, p11: Field&lt;T12&gt;, p12: Field&lt;T13&gt;, p13: Field&lt;T14&gt;, p14: Field&lt;T15&gt;, p15: Field&lt;T16&gt;, p16: Field&lt;T17&gt;): Record17&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any, T10 : Any, T11 : Any, T12 : Any, T13 : Any, T14 : Any, T15 : Any, T16 : Any, T17 : Any, T18 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;, p9: Field&lt;T10&gt;, p10: Field&lt;T11&gt;, p11: Field&lt;T12&gt;, p12: Field&lt;T13&gt;, p13: Field&lt;T14&gt;, p14: Field&lt;T15&gt;, p15: Field&lt;T16&gt;, p16: Field&lt;T17&gt;, p17: Field&lt;T18&gt;): Record18&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any, T10 : Any, T11 : Any, T12 : Any, T13 : Any, T14 : Any, T15 : Any, T16 : Any, T17 : Any, T18 : Any, T19 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;, p9: Field&lt;T10&gt;, p10: Field&lt;T11&gt;, p11: Field&lt;T12&gt;, p12: Field&lt;T13&gt;, p13: Field&lt;T14&gt;, p14: Field&lt;T15&gt;, p15: Field&lt;T16&gt;, p16: Field&lt;T17&gt;, p17: Field&lt;T18&gt;, p18: Field&lt;T19&gt;): Record19&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any, T10 : Any, T11 : Any, T12 : Any, T13 : Any, T14 : Any, T15 : Any, T16 : Any, T17 : Any, T18 : Any, T19 : Any, T20 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;, p9: Field&lt;T10&gt;, p10: Field&lt;T11&gt;, p11: Field&lt;T12&gt;, p12: Field&lt;T13&gt;, p13: Field&lt;T14&gt;, p14: Field&lt;T15&gt;, p15: Field&lt;T16&gt;, p16: Field&lt;T17&gt;, p17: Field&lt;T18&gt;, p18: Field&lt;T19&gt;, p19: Field&lt;T20&gt;): Record20&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any, T10 : Any, T11 : Any, T12 : Any, T13 : Any, T14 : Any, T15 : Any, T16 : Any, T17 : Any, T18 : Any, T19 : Any, T20 : Any, T21 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;, p9: Field&lt;T10&gt;, p10: Field&lt;T11&gt;, p11: Field&lt;T12&gt;, p12: Field&lt;T13&gt;, p13: Field&lt;T14&gt;, p14: Field&lt;T15&gt;, p15: Field&lt;T16&gt;, p16: Field&lt;T17&gt;, p17: Field&lt;T18&gt;, p18: Field&lt;T19&gt;, p19: Field&lt;T20&gt;, p20: Field&lt;T21&gt;): Record21&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21&gt;override fun &lt;T1 : Any, T2 : Any, T3 : Any, T4 : Any, T5 : Any, T6 : Any, T7 : Any, T8 : Any, T9 : Any, T10 : Any, T11 : Any, T12 : Any, T13 : Any, T14 : Any, T15 : Any, T16 : Any, T17 : Any, T18 : Any, T19 : Any, T20 : Any, T21 : Any, T22 : Any&gt; into(p0: Field&lt;T1&gt;, p1: Field&lt;T2&gt;, p2: Field&lt;T3&gt;, p3: Field&lt;T4&gt;, p4: Field&lt;T5&gt;, p5: Field&lt;T6&gt;, p6: Field&lt;T7&gt;, p7: Field&lt;T8&gt;, p8: Field&lt;T9&gt;, p9: Field&lt;T10&gt;, p10: Field&lt;T11&gt;, p11: Field&lt;T12&gt;, p12: Field&lt;T13&gt;, p13: Field&lt;T14&gt;, p14: Field&lt;T15&gt;, p15: Field&lt;T16&gt;, p16: Field&lt;T17&gt;, p17: Field&lt;T18&gt;, p18: Field&lt;T19&gt;, p19: Field&lt;T20&gt;, p20: Field&lt;T21&gt;, p21: Field&lt;T22&gt;): Record22&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22&gt; intoArray [jvm]override fun intoArray(): Array&lt;Any&gt;? intoList [jvm]override fun intoList(): MutableList&lt;Any&gt; intoMap [jvm]override fun intoMap(): MutableMap&lt;String, Any&gt; intoRecord [jvm]fun &lt;R : Record&gt; intoRecord(p0: Class&lt;R&gt;): R intoResultSet [jvm]override fun intoResultSet(): ResultSet intoStream [jvm]override fun intoStream(): Stream&lt;Any&gt; intoXML [jvm]override fun intoXML(): Documentoverride fun &lt;H : ContentHandler&gt; intoXML(p0: H): Hoverride fun intoXML(p0: XMLFormat): Documentoverride fun &lt;H : ContentHandler&gt; intoXML(p0: H, p1: XMLFormat): H isTimestampOrVersionAvailable [jvm]fun isTimestampOrVersionAvailable(): Boolean isUpdateRecordTimestamp [jvm]fun isUpdateRecordTimestamp(): Boolean isUpdateRecordVersion [jvm]fun isUpdateRecordVersion(): Boolean key [jvm]open override fun key(): Record1&lt;Long?&gt; map [jvm]override fun &lt;E : Any&gt; map(p0: RecordMapper&lt;Record, E&gt;): E merge [jvm]override fun merge(): Intopen override fun merge(vararg p0: Field&lt;&gt;): Intoverride fun merge(p0: MutableCollection&lt;out Field&lt;&gt;&gt;): Int original [jvm]override fun original(): MovieRecordoverride fun original(p0: Int): Any?override fun original(p0: String): Any?override fun &lt;T : Any&gt; original(p0: Field&lt;T&gt;): Toverride fun original(p0: Name): Any? parent [jvm]override fun &lt;O : UpdatableRecord&lt;O&gt;&gt; parent(p0: ForeignKey&lt;MovieRecord, O&gt;): Table&lt;O&gt; readSQL [jvm]override fun readSQL(p0: SQLInput, p1: String) refresh [jvm]override fun refresh()override fun refresh(vararg p0: Field&lt;&gt;)override fun refresh(p0: MutableCollection&lt;out Field&lt;&gt;&gt;) reset [jvm]override fun reset()override fun reset(p0: Int)override fun reset(p0: String)override fun reset(p0: Field&lt;*&gt;)override fun reset(p0: Name) resetChangedOnNotNull [jvm]open fun resetChangedOnNotNull() safeIndex [jvm]fun safeIndex(p0: Int): Int set [jvm]operator fun set(p0: Int, p1: Any)operator override fun &lt;T : Any&gt; set(p0: Field&lt;T&gt;, p1: T)operator fun set(p0: Int, p1: Field&lt;*&gt;, p2: Any)operator override fun &lt;T : Any, U : Any&gt; set(p0: Field&lt;T&gt;, p1: U, p2: Converter&lt;out T, in U&gt;)operator fun &lt;T : Any&gt; set(p0: Field&lt;T&gt;, p1: Int, p2: T) setRecordVersionAndTimestamp [jvm]fun setRecordVersionAndTimestamp(p0: BigInteger, p1: Timestamp) setReturningIfNeeded [jvm]fun setReturningIfNeeded(p0: StoreQuery&lt;MovieRecord&gt;): MutableCollection&lt;Field&lt;*&gt;&gt; setValue [jvm]override fun &lt;T : Any&gt; setValue(p0: Field&lt;T&gt;, p1: T)override fun &lt;T : Any, U : Any&gt; setValue(p0: Field&lt;T&gt;, p1: U, p2: Converter&lt;out T, in U&gt;) setValues [jvm]fun setValues(p0: Array&lt;Field&lt;*&gt;&gt;, p1: AbstractRecord) size [jvm]override fun size(): Int store [jvm]override fun store(): Intoverride fun store(vararg p0: Field&lt;&gt;): Intoverride fun store(p0: MutableCollection&lt;out Field&lt;&gt;&gt;): Int storeInsert [jvm]fun storeInsert(p0: Array&lt;Field&lt;*&gt;&gt;): Int storeInsert0 [jvm]fun storeInsert0(p0: Array&lt;Field&lt;*&gt;&gt;): Int toString [jvm]open override fun toString(): String type [jvm]override fun type(p0: Int): Class&lt;&gt;?override fun type(p0: String): Class&lt;&gt;?override fun type(p0: Name): Class&lt;*&gt;? types [jvm]override fun types(): Array&lt;Class&lt;*&gt;&gt; update [jvm]override fun update(): Intopen override fun update(vararg p0: Field&lt;&gt;): Intoverride fun update(p0: MutableCollection&lt;out Field&lt;&gt;&gt;): Int value1 [jvm]open override fun value1(): Long?open override fun value1(value: Long?): MovieRecord value2 [jvm]open override fun value2(): String?open override fun value2(value: String?): MovieRecord value3 [jvm]open override fun value3(): String?open override fun value3(value: String?): MovieRecord value4 [jvm]open override fun value4(): Int?open override fun value4(value: Int?): MovieRecord value5 [jvm]open override fun value5(): LocalDateTime?open override fun value5(value: LocalDateTime?): MovieRecord value6 [jvm]open override fun value6(): LocalDateTime?open override fun value6(value: LocalDateTime?): MovieRecord values [jvm]open override fun values(value1: Long?, value2: String?, value3: String?, value4: Int?, value5: LocalDateTime?, value6: LocalDateTime?): MovieRecord valuesRow [jvm]open override fun valuesRow(): Row6&lt;Long?, String?, String?, Int?, LocalDateTime?, LocalDateTime?&gt; with [jvm]override fun &lt;T : Any&gt; with(p0: Field&lt;T&gt;, p1: T): MovieRecordoverride fun &lt;T : Any, U : Any&gt; with(p0: Field&lt;T&gt;, p1: U, p2: Converter&lt;out T, in U&gt;): MovieRecord writable [jvm]fun writable(p0: Field&lt;*&gt;, p1: Boolean): Boolean writeSQL [jvm]override fun writeSQL(p0: SQLOutput)"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/#properties","title":"Properties","text":"Name Summary changed [jvm]val changed: BitSet configuration [jvm]val configuration: Configuration createdAt [jvm]var createdAt: LocalDateTime? fetched [jvm]val fetched: Boolean fields [jvm]val fields: AbstractRow&lt;out AbstractRecord&gt; genre [jvm]var genre: String? id [jvm]var id: Long? name [jvm]var name: String? originals [jvm]val originals: Array&lt;Any&gt; updatedAt [jvm]var updatedAt: LocalDateTime? values [jvm]val values: Array&lt;Any&gt; version [jvm]var version: Int?"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/-movie-record/","title":"MovieRecord - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/MovieRecord</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/-movie-record/#movierecord","title":"MovieRecord","text":"<p>[jvm]\\ fun MovieRecord(id: Long? = null, name: String? = null, genre: String? = null, version: Int? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null)</p> <p>Create a detached, initialised MovieRecord</p> <p>[jvm]\\ fun MovieRecord()</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component1/","title":"component1 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/component1</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component1/#component1","title":"component1","text":"<p>[jvm]\\ open operator override fun component1(): Long?</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component2/","title":"component2 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/component2</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component2/#component2","title":"component2","text":"<p>[jvm]\\ open operator override fun component2(): String?</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component3/","title":"component3 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/component3</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component3/#component3","title":"component3","text":"<p>[jvm]\\ open operator override fun component3(): String?</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component4/","title":"component4 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/component4</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component4/#component4","title":"component4","text":"<p>[jvm]\\ open operator override fun component4(): Int?</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component5/","title":"component5 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/component5</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component5/#component5","title":"component5","text":"<p>[jvm]\\ open operator override fun component5(): LocalDateTime?</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component6/","title":"component6 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/component6</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component6/#component6","title":"component6","text":"<p>[jvm]\\ open operator override fun component6(): LocalDateTime?</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/created-at/","title":"createdAt - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/createdAt</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/created-at/#createdat","title":"createdAt","text":"<p>[jvm]\\ var createdAt: LocalDateTime?</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field1/","title":"field1 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/field1</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field1/#field1","title":"field1","text":"<p>[jvm]\\ open override fun field1(): Field&lt;Long?&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field2/","title":"field2 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/field2</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field2/#field2","title":"field2","text":"<p>[jvm]\\ open override fun field2(): Field&lt;String?&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field3/","title":"field3 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/field3</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field3/#field3","title":"field3","text":"<p>[jvm]\\ open override fun field3(): Field&lt;String?&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field4/","title":"field4 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/field4</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field4/#field4","title":"field4","text":"<p>[jvm]\\ open override fun field4(): Field&lt;Int?&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field5/","title":"field5 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/field5</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field5/#field5","title":"field5","text":"<p>[jvm]\\ open override fun field5(): Field&lt;LocalDateTime?&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field6/","title":"field6 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/field6</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field6/#field6","title":"field6","text":"<p>[jvm]\\ open override fun field6(): Field&lt;LocalDateTime?&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/fields-row/","title":"fieldsRow - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/fieldsRow</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/fields-row/#fieldsrow","title":"fieldsRow","text":"<p>[jvm]\\ open override fun fieldsRow(): Row6&lt;Long?, String?, String?, Int?, LocalDateTime?, LocalDateTime?&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/genre/","title":"genre - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/genre</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/genre/#genre","title":"genre","text":"<p>[jvm]\\ var genre: String?</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/id/","title":"id - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/id</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/id/#id","title":"id","text":"<p>[jvm]\\ var id: Long?</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/key/","title":"key - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/key</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/key/#key","title":"key","text":"<p>[jvm]\\ open override fun key(): Record1&lt;Long?&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/name/","title":"name - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/name</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/name/#name","title":"name","text":"<p>[jvm]\\ var name: String?</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/updated-at/","title":"updatedAt - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/updatedAt</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/updated-at/#updatedat","title":"updatedAt","text":"<p>[jvm]\\ var updatedAt: LocalDateTime?</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value1/","title":"value1 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/value1</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value1/#value1","title":"value1","text":"<p>[jvm]\\ open override fun value1(): Long?</p> <p>open override fun value1(value: Long?): MovieRecord</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value2/","title":"value2 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/value2</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value2/#value2","title":"value2","text":"<p>[jvm]\\ open override fun value2(): String?</p> <p>open override fun value2(value: String?): MovieRecord</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value3/","title":"value3 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/value3</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value3/#value3","title":"value3","text":"<p>[jvm]\\ open override fun value3(): String?</p> <p>open override fun value3(value: String?): MovieRecord</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value4/","title":"value4 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/value4</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value4/#value4","title":"value4","text":"<p>[jvm]\\ open override fun value4(): Int?</p> <p>open override fun value4(value: Int?): MovieRecord</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value5/","title":"value5 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/value5</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value5/#value5","title":"value5","text":"<p>[jvm]\\ open override fun value5(): LocalDateTime?</p> <p>open override fun value5(value: LocalDateTime?): MovieRecord</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value6/","title":"value6 - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/value6</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value6/#value6","title":"value6","text":"<p>[jvm]\\ open override fun value6(): LocalDateTime?</p> <p>open override fun value6(value: LocalDateTime?): MovieRecord</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/values-row/","title":"valuesRow - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/valuesRow</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/values-row/#valuesrow","title":"valuesRow","text":"<p>[jvm]\\ open override fun valuesRow(): Row6&lt;Long?, String?, String?, Int?, LocalDateTime?, LocalDateTime?&gt;</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/values/","title":"values - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/values</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/values/#values","title":"values","text":"<p>[jvm]\\ open override fun values(value1: Long?, value2: String?, value3: String?, value4: Int?, value5: LocalDateTime?, value6: LocalDateTime?): MovieRecord</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/version/","title":"version - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.records/MovieRecord/version</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/version/#version","title":"version","text":"<p>[jvm]\\ var version: Int?</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.references/","title":"Package misk.jooq.testgen.tables.references - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.references</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.references/#package-miskjooqtestgentablesreferences","title":"Package misk.jooq.testgen.tables.references","text":""},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.references/#properties","title":"Properties","text":"Name Summary MOVIE [jvm]val MOVIE: MovieThe table <code>jooq.movie</code>."},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.references/-m-o-v-i-e/","title":"MOVIE - Misk","text":"<p>//misk-jooq/misk.jooq.testgen.tables.references/MOVIE</p>"},{"location":"0.x/misk-jooq/misk-jooq/misk.jooq.testgen.tables.references/-m-o-v-i-e/#movie","title":"MOVIE","text":"<p>[jvm]\\ val MOVIE: Movie</p> <p>The table <code>jooq.movie</code>.</p>"},{"location":"0.x/misk-launchdarkly/","title":"misk-launchdarkly - Misk","text":"<p>//misk-launchdarkly</p>"},{"location":"0.x/misk-launchdarkly/#misk-launchdarkly","title":"misk-launchdarkly","text":""},{"location":"0.x/misk-launchdarkly/#packages","title":"Packages","text":"Name misk.feature.launchdarkly"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/","title":"Package misk.feature.launchdarkly - Misk","text":"<p>//misk-launchdarkly/misk.feature.launchdarkly</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/#package-miskfeaturelaunchdarkly","title":"Package misk.feature.launchdarkly","text":""},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/#types","title":"Types","text":"Name Summary LaunchDarklyConfig [jvm]data class LaunchDarklyConfig@JvmOverloadsconstructor(sdk_key: String, base_uri: String, ssl: HttpClientSSLConfig?) : Config LaunchDarklyModule [jvm]class LaunchDarklyModule@JvmOverloadsconstructor(config: LaunchDarklyConfig, qualifier: KClass&lt;out Annotation&gt;?) : KAbstractModuleBinds a FeatureFlags backed by LaunchDarkly (https://launchdarkly.com)."},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/","title":"LaunchDarklyConfig - Misk","text":"<p>//misk-launchdarkly/misk.feature.launchdarkly/LaunchDarklyConfig</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/#launchdarklyconfig","title":"LaunchDarklyConfig","text":"<p>[jvm]\\ data class LaunchDarklyConfig@JvmOverloadsconstructor(sdk_key: String, base_uri: String, ssl: HttpClientSSLConfig?) : Config</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/#properties","title":"Properties","text":"Name Summary base_uri [jvm]val base_uri: String sdk_key [jvm]val sdk_key: String ssl [jvm]val ssl: HttpClientSSLConfig? = null"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/-launch-darkly-config/","title":"LaunchDarklyConfig - Misk","text":"<p>//misk-launchdarkly/misk.feature.launchdarkly/LaunchDarklyConfig/LaunchDarklyConfig</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/-launch-darkly-config/#launchdarklyconfig","title":"LaunchDarklyConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun LaunchDarklyConfig(sdk_key: String, base_uri: String, ssl: HttpClientSSLConfig? = null)</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/base_uri/","title":"base_uri - Misk","text":"<p>//misk-launchdarkly/misk.feature.launchdarkly/LaunchDarklyConfig/base_uri</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/base_uri/#base_uri","title":"base_uri","text":"<p>[jvm]\\ val base_uri: String</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/sdk_key/","title":"sdk_key - Misk","text":"<p>//misk-launchdarkly/misk.feature.launchdarkly/LaunchDarklyConfig/sdk_key</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/sdk_key/#sdk_key","title":"sdk_key","text":"<p>[jvm]\\ val sdk_key: String</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/ssl/","title":"ssl - Misk","text":"<p>//misk-launchdarkly/misk.feature.launchdarkly/LaunchDarklyConfig/ssl</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/ssl/#ssl","title":"ssl","text":"<p>[jvm]\\ val ssl: HttpClientSSLConfig? = null</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/","title":"LaunchDarklyModule - Misk","text":"<p>//misk-launchdarkly/misk.feature.launchdarkly/LaunchDarklyModule</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/#launchdarklymodule","title":"LaunchDarklyModule","text":"<p>[jvm]\\ class LaunchDarklyModule@JvmOverloadsconstructor(config: LaunchDarklyConfig, qualifier: KClass&lt;out Annotation&gt;?) : KAbstractModule</p> <p>Binds a FeatureFlags backed by LaunchDarkly (https://launchdarkly.com).</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/#constructors","title":"Constructors","text":"LaunchDarklyModule [jvm]@JvmOverloadsfun LaunchDarklyModule(config: LaunchDarklyConfig, qualifier: KClass&lt;out Annotation&gt;? = null)"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideLaunchDarklyClient [jvm]@Providesfun provideLaunchDarklyClient(sslLoader: SslLoader, sslContextFactory: SslContextFactory, resourceLoader: ResourceLoader): LDClientInterface requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/-launch-darkly-module/","title":"LaunchDarklyModule - Misk","text":"<p>//misk-launchdarkly/misk.feature.launchdarkly/LaunchDarklyModule/LaunchDarklyModule</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/-launch-darkly-module/#launchdarklymodule","title":"LaunchDarklyModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun LaunchDarklyModule(config: LaunchDarklyConfig, qualifier: KClass&lt;out Annotation&gt;? = null)</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/provide-launch-darkly-client/","title":"provideLaunchDarklyClient - Misk","text":"<p>//misk-launchdarkly/misk.feature.launchdarkly/LaunchDarklyModule/provideLaunchDarklyClient</p>"},{"location":"0.x/misk-launchdarkly/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/provide-launch-darkly-client/#providelaunchdarklyclient","title":"provideLaunchDarklyClient","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>fun provideLaunchDarklyClient(sslLoader: SslLoader, sslContextFactory: SslContextFactory, resourceLoader: ResourceLoader): LDClientInterface</p>"},{"location":"0.x/misk-launchdarkly-core/","title":"misk-launchdarkly-core - Misk","text":"<p>//misk-launchdarkly-core</p>"},{"location":"0.x/misk-launchdarkly-core/#misk-launchdarkly-core","title":"misk-launchdarkly-core","text":""},{"location":"0.x/misk-launchdarkly-core/#packages","title":"Packages","text":"Name misk.feature.launchdarkly"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/","title":"Package misk.feature.launchdarkly - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/#package-miskfeaturelaunchdarkly","title":"Package misk.feature.launchdarkly","text":""},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/#types","title":"Types","text":"Name Summary LaunchDarklyDynamicConfig [jvm]@Singletonclass LaunchDarklyDynamicConfig(featureFlags: FeatureFlags) : DynamicConfig LaunchDarklyFeatureFlags [jvm]@Singletonclass LaunchDarklyFeatureFlags@Injectconstructor(delegate: LaunchDarklyFeatureFlags) : AbstractIdleService, FeatureFlags, FeatureServiceImplementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation."},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/","title":"LaunchDarklyDynamicConfig - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/#launchdarklydynamicconfig","title":"LaunchDarklyDynamicConfig","text":"<p>[jvm]\\ @Singleton</p> <p>class LaunchDarklyDynamicConfig(featureFlags: FeatureFlags) : DynamicConfig</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/#functions","title":"Functions","text":"Name Summary getBoolean [jvm]open override fun getBoolean(feature: Feature): Boolean getDouble [jvm]open override fun getDouble(feature: Feature): Double getEnum [jvm]open override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, clazz: Class&lt;T&gt;): T getInt [jvm]open override fun getInt(feature: Feature): Int getJson [jvm]open override fun &lt;T&gt; getJson(feature: Feature, clazz: Class&lt;T&gt;): T getString [jvm]open override fun getString(feature: Feature): String trackBoolean [jvm]open override fun trackBoolean(feature: Feature, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference trackDouble [jvm]open override fun trackDouble(feature: Feature, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference trackEnum [jvm]open override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference trackInt [jvm]open override fun trackInt(feature: Feature, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference trackJson [jvm]open override fun &lt;T&gt; trackJson(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference trackString [jvm]open override fun trackString(feature: Feature, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-launch-darkly-dynamic-config/","title":"LaunchDarklyDynamicConfig - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/LaunchDarklyDynamicConfig</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-launch-darkly-dynamic-config/#launchdarklydynamicconfig","title":"LaunchDarklyDynamicConfig","text":"<p>[jvm]\\ fun LaunchDarklyDynamicConfig(featureFlags: FeatureFlags)</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-boolean/","title":"getBoolean - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/getBoolean</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-boolean/#getboolean","title":"getBoolean","text":"<p>[jvm]\\ open override fun getBoolean(feature: Feature): Boolean</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-double/","title":"getDouble - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/getDouble</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-double/#getdouble","title":"getDouble","text":"<p>[jvm]\\ open override fun getDouble(feature: Feature): Double</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-enum/","title":"getEnum - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/getEnum</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-enum/#getenum","title":"getEnum","text":"<p>[jvm]\\ open override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, clazz: Class&lt;T&gt;): T</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-int/","title":"getInt - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/getInt</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-int/#getint","title":"getInt","text":"<p>[jvm]\\ open override fun getInt(feature: Feature): Int</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-json/","title":"getJson - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/getJson</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-json/#getjson","title":"getJson","text":"<p>[jvm]\\ open override fun &lt;T&gt; getJson(feature: Feature, clazz: Class&lt;T&gt;): T</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-string/","title":"getString - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/getString</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-string/#getstring","title":"getString","text":"<p>[jvm]\\ open override fun getString(feature: Feature): String</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-boolean/","title":"trackBoolean - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/trackBoolean</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-boolean/#trackboolean","title":"trackBoolean","text":"<p>[jvm]\\ open override fun trackBoolean(feature: Feature, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-double/","title":"trackDouble - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/trackDouble</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-double/#trackdouble","title":"trackDouble","text":"<p>[jvm]\\ open override fun trackDouble(feature: Feature, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-enum/","title":"trackEnum - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/trackEnum</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-enum/#trackenum","title":"trackEnum","text":"<p>[jvm]\\ open override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-int/","title":"trackInt - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/trackInt</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-int/#trackint","title":"trackInt","text":"<p>[jvm]\\ open override fun trackInt(feature: Feature, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-json/","title":"trackJson - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/trackJson</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-json/#trackjson","title":"trackJson","text":"<p>[jvm]\\ open override fun &lt;T&gt; trackJson(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-string/","title":"trackString - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/trackString</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-string/#trackstring","title":"trackString","text":"<p>[jvm]\\ open override fun trackString(feature: Feature, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-companion/","title":"Companion - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/Companion</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-companion/#properties","title":"Properties","text":"Name Summary ATTRIBUTES [jvm]val ATTRIBUTES: Attributes KEY [jvm]const val KEY: String"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-companion/-a-t-t-r-i-b-u-t-e-s/","title":"ATTRIBUTES - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/Companion/ATTRIBUTES</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-companion/-a-t-t-r-i-b-u-t-e-s/#attributes","title":"ATTRIBUTES","text":"<p>[jvm]\\ val ATTRIBUTES: Attributes</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-companion/-k-e-y/","title":"KEY - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyDynamicConfig/Companion/KEY</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-companion/-k-e-y/#key","title":"KEY","text":"<p>[jvm]\\ const val KEY: String</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/","title":"LaunchDarklyFeatureFlags - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/#launchdarklyfeatureflags","title":"LaunchDarklyFeatureFlags","text":"<p>[jvm]\\ @Singleton</p> <p>class LaunchDarklyFeatureFlags@Injectconstructor(delegate: LaunchDarklyFeatureFlags) : AbstractIdleService, FeatureFlags, FeatureService</p> <p>Implementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation.</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/#constructors","title":"Constructors","text":"LaunchDarklyFeatureFlags [jvm]@Injectfun LaunchDarklyFeatureFlags(delegate: LaunchDarklyFeatureFlags)"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable get [jvm]open override fun get(flag: BooleanFeatureFlag): Booleanopen override fun get(flag: DoubleFeatureFlag): Doubleopen override fun &lt;T : Enum&lt;T&gt;&gt; get(flag: EnumFeatureFlag&lt;T&gt;): Topen override fun get(flag: IntFeatureFlag): Intopen override fun &lt;T : Any&gt; get(flag: JsonFeatureFlag&lt;T&gt;): Topen override fun get(flag: StringFeatureFlag): String getBoolean [jvm]open fun getBoolean(feature: Feature, key: String): Booleanopen override fun getBoolean(feature: Feature, key: String, attributes: Attributes): Boolean getDouble [jvm]open fun getDouble(feature: Feature, key: String): Doubleopen override fun getDouble(feature: Feature, key: String, attributes: Attributes): Double getEnum [jvm]open fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;): Topen override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T getInt [jvm]open fun getInt(feature: Feature, key: String): Intopen override fun getInt(feature: Feature, key: String, attributes: Attributes): Int getJson [jvm]open fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;): Topen override fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T getString [jvm]open fun getString(feature: Feature, key: String): Stringopen override fun getString(feature: Feature, key: String, attributes: Attributes): String isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String trackBoolean [jvm]open fun trackBoolean(feature: Feature, key: String, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReferenceopen override fun trackBoolean(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Boolean) -&gt; Unit): &lt;ERROR CLASS&gt; trackDouble [jvm]open fun trackDouble(feature: Feature, key: String, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReferenceopen override fun trackDouble(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Double) -&gt; Unit): &lt;ERROR CLASS&gt; trackEnum [jvm]open fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceopen override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): &lt;ERROR CLASS&gt; trackInt [jvm]open fun trackInt(feature: Feature, key: String, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReferenceopen override fun trackInt(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Int) -&gt; Unit): &lt;ERROR CLASS&gt; trackJson [jvm]open fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceopen override fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): &lt;ERROR CLASS&gt; trackString [jvm]open fun trackString(feature: Feature, key: String, executor: Executor, tracker: (String) -&gt; Unit): TrackerReferenceopen override fun trackString(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (String) -&gt; Unit): &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/-launch-darkly-feature-flags/","title":"LaunchDarklyFeatureFlags - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/LaunchDarklyFeatureFlags</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/-launch-darkly-feature-flags/#launchdarklyfeatureflags","title":"LaunchDarklyFeatureFlags","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun LaunchDarklyFeatureFlags(delegate: LaunchDarklyFeatureFlags)</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-boolean/","title":"getBoolean - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/getBoolean</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-boolean/#getboolean","title":"getBoolean","text":"<p>[jvm]\\ open override fun getBoolean(feature: Feature, key: String, attributes: Attributes): Boolean</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-double/","title":"getDouble - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/getDouble</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-double/#getdouble","title":"getDouble","text":"<p>[jvm]\\ open override fun getDouble(feature: Feature, key: String, attributes: Attributes): Double</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-enum/","title":"getEnum - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/getEnum</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-enum/#getenum","title":"getEnum","text":"<p>[jvm]\\ open override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-int/","title":"getInt - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/getInt</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-int/#getint","title":"getInt","text":"<p>[jvm]\\ open override fun getInt(feature: Feature, key: String, attributes: Attributes): Int</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-json/","title":"getJson - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/getJson</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-json/#getjson","title":"getJson","text":"<p>[jvm]\\ open override fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-string/","title":"getString - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/getString</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-string/#getstring","title":"getString","text":"<p>[jvm]\\ open override fun getString(feature: Feature, key: String, attributes: Attributes): String</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get/","title":"get - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/get</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(flag: BooleanFeatureFlag): Boolean</p> <p>open override fun get(flag: StringFeatureFlag): String</p> <p>open override fun get(flag: IntFeatureFlag): Int</p> <p>open override fun get(flag: DoubleFeatureFlag): Double</p> <p>open override fun &lt;T : Enum&lt;T&gt;&gt; get(flag: EnumFeatureFlag&lt;T&gt;): T</p> <p>open override fun &lt;T : Any&gt; get(flag: JsonFeatureFlag&lt;T&gt;): T</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-boolean/","title":"trackBoolean - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/trackBoolean</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-boolean/#trackboolean","title":"trackBoolean","text":"<p>[jvm]\\ open override fun trackBoolean(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Boolean) -&gt; Unit): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-double/","title":"trackDouble - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/trackDouble</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-double/#trackdouble","title":"trackDouble","text":"<p>[jvm]\\ open override fun trackDouble(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Double) -&gt; Unit): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-enum/","title":"trackEnum - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/trackEnum</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-enum/#trackenum","title":"trackEnum","text":"<p>[jvm]\\ open override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-int/","title":"trackInt - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/trackInt</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-int/#trackint","title":"trackInt","text":"<p>[jvm]\\ open override fun trackInt(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Int) -&gt; Unit): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-json/","title":"trackJson - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/trackJson</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-json/#trackjson","title":"trackJson","text":"<p>[jvm]\\ open override fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-string/","title":"trackString - Misk","text":"<p>//misk-launchdarkly-core/misk.feature.launchdarkly/LaunchDarklyFeatureFlags/trackString</p>"},{"location":"0.x/misk-launchdarkly-core/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-string/#trackstring","title":"trackString","text":"<p>[jvm]\\ open override fun trackString(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (String) -&gt; Unit): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-lease/","title":"misk-lease - Misk","text":"<p>//misk-lease</p>"},{"location":"0.x/misk-lease/#misk-lease","title":"misk-lease","text":""},{"location":"0.x/misk-lease/#packages","title":"Packages","text":"Name misk.lease"},{"location":"0.x/misk-lease/misk-lease/misk.lease/","title":"Package misk.lease - Misk","text":"<p>//misk-lease/misk.lease</p>"},{"location":"0.x/misk-lease/misk-lease/misk.lease/#package-misklease","title":"Package misk.lease","text":""},{"location":"0.x/misk-lease/misk-lease/misk.lease/#types","title":"Types","text":"Name Summary LeaseService [jvm]@Singletonclass LeaseService@Injectconstructor(leaseManager: LeaseManager) : AbstractIdleService"},{"location":"0.x/misk-lease/misk-lease/misk.lease/-lease-service/","title":"LeaseService - Misk","text":"<p>//misk-lease/misk.lease/LeaseService</p>"},{"location":"0.x/misk-lease/misk-lease/misk.lease/-lease-service/#leaseservice","title":"LeaseService","text":"<p>[jvm]\\ @Singleton</p> <p>class LeaseService@Injectconstructor(leaseManager: LeaseManager) : AbstractIdleService</p>"},{"location":"0.x/misk-lease/misk-lease/misk.lease/-lease-service/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-lease/misk-lease/misk.lease/-lease-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-lease/misk-lease/misk.lease/-lease-service/-lease-service/","title":"LeaseService - Misk","text":"<p>//misk-lease/misk.lease/LeaseService/LeaseService</p>"},{"location":"0.x/misk-lease/misk-lease/misk.lease/-lease-service/-lease-service/#leaseservice","title":"LeaseService","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun LeaseService(leaseManager: LeaseManager)</p>"},{"location":"0.x/misk-lease/misk-lease/misk.lease/-lease-service/-companion/","title":"Companion - Misk","text":"<p>//misk-lease/misk.lease/LeaseService/Companion</p>"},{"location":"0.x/misk-lease/misk-lease/misk.lease/-lease-service/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-metrics/","title":"misk-metrics - Misk","text":"<p>//misk-metrics</p>"},{"location":"0.x/misk-metrics/#misk-metrics","title":"misk-metrics","text":""},{"location":"0.x/misk-metrics/#packages","title":"Packages","text":"Name misk.metrics misk.metrics.v2"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/","title":"Package misk.metrics - Misk","text":"<p>//misk-metrics/misk.metrics</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/#package-miskmetrics","title":"Package misk.metrics","text":""},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/#types","title":"Types","text":"Name Summary Histogram [jvm]interface HistogramSkeleton for the functionality of histograms MetricsModule [jvm]class MetricsModule : KAbstractModule"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/#properties","title":"Properties","text":"Name Summary defaultQuantiles [jvm]val defaultQuantiles: &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/default-quantiles/","title":"defaultQuantiles - Misk","text":"<p>//misk-metrics/misk.metrics/defaultQuantiles</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/default-quantiles/#defaultquantiles","title":"defaultQuantiles","text":"<p>[jvm]\\ val defaultQuantiles: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/","title":"Histogram - Misk","text":"<p>//misk-metrics/misk.metrics/Histogram</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/#histogram","title":"Histogram","text":"<p>[jvm]\\ interface Histogram</p> <p>Skeleton for the functionality of histograms</p> <p>A histogram samples observations (usually things like request durations or response sizes) and counts them in configurable buckets.</p> <p>A sample implementation can be found in PrometheusHistogram</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/#functions","title":"Functions","text":"Name Summary count [jvm]open fun count(vararg labelValues: String): Intreturns the number of buckets getHistogram [jvm]abstract fun getHistogram(): Summary record [jvm]open fun record(duration: Double, vararg labelValues: String)records a new set of labels and accompanying duration timedMills [jvm]open fun &lt;T&gt; timedMills(vararg labelValues: String, work: () -&gt; T): Trecords a new set of labels and the time to execute the work lambda in milliseconds"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/count/","title":"count - Misk","text":"<p>//misk-metrics/misk.metrics/Histogram/count</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/count/#count","title":"count","text":"<p>[jvm]\\ open fun count(vararg labelValues: String): Int</p> <p>returns the number of buckets</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/get-histogram/","title":"getHistogram - Misk","text":"<p>//misk-metrics/misk.metrics/Histogram/getHistogram</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/get-histogram/#gethistogram","title":"getHistogram","text":"<p>[jvm]\\ abstract fun getHistogram(): Summary</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/record/","title":"record - Misk","text":"<p>//misk-metrics/misk.metrics/Histogram/record</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/record/#record","title":"record","text":"<p>[jvm]\\ open fun record(duration: Double, vararg labelValues: String)</p> <p>records a new set of labels and accompanying duration</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/timed-mills/","title":"timedMills - Misk","text":"<p>//misk-metrics/misk.metrics/Histogram/timedMills</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/timed-mills/#timedmills","title":"timedMills","text":"<p>[jvm]\\ open fun &lt;T&gt; timedMills(vararg labelValues: String, work: () -&gt; T): T</p> <p>records a new set of labels and the time to execute the work lambda in milliseconds</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/-companion/","title":"Companion - Misk","text":"<p>//misk-metrics/misk.metrics/Histogram/Companion</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/-companion/#functions","title":"Functions","text":"Name Summary factory [jvm]fun factory(summary: Summary): Histogram"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/-companion/factory/","title":"factory - Misk","text":"<p>//misk-metrics/misk.metrics/Histogram/Companion/factory</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-histogram/-companion/factory/#factory","title":"factory","text":"<p>[jvm]\\ fun factory(summary: Summary): Histogram</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-metrics-module/","title":"MetricsModule - Misk","text":"<p>//misk-metrics/misk.metrics/MetricsModule</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-metrics-module/#metricsmodule","title":"MetricsModule","text":"<p>[jvm]\\ class MetricsModule : KAbstractModule</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-metrics-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-metrics-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-metrics-module/-metrics-module/","title":"MetricsModule - Misk","text":"<p>//misk-metrics/misk.metrics/MetricsModule/MetricsModule</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics/-metrics-module/-metrics-module/#metricsmodule","title":"MetricsModule","text":"<p>[jvm]\\ fun MetricsModule()</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/","title":"Package misk.metrics.v2 - Misk","text":"<p>//misk-metrics/misk.metrics.v2</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/#package-miskmetricsv2","title":"Package misk.metrics.v2","text":""},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/#types","title":"Types","text":"Name Summary Metrics [jvm]interface MetricsInterface for application code to emit metrics to a metrics backend like Prometheus. PeakGauge [jvm]@ThreadSafeclass PeakGauge : SimpleCollector&lt;PeakGauge.Child&gt; A peak gauge is a variant of a io.prometheus.client.Gauge that resets to an initial value of 0 after a metric collection."},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/#functions","title":"Functions","text":"Name Summary exponentialBuckets [jvm]fun exponentialBuckets(start: Double, factor: Double, count: Int): List&lt;Double&gt;Generate a list of upper bounds of buckets for a histogram with an exponential sequence. linearBuckets [jvm]fun linearBuckets(start: Double, width: Double, count: Int): List&lt;Double&gt;Generate a list of upper bounds of buckets for a histogram with a linear sequence."},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/#properties","title":"Properties","text":"Name Summary defaultBuckets [jvm]val defaultBuckets: &lt;ERROR CLASS&gt;defaultBuckets is a default set of buckets which assumes the value is in milliseconds (ms). defaultQuantiles [jvm]val defaultQuantiles: &lt;ERROR CLASS&gt; defaultSparseBuckets [jvm]val defaultSparseBuckets: &lt;ERROR CLASS&gt;defaultSparseBuckets is a default set of buckets which assumes the value is in milliseconds (ms)."},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/default-buckets/","title":"defaultBuckets - Misk","text":"<p>//misk-metrics/misk.metrics.v2/defaultBuckets</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/default-buckets/#defaultbuckets","title":"defaultBuckets","text":"<p>[jvm]\\ val defaultBuckets: &lt;ERROR CLASS&gt;</p> <p>defaultBuckets is a default set of buckets which assumes the value is in milliseconds (ms).</p> <p>It contains 58 buckets which range from 1ms to 1hr.</p> <p>Adapted from the default M3 buckets.</p> <p>https://github.com/m3db/m3/blob/v1.1.0/src/x/instrument/methods.go#L57-L83</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/default-quantiles/","title":"defaultQuantiles - Misk","text":"<p>//misk-metrics/misk.metrics.v2/defaultQuantiles</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/default-quantiles/#defaultquantiles","title":"defaultQuantiles","text":"<p>[jvm]\\ val defaultQuantiles: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/default-sparse-buckets/","title":"defaultSparseBuckets - Misk","text":"<p>//misk-metrics/misk.metrics.v2/defaultSparseBuckets</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/default-sparse-buckets/#defaultsparsebuckets","title":"defaultSparseBuckets","text":"<p>[jvm]\\ val defaultSparseBuckets: &lt;ERROR CLASS&gt;</p> <p>defaultSparseBuckets is a default set of buckets which assumes the value is in milliseconds (ms).</p> <p>It contains 21 buckets which range from 1ms to 8m.</p> <p>Adapted from the default M3 buckets.</p> <p>https://github.com/m3db/m3/blob/v1.1.0/src/x/instrument/methods.go#L85-L147</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/exponential-buckets/","title":"exponentialBuckets - Misk","text":"<p>//misk-metrics/misk.metrics.v2/exponentialBuckets</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/exponential-buckets/#exponentialbuckets","title":"exponentialBuckets","text":"<p>[jvm]\\ fun exponentialBuckets(start: Double, factor: Double, count: Int): List&lt;Double&gt;</p> <p>Generate a list of upper bounds of buckets for a histogram with an exponential sequence.</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/linear-buckets/","title":"linearBuckets - Misk","text":"<p>//misk-metrics/misk.metrics.v2/linearBuckets</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/linear-buckets/#linearbuckets","title":"linearBuckets","text":"<p>[jvm]\\ fun linearBuckets(start: Double, width: Double, count: Int): List&lt;Double&gt;</p> <p>Generate a list of upper bounds of buckets for a histogram with a linear sequence.</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/","title":"Metrics - Misk","text":"<p>//misk-metrics/misk.metrics.v2/Metrics</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/#metrics","title":"Metrics","text":"<p>[jvm]\\ interface Metrics</p> <p>Interface for application code to emit metrics to a metrics backend like Prometheus.</p> <p>NOTE: misk.metrics.v2.Metrics is NOT backward compatible with misk.metrics.Metrics. This is because the metric type of the histogram(\u2026) function has changed. If a callsite which used misk.metrics.Metrics.histogram(\u2026) is upgraded to use misk.metrics.v2.Metrics.histogram(\u2026), the dashboards and monitors based on the metric will break because the data type of the metric will have changed.</p> <p>Tests that use this should install a metrics client like PrometheusMetricsClientModule. Services that use this should install a metrics service like PrometheusMetricsServiceModule.</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/#functions","title":"Functions","text":"Name Summary counter [jvm]open fun counter(name: String, help: String, labelNames: List&lt;String&gt; = listOf()): Countercounter creates and registers a new Counter prometheus type. gauge [jvm]open fun gauge(name: String, help: String = \u201c\u201d, labelNames: List&lt;String&gt; = listOf()): Gaugegauge creates and registers a new Gauge prometheus type. getRegistry [jvm]abstract fun getRegistry(): CollectorRegistry histogram [jvm]open fun histogram(name: String, help: String = \u201c\u201d, labelNames: List&lt;String&gt; = listOf(), buckets: List&lt;Double&gt; = defaultBuckets): Histogramhistogram creates a new Histogram prometheus type with the supplied parameters. peakGauge [jvm]open fun peakGauge(name: String, help: String = \u201c\u201d, labelNames: List&lt;String&gt; = listOf()): PeakGaugepeakGauge creates and registers a new Gauge prometheus type that resets to its initial value after each metrics collection. summary [jvm]open fun summary(name: String, help: String = \u201c\u201d, labelNames: List&lt;String&gt; = listOf(), quantiles: Map&lt;Double, Double&gt; = defaultQuantiles, maxAgeSeconds: Long? = null): &lt;ERROR CLASS&gt;summary creates and registers a new Summary prometheus type."},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/counter/","title":"counter - Misk","text":"<p>//misk-metrics/misk.metrics.v2/Metrics/counter</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/counter/#counter","title":"counter","text":"<p>[jvm]\\ open fun counter(name: String, help: String, labelNames: List&lt;String&gt; = listOf()): Counter</p> <p>counter creates and registers a new Counter prometheus type.</p> <p>See https://prometheus.github.io/client_java/io/prometheus/client/Counter.html for more info.</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/counter/#parameters","title":"Parameters","text":"<p>jvm</p> name the name of the metric which will be supplied to prometheus. Must be unique across all metric types. help human-readable help text that will be supplied to prometheus. labelNames the names (a.k.a. keys) of all the labels that will be used for this metric."},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/gauge/","title":"gauge - Misk","text":"<p>//misk-metrics/misk.metrics.v2/Metrics/gauge</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/gauge/#gauge","title":"gauge","text":"<p>[jvm]\\ open fun gauge(name: String, help: String = \u201c\u201d, labelNames: List&lt;String&gt; = listOf()): Gauge</p> <p>gauge creates and registers a new Gauge prometheus type.</p> <p>See https://prometheus.github.io/client_java/io/prometheus/client/Gauge.html for more info.</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/gauge/#parameters","title":"Parameters","text":"<p>jvm</p> name the name of the metric which will be supplied to prometheus. Must be unique across all metric types. help human-readable help text that will be supplied to prometheus. labelNames the names (a.k.a. keys) of all the labels that will be used for this metric."},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/get-registry/","title":"getRegistry - Misk","text":"<p>//misk-metrics/misk.metrics.v2/Metrics/getRegistry</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/get-registry/#getregistry","title":"getRegistry","text":"<p>[jvm]\\ abstract fun getRegistry(): CollectorRegistry</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/histogram/","title":"histogram - Misk","text":"<p>//misk-metrics/misk.metrics.v2/Metrics/histogram</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/histogram/#histogram","title":"histogram","text":"<p>[jvm]\\ open fun histogram(name: String, help: String = \u201c\u201d, labelNames: List&lt;String&gt; = listOf(), buckets: List&lt;Double&gt; = defaultBuckets): Histogram</p> <p>histogram creates a new Histogram prometheus type with the supplied parameters.</p> <p>NOTE: misk.metrics.v2.Metrics is NOT backward compatible with misk.metrics.Metrics. This is because the metric type of the histogram(\u2026) function has changed. If a callsite which used misk.metrics.Metrics.histogram(\u2026) is upgraded to use misk.metrics.v2.Metrics.histogram(\u2026), the dashboards and monitors based on the metric will break because the data type of the metric will have changed.</p> <p>See https://prometheus.github.io/client_java/io/prometheus/client/Histogram.html for more info.</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/histogram/#parameters","title":"Parameters","text":"<p>jvm</p> name the name of the metric which will be supplied to prometheus. Must be unique across all metric types. help human-readable help text that will be supplied to prometheus. labelNames the names (a.k.a. keys) of all the labels that will be used for this metric. buckets a list of upper bounds of buckets for the histogram."},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/peak-gauge/","title":"peakGauge - Misk","text":"<p>//misk-metrics/misk.metrics.v2/Metrics/peakGauge</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/peak-gauge/#peakgauge","title":"peakGauge","text":"<p>[jvm]\\ open fun peakGauge(name: String, help: String = \u201c\u201d, labelNames: List&lt;String&gt; = listOf()): PeakGauge</p> <p>peakGauge creates and registers a new Gauge prometheus type that resets to its initial value after each metrics collection.</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/peak-gauge/#parameters","title":"Parameters","text":"<p>jvm</p> name the name of the metric which will be supplied to prometheus. Must be unique across all metric types. help human-readable help text that will be supplied to prometheus. labelNames the names (a.k.a. keys) of all the labels that will be used for this metric."},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/summary/","title":"summary - Misk","text":"<p>//misk-metrics/misk.metrics.v2/Metrics/summary</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/summary/#summary","title":"summary","text":"<p>[jvm]\\ open fun summary(name: String, help: String = \u201c\u201d, labelNames: List&lt;String&gt; = listOf(), quantiles: Map&lt;Double, Double&gt; = defaultQuantiles, maxAgeSeconds: Long? = null): &lt;ERROR CLASS&gt;</p> <p>summary creates and registers a new Summary prometheus type.</p> <p>See https://prometheus.github.io/client_java/io/prometheus/client/Summary.html for more info.</p> <p>NB: Summaries can be an order of magnitude more expensive than histograms in terms of CPU. Unless you require the specific properties of a summary, consider using histogram instead.</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/summary/#parameters","title":"Parameters","text":"<p>jvm</p> name the name of the metric which will be supplied to prometheus. Must be unique across all metric types. help human-readable help text that will be supplied to prometheus. labelNames the names (a.k.a. keys) of all the labels that will be used for this metric. quantiles is a map of all of the quantiles (a.k.a. percentiles) that will be computed for the metric. The key of the map is the quantile as a ratio (e.g. 0.99 represents p99) and the value is the \u201ctolerable error\u201d of the computed quantile."},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/-companion/","title":"Companion - Misk","text":"<p>//misk-metrics/misk.metrics.v2/Metrics/Companion</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/-companion/#functions","title":"Functions","text":"Name Summary factory [jvm]fun factory(registry: CollectorRegistry): Metrics"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/-companion/factory/","title":"factory - Misk","text":"<p>//misk-metrics/misk.metrics.v2/Metrics/Companion/factory</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-metrics/-companion/factory/#factory","title":"factory","text":"<p>[jvm]\\ fun factory(registry: CollectorRegistry): Metrics</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/","title":"PeakGauge - Misk","text":"<p>//misk-metrics/misk.metrics.v2/PeakGauge</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/#peakgauge","title":"PeakGauge","text":"<p>[jvm]\\ @ThreadSafe</p> <p>class PeakGauge : SimpleCollector&lt;PeakGauge.Child&gt; </p> <p>A peak gauge is a variant of a io.prometheus.client.Gauge that resets to an initial value of 0 after a metric collection.</p> <p>This is useful for accurately capturing maximum observed values over time. In contrast to the histogram maximum which tracks the maximum value in its sampling window. That sampling window typically covers multiple metric collections.</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/#constructors","title":"Constructors","text":"PeakGauge [jvm]fun PeakGauge(builder: PeakGauge.Builder)"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/#types","title":"Types","text":"Name Summary Builder [jvm]class Builder : SimpleCollector.Builder&lt;PeakGauge.Builder, PeakGauge&gt; Child [jvm]class Child Companion [jvm]object Companion"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/#functions","title":"Functions","text":"Name Summary clear [jvm]open fun clear() collect [jvm]open override fun collect(): MutableList&lt;Collector.MetricFamilySamples&gt;open fun collect(p0: Predicate&lt;String&gt;): MutableList&lt;Collector.MetricFamilySamples&gt; familySamplesList [jvm]open fun familySamplesList(p0: Collector.Type, p1: MutableList&lt;Collector.MetricFamilySamples.Sample&gt;): MutableList&lt;Collector.MetricFamilySamples&gt; initializeNoLabelsChild [jvm]open fun initializeNoLabelsChild() labels [jvm]open fun labels(vararg p0: String): PeakGauge.Child record [jvm]fun record(newValue: Double)Convenience method for recording values without labels register [jvm]open fun &lt;T : Collector&gt; register(): Topen fun &lt;T : Collector&gt; register(p0: CollectorRegistry): T remove [jvm]open fun remove(vararg p0: String) setChild [jvm]open fun &lt;T : Collector&gt; setChild(p0: PeakGauge.Child, vararg p1: String): T"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/#properties","title":"Properties","text":"Name Summary children [jvm]val children: ConcurrentMap&lt;MutableList&lt;String&gt;, PeakGauge.Child&gt; fullname [jvm]val fullname: String help [jvm]val help: String labelNames [jvm]val labelNames: MutableList&lt;String&gt; noLabelsChild [jvm]val noLabelsChild: PeakGauge.Child unit [jvm]val unit: String"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-peak-gauge/","title":"PeakGauge - Misk","text":"<p>//misk-metrics/misk.metrics.v2/PeakGauge/PeakGauge</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-peak-gauge/#peakgauge","title":"PeakGauge","text":"<p>[jvm]\\ fun PeakGauge(builder: PeakGauge.Builder)</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/collect/","title":"collect - Misk","text":"<p>//misk-metrics/misk.metrics.v2/PeakGauge/collect</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/collect/#collect","title":"collect","text":"<p>[jvm]\\ open override fun collect(): MutableList&lt;Collector.MetricFamilySamples&gt;</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/record/","title":"record - Misk","text":"<p>//misk-metrics/misk.metrics.v2/PeakGauge/record</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/record/#record","title":"record","text":"<p>[jvm]\\ fun record(newValue: Double)</p> <p>Convenience method for recording values without labels</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics/misk.metrics.v2/PeakGauge/Builder</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ class Builder : SimpleCollector.Builder&lt;PeakGauge.Builder, PeakGauge&gt;</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-builder/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(): PeakGauge help [jvm]open fun help(p0: String): PeakGauge.Builder labelNames [jvm]open fun labelNames(vararg p0: String): PeakGauge.Builder name [jvm]open fun name(p0: String): PeakGauge.Builder namespace [jvm]open fun namespace(p0: String): PeakGauge.Builder register [jvm]open fun register(): PeakGaugeopen fun register(p0: CollectorRegistry): PeakGauge subsystem [jvm]open fun subsystem(p0: String): PeakGauge.Builder unit [jvm]open fun unit(p0: String): PeakGauge.Builder"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-builder/#properties","title":"Properties","text":"Name Summary dontInitializeNoLabelsChild [jvm]val dontInitializeNoLabelsChild: Boolean fullname [jvm]val fullname: String help [jvm]val help: String labelNames [jvm]val labelNames: Array&lt;String&gt; name [jvm]val name: String namespace [jvm]val namespace: String subsystem [jvm]val subsystem: String unit [jvm]val unit: String"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-builder/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics/misk.metrics.v2/PeakGauge/Builder/Builder</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-builder/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ fun Builder()</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-builder/create/","title":"create - Misk","text":"<p>//misk-metrics/misk.metrics.v2/PeakGauge/Builder/create</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-builder/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(): PeakGauge</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-child/","title":"Child - Misk","text":"<p>//misk-metrics/misk.metrics.v2/PeakGauge/Child</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-child/#child","title":"Child","text":"<p>[jvm]\\ class Child</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-child/#functions","title":"Functions","text":"Name Summary getAndClear [jvm]fun getAndClear(): DoubleReset to the initial value and return previously held value. record [jvm]fun record(newValue: Double)Updates the stored value if the new value is greater."},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-child/-child/","title":"Child - Misk","text":"<p>//misk-metrics/misk.metrics.v2/PeakGauge/Child/Child</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-child/-child/#child","title":"Child","text":"<p>[jvm]\\ fun Child()</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-child/get-and-clear/","title":"getAndClear - Misk","text":"<p>//misk-metrics/misk.metrics.v2/PeakGauge/Child/getAndClear</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-child/get-and-clear/#getandclear","title":"getAndClear","text":"<p>[jvm]\\ fun getAndClear(): Double</p> <p>Reset to the initial value and return previously held value.</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-child/record/","title":"record - Misk","text":"<p>//misk-metrics/misk.metrics.v2/PeakGauge/Child/record</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-child/record/#record","title":"record","text":"<p>[jvm]\\ fun record(newValue: Double)</p> <p>Updates the stored value if the new value is greater.</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-companion/","title":"Companion - Misk","text":"<p>//misk-metrics/misk.metrics.v2/PeakGauge/Companion</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-companion/#functions","title":"Functions","text":"Name Summary builder [jvm]fun builder(name: String, help: String): PeakGauge.Builder"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-companion/builder/","title":"builder - Misk","text":"<p>//misk-metrics/misk.metrics.v2/PeakGauge/Companion/builder</p>"},{"location":"0.x/misk-metrics/misk-metrics/misk.metrics.v2/-peak-gauge/-companion/builder/#builder","title":"builder","text":"<p>[jvm]\\ fun builder(name: String, help: String): PeakGauge.Builder</p>"},{"location":"0.x/misk-metrics-digester/","title":"misk-metrics-digester - Misk","text":"<p>//misk-metrics-digester</p>"},{"location":"0.x/misk-metrics-digester/#misk-metrics-digester","title":"misk-metrics-digester","text":""},{"location":"0.x/misk-metrics-digester/#packages","title":"Packages","text":"Name com.squareup.digester.protos.service com.squareup.digester.protos.tdigest misk.metrics.digester"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/","title":"Package com.squareup.digester.protos.service - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/#package-comsquareupdigesterprotosservice","title":"Package com.squareup.digester.protos.service","text":""},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/#types","title":"Types","text":"Name Summary DigestData [jvm]class DigestData : Message&lt;DigestData, DigestData.Builder&gt; Representation of internals of a t-digest implementation. GetDigestsRequest [jvm]class GetDigestsRequest : Message&lt;GetDigestsRequest, GetDigestsRequest.Builder&gt; GetDigestsResponse [jvm]class GetDigestsResponse : Message&lt;GetDigestsResponse, GetDigestsResponse.Builder&gt; MetricFamily [jvm]class MetricFamily : Message&lt;MetricFamily, MetricFamily.Builder&gt; A group of digest metrics all having the same name and label names."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/","title":"DigestData - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/#digestdata","title":"DigestData","text":"<p>[jvm]\\ class DigestData : Message&lt;DigestData, DigestData.Builder&gt; </p> <p>Representation of internals of a t-digest implementation.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/#constructors","title":"Constructors","text":"DigestData [jvm]open fun DigestData(count: Long, sum: Double, veneur_digest: ByteString) DigestData [jvm]open fun DigestData(count: Long, sum: Double, veneur_digest: ByteString, unknownFields: ByteString)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/#types","title":"Types","text":"Name Summary Builder [jvm]class Builder : Message.Builder&lt;DigestData, DigestData.Builder&gt;"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/#functions","title":"Functions","text":"Name Summary adapter [jvm]fun adapter(): ProtoAdapter&lt;M&gt; encode [jvm]fun encode(): Array&lt;Byte&gt;fun encode(sink: BufferedSink) encodeByteString [jvm]fun encodeByteString(): ByteString equals [jvm]open fun equals(other: Any): Boolean getCachedSerializedSize$wire_runtime [jvm]fun getCachedSerializedSize$wire_runtime(): Int hashCode [jvm]open fun hashCode(): Int newBuilder [jvm]open fun newBuilder(): DigestData.Builder setCachedSerializedSize$wire_runtime [jvm]fun setCachedSerializedSize$wire_runtime(p: Int) toString [jvm]open fun toString(): String unknownFields [jvm]fun unknownFields(): ByteString withoutUnknownFields [jvm]fun withoutUnknownFields(): M"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/#properties","title":"Properties","text":"Name Summary ADAPTER [jvm]val ADAPTER: ProtoAdapter&lt;DigestData&gt; count [jvm]val count: LongCount of values observed. DEFAULT_COUNT [jvm]val DEFAULT_COUNT: Long DEFAULT_SUM [jvm]val DEFAULT_SUM: Double DEFAULT_VENEUR_DIGEST [jvm]val DEFAULT_VENEUR_DIGEST: ByteString sum [jvm]val sum: DoubleSum of observed values. veneur_digest [jvm]val veneur_digest: ByteStringSerialized Veneur t-digest proto bytes."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-a-d-a-p-t-e-r/","title":"ADAPTER - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/ADAPTER</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-a-d-a-p-t-e-r/#adapter","title":"ADAPTER","text":"<p>[jvm]\\ val ADAPTER: ProtoAdapter&lt;DigestData&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-d-e-f-a-u-l-t_-c-o-u-n-t/","title":"DEFAULT_COUNT - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/DEFAULT_COUNT</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-d-e-f-a-u-l-t_-c-o-u-n-t/#default_count","title":"DEFAULT_COUNT","text":"<p>[jvm]\\ val DEFAULT_COUNT: Long</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-d-e-f-a-u-l-t_-s-u-m/","title":"DEFAULT_SUM - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/DEFAULT_SUM</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-d-e-f-a-u-l-t_-s-u-m/#default_sum","title":"DEFAULT_SUM","text":"<p>[jvm]\\ val DEFAULT_SUM: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-d-e-f-a-u-l-t_-v-e-n-e-u-r_-d-i-g-e-s-t/","title":"DEFAULT_VENEUR_DIGEST - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/DEFAULT_VENEUR_DIGEST</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-d-e-f-a-u-l-t_-v-e-n-e-u-r_-d-i-g-e-s-t/#default_veneur_digest","title":"DEFAULT_VENEUR_DIGEST","text":"<p>[jvm]\\ val DEFAULT_VENEUR_DIGEST: ByteString</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-digest-data/","title":"DigestData - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/DigestData</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-digest-data/#digestdata","title":"DigestData","text":"<p>[jvm]\\ open fun DigestData(count: Long, sum: Double, veneur_digest: ByteString)</p> <p>open fun DigestData(count: Long, sum: Double, veneur_digest: ByteString, unknownFields: ByteString)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/count/","title":"count - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/count</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/count/#count","title":"count","text":"<p>[jvm]\\ val count: Long</p> <p>Count of values observed.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/equals/","title":"equals - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/equals</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/equals/#equals","title":"equals","text":"<p>[jvm]\\ open fun equals(other: Any): Boolean</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/hash-code/","title":"hashCode - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/hashCode</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open fun hashCode(): Int</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/new-builder/","title":"newBuilder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/newBuilder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/new-builder/#newbuilder","title":"newBuilder","text":"<p>[jvm]\\ open fun newBuilder(): DigestData.Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/sum/","title":"sum - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/sum</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/sum/#sum","title":"sum","text":"<p>[jvm]\\ val sum: Double</p> <p>Sum of observed values.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/to-string/","title":"toString - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/toString</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open fun toString(): String</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/veneur_digest/","title":"veneur_digest - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/veneur_digest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/veneur_digest/#veneur_digest","title":"veneur_digest","text":"<p>[jvm]\\ val veneur_digest: ByteString</p> <p>Serialized Veneur t-digest proto bytes. github.com/stripe/veneur/tdigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ class Builder : Message.Builder&lt;DigestData, DigestData.Builder&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/#constructors","title":"Constructors","text":"Builder [jvm]open fun Builder()"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/#functions","title":"Functions","text":"Name Summary addUnknownField [jvm]fun addUnknownField(tag: Int, fieldEncoding: FieldEncoding, value: Any): Message.Builder&lt;M, B&gt; addUnknownFields [jvm]fun addUnknownFields(unknownFields: ByteString): Message.Builder&lt;M, B&gt; build [jvm]open fun build(): DigestData buildUnknownFields [jvm]fun buildUnknownFields(): ByteString clearUnknownFields [jvm]fun clearUnknownFields(): Message.Builder&lt;M, B&gt; count [jvm]open fun count(count: Long): DigestData.BuilderCount of values observed. getUnknownFieldsBuffer$wire_runtime [jvm]fun getUnknownFieldsBuffer$wire_runtime(): Buffer getUnknownFieldsByteString$wire_runtime [jvm]fun getUnknownFieldsByteString$wire_runtime(): ByteString getUnknownFieldsWriter$wire_runtime [jvm]fun getUnknownFieldsWriter$wire_runtime(): ProtoWriter setUnknownFieldsBuffer$wire_runtime [jvm]fun setUnknownFieldsBuffer$wire_runtime(p: Buffer) setUnknownFieldsByteString$wire_runtime [jvm]fun setUnknownFieldsByteString$wire_runtime(p: ByteString) setUnknownFieldsWriter$wire_runtime [jvm]fun setUnknownFieldsWriter$wire_runtime(p: ProtoWriter) sum [jvm]open fun sum(sum: Double): DigestData.BuilderSum of observed values. veneur_digest [jvm]open fun veneur_digest(veneur_digest: ByteString): DigestData.BuilderSerialized Veneur t-digest proto bytes."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/#properties","title":"Properties","text":"Name Summary count [jvm]open val count: Long sum [jvm]open val sum: Double veneur_digest [jvm]open val veneur_digest: ByteString"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/Builder/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ open fun Builder()</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/build/","title":"build - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/Builder/build</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/build/#build","title":"build","text":"<p>[jvm]\\ open fun build(): DigestData</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/count/","title":"count - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/Builder/count</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/count/#count","title":"count","text":"<p>[jvm]\\ open fun count(count: Long): DigestData.Builder</p> <p>Count of values observed.</p> <p>[jvm]\\ open val count: Long</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/sum/","title":"sum - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/Builder/sum</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/sum/#sum","title":"sum","text":"<p>[jvm]\\ open fun sum(sum: Double): DigestData.Builder</p> <p>Sum of observed values.</p> <p>[jvm]\\ open val sum: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/veneur_digest/","title":"veneur_digest - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/DigestData/Builder/veneur_digest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/veneur_digest/#veneur_digest","title":"veneur_digest","text":"<p>[jvm]\\ open fun veneur_digest(veneur_digest: ByteString): DigestData.Builder</p> <p>Serialized Veneur t-digest proto bytes. github.com/stripe/veneur/tdigest</p> <p>[jvm]\\ open val veneur_digest: ByteString</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/","title":"GetDigestsRequest - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/#getdigestsrequest","title":"GetDigestsRequest","text":"<p>[jvm]\\ class GetDigestsRequest : Message&lt;GetDigestsRequest, GetDigestsRequest.Builder&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/#constructors","title":"Constructors","text":"GetDigestsRequest [jvm]open fun GetDigestsRequest(windows_end_from_ms: Long, windows_end_to_ms: Long) GetDigestsRequest [jvm]open fun GetDigestsRequest(windows_end_from_ms: Long, windows_end_to_ms: Long, unknownFields: ByteString)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/#types","title":"Types","text":"Name Summary Builder [jvm]class Builder : Message.Builder&lt;GetDigestsRequest, GetDigestsRequest.Builder&gt;"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/#functions","title":"Functions","text":"Name Summary adapter [jvm]fun adapter(): ProtoAdapter&lt;M&gt; encode [jvm]fun encode(): Array&lt;Byte&gt;fun encode(sink: BufferedSink) encodeByteString [jvm]fun encodeByteString(): ByteString equals [jvm]open fun equals(other: Any): Boolean getCachedSerializedSize$wire_runtime [jvm]fun getCachedSerializedSize$wire_runtime(): Int hashCode [jvm]open fun hashCode(): Int newBuilder [jvm]open fun newBuilder(): GetDigestsRequest.Builder setCachedSerializedSize$wire_runtime [jvm]fun setCachedSerializedSize$wire_runtime(p: Int) toString [jvm]open fun toString(): String unknownFields [jvm]fun unknownFields(): ByteString withoutUnknownFields [jvm]fun withoutUnknownFields(): M"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/#properties","title":"Properties","text":"Name Summary ADAPTER [jvm]val ADAPTER: ProtoAdapter&lt;GetDigestsRequest&gt; DEFAULT_WINDOWS_END_FROM_MS [jvm]val DEFAULT_WINDOWS_END_FROM_MS: Long DEFAULT_WINDOWS_END_TO_MS [jvm]val DEFAULT_WINDOWS_END_TO_MS: Long windows_end_from_ms [jvm]val windows_end_from_ms: LongEarliest end time of windows to return, inclusive. windows_end_to_ms [jvm]val windows_end_to_ms: LongLatest end time of windows to return, inclusive."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-a-d-a-p-t-e-r/","title":"ADAPTER - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/ADAPTER</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-a-d-a-p-t-e-r/#adapter","title":"ADAPTER","text":"<p>[jvm]\\ val ADAPTER: ProtoAdapter&lt;GetDigestsRequest&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-d-e-f-a-u-l-t_-w-i-n-d-o-w-s_-e-n-d_-f-r-o-m_-m-s/","title":"DEFAULT_WINDOWS_END_FROM_MS - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/DEFAULT_WINDOWS_END_FROM_MS</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-d-e-f-a-u-l-t_-w-i-n-d-o-w-s_-e-n-d_-f-r-o-m_-m-s/#default_windows_end_from_ms","title":"DEFAULT_WINDOWS_END_FROM_MS","text":"<p>[jvm]\\ val DEFAULT_WINDOWS_END_FROM_MS: Long</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-d-e-f-a-u-l-t_-w-i-n-d-o-w-s_-e-n-d_-t-o_-m-s/","title":"DEFAULT_WINDOWS_END_TO_MS - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/DEFAULT_WINDOWS_END_TO_MS</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-d-e-f-a-u-l-t_-w-i-n-d-o-w-s_-e-n-d_-t-o_-m-s/#default_windows_end_to_ms","title":"DEFAULT_WINDOWS_END_TO_MS","text":"<p>[jvm]\\ val DEFAULT_WINDOWS_END_TO_MS: Long</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-get-digests-request/","title":"GetDigestsRequest - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/GetDigestsRequest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-get-digests-request/#getdigestsrequest","title":"GetDigestsRequest","text":"<p>[jvm]\\ open fun GetDigestsRequest(windows_end_from_ms: Long, windows_end_to_ms: Long)</p> <p>open fun GetDigestsRequest(windows_end_from_ms: Long, windows_end_to_ms: Long, unknownFields: ByteString)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/equals/","title":"equals - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/equals</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/equals/#equals","title":"equals","text":"<p>[jvm]\\ open fun equals(other: Any): Boolean</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/hash-code/","title":"hashCode - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/hashCode</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open fun hashCode(): Int</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/new-builder/","title":"newBuilder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/newBuilder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/new-builder/#newbuilder","title":"newBuilder","text":"<p>[jvm]\\ open fun newBuilder(): GetDigestsRequest.Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/to-string/","title":"toString - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/toString</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open fun toString(): String</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/windows_end_from_ms/","title":"windows_end_from_ms - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/windows_end_from_ms</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/windows_end_from_ms/#windows_end_from_ms","title":"windows_end_from_ms","text":"<p>[jvm]\\ val windows_end_from_ms: Long</p> <p>Earliest end time of windows to return, inclusive.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/windows_end_to_ms/","title":"windows_end_to_ms - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/windows_end_to_ms</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/windows_end_to_ms/#windows_end_to_ms","title":"windows_end_to_ms","text":"<p>[jvm]\\ val windows_end_to_ms: Long</p> <p>Latest end time of windows to return, inclusive.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ class Builder : Message.Builder&lt;GetDigestsRequest, GetDigestsRequest.Builder&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/#constructors","title":"Constructors","text":"Builder [jvm]open fun Builder()"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/#functions","title":"Functions","text":"Name Summary addUnknownField [jvm]fun addUnknownField(tag: Int, fieldEncoding: FieldEncoding, value: Any): Message.Builder&lt;M, B&gt; addUnknownFields [jvm]fun addUnknownFields(unknownFields: ByteString): Message.Builder&lt;M, B&gt; build [jvm]open fun build(): GetDigestsRequest buildUnknownFields [jvm]fun buildUnknownFields(): ByteString clearUnknownFields [jvm]fun clearUnknownFields(): Message.Builder&lt;M, B&gt; getUnknownFieldsBuffer$wire_runtime [jvm]fun getUnknownFieldsBuffer$wire_runtime(): Buffer getUnknownFieldsByteString$wire_runtime [jvm]fun getUnknownFieldsByteString$wire_runtime(): ByteString getUnknownFieldsWriter$wire_runtime [jvm]fun getUnknownFieldsWriter$wire_runtime(): ProtoWriter setUnknownFieldsBuffer$wire_runtime [jvm]fun setUnknownFieldsBuffer$wire_runtime(p: Buffer) setUnknownFieldsByteString$wire_runtime [jvm]fun setUnknownFieldsByteString$wire_runtime(p: ByteString) setUnknownFieldsWriter$wire_runtime [jvm]fun setUnknownFieldsWriter$wire_runtime(p: ProtoWriter) windows_end_from_ms [jvm]open fun windows_end_from_ms(windows_end_from_ms: Long): GetDigestsRequest.BuilderEarliest end time of windows to return, inclusive. windows_end_to_ms [jvm]open fun windows_end_to_ms(windows_end_to_ms: Long): GetDigestsRequest.BuilderLatest end time of windows to return, inclusive."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/#properties","title":"Properties","text":"Name Summary windows_end_from_ms [jvm]open val windows_end_from_ms: Long windows_end_to_ms [jvm]open val windows_end_to_ms: Long"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/Builder/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ open fun Builder()</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/build/","title":"build - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/Builder/build</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/build/#build","title":"build","text":"<p>[jvm]\\ open fun build(): GetDigestsRequest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/windows_end_from_ms/","title":"windows_end_from_ms - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/Builder/windows_end_from_ms</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/windows_end_from_ms/#windows_end_from_ms","title":"windows_end_from_ms","text":"<p>[jvm]\\ open fun windows_end_from_ms(windows_end_from_ms: Long): GetDigestsRequest.Builder</p> <p>Earliest end time of windows to return, inclusive.</p> <p>[jvm]\\ open val windows_end_from_ms: Long</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/windows_end_to_ms/","title":"windows_end_to_ms - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsRequest/Builder/windows_end_to_ms</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/windows_end_to_ms/#windows_end_to_ms","title":"windows_end_to_ms","text":"<p>[jvm]\\ open fun windows_end_to_ms(windows_end_to_ms: Long): GetDigestsRequest.Builder</p> <p>Latest end time of windows to return, inclusive.</p> <p>[jvm]\\ open val windows_end_to_ms: Long</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/","title":"GetDigestsResponse - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsResponse</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/#getdigestsresponse","title":"GetDigestsResponse","text":"<p>[jvm]\\ class GetDigestsResponse : Message&lt;GetDigestsResponse, GetDigestsResponse.Builder&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/#constructors","title":"Constructors","text":"GetDigestsResponse [jvm]open fun GetDigestsResponse(metric_family: MetricFamily) GetDigestsResponse [jvm]open fun GetDigestsResponse(metric_family: MetricFamily, unknownFields: ByteString)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/#types","title":"Types","text":"Name Summary Builder [jvm]class Builder : Message.Builder&lt;GetDigestsResponse, GetDigestsResponse.Builder&gt;"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/#functions","title":"Functions","text":"Name Summary adapter [jvm]fun adapter(): ProtoAdapter&lt;M&gt; encode [jvm]fun encode(): Array&lt;Byte&gt;fun encode(sink: BufferedSink) encodeByteString [jvm]fun encodeByteString(): ByteString equals [jvm]open fun equals(other: Any): Boolean getCachedSerializedSize$wire_runtime [jvm]fun getCachedSerializedSize$wire_runtime(): Int hashCode [jvm]open fun hashCode(): Int newBuilder [jvm]open fun newBuilder(): GetDigestsResponse.Builder setCachedSerializedSize$wire_runtime [jvm]fun setCachedSerializedSize$wire_runtime(p: Int) toString [jvm]open fun toString(): String unknownFields [jvm]fun unknownFields(): ByteString withoutUnknownFields [jvm]fun withoutUnknownFields(): M"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/#properties","title":"Properties","text":"Name Summary ADAPTER [jvm]val ADAPTER: ProtoAdapter&lt;GetDigestsResponse&gt; metric_family [jvm]val metric_family: MetricFamily"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-a-d-a-p-t-e-r/","title":"ADAPTER - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsResponse/ADAPTER</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-a-d-a-p-t-e-r/#adapter","title":"ADAPTER","text":"<p>[jvm]\\ val ADAPTER: ProtoAdapter&lt;GetDigestsResponse&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-get-digests-response/","title":"GetDigestsResponse - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsResponse/GetDigestsResponse</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-get-digests-response/#getdigestsresponse","title":"GetDigestsResponse","text":"<p>[jvm]\\ open fun GetDigestsResponse(metric_family: MetricFamily)</p> <p>open fun GetDigestsResponse(metric_family: MetricFamily, unknownFields: ByteString)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/equals/","title":"equals - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsResponse/equals</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/equals/#equals","title":"equals","text":"<p>[jvm]\\ open fun equals(other: Any): Boolean</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/hash-code/","title":"hashCode - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsResponse/hashCode</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open fun hashCode(): Int</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/metric_family/","title":"metric_family - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsResponse/metric_family</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/metric_family/#metric_family","title":"metric_family","text":"<p>[jvm]\\ val metric_family: MetricFamily</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/new-builder/","title":"newBuilder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsResponse/newBuilder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/new-builder/#newbuilder","title":"newBuilder","text":"<p>[jvm]\\ open fun newBuilder(): GetDigestsResponse.Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/to-string/","title":"toString - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsResponse/toString</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open fun toString(): String</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsResponse/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ class Builder : Message.Builder&lt;GetDigestsResponse, GetDigestsResponse.Builder&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/#constructors","title":"Constructors","text":"Builder [jvm]open fun Builder()"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/#functions","title":"Functions","text":"Name Summary addUnknownField [jvm]fun addUnknownField(tag: Int, fieldEncoding: FieldEncoding, value: Any): Message.Builder&lt;M, B&gt; addUnknownFields [jvm]fun addUnknownFields(unknownFields: ByteString): Message.Builder&lt;M, B&gt; build [jvm]open fun build(): GetDigestsResponse buildUnknownFields [jvm]fun buildUnknownFields(): ByteString clearUnknownFields [jvm]fun clearUnknownFields(): Message.Builder&lt;M, B&gt; getUnknownFieldsBuffer$wire_runtime [jvm]fun getUnknownFieldsBuffer$wire_runtime(): Buffer getUnknownFieldsByteString$wire_runtime [jvm]fun getUnknownFieldsByteString$wire_runtime(): ByteString getUnknownFieldsWriter$wire_runtime [jvm]fun getUnknownFieldsWriter$wire_runtime(): ProtoWriter metric_family [jvm]open fun metric_family(metric_family: MetricFamily): GetDigestsResponse.Builder setUnknownFieldsBuffer$wire_runtime [jvm]fun setUnknownFieldsBuffer$wire_runtime(p: Buffer) setUnknownFieldsByteString$wire_runtime [jvm]fun setUnknownFieldsByteString$wire_runtime(p: ByteString) setUnknownFieldsWriter$wire_runtime [jvm]fun setUnknownFieldsWriter$wire_runtime(p: ProtoWriter)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/#properties","title":"Properties","text":"Name Summary metric_family [jvm]open val metric_family: MetricFamily"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsResponse/Builder/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ open fun Builder()</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/build/","title":"build - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsResponse/Builder/build</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/build/#build","title":"build","text":"<p>[jvm]\\ open fun build(): GetDigestsResponse</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/metric_family/","title":"metric_family - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/GetDigestsResponse/Builder/metric_family</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/metric_family/#metric_family","title":"metric_family","text":"<p>[jvm]\\ open fun metric_family(metric_family: MetricFamily): GetDigestsResponse.Builder</p> <p>open val metric_family: MetricFamily</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/","title":"MetricFamily - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/#metricfamily","title":"MetricFamily","text":"<p>[jvm]\\ class MetricFamily : Message&lt;MetricFamily, MetricFamily.Builder&gt; </p> <p>A group of digest metrics all having the same name and label names.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/#constructors","title":"Constructors","text":"MetricFamily [jvm]open fun MetricFamily(metric_descriptor: MetricFamily.MetricDescriptor, metrics: List&lt;MetricFamily.Metric&gt;) MetricFamily [jvm]open fun MetricFamily(metric_descriptor: MetricFamily.MetricDescriptor, metrics: List&lt;MetricFamily.Metric&gt;, unknownFields: ByteString)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/#types","title":"Types","text":"Name Summary Builder [jvm]class Builder : Message.Builder&lt;MetricFamily, MetricFamily.Builder&gt; Digest [jvm]class Digest : Message&lt;MetricFamily.Digest, MetricFamily.Digest.Builder&gt; Digest holds a t-digest of data points observed in a specific time range. Metric [jvm]class Metric : Message&lt;MetricFamily.Metric, MetricFamily.Metric.Builder&gt; MetricDescriptor [jvm]class MetricDescriptor : Message&lt;MetricFamily.MetricDescriptor, MetricFamily.MetricDescriptor.Builder&gt; MetricDescriptor describes a named metric."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/#functions","title":"Functions","text":"Name Summary adapter [jvm]fun adapter(): ProtoAdapter&lt;M&gt; encode [jvm]fun encode(): Array&lt;Byte&gt;fun encode(sink: BufferedSink) encodeByteString [jvm]fun encodeByteString(): ByteString equals [jvm]open fun equals(other: Any): Boolean getCachedSerializedSize$wire_runtime [jvm]fun getCachedSerializedSize$wire_runtime(): Int hashCode [jvm]open fun hashCode(): Int newBuilder [jvm]open fun newBuilder(): MetricFamily.Builder setCachedSerializedSize$wire_runtime [jvm]fun setCachedSerializedSize$wire_runtime(p: Int) toString [jvm]open fun toString(): String unknownFields [jvm]fun unknownFields(): ByteString withoutUnknownFields [jvm]fun withoutUnknownFields(): M"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/#properties","title":"Properties","text":"Name Summary ADAPTER [jvm]val ADAPTER: ProtoAdapter&lt;MetricFamily&gt; metric_descriptor [jvm]val metric_descriptor: MetricFamily.MetricDescriptorDescriptor shared by each metric in this family. metrics [jvm]val metrics: List&lt;MetricFamily.Metric&gt;Metrics in the family, each having a unique set of labels."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-a-d-a-p-t-e-r/","title":"ADAPTER - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/ADAPTER</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-a-d-a-p-t-e-r/#adapter","title":"ADAPTER","text":"<p>[jvm]\\ val ADAPTER: ProtoAdapter&lt;MetricFamily&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-family/","title":"MetricFamily - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricFamily</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-family/#metricfamily","title":"MetricFamily","text":"<p>[jvm]\\ open fun MetricFamily(metric_descriptor: MetricFamily.MetricDescriptor, metrics: List&lt;MetricFamily.Metric&gt;)</p> <p>open fun MetricFamily(metric_descriptor: MetricFamily.MetricDescriptor, metrics: List&lt;MetricFamily.Metric&gt;, unknownFields: ByteString)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/equals/","title":"equals - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/equals</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/equals/#equals","title":"equals","text":"<p>[jvm]\\ open fun equals(other: Any): Boolean</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/hash-code/","title":"hashCode - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/hashCode</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open fun hashCode(): Int</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/metric_descriptor/","title":"metric_descriptor - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/metric_descriptor</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/metric_descriptor/#metric_descriptor","title":"metric_descriptor","text":"<p>[jvm]\\ val metric_descriptor: MetricFamily.MetricDescriptor</p> <p>Descriptor shared by each metric in this family.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/metrics/","title":"metrics - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/metrics</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/metrics/#metrics","title":"metrics","text":"<p>[jvm]\\ val metrics: List&lt;MetricFamily.Metric&gt;</p> <p>Metrics in the family, each having a unique set of labels.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/new-builder/","title":"newBuilder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/newBuilder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/new-builder/#newbuilder","title":"newBuilder","text":"<p>[jvm]\\ open fun newBuilder(): MetricFamily.Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/to-string/","title":"toString - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/toString</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open fun toString(): String</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ class Builder : Message.Builder&lt;MetricFamily, MetricFamily.Builder&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/#constructors","title":"Constructors","text":"Builder [jvm]open fun Builder()"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/#functions","title":"Functions","text":"Name Summary addUnknownField [jvm]fun addUnknownField(tag: Int, fieldEncoding: FieldEncoding, value: Any): Message.Builder&lt;M, B&gt; addUnknownFields [jvm]fun addUnknownFields(unknownFields: ByteString): Message.Builder&lt;M, B&gt; build [jvm]open fun build(): MetricFamily buildUnknownFields [jvm]fun buildUnknownFields(): ByteString clearUnknownFields [jvm]fun clearUnknownFields(): Message.Builder&lt;M, B&gt; getUnknownFieldsBuffer$wire_runtime [jvm]fun getUnknownFieldsBuffer$wire_runtime(): Buffer getUnknownFieldsByteString$wire_runtime [jvm]fun getUnknownFieldsByteString$wire_runtime(): ByteString getUnknownFieldsWriter$wire_runtime [jvm]fun getUnknownFieldsWriter$wire_runtime(): ProtoWriter metric_descriptor [jvm]open fun metric_descriptor(metric_descriptor: MetricFamily.MetricDescriptor): MetricFamily.BuilderDescriptor shared by each metric in this family. metrics [jvm]open fun metrics(metrics: List&lt;MetricFamily.Metric&gt;): MetricFamily.BuilderMetrics in the family, each having a unique set of labels. setUnknownFieldsBuffer$wire_runtime [jvm]fun setUnknownFieldsBuffer$wire_runtime(p: Buffer) setUnknownFieldsByteString$wire_runtime [jvm]fun setUnknownFieldsByteString$wire_runtime(p: ByteString) setUnknownFieldsWriter$wire_runtime [jvm]fun setUnknownFieldsWriter$wire_runtime(p: ProtoWriter)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/#properties","title":"Properties","text":"Name Summary metric_descriptor [jvm]open val metric_descriptor: MetricFamily.MetricDescriptor metrics [jvm]open val metrics: List&lt;MetricFamily.Metric&gt;"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Builder/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ open fun Builder()</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/build/","title":"build - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Builder/build</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/build/#build","title":"build","text":"<p>[jvm]\\ open fun build(): MetricFamily</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/metric_descriptor/","title":"metric_descriptor - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Builder/metric_descriptor</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/metric_descriptor/#metric_descriptor","title":"metric_descriptor","text":"<p>[jvm]\\ open fun metric_descriptor(metric_descriptor: MetricFamily.MetricDescriptor): MetricFamily.Builder</p> <p>Descriptor shared by each metric in this family.</p> <p>[jvm]\\ open val metric_descriptor: MetricFamily.MetricDescriptor</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/metrics/","title":"metrics - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Builder/metrics</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/metrics/#metrics","title":"metrics","text":"<p>[jvm]\\ open fun metrics(metrics: List&lt;MetricFamily.Metric&gt;): MetricFamily.Builder</p> <p>Metrics in the family, each having a unique set of labels.</p> <p>[jvm]\\ open val metrics: List&lt;MetricFamily.Metric&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/","title":"Digest - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/#digest","title":"Digest","text":"<p>[jvm]\\ class Digest : Message&lt;MetricFamily.Digest, MetricFamily.Digest.Builder&gt; </p> <p>Digest holds a t-digest of data points observed in a specific time range.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/#constructors","title":"Constructors","text":"Digest [jvm]open fun Digest(start_at_ms: Long, end_at_ms: Long, stagger: Long, digest_data: DigestData) Digest [jvm]open fun Digest(start_at_ms: Long, end_at_ms: Long, stagger: Long, digest_data: DigestData, unknownFields: ByteString)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/#types","title":"Types","text":"Name Summary Builder [jvm]class Builder : Message.Builder&lt;MetricFamily.Digest, MetricFamily.Digest.Builder&gt;"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/#functions","title":"Functions","text":"Name Summary adapter [jvm]fun adapter(): ProtoAdapter&lt;M&gt; encode [jvm]fun encode(): Array&lt;Byte&gt;fun encode(sink: BufferedSink) encodeByteString [jvm]fun encodeByteString(): ByteString equals [jvm]open fun equals(other: Any): Boolean getCachedSerializedSize$wire_runtime [jvm]fun getCachedSerializedSize$wire_runtime(): Int hashCode [jvm]open fun hashCode(): Int newBuilder [jvm]open fun newBuilder(): MetricFamily.Digest.Builder setCachedSerializedSize$wire_runtime [jvm]fun setCachedSerializedSize$wire_runtime(p: Int) toString [jvm]open fun toString(): String unknownFields [jvm]fun unknownFields(): ByteString withoutUnknownFields [jvm]fun withoutUnknownFields(): M"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/#properties","title":"Properties","text":"Name Summary ADAPTER [jvm]val ADAPTER: ProtoAdapter&lt;MetricFamily.Digest&gt; DEFAULT_END_AT_MS [jvm]val DEFAULT_END_AT_MS: Long DEFAULT_STAGGER [jvm]val DEFAULT_STAGGER: Long DEFAULT_START_AT_MS [jvm]val DEFAULT_START_AT_MS: Long digest_data [jvm]val digest_data: DigestDatat-digest of observed values. end_at_ms [jvm]val end_at_ms: LongEnd time window of data points, exclusive. stagger [jvm]val stagger: LongNumber of overlapping windows. start_at_ms [jvm]val start_at_ms: LongStart time window of data points, inclusive."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-a-d-a-p-t-e-r/","title":"ADAPTER - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/ADAPTER</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-a-d-a-p-t-e-r/#adapter","title":"ADAPTER","text":"<p>[jvm]\\ val ADAPTER: ProtoAdapter&lt;MetricFamily.Digest&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-d-e-f-a-u-l-t_-e-n-d_-a-t_-m-s/","title":"DEFAULT_END_AT_MS - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/DEFAULT_END_AT_MS</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-d-e-f-a-u-l-t_-e-n-d_-a-t_-m-s/#default_end_at_ms","title":"DEFAULT_END_AT_MS","text":"<p>[jvm]\\ val DEFAULT_END_AT_MS: Long</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-d-e-f-a-u-l-t_-s-t-a-g-g-e-r/","title":"DEFAULT_STAGGER - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/DEFAULT_STAGGER</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-d-e-f-a-u-l-t_-s-t-a-g-g-e-r/#default_stagger","title":"DEFAULT_STAGGER","text":"<p>[jvm]\\ val DEFAULT_STAGGER: Long</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-d-e-f-a-u-l-t_-s-t-a-r-t_-a-t_-m-s/","title":"DEFAULT_START_AT_MS - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/DEFAULT_START_AT_MS</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-d-e-f-a-u-l-t_-s-t-a-r-t_-a-t_-m-s/#default_start_at_ms","title":"DEFAULT_START_AT_MS","text":"<p>[jvm]\\ val DEFAULT_START_AT_MS: Long</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-digest/","title":"Digest - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/Digest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-digest/#digest","title":"Digest","text":"<p>[jvm]\\ open fun Digest(start_at_ms: Long, end_at_ms: Long, stagger: Long, digest_data: DigestData)</p> <p>open fun Digest(start_at_ms: Long, end_at_ms: Long, stagger: Long, digest_data: DigestData, unknownFields: ByteString)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/digest_data/","title":"digest_data - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/digest_data</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/digest_data/#digest_data","title":"digest_data","text":"<p>[jvm]\\ val digest_data: DigestData</p> <p>t-digest of observed values. The registry and server must agree on the format of the digest.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/end_at_ms/","title":"end_at_ms - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/end_at_ms</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/end_at_ms/#end_at_ms","title":"end_at_ms","text":"<p>[jvm]\\ val end_at_ms: Long</p> <p>End time window of data points, exclusive.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/equals/","title":"equals - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/equals</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/equals/#equals","title":"equals","text":"<p>[jvm]\\ open fun equals(other: Any): Boolean</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/hash-code/","title":"hashCode - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/hashCode</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open fun hashCode(): Int</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/new-builder/","title":"newBuilder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/newBuilder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/new-builder/#newbuilder","title":"newBuilder","text":"<p>[jvm]\\ open fun newBuilder(): MetricFamily.Digest.Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/stagger/","title":"stagger - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/stagger</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/stagger/#stagger","title":"stagger","text":"<p>[jvm]\\ val stagger: Long</p> <p>Number of overlapping windows. This is not directly related to the data, but is used by the collector to validate that registry and server configurations are compatible.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/start_at_ms/","title":"start_at_ms - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/start_at_ms</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/start_at_ms/#start_at_ms","title":"start_at_ms","text":"<p>[jvm]\\ val start_at_ms: Long</p> <p>Start time window of data points, inclusive.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/to-string/","title":"toString - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/toString</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open fun toString(): String</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ class Builder : Message.Builder&lt;MetricFamily.Digest, MetricFamily.Digest.Builder&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/#constructors","title":"Constructors","text":"Builder [jvm]open fun Builder()"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/#functions","title":"Functions","text":"Name Summary addUnknownField [jvm]fun addUnknownField(tag: Int, fieldEncoding: FieldEncoding, value: Any): Message.Builder&lt;M, B&gt; addUnknownFields [jvm]fun addUnknownFields(unknownFields: ByteString): Message.Builder&lt;M, B&gt; build [jvm]open fun build(): MetricFamily.Digest buildUnknownFields [jvm]fun buildUnknownFields(): ByteString clearUnknownFields [jvm]fun clearUnknownFields(): Message.Builder&lt;M, B&gt; digest_data [jvm]open fun digest_data(digest_data: DigestData): MetricFamily.Digest.Buildert-digest of observed values. end_at_ms [jvm]open fun end_at_ms(end_at_ms: Long): MetricFamily.Digest.BuilderEnd time window of data points, exclusive. getUnknownFieldsBuffer$wire_runtime [jvm]fun getUnknownFieldsBuffer$wire_runtime(): Buffer getUnknownFieldsByteString$wire_runtime [jvm]fun getUnknownFieldsByteString$wire_runtime(): ByteString getUnknownFieldsWriter$wire_runtime [jvm]fun getUnknownFieldsWriter$wire_runtime(): ProtoWriter setUnknownFieldsBuffer$wire_runtime [jvm]fun setUnknownFieldsBuffer$wire_runtime(p: Buffer) setUnknownFieldsByteString$wire_runtime [jvm]fun setUnknownFieldsByteString$wire_runtime(p: ByteString) setUnknownFieldsWriter$wire_runtime [jvm]fun setUnknownFieldsWriter$wire_runtime(p: ProtoWriter) stagger [jvm]open fun stagger(stagger: Long): MetricFamily.Digest.BuilderNumber of overlapping windows. start_at_ms [jvm]open fun start_at_ms(start_at_ms: Long): MetricFamily.Digest.BuilderStart time window of data points, inclusive."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/#properties","title":"Properties","text":"Name Summary digest_data [jvm]open val digest_data: DigestData end_at_ms [jvm]open val end_at_ms: Long stagger [jvm]open val stagger: Long start_at_ms [jvm]open val start_at_ms: Long"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/Builder/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ open fun Builder()</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/build/","title":"build - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/Builder/build</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/build/#build","title":"build","text":"<p>[jvm]\\ open fun build(): MetricFamily.Digest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/digest_data/","title":"digest_data - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/Builder/digest_data</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/digest_data/#digest_data","title":"digest_data","text":"<p>[jvm]\\ open fun digest_data(digest_data: DigestData): MetricFamily.Digest.Builder</p> <p>t-digest of observed values. The registry and server must agree on the format of the digest.</p> <p>[jvm]\\ open val digest_data: DigestData</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/end_at_ms/","title":"end_at_ms - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/Builder/end_at_ms</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/end_at_ms/#end_at_ms","title":"end_at_ms","text":"<p>[jvm]\\ open fun end_at_ms(end_at_ms: Long): MetricFamily.Digest.Builder</p> <p>End time window of data points, exclusive.</p> <p>[jvm]\\ open val end_at_ms: Long</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/stagger/","title":"stagger - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/Builder/stagger</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/stagger/#stagger","title":"stagger","text":"<p>[jvm]\\ open fun stagger(stagger: Long): MetricFamily.Digest.Builder</p> <p>Number of overlapping windows. This is not directly related to the data, but is used by the collector to validate that registry and server configurations are compatible.</p> <p>[jvm]\\ open val stagger: Long</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/start_at_ms/","title":"start_at_ms - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Digest/Builder/start_at_ms</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/start_at_ms/#start_at_ms","title":"start_at_ms","text":"<p>[jvm]\\ open fun start_at_ms(start_at_ms: Long): MetricFamily.Digest.Builder</p> <p>Start time window of data points, inclusive.</p> <p>[jvm]\\ open val start_at_ms: Long</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/","title":"Metric - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/#metric","title":"Metric","text":"<p>[jvm]\\ class Metric : Message&lt;MetricFamily.Metric, MetricFamily.Metric.Builder&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/#constructors","title":"Constructors","text":"Metric [jvm]open fun Metric(labels: Map&lt;String, String&gt;, digests: List&lt;MetricFamily.Digest&gt;) Metric [jvm]open fun Metric(labels: Map&lt;String, String&gt;, digests: List&lt;MetricFamily.Digest&gt;, unknownFields: ByteString)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/#types","title":"Types","text":"Name Summary Builder [jvm]class Builder : Message.Builder&lt;MetricFamily.Metric, MetricFamily.Metric.Builder&gt;"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/#functions","title":"Functions","text":"Name Summary adapter [jvm]fun adapter(): ProtoAdapter&lt;M&gt; encode [jvm]fun encode(): Array&lt;Byte&gt;fun encode(sink: BufferedSink) encodeByteString [jvm]fun encodeByteString(): ByteString equals [jvm]open fun equals(other: Any): Boolean getCachedSerializedSize$wire_runtime [jvm]fun getCachedSerializedSize$wire_runtime(): Int hashCode [jvm]open fun hashCode(): Int newBuilder [jvm]open fun newBuilder(): MetricFamily.Metric.Builder setCachedSerializedSize$wire_runtime [jvm]fun setCachedSerializedSize$wire_runtime(p: Int) toString [jvm]open fun toString(): String unknownFields [jvm]fun unknownFields(): ByteString withoutUnknownFields [jvm]fun withoutUnknownFields(): M"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/#properties","title":"Properties","text":"Name Summary ADAPTER [jvm]val ADAPTER: ProtoAdapter&lt;MetricFamily.Metric&gt; digests [jvm]val digests: List&lt;MetricFamily.Digest&gt;t-digests for the metric, each for a different window of time. labels [jvm]val labels: Map&lt;String, String&gt;Label values."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-a-d-a-p-t-e-r/","title":"ADAPTER - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric/ADAPTER</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-a-d-a-p-t-e-r/#adapter","title":"ADAPTER","text":"<p>[jvm]\\ val ADAPTER: ProtoAdapter&lt;MetricFamily.Metric&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-metric/","title":"Metric - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric/Metric</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-metric/#metric","title":"Metric","text":"<p>[jvm]\\ open fun Metric(labels: Map&lt;String, String&gt;, digests: List&lt;MetricFamily.Digest&gt;)</p> <p>open fun Metric(labels: Map&lt;String, String&gt;, digests: List&lt;MetricFamily.Digest&gt;, unknownFields: ByteString)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/digests/","title":"digests - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric/digests</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/digests/#digests","title":"digests","text":"<p>[jvm]\\ val digests: List&lt;MetricFamily.Digest&gt;</p> <p>t-digests for the metric, each for a different window of time.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/equals/","title":"equals - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric/equals</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/equals/#equals","title":"equals","text":"<p>[jvm]\\ open fun equals(other: Any): Boolean</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/hash-code/","title":"hashCode - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric/hashCode</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open fun hashCode(): Int</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/labels/","title":"labels - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric/labels</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/labels/#labels","title":"labels","text":"<p>[jvm]\\ val labels: Map&lt;String, String&gt;</p> <p>Label values. There will be one value corresponding to each entry in the MetricDescriptor\u2019s label_names.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/new-builder/","title":"newBuilder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric/newBuilder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/new-builder/#newbuilder","title":"newBuilder","text":"<p>[jvm]\\ open fun newBuilder(): MetricFamily.Metric.Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/to-string/","title":"toString - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric/toString</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open fun toString(): String</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ class Builder : Message.Builder&lt;MetricFamily.Metric, MetricFamily.Metric.Builder&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/#constructors","title":"Constructors","text":"Builder [jvm]open fun Builder()"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/#functions","title":"Functions","text":"Name Summary addUnknownField [jvm]fun addUnknownField(tag: Int, fieldEncoding: FieldEncoding, value: Any): Message.Builder&lt;M, B&gt; addUnknownFields [jvm]fun addUnknownFields(unknownFields: ByteString): Message.Builder&lt;M, B&gt; build [jvm]open fun build(): MetricFamily.Metric buildUnknownFields [jvm]fun buildUnknownFields(): ByteString clearUnknownFields [jvm]fun clearUnknownFields(): Message.Builder&lt;M, B&gt; digests [jvm]open fun digests(digests: List&lt;MetricFamily.Digest&gt;): MetricFamily.Metric.Buildert-digests for the metric, each for a different window of time. getUnknownFieldsBuffer$wire_runtime [jvm]fun getUnknownFieldsBuffer$wire_runtime(): Buffer getUnknownFieldsByteString$wire_runtime [jvm]fun getUnknownFieldsByteString$wire_runtime(): ByteString getUnknownFieldsWriter$wire_runtime [jvm]fun getUnknownFieldsWriter$wire_runtime(): ProtoWriter labels [jvm]open fun labels(labels: Map&lt;String, String&gt;): MetricFamily.Metric.BuilderLabel values. setUnknownFieldsBuffer$wire_runtime [jvm]fun setUnknownFieldsBuffer$wire_runtime(p: Buffer) setUnknownFieldsByteString$wire_runtime [jvm]fun setUnknownFieldsByteString$wire_runtime(p: ByteString) setUnknownFieldsWriter$wire_runtime [jvm]fun setUnknownFieldsWriter$wire_runtime(p: ProtoWriter)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/#properties","title":"Properties","text":"Name Summary digests [jvm]open val digests: List&lt;MetricFamily.Digest&gt; labels [jvm]open val labels: Map&lt;String, String&gt;"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric/Builder/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ open fun Builder()</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/build/","title":"build - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric/Builder/build</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/build/#build","title":"build","text":"<p>[jvm]\\ open fun build(): MetricFamily.Metric</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/digests/","title":"digests - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric/Builder/digests</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/digests/#digests","title":"digests","text":"<p>[jvm]\\ open fun digests(digests: List&lt;MetricFamily.Digest&gt;): MetricFamily.Metric.Builder</p> <p>t-digests for the metric, each for a different window of time.</p> <p>[jvm]\\ open val digests: List&lt;MetricFamily.Digest&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/labels/","title":"labels - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/Metric/Builder/labels</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/labels/#labels","title":"labels","text":"<p>[jvm]\\ open fun labels(labels: Map&lt;String, String&gt;): MetricFamily.Metric.Builder</p> <p>Label values. There will be one value corresponding to each entry in the MetricDescriptor\u2019s label_names.</p> <p>[jvm]\\ open val labels: Map&lt;String, String&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/","title":"MetricDescriptor - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/#metricdescriptor","title":"MetricDescriptor","text":"<p>[jvm]\\ class MetricDescriptor : Message&lt;MetricFamily.MetricDescriptor, MetricFamily.MetricDescriptor.Builder&gt; </p> <p>MetricDescriptor describes a named metric.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/#constructors","title":"Constructors","text":"MetricDescriptor [jvm]open fun MetricDescriptor(name: String, help: String) MetricDescriptor [jvm]open fun MetricDescriptor(name: String, help: String, unknownFields: ByteString)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/#types","title":"Types","text":"Name Summary Builder [jvm]class Builder : Message.Builder&lt;MetricFamily.MetricDescriptor, MetricFamily.MetricDescriptor.Builder&gt;"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/#functions","title":"Functions","text":"Name Summary adapter [jvm]fun adapter(): ProtoAdapter&lt;M&gt; encode [jvm]fun encode(): Array&lt;Byte&gt;fun encode(sink: BufferedSink) encodeByteString [jvm]fun encodeByteString(): ByteString equals [jvm]open fun equals(other: Any): Boolean getCachedSerializedSize$wire_runtime [jvm]fun getCachedSerializedSize$wire_runtime(): Int hashCode [jvm]open fun hashCode(): Int newBuilder [jvm]open fun newBuilder(): MetricFamily.MetricDescriptor.Builder setCachedSerializedSize$wire_runtime [jvm]fun setCachedSerializedSize$wire_runtime(p: Int) toString [jvm]open fun toString(): String unknownFields [jvm]fun unknownFields(): ByteString withoutUnknownFields [jvm]fun withoutUnknownFields(): M"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/#properties","title":"Properties","text":"Name Summary ADAPTER [jvm]val ADAPTER: ProtoAdapter&lt;MetricFamily.MetricDescriptor&gt; DEFAULT_HELP [jvm]val DEFAULT_HELP: String DEFAULT_NAME [jvm]val DEFAULT_NAME: String help [jvm]val help: StringUser-friendly description of the metric. name [jvm]val name: StringName of the metric."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-a-d-a-p-t-e-r/","title":"ADAPTER - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/ADAPTER</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-a-d-a-p-t-e-r/#adapter","title":"ADAPTER","text":"<p>[jvm]\\ val ADAPTER: ProtoAdapter&lt;MetricFamily.MetricDescriptor&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-d-e-f-a-u-l-t_-h-e-l-p/","title":"DEFAULT_HELP - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/DEFAULT_HELP</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-d-e-f-a-u-l-t_-h-e-l-p/#default_help","title":"DEFAULT_HELP","text":"<p>[jvm]\\ val DEFAULT_HELP: String</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-d-e-f-a-u-l-t_-n-a-m-e/","title":"DEFAULT_NAME - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/DEFAULT_NAME</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-d-e-f-a-u-l-t_-n-a-m-e/#default_name","title":"DEFAULT_NAME","text":"<p>[jvm]\\ val DEFAULT_NAME: String</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-metric-descriptor/","title":"MetricDescriptor - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/MetricDescriptor</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-metric-descriptor/#metricdescriptor","title":"MetricDescriptor","text":"<p>[jvm]\\ open fun MetricDescriptor(name: String, help: String)</p> <p>open fun MetricDescriptor(name: String, help: String, unknownFields: ByteString)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/equals/","title":"equals - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/equals</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/equals/#equals","title":"equals","text":"<p>[jvm]\\ open fun equals(other: Any): Boolean</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/hash-code/","title":"hashCode - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/hashCode</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open fun hashCode(): Int</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/help/","title":"help - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/help</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/help/#help","title":"help","text":"<p>[jvm]\\ val help: String</p> <p>User-friendly description of the metric.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/name/","title":"name - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/name</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p> <p>Name of the metric.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/new-builder/","title":"newBuilder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/newBuilder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/new-builder/#newbuilder","title":"newBuilder","text":"<p>[jvm]\\ open fun newBuilder(): MetricFamily.MetricDescriptor.Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/to-string/","title":"toString - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/toString</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open fun toString(): String</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ class Builder : Message.Builder&lt;MetricFamily.MetricDescriptor, MetricFamily.MetricDescriptor.Builder&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/#constructors","title":"Constructors","text":"Builder [jvm]open fun Builder()"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/#functions","title":"Functions","text":"Name Summary addUnknownField [jvm]fun addUnknownField(tag: Int, fieldEncoding: FieldEncoding, value: Any): Message.Builder&lt;M, B&gt; addUnknownFields [jvm]fun addUnknownFields(unknownFields: ByteString): Message.Builder&lt;M, B&gt; build [jvm]open fun build(): MetricFamily.MetricDescriptor buildUnknownFields [jvm]fun buildUnknownFields(): ByteString clearUnknownFields [jvm]fun clearUnknownFields(): Message.Builder&lt;M, B&gt; getUnknownFieldsBuffer$wire_runtime [jvm]fun getUnknownFieldsBuffer$wire_runtime(): Buffer getUnknownFieldsByteString$wire_runtime [jvm]fun getUnknownFieldsByteString$wire_runtime(): ByteString getUnknownFieldsWriter$wire_runtime [jvm]fun getUnknownFieldsWriter$wire_runtime(): ProtoWriter help [jvm]open fun help(help: String): MetricFamily.MetricDescriptor.BuilderUser-friendly description of the metric. name [jvm]open fun name(name: String): MetricFamily.MetricDescriptor.BuilderName of the metric. setUnknownFieldsBuffer$wire_runtime [jvm]fun setUnknownFieldsBuffer$wire_runtime(p: Buffer) setUnknownFieldsByteString$wire_runtime [jvm]fun setUnknownFieldsByteString$wire_runtime(p: ByteString) setUnknownFieldsWriter$wire_runtime [jvm]fun setUnknownFieldsWriter$wire_runtime(p: ProtoWriter)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/#properties","title":"Properties","text":"Name Summary help [jvm]open val help: String name [jvm]open val name: String"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/Builder/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ open fun Builder()</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/build/","title":"build - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/Builder/build</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/build/#build","title":"build","text":"<p>[jvm]\\ open fun build(): MetricFamily.MetricDescriptor</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/help/","title":"help - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/Builder/help</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/help/#help","title":"help","text":"<p>[jvm]\\ open fun help(help: String): MetricFamily.MetricDescriptor.Builder</p> <p>User-friendly description of the metric.</p> <p>[jvm]\\ open val help: String</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/name/","title":"name - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.service/MetricFamily/MetricDescriptor/Builder/name</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/name/#name","title":"name","text":"<p>[jvm]\\ open fun name(name: String): MetricFamily.MetricDescriptor.Builder</p> <p>Name of the metric.</p> <p>[jvm]\\ open val name: String</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/","title":"Package com.squareup.digester.protos.tdigest - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/#package-comsquareupdigesterprotostdigest","title":"Package com.squareup.digester.protos.tdigest","text":""},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/#types","title":"Types","text":"Name Summary Centroid [jvm]class Centroid : Message&lt;Centroid, Centroid.Builder&gt; MergingDigestData [jvm]class MergingDigestData : Message&lt;MergingDigestData, MergingDigestData.Builder&gt; MergingDigestData contains all fields necessary to generate a MergingDigest."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/","title":"Centroid - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/#centroid","title":"Centroid","text":"<p>[jvm]\\ class Centroid : Message&lt;Centroid, Centroid.Builder&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/#constructors","title":"Constructors","text":"Centroid [jvm]open fun Centroid(mean: Double, weight: Double, samples: List&lt;Double&gt;) Centroid [jvm]open fun Centroid(mean: Double, weight: Double, samples: List&lt;Double&gt;, unknownFields: ByteString)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/#types","title":"Types","text":"Name Summary Builder [jvm]class Builder : Message.Builder&lt;Centroid, Centroid.Builder&gt;"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/#functions","title":"Functions","text":"Name Summary adapter [jvm]fun adapter(): ProtoAdapter&lt;M&gt; encode [jvm]fun encode(): Array&lt;Byte&gt;fun encode(sink: BufferedSink) encodeByteString [jvm]fun encodeByteString(): ByteString equals [jvm]open fun equals(other: Any): Boolean getCachedSerializedSize$wire_runtime [jvm]fun getCachedSerializedSize$wire_runtime(): Int hashCode [jvm]open fun hashCode(): Int newBuilder [jvm]open fun newBuilder(): Centroid.Builder setCachedSerializedSize$wire_runtime [jvm]fun setCachedSerializedSize$wire_runtime(p: Int) toString [jvm]open fun toString(): String unknownFields [jvm]fun unknownFields(): ByteString withoutUnknownFields [jvm]fun withoutUnknownFields(): M"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/#properties","title":"Properties","text":"Name Summary ADAPTER [jvm]val ADAPTER: ProtoAdapter&lt;Centroid&gt; DEFAULT_MEAN [jvm]val DEFAULT_MEAN: Double DEFAULT_WEIGHT [jvm]val DEFAULT_WEIGHT: Double mean [jvm]val mean: Double samples [jvm]val samples: List&lt;Double&gt; weight [jvm]val weight: Double"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-a-d-a-p-t-e-r/","title":"ADAPTER - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/ADAPTER</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-a-d-a-p-t-e-r/#adapter","title":"ADAPTER","text":"<p>[jvm]\\ val ADAPTER: ProtoAdapter&lt;Centroid&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-centroid/","title":"Centroid - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/Centroid</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-centroid/#centroid","title":"Centroid","text":"<p>[jvm]\\ open fun Centroid(mean: Double, weight: Double, samples: List&lt;Double&gt;)</p> <p>open fun Centroid(mean: Double, weight: Double, samples: List&lt;Double&gt;, unknownFields: ByteString)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-d-e-f-a-u-l-t_-m-e-a-n/","title":"DEFAULT_MEAN - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/DEFAULT_MEAN</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-d-e-f-a-u-l-t_-m-e-a-n/#default_mean","title":"DEFAULT_MEAN","text":"<p>[jvm]\\ val DEFAULT_MEAN: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-d-e-f-a-u-l-t_-w-e-i-g-h-t/","title":"DEFAULT_WEIGHT - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/DEFAULT_WEIGHT</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-d-e-f-a-u-l-t_-w-e-i-g-h-t/#default_weight","title":"DEFAULT_WEIGHT","text":"<p>[jvm]\\ val DEFAULT_WEIGHT: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/equals/","title":"equals - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/equals</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/equals/#equals","title":"equals","text":"<p>[jvm]\\ open fun equals(other: Any): Boolean</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/hash-code/","title":"hashCode - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/hashCode</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open fun hashCode(): Int</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/mean/","title":"mean - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/mean</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/mean/#mean","title":"mean","text":"<p>[jvm]\\ val mean: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/new-builder/","title":"newBuilder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/newBuilder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/new-builder/#newbuilder","title":"newBuilder","text":"<p>[jvm]\\ open fun newBuilder(): Centroid.Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/samples/","title":"samples - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/samples</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/samples/#samples","title":"samples","text":"<p>[jvm]\\ val samples: List&lt;Double&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/to-string/","title":"toString - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/toString</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open fun toString(): String</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/weight/","title":"weight - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/weight</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/weight/#weight","title":"weight","text":"<p>[jvm]\\ val weight: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ class Builder : Message.Builder&lt;Centroid, Centroid.Builder&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/#constructors","title":"Constructors","text":"Builder [jvm]open fun Builder()"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/#functions","title":"Functions","text":"Name Summary addUnknownField [jvm]fun addUnknownField(tag: Int, fieldEncoding: FieldEncoding, value: Any): Message.Builder&lt;M, B&gt; addUnknownFields [jvm]fun addUnknownFields(unknownFields: ByteString): Message.Builder&lt;M, B&gt; build [jvm]open fun build(): Centroid buildUnknownFields [jvm]fun buildUnknownFields(): ByteString clearUnknownFields [jvm]fun clearUnknownFields(): Message.Builder&lt;M, B&gt; getUnknownFieldsBuffer$wire_runtime [jvm]fun getUnknownFieldsBuffer$wire_runtime(): Buffer getUnknownFieldsByteString$wire_runtime [jvm]fun getUnknownFieldsByteString$wire_runtime(): ByteString getUnknownFieldsWriter$wire_runtime [jvm]fun getUnknownFieldsWriter$wire_runtime(): ProtoWriter mean [jvm]open fun mean(mean: Double): Centroid.Builder samples [jvm]open fun samples(samples: List&lt;Double&gt;): Centroid.Builder setUnknownFieldsBuffer$wire_runtime [jvm]fun setUnknownFieldsBuffer$wire_runtime(p: Buffer) setUnknownFieldsByteString$wire_runtime [jvm]fun setUnknownFieldsByteString$wire_runtime(p: ByteString) setUnknownFieldsWriter$wire_runtime [jvm]fun setUnknownFieldsWriter$wire_runtime(p: ProtoWriter) weight [jvm]open fun weight(weight: Double): Centroid.Builder"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/#properties","title":"Properties","text":"Name Summary mean [jvm]open val mean: Double samples [jvm]open val samples: List&lt;Double&gt; weight [jvm]open val weight: Double"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/Builder/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ open fun Builder()</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/build/","title":"build - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/Builder/build</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/build/#build","title":"build","text":"<p>[jvm]\\ open fun build(): Centroid</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/mean/","title":"mean - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/Builder/mean</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/mean/#mean","title":"mean","text":"<p>[jvm]\\ open fun mean(mean: Double): Centroid.Builder</p> <p>open val mean: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/samples/","title":"samples - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/Builder/samples</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/samples/#samples","title":"samples","text":"<p>[jvm]\\ open fun samples(samples: List&lt;Double&gt;): Centroid.Builder</p> <p>open val samples: List&lt;Double&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/weight/","title":"weight - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/Centroid/Builder/weight</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/weight/#weight","title":"weight","text":"<p>[jvm]\\ open fun weight(weight: Double): Centroid.Builder</p> <p>open val weight: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/","title":"MergingDigestData - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/#mergingdigestdata","title":"MergingDigestData","text":"<p>[jvm]\\ class MergingDigestData : Message&lt;MergingDigestData, MergingDigestData.Builder&gt; </p> <p>MergingDigestData contains all fields necessary to generate a MergingDigest. This type should generally just be used when serializing MergingDigest\u2019s, and doesn\u2019t have much of a purpose on its own. Replica of stripe\u2019s tdigest implementation https://github.com/stripe/veneur/blob/master/tdigest/tdigest.proto</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/#constructors","title":"Constructors","text":"MergingDigestData [jvm]open fun MergingDigestData(main_centroids: List&lt;Centroid&gt;, compression: Double, min: Double, max: Double) MergingDigestData [jvm]open fun MergingDigestData(main_centroids: List&lt;Centroid&gt;, compression: Double, min: Double, max: Double, unknownFields: ByteString)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/#types","title":"Types","text":"Name Summary Builder [jvm]class Builder : Message.Builder&lt;MergingDigestData, MergingDigestData.Builder&gt;"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/#functions","title":"Functions","text":"Name Summary adapter [jvm]fun adapter(): ProtoAdapter&lt;M&gt; encode [jvm]fun encode(): Array&lt;Byte&gt;fun encode(sink: BufferedSink) encodeByteString [jvm]fun encodeByteString(): ByteString equals [jvm]open fun equals(other: Any): Boolean getCachedSerializedSize$wire_runtime [jvm]fun getCachedSerializedSize$wire_runtime(): Int hashCode [jvm]open fun hashCode(): Int newBuilder [jvm]open fun newBuilder(): MergingDigestData.Builder setCachedSerializedSize$wire_runtime [jvm]fun setCachedSerializedSize$wire_runtime(p: Int) toString [jvm]open fun toString(): String unknownFields [jvm]fun unknownFields(): ByteString withoutUnknownFields [jvm]fun withoutUnknownFields(): M"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/#properties","title":"Properties","text":"Name Summary ADAPTER [jvm]val ADAPTER: ProtoAdapter&lt;MergingDigestData&gt; compression [jvm]val compression: Double DEFAULT_COMPRESSION [jvm]val DEFAULT_COMPRESSION: Double DEFAULT_MAX [jvm]val DEFAULT_MAX: Double DEFAULT_MIN [jvm]val DEFAULT_MIN: Double main_centroids [jvm]val main_centroids: List&lt;Centroid&gt; max [jvm]val max: Double min [jvm]val min: Double"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-a-d-a-p-t-e-r/","title":"ADAPTER - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/ADAPTER</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-a-d-a-p-t-e-r/#adapter","title":"ADAPTER","text":"<p>[jvm]\\ val ADAPTER: ProtoAdapter&lt;MergingDigestData&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-d-e-f-a-u-l-t_-c-o-m-p-r-e-s-s-i-o-n/","title":"DEFAULT_COMPRESSION - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/DEFAULT_COMPRESSION</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-d-e-f-a-u-l-t_-c-o-m-p-r-e-s-s-i-o-n/#default_compression","title":"DEFAULT_COMPRESSION","text":"<p>[jvm]\\ val DEFAULT_COMPRESSION: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-d-e-f-a-u-l-t_-m-a-x/","title":"DEFAULT_MAX - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/DEFAULT_MAX</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-d-e-f-a-u-l-t_-m-a-x/#default_max","title":"DEFAULT_MAX","text":"<p>[jvm]\\ val DEFAULT_MAX: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-d-e-f-a-u-l-t_-m-i-n/","title":"DEFAULT_MIN - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/DEFAULT_MIN</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-d-e-f-a-u-l-t_-m-i-n/#default_min","title":"DEFAULT_MIN","text":"<p>[jvm]\\ val DEFAULT_MIN: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-merging-digest-data/","title":"MergingDigestData - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/MergingDigestData</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-merging-digest-data/#mergingdigestdata","title":"MergingDigestData","text":"<p>[jvm]\\ open fun MergingDigestData(main_centroids: List&lt;Centroid&gt;, compression: Double, min: Double, max: Double)</p> <p>open fun MergingDigestData(main_centroids: List&lt;Centroid&gt;, compression: Double, min: Double, max: Double, unknownFields: ByteString)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/compression/","title":"compression - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/compression</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/compression/#compression","title":"compression","text":"<p>[jvm]\\ val compression: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/equals/","title":"equals - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/equals</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/equals/#equals","title":"equals","text":"<p>[jvm]\\ open fun equals(other: Any): Boolean</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/hash-code/","title":"hashCode - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/hashCode</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open fun hashCode(): Int</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/main_centroids/","title":"main_centroids - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/main_centroids</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/main_centroids/#main_centroids","title":"main_centroids","text":"<p>[jvm]\\ val main_centroids: List&lt;Centroid&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/max/","title":"max - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/max</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/max/#max","title":"max","text":"<p>[jvm]\\ val max: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/min/","title":"min - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/min</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/min/#min","title":"min","text":"<p>[jvm]\\ val min: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/new-builder/","title":"newBuilder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/newBuilder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/new-builder/#newbuilder","title":"newBuilder","text":"<p>[jvm]\\ open fun newBuilder(): MergingDigestData.Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/to-string/","title":"toString - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/toString</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open fun toString(): String</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ class Builder : Message.Builder&lt;MergingDigestData, MergingDigestData.Builder&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/#constructors","title":"Constructors","text":"Builder [jvm]open fun Builder()"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/#functions","title":"Functions","text":"Name Summary addUnknownField [jvm]fun addUnknownField(tag: Int, fieldEncoding: FieldEncoding, value: Any): Message.Builder&lt;M, B&gt; addUnknownFields [jvm]fun addUnknownFields(unknownFields: ByteString): Message.Builder&lt;M, B&gt; build [jvm]open fun build(): MergingDigestData buildUnknownFields [jvm]fun buildUnknownFields(): ByteString clearUnknownFields [jvm]fun clearUnknownFields(): Message.Builder&lt;M, B&gt; compression [jvm]open fun compression(compression: Double): MergingDigestData.Builder getUnknownFieldsBuffer$wire_runtime [jvm]fun getUnknownFieldsBuffer$wire_runtime(): Buffer getUnknownFieldsByteString$wire_runtime [jvm]fun getUnknownFieldsByteString$wire_runtime(): ByteString getUnknownFieldsWriter$wire_runtime [jvm]fun getUnknownFieldsWriter$wire_runtime(): ProtoWriter main_centroids [jvm]open fun main_centroids(main_centroids: List&lt;Centroid&gt;): MergingDigestData.Builder max [jvm]open fun max(max: Double): MergingDigestData.Builder min [jvm]open fun min(min: Double): MergingDigestData.Builder setUnknownFieldsBuffer$wire_runtime [jvm]fun setUnknownFieldsBuffer$wire_runtime(p: Buffer) setUnknownFieldsByteString$wire_runtime [jvm]fun setUnknownFieldsByteString$wire_runtime(p: ByteString) setUnknownFieldsWriter$wire_runtime [jvm]fun setUnknownFieldsWriter$wire_runtime(p: ProtoWriter)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/#properties","title":"Properties","text":"Name Summary compression [jvm]open val compression: Double main_centroids [jvm]open val main_centroids: List&lt;Centroid&gt; max [jvm]open val max: Double min [jvm]open val min: Double"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/-builder/","title":"Builder - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/Builder/Builder</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/-builder/#builder","title":"Builder","text":"<p>[jvm]\\ open fun Builder()</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/build/","title":"build - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/Builder/build</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/build/#build","title":"build","text":"<p>[jvm]\\ open fun build(): MergingDigestData</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/compression/","title":"compression - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/Builder/compression</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/compression/#compression","title":"compression","text":"<p>[jvm]\\ open fun compression(compression: Double): MergingDigestData.Builder</p> <p>open val compression: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/main_centroids/","title":"main_centroids - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/Builder/main_centroids</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/main_centroids/#main_centroids","title":"main_centroids","text":"<p>[jvm]\\ open fun main_centroids(main_centroids: List&lt;Centroid&gt;): MergingDigestData.Builder</p> <p>open val main_centroids: List&lt;Centroid&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/max/","title":"max - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/Builder/max</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/max/#max","title":"max","text":"<p>[jvm]\\ open fun max(max: Double): MergingDigestData.Builder</p> <p>open val max: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/min/","title":"min - Misk","text":"<p>//misk-metrics-digester/com.squareup.digester.protos.tdigest/MergingDigestData/Builder/min</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/min/#min","title":"min","text":"<p>[jvm]\\ open fun min(min: Double): MergingDigestData.Builder</p> <p>open val min: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/","title":"Package misk.metrics.digester - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/#package-miskmetricsdigester","title":"Package misk.metrics.digester","text":""},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/#types","title":"Types","text":"Name Summary FakeDigest [jvm]class FakeDigest : TDigest&lt;FakeDigest&gt; Simulates VeneurDigest for testing purposes MergingDigest [jvm]class MergingDigest(compression: Double)Provides an implementation of t-digest to be used to send histogram data SlidingWindowDigest [jvm]class SlidingWindowDigest&lt;T : TDigest&lt;T&gt;&gt;@JvmOverloadsconstructor(windower: Windower, tDigest: () -&gt; T, utcNowClock: Clock)SlidingWindowDigest approximates quantiles of data for a trailing time period. It is thread-safe. Snapshot [jvm]data class Snapshot(quantileVals: List&lt;Double&gt;, count: Long, sum: Double)Snapshot is the state of a SlidingWindowDigest at a point in time. TDigest [jvm]interface TDigest&lt;T : TDigest&lt;T&gt;&gt;TDigest abstract common methods for t-digest implementations VeneurDigest [jvm]class VeneurDigest : TDigest&lt;VeneurDigest&gt; Wraps an adapted t-digest implementation from Stripe\u2019s Veneur project Window [jvm]data class Window(start: ZonedDateTime, end: ZonedDateTime)Window represents a time range WindowDigest [jvm]data class WindowDigest&lt;T : TDigest&lt;T&gt;&gt;(window: Window, digest: T)WindowDigest holds a t-digest whose data points are scoped to a specific time window. Windower [jvm]class Windower(windowSecs: Int, stagger: Int)Windower contains multiple windows with a specified duration"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/","title":"FakeDigest - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/FakeDigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/#fakedigest","title":"FakeDigest","text":"<p>[jvm]\\ class FakeDigest : TDigest&lt;FakeDigest&gt; </p> <p>Simulates VeneurDigest for testing purposes</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/#constructors","title":"Constructors","text":"FakeDigest [jvm]fun FakeDigest() FakeDigest [jvm]fun FakeDigest(values: List&lt;Double&gt;)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/#functions","title":"Functions","text":"Name Summary add [jvm]open override fun add(value: Double)Adds a new observation to the t-digest count [jvm]open override fun count(): LongReturns the count of the number of observations recorded within the t-digest mergeInto [jvm]open override fun mergeInto(other: FakeDigest)Merges this t-digest into another t-digest proto [jvm]open override fun proto(): DigestDataReturns a representation fo the t-digest that can be later be reconstituted into an instance of the same type quantile [jvm]open override fun quantile(quantile: Double): DoubleQuantile returns the estimated value at quantile. A given quantile should be in the range of 0, 1.0. If no data has been added then NaN is returned. sum [jvm]open override fun sum(): DoubleReturns the sum of all values added into the digest, or NaN if no values have been added"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/-fake-digest/","title":"FakeDigest - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/FakeDigest/FakeDigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/-fake-digest/#fakedigest","title":"FakeDigest","text":"<p>[jvm]\\ fun FakeDigest()</p> <p>fun FakeDigest(values: List&lt;Double&gt;)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/add/","title":"add - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/FakeDigest/add</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/add/#add","title":"add","text":"<p>[jvm]\\ open override fun add(value: Double)</p> <p>Adds a new observation to the t-digest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/count/","title":"count - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/FakeDigest/count</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/count/#count","title":"count","text":"<p>[jvm]\\ open override fun count(): Long</p> <p>Returns the count of the number of observations recorded within the t-digest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/merge-into/","title":"mergeInto - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/FakeDigest/mergeInto</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/merge-into/#mergeinto","title":"mergeInto","text":"<p>[jvm]\\ open override fun mergeInto(other: FakeDigest)</p> <p>Merges this t-digest into another t-digest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/proto/","title":"proto - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/FakeDigest/proto</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/proto/#proto","title":"proto","text":"<p>[jvm]\\ open override fun proto(): DigestData</p> <p>Returns a representation fo the t-digest that can be later be reconstituted into an instance of the same type</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/quantile/","title":"quantile - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/FakeDigest/quantile</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/quantile/#quantile","title":"quantile","text":"<p>[jvm]\\ open override fun quantile(quantile: Double): Double</p> <p>Quantile returns the estimated value at quantile. A given quantile should be in the range of 0, 1.0. If no data has been added then NaN is returned.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/sum/","title":"sum - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/FakeDigest/sum</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-fake-digest/sum/#sum","title":"sum","text":"<p>[jvm]\\ open override fun sum(): Double</p> <p>Returns the sum of all values added into the digest, or NaN if no values have been added</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/","title":"MergingDigest - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/MergingDigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/#mergingdigest","title":"MergingDigest","text":"<p>[jvm]\\ class MergingDigest(compression: Double)</p> <p>Provides an implementation of t-digest to be used to send histogram data</p> <p>Direct port of Veneur digest created by Stripe https://github.com/stripe/veneur/blob/master/tdigest/merging_digest.go</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/#constructors","title":"Constructors","text":"MergingDigest [jvm]fun MergingDigest(mergingDigestData: MergingDigestData)Constructs a MergingDigest with values initialized from MergingDigestData. This should be the way to generate a MergingDigest from a serialized protobuf. MergingDigest [jvm]fun MergingDigest(compression: Double)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/#functions","title":"Functions","text":"Name Summary add [jvm]fun add(value: Double, weight: Double)Adds a new value to the t-digest, with a given weight that must be positive. Infinities and NaN cannot be added. data [jvm]fun data(): MergingDigestDataMergingDigestData contains all fields necessary to generate a MergingDigest. This type should generally just be used when serializing MergingDigest\u2019s, and doesn\u2019t have much of a purpose on its own. mergeFrom [jvm]fun mergeFrom(other: MergingDigest)Merge another digest into this one. Neither td nor other can be shared concurrently during the execution of this method. quantile [jvm]fun quantile(quantile: Double): DoubleReturns a value such that the fraction of values in td below that value is approximately equal to quantile. Returns NaN if the digest is empty."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/-merging-digest/","title":"MergingDigest - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/MergingDigest/MergingDigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/-merging-digest/#mergingdigest","title":"MergingDigest","text":"<p>[jvm]\\ fun MergingDigest(mergingDigestData: MergingDigestData)</p> <p>Constructs a MergingDigest with values initialized from MergingDigestData. This should be the way to generate a MergingDigest from a serialized protobuf.</p> <p>[jvm]\\ fun MergingDigest(compression: Double)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/add/","title":"add - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/MergingDigest/add</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/add/#add","title":"add","text":"<p>[jvm]\\ fun add(value: Double, weight: Double)</p> <p>Adds a new value to the t-digest, with a given weight that must be positive. Infinities and NaN cannot be added.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/data/","title":"data - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/MergingDigest/data</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/data/#data","title":"data","text":"<p>[jvm]\\ fun data(): MergingDigestData</p> <p>MergingDigestData contains all fields necessary to generate a MergingDigest. This type should generally just be used when serializing MergingDigest\u2019s, and doesn\u2019t have much of a purpose on its own.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/merge-from/","title":"mergeFrom - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/MergingDigest/mergeFrom</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/merge-from/#mergefrom","title":"mergeFrom","text":"<p>[jvm]\\ fun mergeFrom(other: MergingDigest)</p> <p>Merge another digest into this one. Neither td nor other can be shared concurrently during the execution of this method.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/quantile/","title":"quantile - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/MergingDigest/quantile</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-merging-digest/quantile/#quantile","title":"quantile","text":"<p>[jvm]\\ fun quantile(quantile: Double): Double</p> <p>Returns a value such that the fraction of values in td below that value is approximately equal to quantile. Returns NaN if the digest is empty.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/","title":"SlidingWindowDigest - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/SlidingWindowDigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/#slidingwindowdigest","title":"SlidingWindowDigest","text":"<p>[jvm]\\ class SlidingWindowDigest&lt;T : TDigest&lt;T&gt;&gt;@JvmOverloadsconstructor(windower: Windower, tDigest: () -&gt; T, utcNowClock: Clock)</p> <p>SlidingWindowDigest approximates quantiles of data for a trailing time period. It is thread-safe.</p> <p>To efficiently store observed data in a mergeable way, t-openDigests are used. As t-openDigests do not support discarding older data points, the sliding window aspect is approximated by keeping multiple separate t-openDigests scoped to discrete overlapping time windows. As a result, quantile data is reported from the most recent window that has ended.</p> <p>The following example creates a 1 minute sliding window where there are 6 overlapping windows at a given time. Reported quantiles are at most 10 seconds out of date. SlidingWindowDigest(Windower(60, 6),  fun() = VeneurDigest())</p> <p>The following example creates a 10 second sliding window where there are 2 overlapping windows at a given time. Reported quantiles are at most 5 seconds out of date: NewSlidingWindowDigest(Windower(10, 2),  fun() = VeneurDigest())</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/#constructors","title":"Constructors","text":"SlidingWindowDigest [jvm]@JvmOverloadsfun &lt;T : TDigest&lt;T&gt;&gt; SlidingWindowDigest(windower: Windower, tDigest: () -&gt; T, utcNowClock: Clock = Clock.systemUTC())"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/#functions","title":"Functions","text":"Name Summary closedDigests [jvm]@Synchronizedfun closedDigests(from: ZonedDateTime): List&lt;WindowDigest&lt;T&gt;&gt;Returns all WindowDigests that ended starting from the given time (inclusive). The returned WindowDigest are ordered by their start time. mergeIn [jvm]@Synchronizedfun mergeIn(windowDigests: List&lt;WindowDigest&lt;T&gt;&gt;)Merges in the data from the given WindowDigests. The given windowDigests should use the same windowing boundaries as this; if they do not then quantiles reported by this sliding window digest may be incorrect. observe [jvm]@Synchronizedfun observe(value: Double)Adds the given value to all currently open t-openDigests. It is important to note that an observed value is not immediately reflected in calls to Quantile. openDigests [jvm]fun openDigests(gc: Boolean): List&lt;WindowDigest&lt;T&gt;&gt;Returns all WindowDigests that are currently open, creating new windows if necessary. Older openDigests that ended more than 1 minute earlier are discarded if gc is true. quantile [jvm]@Synchronizedfun quantile(quantile: Double): DoubleReturns estimated value for a quantile. The returned value may not include recently observed values due to how sliding windows are approximated. If no data has been observed then NaN is returned. snapshot [jvm]@Synchronizedfun snapshot(quantiles: List&lt;Double&gt;): SnapshotReturns a snapshot of estimated values for quantiles, along with the count of observations and their sum. The returned values may not include recent observations due to how sliding windows are approximated. If no data has been observed then a slice of NaNs of having quantiles.count() is returned and NaN is returned for the sum."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/-sliding-window-digest/","title":"SlidingWindowDigest - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/SlidingWindowDigest/SlidingWindowDigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/-sliding-window-digest/#slidingwindowdigest","title":"SlidingWindowDigest","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun &lt;T : TDigest&lt;T&gt;&gt; SlidingWindowDigest(windower: Windower, tDigest: () -&gt; T, utcNowClock: Clock = Clock.systemUTC())</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/closed-digests/","title":"closedDigests - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/SlidingWindowDigest/closedDigests</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/closed-digests/#closeddigests","title":"closedDigests","text":"<p>[jvm]\\</p> <p>@Synchronized</p> <p>fun closedDigests(from: ZonedDateTime): List&lt;WindowDigest&lt;T&gt;&gt;</p> <p>Returns all WindowDigests that ended starting from the given time (inclusive). The returned WindowDigest are ordered by their start time.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/merge-in/","title":"mergeIn - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/SlidingWindowDigest/mergeIn</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/merge-in/#mergein","title":"mergeIn","text":"<p>[jvm]\\</p> <p>@Synchronized</p> <p>fun mergeIn(windowDigests: List&lt;WindowDigest&lt;T&gt;&gt;)</p> <p>Merges in the data from the given WindowDigests. The given windowDigests should use the same windowing boundaries as this; if they do not then quantiles reported by this sliding window digest may be incorrect.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/observe/","title":"observe - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/SlidingWindowDigest/observe</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/observe/#observe","title":"observe","text":"<p>[jvm]\\</p> <p>@Synchronized</p> <p>fun observe(value: Double)</p> <p>Adds the given value to all currently open t-openDigests. It is important to note that an observed value is not immediately reflected in calls to Quantile.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/open-digests/","title":"openDigests - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/SlidingWindowDigest/openDigests</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/open-digests/#opendigests","title":"openDigests","text":"<p>[jvm]\\ fun openDigests(gc: Boolean): List&lt;WindowDigest&lt;T&gt;&gt;</p> <p>Returns all WindowDigests that are currently open, creating new windows if necessary. Older openDigests that ended more than 1 minute earlier are discarded if gc is true.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/quantile/","title":"quantile - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/SlidingWindowDigest/quantile</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/quantile/#quantile","title":"quantile","text":"<p>[jvm]\\</p> <p>@Synchronized</p> <p>fun quantile(quantile: Double): Double</p> <p>Returns estimated value for a quantile. The returned value may not include recently observed values due to how sliding windows are approximated. If no data has been observed then NaN is returned.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/snapshot/","title":"snapshot - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/SlidingWindowDigest/snapshot</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/snapshot/#snapshot","title":"snapshot","text":"<p>[jvm]\\</p> <p>@Synchronized</p> <p>fun snapshot(quantiles: List&lt;Double&gt;): Snapshot</p> <p>Returns a snapshot of estimated values for quantiles, along with the count of observations and their sum. The returned values may not include recent observations due to how sliding windows are approximated. If no data has been observed then a slice of NaNs of having quantiles.count() is returned and NaN is returned for the sum.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-snapshot/","title":"Snapshot - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/Snapshot</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-snapshot/#snapshot","title":"Snapshot","text":"<p>[jvm]\\ data class Snapshot(quantileVals: List&lt;Double&gt;, count: Long, sum: Double)</p> <p>Snapshot is the state of a SlidingWindowDigest at a point in time.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-snapshot/#constructors","title":"Constructors","text":"Snapshot [jvm]fun Snapshot(quantileVals: List&lt;Double&gt;, count: Long, sum: Double)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-snapshot/#properties","title":"Properties","text":"Name Summary count [jvm]val count: Long quantileVals [jvm]val quantileVals: List&lt;Double&gt; sum [jvm]val sum: Double"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-snapshot/-snapshot/","title":"Snapshot - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/Snapshot/Snapshot</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-snapshot/-snapshot/#snapshot","title":"Snapshot","text":"<p>[jvm]\\ fun Snapshot(quantileVals: List&lt;Double&gt;, count: Long, sum: Double)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-snapshot/count/","title":"count - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/Snapshot/count</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-snapshot/count/#count","title":"count","text":"<p>[jvm]\\ val count: Long</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-snapshot/quantile-vals/","title":"quantileVals - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/Snapshot/quantileVals</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-snapshot/quantile-vals/#quantilevals","title":"quantileVals","text":"<p>[jvm]\\ val quantileVals: List&lt;Double&gt;</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-snapshot/sum/","title":"sum - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/Snapshot/sum</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-snapshot/sum/#sum","title":"sum","text":"<p>[jvm]\\ val sum: Double</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/","title":"TDigest - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/TDigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/#tdigest","title":"TDigest","text":"<p>[jvm]\\ interface TDigest&lt;T : TDigest&lt;T&gt;&gt;</p> <p>TDigest abstract common methods for t-digest implementations</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/#functions","title":"Functions","text":"Name Summary add [jvm]abstract fun add(value: Double)Adds an observed value to the digest. count [jvm]abstract fun count(): LongReturns the count of values added into the digest. mergeInto [jvm]abstract fun mergeInto(other: T)MergeInto merges the data in this digest into the other digest. The other digest is mutated and must be of the same TDigest type. proto [jvm]abstract fun proto(): DigestDataProto returns a representation of the t-digest that can be later reconstituted into an instance of the same type. quantile [jvm]abstract fun quantile(quantile: Double): DoubleQuantile returns the estimated value at quantile. A given quantile should be in the range of 0, 1.0. If no data has been added then NaN is returned. sum [jvm]abstract fun sum(): DoubleReturns the sum of all values added into the digest, or NaN if no values have been added."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/#inheritors","title":"Inheritors","text":"Name FakeDigest VeneurDigest"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/add/","title":"add - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/TDigest/add</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/add/#add","title":"add","text":"<p>[jvm]\\ abstract fun add(value: Double)</p> <p>Adds an observed value to the digest.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/count/","title":"count - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/TDigest/count</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/count/#count","title":"count","text":"<p>[jvm]\\ abstract fun count(): Long</p> <p>Returns the count of values added into the digest.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/merge-into/","title":"mergeInto - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/TDigest/mergeInto</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/merge-into/#mergeinto","title":"mergeInto","text":"<p>[jvm]\\ abstract fun mergeInto(other: T)</p> <p>MergeInto merges the data in this digest into the other digest. The other digest is mutated and must be of the same TDigest type.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/proto/","title":"proto - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/TDigest/proto</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/proto/#proto","title":"proto","text":"<p>[jvm]\\ abstract fun proto(): DigestData</p> <p>Proto returns a representation of the t-digest that can be later reconstituted into an instance of the same type.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/quantile/","title":"quantile - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/TDigest/quantile</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/quantile/#quantile","title":"quantile","text":"<p>[jvm]\\ abstract fun quantile(quantile: Double): Double</p> <p>Quantile returns the estimated value at quantile. A given quantile should be in the range of 0, 1.0. If no data has been added then NaN is returned.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/sum/","title":"sum - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/TDigest/sum</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-t-digest/sum/#sum","title":"sum","text":"<p>[jvm]\\ abstract fun sum(): Double</p> <p>Returns the sum of all values added into the digest, or NaN if no values have been added.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/","title":"VeneurDigest - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/VeneurDigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/#veneurdigest","title":"VeneurDigest","text":"<p>[jvm]\\ class VeneurDigest : TDigest&lt;VeneurDigest&gt; </p> <p>Wraps an adapted t-digest implementation from Stripe\u2019s Veneur project</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/#constructors","title":"Constructors","text":"VeneurDigest [jvm]fun VeneurDigest()Creates a TDigest backed by a VeneurDigest, using a default compression level VeneurDigest [jvm]fun VeneurDigest(digestData: DigestData)Creates a VeneurDigest from a DigestData proto The DigestData proto must have veneur_digest set correctly"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/#functions","title":"Functions","text":"Name Summary add [jvm]open override fun add(value: Double)Adds a new observation to the t-digest count [jvm]open override fun count(): LongReturns the count of the number of observations recorded within the t-digest mergeInto [jvm]open override fun mergeInto(other: VeneurDigest)Merges this t-digest into another t-digest mergingDigest [jvm]fun mergingDigest(): MergingDigestReturns the mergingDigest instance proto [jvm]open override fun proto(): DigestDataReturns a representation fo the t-digest that can be later be reconstituted into an instance of the same type quantile [jvm]open override fun quantile(quantile: Double): DoubleReturns a value such that the fraction of values in td below that value is approximately equal to quantile. Returns NaN if the digest is empty. sum [jvm]open override fun sum(): DoubleReturns the sum of all values added into the digest, or NaN if no values have been added"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/-veneur-digest/","title":"VeneurDigest - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/VeneurDigest/VeneurDigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/-veneur-digest/#veneurdigest","title":"VeneurDigest","text":"<p>[jvm]\\ fun VeneurDigest()</p> <p>Creates a TDigest backed by a VeneurDigest, using a default compression level</p> <p>[jvm]\\ fun VeneurDigest(digestData: DigestData)</p> <p>Creates a VeneurDigest from a DigestData proto The DigestData proto must have veneur_digest set correctly</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/add/","title":"add - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/VeneurDigest/add</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/add/#add","title":"add","text":"<p>[jvm]\\ open override fun add(value: Double)</p> <p>Adds a new observation to the t-digest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/count/","title":"count - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/VeneurDigest/count</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/count/#count","title":"count","text":"<p>[jvm]\\ open override fun count(): Long</p> <p>Returns the count of the number of observations recorded within the t-digest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/merge-into/","title":"mergeInto - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/VeneurDigest/mergeInto</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/merge-into/#mergeinto","title":"mergeInto","text":"<p>[jvm]\\ open override fun mergeInto(other: VeneurDigest)</p> <p>Merges this t-digest into another t-digest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/merging-digest/","title":"mergingDigest - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/VeneurDigest/mergingDigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/merging-digest/#mergingdigest","title":"mergingDigest","text":"<p>[jvm]\\ fun mergingDigest(): MergingDigest</p> <p>Returns the mergingDigest instance</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/proto/","title":"proto - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/VeneurDigest/proto</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/proto/#proto","title":"proto","text":"<p>[jvm]\\ open override fun proto(): DigestData</p> <p>Returns a representation fo the t-digest that can be later be reconstituted into an instance of the same type</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/quantile/","title":"quantile - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/VeneurDigest/quantile</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/quantile/#quantile","title":"quantile","text":"<p>[jvm]\\ open override fun quantile(quantile: Double): Double</p> <p>Returns a value such that the fraction of values in td below that value is approximately equal to quantile. Returns NaN if the digest is empty.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/sum/","title":"sum - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/VeneurDigest/sum</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-veneur-digest/sum/#sum","title":"sum","text":"<p>[jvm]\\ open override fun sum(): Double</p> <p>Returns the sum of all values added into the digest, or NaN if no values have been added</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window/","title":"Window - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/Window</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window/#window","title":"Window","text":"<p>[jvm]\\ data class Window(start: ZonedDateTime, end: ZonedDateTime)</p> <p>Window represents a time range</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window/#constructors","title":"Constructors","text":"Window [jvm]fun Window(start: ZonedDateTime, end: ZonedDateTime)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window/#functions","title":"Functions","text":"Name Summary contains [jvm]fun contains(t: ZonedDateTime): BooleanReturns true if the given time t falls within the window\u2019s Start &lt;= t &lt; End."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window/#properties","title":"Properties","text":"Name Summary end [jvm]val end: ZonedDateTime start [jvm]val start: ZonedDateTime"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window/-window/","title":"Window - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/Window/Window</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window/-window/#window","title":"Window","text":"<p>[jvm]\\ fun Window(start: ZonedDateTime, end: ZonedDateTime)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window/contains/","title":"contains - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/Window/contains</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window/contains/#contains","title":"contains","text":"<p>[jvm]\\ fun contains(t: ZonedDateTime): Boolean</p> <p>Returns true if the given time t falls within the window\u2019s Start &lt;= t &lt; End.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window/end/","title":"end - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/Window/end</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window/end/#end","title":"end","text":"<p>[jvm]\\ val end: ZonedDateTime</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window/start/","title":"start - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/Window/start</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window/start/#start","title":"start","text":"<p>[jvm]\\ val start: ZonedDateTime</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window-digest/","title":"WindowDigest - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/WindowDigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window-digest/#windowdigest","title":"WindowDigest","text":"<p>[jvm]\\ data class WindowDigest&lt;T : TDigest&lt;T&gt;&gt;(window: Window, digest: T)</p> <p>WindowDigest holds a t-digest whose data points are scoped to a specific time window.</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window-digest/#constructors","title":"Constructors","text":"WindowDigest [jvm]fun &lt;T : TDigest&lt;T&gt;&gt; WindowDigest(window: Window, digest: T)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window-digest/#properties","title":"Properties","text":"Name Summary digest [jvm]val digest: T window [jvm]val window: Window"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window-digest/-window-digest/","title":"WindowDigest - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/WindowDigest/WindowDigest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window-digest/-window-digest/#windowdigest","title":"WindowDigest","text":"<p>[jvm]\\ fun &lt;T : TDigest&lt;T&gt;&gt; WindowDigest(window: Window, digest: T)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window-digest/digest/","title":"digest - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/WindowDigest/digest</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window-digest/digest/#digest","title":"digest","text":"<p>[jvm]\\ val digest: T</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window-digest/window/","title":"window - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/WindowDigest/window</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-window-digest/window/#window","title":"window","text":"<p>[jvm]\\ val window: Window</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-windower/","title":"Windower - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/Windower</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-windower/#windower","title":"Windower","text":"<p>[jvm]\\ class Windower(windowSecs: Int, stagger: Int)</p> <p>Windower contains multiple windows with a specified duration</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-windower/#constructors","title":"Constructors","text":"Windower [jvm]fun Windower(windowSecs: Int, stagger: Int)"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-windower/#functions","title":"Functions","text":"Name Summary windowsContaining [jvm]fun windowsContaining(t: ZonedDateTime): List&lt;Window&gt;Returns all windows that the given time falls into. The returned slice will be ordered by window start time, and the number of windows in the returned slice will the same as the stagger given when the Windower was created."},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-windower/-windower/","title":"Windower - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/Windower/Windower</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-windower/-windower/#windower","title":"Windower","text":"<p>[jvm]\\ fun Windower(windowSecs: Int, stagger: Int)</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-windower/windows-containing/","title":"windowsContaining - Misk","text":"<p>//misk-metrics-digester/misk.metrics.digester/Windower/windowsContaining</p>"},{"location":"0.x/misk-metrics-digester/misk-metrics-digester/misk.metrics.digester/-windower/windows-containing/#windowscontaining","title":"windowsContaining","text":"<p>[jvm]\\ fun windowsContaining(t: ZonedDateTime): List&lt;Window&gt;</p> <p>Returns all windows that the given time falls into. The returned slice will be ordered by window start time, and the number of windows in the returned slice will the same as the stagger given when the Windower was created.</p>"},{"location":"0.x/misk-policy/","title":"misk-policy - Misk","text":"<p>//misk-policy</p>"},{"location":"0.x/misk-policy/#misk-policy","title":"misk-policy","text":""},{"location":"0.x/misk-policy/#packages","title":"Packages","text":"Name misk.policy.opa"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/","title":"Package misk.policy.opa - Misk","text":"<p>//misk-policy/misk.policy.opa</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/#package-miskpolicyopa","title":"Package misk.policy.opa","text":""},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/#types","title":"Types","text":"Name Summary Metrics [jvm]data class Metrics(counter_server_query_cache_hit: Long, timer_rego_external_resolve_ns: Long, timer_rego_input_parse_ns: Long, timer_rego_query_eval_ns: Long, timer_server_handler_ns: Long) MiskOpaMetrics [jvm]@Singletonclass MiskOpaMetrics@Injectconstructor(metrics: Metrics) : OpaMetricsMaps OpaResponse.metrics into prometheus counters and histograms. OpaApi [jvm]interface OpaApi OpaConfig [jvm]data class OpaConfig@JvmOverloadsconstructor(baseUrl: String, unixSocket: String?, provenance: Boolean, metrics: Boolean) : Config OpaMetrics [jvm]interface OpaMetrics OpaModule [jvm]class OpaModule@Injectconstructor(config: OpaConfig) : KAbstractModule OpaPolicyEngine [jvm]interface OpaPolicyEngine OpaRequest [jvm]abstract class OpaRequest OpaResponse [jvm]abstract class OpaResponse PolicyEngineException [jvm]class PolicyEngineException@JvmOverloadsconstructor(message: String, cause: Throwable?) : Exception Provenance [jvm]data class Provenance(version: String?, build_commit: String?, build_timestamp: String?, build_hostname: String?, revision: String?, bundles: Map&lt;String, ProvenanceBundle&gt;?) ProvenanceBundle [jvm]data class ProvenanceBundle(revision: String?) RealOpaPolicyEngine [jvm]class RealOpaPolicyEngine@Injectconstructor(opaApi: OpaApi, @Named(value = \u201copa-moshi\u201d)moshi: Moshi, metrics: OpaMetrics, config: OpaConfig) : OpaPolicyEngineSupport for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes. Request [jvm]data class Request&lt;T&gt;(input: T)OPA Request wrapper. Response [jvm]data class Response&lt;T&gt;(decision_id: String?, result: T?, provenance: Provenance?, metrics: Metrics?)OPA Response wrapper. Every response has this standard shape, made concrete by the expected response type."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/#functions","title":"Functions","text":"Name Summary evaluate [jvm]inline fun &lt;R : OpaResponse&gt; OpaPolicyEngine.evaluate(document: String): REvaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.[jvm]inline fun &lt;T : OpaRequest, R : OpaResponse&gt; OpaPolicyEngine.evaluate(document: String, input: T): REvaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.[jvm]inline fun &lt;R : OpaResponse&gt; OpaPolicyEngine.evaluate(document: String, input: String): REvaluate / Query a document with given input of raw JSON. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. This consumes raw JSON for corner cases where developers need to do queries that the automatic JSON serialization doesn\u2019t support."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/evaluate/","title":"evaluate - Misk","text":"<p>//misk-policy/misk.policy.opa/evaluate</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/evaluate/#evaluate","title":"evaluate","text":"<p>[jvm]\\ inline fun &lt;R : OpaResponse&gt; OpaPolicyEngine.evaluate(document: String): R</p> <p>Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/evaluate/#return","title":"Return","text":"<p>Response shape R from OPA.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/evaluate/#parameters","title":"Parameters","text":"<p>jvm</p> document Name or Path of the OPA document to query."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/evaluate/#throws","title":"Throws","text":"misk.policy.opa.PolicyEngineException if the request to OPA failed or the response shape didn\u2019t match R. java.lang.IllegalArgumentException if no document path was specified. <p>[jvm]\\ inline fun &lt;T : OpaRequest, R : OpaResponse&gt; OpaPolicyEngine.evaluate(document: String, input: T): R</p> <p>Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/evaluate/#return_1","title":"Return","text":"<p>Response shape R from OPA.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/evaluate/#parameters_1","title":"Parameters","text":"<p>jvm</p> document Name or Path of the OPA document to query. input Input data to be supplied to OPA at evaluation time (the input global field)."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/evaluate/#throws_1","title":"Throws","text":"misk.policy.opa.PolicyEngineException if the request to OPA failed or the response shape didn\u2019t match R. java.lang.IllegalArgumentException if no document path was specified. <p>[jvm]\\ inline fun &lt;R : OpaResponse&gt; OpaPolicyEngine.evaluate(document: String, input: String): R</p> <p>Evaluate / Query a document with given input of raw JSON. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. This consumes raw JSON for corner cases where developers need to do queries that the automatic JSON serialization doesn\u2019t support.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/evaluate/#return_2","title":"Return","text":"<p>Response shape R from OPA.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/evaluate/#parameters_2","title":"Parameters","text":"<p>jvm</p> document Name or Path of the OPA document to query. input Input data to be supplied to OPA at evaluation time. Must be valid JSON."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/evaluate/#throws_2","title":"Throws","text":"misk.policy.opa.PolicyEngineException if the request to OPA failed or the response shape didn\u2019t match R. java.lang.IllegalArgumentException if no document path was specified."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/","title":"Metrics - Misk","text":"<p>//misk-policy/misk.policy.opa/Metrics</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/#metrics","title":"Metrics","text":"<p>[jvm]\\ data class Metrics(counter_server_query_cache_hit: Long, timer_rego_external_resolve_ns: Long, timer_rego_input_parse_ns: Long, timer_rego_query_eval_ns: Long, timer_server_handler_ns: Long)</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/#properties","title":"Properties","text":"Name Summary counter_server_query_cache_hit [jvm]val counter_server_query_cache_hit: Long timer_rego_external_resolve_ns [jvm]val timer_rego_external_resolve_ns: Long timer_rego_input_parse_ns [jvm]val timer_rego_input_parse_ns: Long timer_rego_query_eval_ns [jvm]val timer_rego_query_eval_ns: Long timer_server_handler_ns [jvm]val timer_server_handler_ns: Long"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/-metrics/","title":"Metrics - Misk","text":"<p>//misk-policy/misk.policy.opa/Metrics/Metrics</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/-metrics/#metrics","title":"Metrics","text":"<p>[jvm]\\ fun Metrics(counter_server_query_cache_hit: Long, timer_rego_external_resolve_ns: Long, timer_rego_input_parse_ns: Long, timer_rego_query_eval_ns: Long, timer_server_handler_ns: Long)</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/counter_server_query_cache_hit/","title":"counter_server_query_cache_hit - Misk","text":"<p>//misk-policy/misk.policy.opa/Metrics/counter_server_query_cache_hit</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/counter_server_query_cache_hit/#counter_server_query_cache_hit","title":"counter_server_query_cache_hit","text":"<p>[jvm]\\ val counter_server_query_cache_hit: Long</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/timer_rego_external_resolve_ns/","title":"timer_rego_external_resolve_ns - Misk","text":"<p>//misk-policy/misk.policy.opa/Metrics/timer_rego_external_resolve_ns</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/timer_rego_external_resolve_ns/#timer_rego_external_resolve_ns","title":"timer_rego_external_resolve_ns","text":"<p>[jvm]\\ val timer_rego_external_resolve_ns: Long</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/timer_rego_input_parse_ns/","title":"timer_rego_input_parse_ns - Misk","text":"<p>//misk-policy/misk.policy.opa/Metrics/timer_rego_input_parse_ns</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/timer_rego_input_parse_ns/#timer_rego_input_parse_ns","title":"timer_rego_input_parse_ns","text":"<p>[jvm]\\ val timer_rego_input_parse_ns: Long</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/timer_rego_query_eval_ns/","title":"timer_rego_query_eval_ns - Misk","text":"<p>//misk-policy/misk.policy.opa/Metrics/timer_rego_query_eval_ns</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/timer_rego_query_eval_ns/#timer_rego_query_eval_ns","title":"timer_rego_query_eval_ns","text":"<p>[jvm]\\ val timer_rego_query_eval_ns: Long</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/timer_server_handler_ns/","title":"timer_server_handler_ns - Misk","text":"<p>//misk-policy/misk.policy.opa/Metrics/timer_server_handler_ns</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-metrics/timer_server_handler_ns/#timer_server_handler_ns","title":"timer_server_handler_ns","text":"<p>[jvm]\\ val timer_server_handler_ns: Long</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-misk-opa-metrics/","title":"MiskOpaMetrics - Misk","text":"<p>//misk-policy/misk.policy.opa/MiskOpaMetrics</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-misk-opa-metrics/#miskopametrics","title":"MiskOpaMetrics","text":"<p>[jvm]\\ @Singleton</p> <p>class MiskOpaMetrics@Injectconstructor(metrics: Metrics) : OpaMetrics</p> <p>Maps OpaResponse.metrics into prometheus counters and histograms.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-misk-opa-metrics/#constructors","title":"Constructors","text":"MiskOpaMetrics [jvm]@Injectfun MiskOpaMetrics(metrics: Metrics)"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-misk-opa-metrics/#functions","title":"Functions","text":"Name Summary evaluated [jvm]open override fun evaluated(document: String)Increments a counter to indicate policy evaluation, whether metrics are enabled on the request or not. observe [jvm]open override fun observe(document: String, response: OpaResponse)Dispatches OpaResponse.metrics into the prometheus client."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-misk-opa-metrics/-misk-opa-metrics/","title":"MiskOpaMetrics - Misk","text":"<p>//misk-policy/misk.policy.opa/MiskOpaMetrics/MiskOpaMetrics</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-misk-opa-metrics/-misk-opa-metrics/#miskopametrics","title":"MiskOpaMetrics","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun MiskOpaMetrics(metrics: Metrics)</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-misk-opa-metrics/evaluated/","title":"evaluated - Misk","text":"<p>//misk-policy/misk.policy.opa/MiskOpaMetrics/evaluated</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-misk-opa-metrics/evaluated/#evaluated","title":"evaluated","text":"<p>[jvm]\\ open override fun evaluated(document: String)</p> <p>Increments a counter to indicate policy evaluation, whether metrics are enabled on the request or not.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-misk-opa-metrics/observe/","title":"observe - Misk","text":"<p>//misk-policy/misk.policy.opa/MiskOpaMetrics/observe</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-misk-opa-metrics/observe/#observe","title":"observe","text":"<p>[jvm]\\ open override fun observe(document: String, response: OpaResponse)</p> <p>Dispatches OpaResponse.metrics into the prometheus client.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-api/","title":"OpaApi - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaApi</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-api/#opaapi","title":"OpaApi","text":"<p>[jvm]\\ interface OpaApi</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-api/#functions","title":"Functions","text":"Name Summary queryDocument [jvm]@Headers(value = [\u201cContent-Type: application/json\u201d])@POST(value = \u201c/v1/data/{documentPath}\u201d)abstract fun queryDocument(@Path(value = \u201cdocumentPath\u201d, encoded = true)documentPath: String, @Bodyinput: String, @Query(value = \u201cprovenance\u201d)provenance: Boolean, @Query(value = \u201cmetrics\u201d)metrics: Boolean): Call&lt;ResponseBody&gt;"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-api/query-document/","title":"queryDocument - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaApi/queryDocument</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-api/query-document/#querydocument","title":"queryDocument","text":"<p>[jvm]\\</p> <p>@Headers(value = [\u201cContent-Type: application/json\u201d])</p> <p>@POST(value = \u201c/v1/data/{documentPath}\u201d)</p> <p>abstract fun queryDocument(@Path(value = \u201cdocumentPath\u201d, encoded = true)documentPath: String, @Bodyinput: String, @Query(value = \u201cprovenance\u201d)provenance: Boolean, @Query(value = \u201cmetrics\u201d)metrics: Boolean): Call&lt;ResponseBody&gt;</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-config/","title":"OpaConfig - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaConfig</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-config/#opaconfig","title":"OpaConfig","text":"<p>[jvm]\\ data class OpaConfig@JvmOverloadsconstructor(baseUrl: String, unixSocket: String?, provenance: Boolean, metrics: Boolean) : Config</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-config/#properties","title":"Properties","text":"Name Summary baseUrl [jvm]val baseUrl: String metrics [jvm]val metrics: Boolean = true provenance [jvm]val provenance: Boolean = false unixSocket [jvm]val unixSocket: String?"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-config/-opa-config/","title":"OpaConfig - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaConfig/OpaConfig</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-config/-opa-config/#opaconfig","title":"OpaConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun OpaConfig(baseUrl: String, unixSocket: String?, provenance: Boolean = false, metrics: Boolean = true)</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-config/base-url/","title":"baseUrl - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaConfig/baseUrl</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-config/base-url/#baseurl","title":"baseUrl","text":"<p>[jvm]\\ val baseUrl: String</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-config/metrics/","title":"metrics - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaConfig/metrics</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-config/metrics/#metrics","title":"metrics","text":"<p>[jvm]\\ val metrics: Boolean = true</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-config/provenance/","title":"provenance - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaConfig/provenance</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-config/provenance/#provenance","title":"provenance","text":"<p>[jvm]\\ val provenance: Boolean = false</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-config/unix-socket/","title":"unixSocket - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaConfig/unixSocket</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-config/unix-socket/#unixsocket","title":"unixSocket","text":"<p>[jvm]\\ val unixSocket: String?</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/","title":"OpaMetrics - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaMetrics</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/#opametrics","title":"OpaMetrics","text":"<p>[jvm]\\ interface OpaMetrics</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/#types","title":"Types","text":"Name Summary Names [jvm]enum Names : Enum&lt;OpaMetrics.Names&gt;"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/#functions","title":"Functions","text":"Name Summary evaluated [jvm]abstract fun evaluated(document: String)Increments a counter to indicate policy evaluation, whether metrics are enabled on the request or not. observe [jvm]abstract fun observe(document: String, response: OpaResponse)Dispatches OpaResponse.metrics into a metrics client."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/#inheritors","title":"Inheritors","text":"Name MiskOpaMetrics"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/evaluated/","title":"evaluated - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaMetrics/evaluated</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/evaluated/#evaluated","title":"evaluated","text":"<p>[jvm]\\ abstract fun evaluated(document: String)</p> <p>Increments a counter to indicate policy evaluation, whether metrics are enabled on the request or not.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/observe/","title":"observe - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaMetrics/observe</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/observe/#observe","title":"observe","text":"<p>[jvm]\\ abstract fun observe(document: String, response: OpaResponse)</p> <p>Dispatches OpaResponse.metrics into a metrics client.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/","title":"Names - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaMetrics/Names</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/#names","title":"Names","text":"<p>[jvm]\\ enum Names : Enum&lt;OpaMetrics.Names&gt;</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/#entries","title":"Entries","text":"opa_rego_evaluated [jvm]opa_rego_evaluated() opa_server_handler [jvm]opa_server_handler() opa_rego_query_eval [jvm]opa_rego_query_eval() opa_rego_input_parse [jvm]opa_rego_input_parse() opa_rego_external_resolve [jvm]opa_rego_external_resolve() opa_server_query_cache_hit [jvm]opa_server_query_cache_hit()"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_rego_evaluated/","title":"opa_rego_evaluated - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaMetrics/Names/opa_rego_evaluated</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_rego_evaluated/#opa_rego_evaluated","title":"opa_rego_evaluated","text":"<p>[jvm]\\ opa_rego_evaluated()</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_rego_evaluated/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_rego_external_resolve/","title":"opa_rego_external_resolve - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaMetrics/Names/opa_rego_external_resolve</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_rego_external_resolve/#opa_rego_external_resolve","title":"opa_rego_external_resolve","text":"<p>[jvm]\\ opa_rego_external_resolve()</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_rego_external_resolve/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_rego_input_parse/","title":"opa_rego_input_parse - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaMetrics/Names/opa_rego_input_parse</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_rego_input_parse/#opa_rego_input_parse","title":"opa_rego_input_parse","text":"<p>[jvm]\\ opa_rego_input_parse()</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_rego_input_parse/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_rego_query_eval/","title":"opa_rego_query_eval - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaMetrics/Names/opa_rego_query_eval</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_rego_query_eval/#opa_rego_query_eval","title":"opa_rego_query_eval","text":"<p>[jvm]\\ opa_rego_query_eval()</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_rego_query_eval/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_server_handler/","title":"opa_server_handler - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaMetrics/Names/opa_server_handler</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_server_handler/#opa_server_handler","title":"opa_server_handler","text":"<p>[jvm]\\ opa_server_handler()</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_server_handler/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_server_query_cache_hit/","title":"opa_server_query_cache_hit - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaMetrics/Names/opa_server_query_cache_hit</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_server_query_cache_hit/#opa_server_query_cache_hit","title":"opa_server_query_cache_hit","text":"<p>[jvm]\\ opa_server_query_cache_hit()</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-metrics/-names/opa_server_query_cache_hit/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-module/","title":"OpaModule - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaModule</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-module/#opamodule","title":"OpaModule","text":"<p>[jvm]\\ class OpaModule@Injectconstructor(config: OpaConfig) : KAbstractModule</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideMoshi [jvm]@Provides@Singleton@Named(value = \u201copa-moshi\u201d)fun provideMoshi(): Moshi requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-module/-opa-module/","title":"OpaModule - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaModule/OpaModule</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-module/-opa-module/#opamodule","title":"OpaModule","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun OpaModule(config: OpaConfig)</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-module/provide-moshi/","title":"provideMoshi - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaModule/provideMoshi</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-module/provide-moshi/#providemoshi","title":"provideMoshi","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>@Named(value = \u201copa-moshi\u201d)</p> <p>fun provideMoshi(): Moshi</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-policy-engine/","title":"OpaPolicyEngine - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaPolicyEngine</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-policy-engine/#opapolicyengine","title":"OpaPolicyEngine","text":"<p>[jvm]\\ interface OpaPolicyEngine</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-policy-engine/#functions","title":"Functions","text":"Name Summary evaluateNoInput [jvm]abstract fun &lt;R : OpaResponse&gt; evaluateNoInput(document: String, returnType: Class&lt;R&gt;): R evaluateRawJsonInput [jvm]abstract fun &lt;R : OpaResponse&gt; evaluateRawJsonInput(document: String, input: String, returnType: Class&lt;R&gt;): R evaluateWithInput [jvm]abstract fun &lt;T : OpaRequest, R : OpaResponse&gt; evaluateWithInput(document: String, input: T, inputType: Class&lt;T&gt;, returnType: Class&lt;R&gt;): R"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-policy-engine/#inheritors","title":"Inheritors","text":"Name RealOpaPolicyEngine"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-policy-engine/#extensions","title":"Extensions","text":"Name Summary evaluate [jvm]inline fun &lt;R : OpaResponse&gt; OpaPolicyEngine.evaluate(document: String): REvaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.[jvm]inline fun &lt;T : OpaRequest, R : OpaResponse&gt; OpaPolicyEngine.evaluate(document: String, input: T): REvaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.[jvm]inline fun &lt;R : OpaResponse&gt; OpaPolicyEngine.evaluate(document: String, input: String): REvaluate / Query a document with given input of raw JSON. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. This consumes raw JSON for corner cases where developers need to do queries that the automatic JSON serialization doesn\u2019t support."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-policy-engine/evaluate-no-input/","title":"evaluateNoInput - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaPolicyEngine/evaluateNoInput</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-policy-engine/evaluate-no-input/#evaluatenoinput","title":"evaluateNoInput","text":"<p>[jvm]\\ abstract fun &lt;R : OpaResponse&gt; evaluateNoInput(document: String, returnType: Class&lt;R&gt;): R</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-policy-engine/evaluate-raw-json-input/","title":"evaluateRawJsonInput - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaPolicyEngine/evaluateRawJsonInput</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-policy-engine/evaluate-raw-json-input/#evaluaterawjsoninput","title":"evaluateRawJsonInput","text":"<p>[jvm]\\ abstract fun &lt;R : OpaResponse&gt; evaluateRawJsonInput(document: String, input: String, returnType: Class&lt;R&gt;): R</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-policy-engine/evaluate-with-input/","title":"evaluateWithInput - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaPolicyEngine/evaluateWithInput</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-policy-engine/evaluate-with-input/#evaluatewithinput","title":"evaluateWithInput","text":"<p>[jvm]\\ abstract fun &lt;T : OpaRequest, R : OpaResponse&gt; evaluateWithInput(document: String, input: T, inputType: Class&lt;T&gt;, returnType: Class&lt;R&gt;): R</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-request/","title":"OpaRequest - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaRequest</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-request/#oparequest","title":"OpaRequest","text":"<p>[jvm]\\ abstract class OpaRequest</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-request/-opa-request/","title":"OpaRequest - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaRequest/OpaRequest</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-request/-opa-request/#oparequest","title":"OpaRequest","text":"<p>[jvm]\\ fun OpaRequest()</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-response/","title":"OpaResponse - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaResponse</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-response/#oparesponse","title":"OpaResponse","text":"<p>[jvm]\\ abstract class OpaResponse</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-response/#properties","title":"Properties","text":"Name Summary metrics [jvm]var metrics: Metrics? = null provenance [jvm]var provenance: Provenance? = null"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-response/-opa-response/","title":"OpaResponse - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaResponse/OpaResponse</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-response/-opa-response/#oparesponse","title":"OpaResponse","text":"<p>[jvm]\\ fun OpaResponse()</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-response/metrics/","title":"metrics - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaResponse/metrics</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-response/metrics/#metrics","title":"metrics","text":"<p>[jvm]\\ var metrics: Metrics? = null</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-response/provenance/","title":"provenance - Misk","text":"<p>//misk-policy/misk.policy.opa/OpaResponse/provenance</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-opa-response/provenance/#provenance","title":"provenance","text":"<p>[jvm]\\ var provenance: Provenance? = null</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-policy-engine-exception/","title":"PolicyEngineException - Misk","text":"<p>//misk-policy/misk.policy.opa/PolicyEngineException</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-policy-engine-exception/#policyengineexception","title":"PolicyEngineException","text":"<p>[jvm]\\ class PolicyEngineException@JvmOverloadsconstructor(message: String, cause: Throwable?) : Exception</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-policy-engine-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-policy-engine-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-policy-engine-exception/-policy-engine-exception/","title":"PolicyEngineException - Misk","text":"<p>//misk-policy/misk.policy.opa/PolicyEngineException/PolicyEngineException</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-policy-engine-exception/-policy-engine-exception/#policyengineexception","title":"PolicyEngineException","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun PolicyEngineException(message: String, cause: Throwable? = null)</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/","title":"Provenance - Misk","text":"<p>//misk-policy/misk.policy.opa/Provenance</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/#provenance","title":"Provenance","text":"<p>[jvm]\\ data class Provenance(version: String?, build_commit: String?, build_timestamp: String?, build_hostname: String?, revision: String?, bundles: Map&lt;String, ProvenanceBundle&gt;?)</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/#properties","title":"Properties","text":"Name Summary build_commit [jvm]val build_commit: String? build_hostname [jvm]val build_hostname: String? build_timestamp [jvm]val build_timestamp: String? bundles [jvm]val bundles: Map&lt;String, ProvenanceBundle&gt;? revision [jvm]val revision: String? version [jvm]val version: String?"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/-provenance/","title":"Provenance - Misk","text":"<p>//misk-policy/misk.policy.opa/Provenance/Provenance</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/-provenance/#provenance","title":"Provenance","text":"<p>[jvm]\\ fun Provenance(version: String?, build_commit: String?, build_timestamp: String?, build_hostname: String?, revision: String?, bundles: Map&lt;String, ProvenanceBundle&gt;?)</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/build_commit/","title":"build_commit - Misk","text":"<p>//misk-policy/misk.policy.opa/Provenance/build_commit</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/build_commit/#build_commit","title":"build_commit","text":"<p>[jvm]\\ val build_commit: String?</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/build_hostname/","title":"build_hostname - Misk","text":"<p>//misk-policy/misk.policy.opa/Provenance/build_hostname</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/build_hostname/#build_hostname","title":"build_hostname","text":"<p>[jvm]\\ val build_hostname: String?</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/build_timestamp/","title":"build_timestamp - Misk","text":"<p>//misk-policy/misk.policy.opa/Provenance/build_timestamp</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/build_timestamp/#build_timestamp","title":"build_timestamp","text":"<p>[jvm]\\ val build_timestamp: String?</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/bundles/","title":"bundles - Misk","text":"<p>//misk-policy/misk.policy.opa/Provenance/bundles</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/bundles/#bundles","title":"bundles","text":"<p>[jvm]\\ val bundles: Map&lt;String, ProvenanceBundle&gt;?</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/revision/","title":"revision - Misk","text":"<p>//misk-policy/misk.policy.opa/Provenance/revision</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/revision/#revision","title":"revision","text":"<p>[jvm]\\ val revision: String?</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/version/","title":"version - Misk","text":"<p>//misk-policy/misk.policy.opa/Provenance/version</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance/version/#version","title":"version","text":"<p>[jvm]\\ val version: String?</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance-bundle/","title":"ProvenanceBundle - Misk","text":"<p>//misk-policy/misk.policy.opa/ProvenanceBundle</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance-bundle/#provenancebundle","title":"ProvenanceBundle","text":"<p>[jvm]\\ data class ProvenanceBundle(revision: String?)</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance-bundle/#properties","title":"Properties","text":"Name Summary revision [jvm]val revision: String?"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance-bundle/-provenance-bundle/","title":"ProvenanceBundle - Misk","text":"<p>//misk-policy/misk.policy.opa/ProvenanceBundle/ProvenanceBundle</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance-bundle/-provenance-bundle/#provenancebundle","title":"ProvenanceBundle","text":"<p>[jvm]\\ fun ProvenanceBundle(revision: String?)</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance-bundle/revision/","title":"revision - Misk","text":"<p>//misk-policy/misk.policy.opa/ProvenanceBundle/revision</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-provenance-bundle/revision/#revision","title":"revision","text":"<p>[jvm]\\ val revision: String?</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/","title":"RealOpaPolicyEngine - Misk","text":"<p>//misk-policy/misk.policy.opa/RealOpaPolicyEngine</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/#realopapolicyengine","title":"RealOpaPolicyEngine","text":"<p>[jvm]\\ class RealOpaPolicyEngine@Injectconstructor(opaApi: OpaApi, @Named(value = \u201copa-moshi\u201d)moshi: Moshi, metrics: OpaMetrics, config: OpaConfig) : OpaPolicyEngine</p> <p>Support for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/#constructors","title":"Constructors","text":"RealOpaPolicyEngine [jvm]@Injectfun RealOpaPolicyEngine(opaApi: OpaApi, @Named(value = \u201copa-moshi\u201d)moshi: Moshi, metrics: OpaMetrics, config: OpaConfig)"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/#functions","title":"Functions","text":"Name Summary evaluateNoInput [jvm]open override fun &lt;R : OpaResponse&gt; evaluateNoInput(document: String, returnType: Class&lt;R&gt;): REvaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. evaluateRawJsonInput [jvm]open override fun &lt;R : OpaResponse&gt; evaluateRawJsonInput(document: String, input: String, returnType: Class&lt;R&gt;): REvaluate / Query a document with given input of raw JSON. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. This consumes raw JSON for corner cases where developers need to do queries the automatic JSON serialization doesn\u2019t support. evaluateWithInput [jvm]open override fun &lt;T : OpaRequest, R : OpaResponse&gt; evaluateWithInput(document: String, input: T, inputType: Class&lt;T&gt;, returnType: Class&lt;R&gt;): REvaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/-real-opa-policy-engine/","title":"RealOpaPolicyEngine - Misk","text":"<p>//misk-policy/misk.policy.opa/RealOpaPolicyEngine/RealOpaPolicyEngine</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/-real-opa-policy-engine/#realopapolicyengine","title":"RealOpaPolicyEngine","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun RealOpaPolicyEngine(opaApi: OpaApi, @Named(value = \u201copa-moshi\u201d)moshi: Moshi, metrics: OpaMetrics, config: OpaConfig)</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-no-input/","title":"evaluateNoInput - Misk","text":"<p>//misk-policy/misk.policy.opa/RealOpaPolicyEngine/evaluateNoInput</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-no-input/#evaluatenoinput","title":"evaluateNoInput","text":"<p>[jvm]\\ open override fun &lt;R : OpaResponse&gt; evaluateNoInput(document: String, returnType: Class&lt;R&gt;): R</p> <p>Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-no-input/#return","title":"Return","text":"<p>Response shape R from OPA.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-no-input/#parameters","title":"Parameters","text":"<p>jvm</p> document Name or Path of the OPA document to query. returnType Shape of response to be demarshelled from OPA"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-no-input/#throws","title":"Throws","text":"misk.policy.opa.PolicyEngineException if the request to OPA failed or the response shape didn\u2019t match R. java.lang.IllegalArgumentException if no document path was specified."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-raw-json-input/","title":"evaluateRawJsonInput - Misk","text":"<p>//misk-policy/misk.policy.opa/RealOpaPolicyEngine/evaluateRawJsonInput</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-raw-json-input/#evaluaterawjsoninput","title":"evaluateRawJsonInput","text":"<p>[jvm]\\ open override fun &lt;R : OpaResponse&gt; evaluateRawJsonInput(document: String, input: String, returnType: Class&lt;R&gt;): R</p> <p>Evaluate / Query a document with given input of raw JSON. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. This consumes raw JSON for corner cases where developers need to do queries the automatic JSON serialization doesn\u2019t support.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-raw-json-input/#return","title":"Return","text":"<p>Response shape R from OPA.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-raw-json-input/#parameters","title":"Parameters","text":"<p>jvm</p> document Name or Path of the OPA document to query. input Input data to be supplied to OPA at evaluation time. Must be valid JSON. returnType Return shape to be JSONified from OPA."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-raw-json-input/#throws","title":"Throws","text":"misk.policy.opa.PolicyEngineException if the request to OPA failed or the response shape didn\u2019t match R. java.lang.IllegalArgumentException if no document path was specified."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-with-input/","title":"evaluateWithInput - Misk","text":"<p>//misk-policy/misk.policy.opa/RealOpaPolicyEngine/evaluateWithInput</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-with-input/#evaluatewithinput","title":"evaluateWithInput","text":"<p>[jvm]\\ open override fun &lt;T : OpaRequest, R : OpaResponse&gt; evaluateWithInput(document: String, input: T, inputType: Class&lt;T&gt;, returnType: Class&lt;R&gt;): R</p> <p>Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-with-input/#return","title":"Return","text":"<p>Response shape R from OPA.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-with-input/#parameters","title":"Parameters","text":"<p>jvm</p> document Name or Path of the OPA document to query. input Input data to be supplied to OPA at evaluation time (the input global field). inputType Input shape to be JSONified for OPA returnType Return shape to be JSONified from OPA"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-with-input/#throws","title":"Throws","text":"misk.policy.opa.PolicyEngineException if the request to OPA failed or the response shape didn\u2019t match R. java.lang.IllegalArgumentException if no document path was specified."},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-request/","title":"Request - Misk","text":"<p>//misk-policy/misk.policy.opa/Request</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-request/#request","title":"Request","text":"<p>[jvm]\\ data class Request&lt;T&gt;(input: T)</p> <p>OPA Request wrapper.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-request/#constructors","title":"Constructors","text":"Request [jvm]fun &lt;T&gt; Request(input: T)"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-request/#properties","title":"Properties","text":"Name Summary input [jvm]val input: T"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-request/-request/","title":"Request - Misk","text":"<p>//misk-policy/misk.policy.opa/Request/Request</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-request/-request/#request","title":"Request","text":"<p>[jvm]\\ fun &lt;T&gt; Request(input: T)</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-request/input/","title":"input - Misk","text":"<p>//misk-policy/misk.policy.opa/Request/input</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-request/input/#input","title":"input","text":"<p>[jvm]\\ val input: T</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/","title":"Response - Misk","text":"<p>//misk-policy/misk.policy.opa/Response</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/#response","title":"Response","text":"<p>[jvm]\\ data class Response&lt;T&gt;(decision_id: String?, result: T?, provenance: Provenance?, metrics: Metrics?)</p> <p>OPA Response wrapper. Every response has this standard shape, made concrete by the expected response type.</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/#constructors","title":"Constructors","text":"Response [jvm]fun &lt;T&gt; Response(decision_id: String?, result: T?, provenance: Provenance?, metrics: Metrics?)"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/#properties","title":"Properties","text":"Name Summary decision_id [jvm]val decision_id: String? metrics [jvm]val metrics: Metrics? provenance [jvm]val provenance: Provenance? result [jvm]val result: T?"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/-response/","title":"Response - Misk","text":"<p>//misk-policy/misk.policy.opa/Response/Response</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/-response/#response","title":"Response","text":"<p>[jvm]\\ fun &lt;T&gt; Response(decision_id: String?, result: T?, provenance: Provenance?, metrics: Metrics?)</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/decision_id/","title":"decision_id - Misk","text":"<p>//misk-policy/misk.policy.opa/Response/decision_id</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/decision_id/#decision_id","title":"decision_id","text":"<p>[jvm]\\ val decision_id: String?</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/metrics/","title":"metrics - Misk","text":"<p>//misk-policy/misk.policy.opa/Response/metrics</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/metrics/#metrics","title":"metrics","text":"<p>[jvm]\\ val metrics: Metrics?</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/provenance/","title":"provenance - Misk","text":"<p>//misk-policy/misk.policy.opa/Response/provenance</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/provenance/#provenance","title":"provenance","text":"<p>[jvm]\\ val provenance: Provenance?</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/result/","title":"result - Misk","text":"<p>//misk-policy/misk.policy.opa/Response/result</p>"},{"location":"0.x/misk-policy/misk-policy/misk.policy.opa/-response/result/#result","title":"result","text":"<p>[jvm]\\ val result: T?</p>"},{"location":"0.x/misk-prometheus/","title":"misk-prometheus - Misk","text":"<p>//misk-prometheus</p>"},{"location":"0.x/misk-prometheus/#misk-prometheus","title":"misk-prometheus","text":""},{"location":"0.x/misk-prometheus/#packages","title":"Packages","text":"Name misk.metrics misk.metrics.backends.prometheus"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics/","title":"Package misk.metrics - Misk","text":"<p>//misk-prometheus/misk.metrics</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics/#package-miskmetrics","title":"Package misk.metrics","text":""},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics/#types","title":"Types","text":"Name Summary MetricsModule [jvm]class MetricsModule : KAbstractModule"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics/-metrics-module/","title":"MetricsModule - Misk","text":"<p>//misk-prometheus/misk.metrics/MetricsModule</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics/-metrics-module/#metricsmodule","title":"MetricsModule","text":"<p>[jvm]\\ class MetricsModule : KAbstractModule</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics/-metrics-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics/-metrics-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics/-metrics-module/-metrics-module/","title":"MetricsModule - Misk","text":"<p>//misk-prometheus/misk.metrics/MetricsModule/MetricsModule</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics/-metrics-module/-metrics-module/#metricsmodule","title":"MetricsModule","text":"<p>[jvm]\\ fun MetricsModule()</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/","title":"Package misk.metrics.backends.prometheus - Misk","text":"<p>//misk-prometheus/misk.metrics.backends.prometheus</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/#package-miskmetricsbackendsprometheus","title":"Package misk.metrics.backends.prometheus","text":""},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/#types","title":"Types","text":"Name Summary PrometheusConfig [jvm]data class PrometheusConfig(hostname: String?, http_port: Int, max_age_in_seconds: Long?) : ConfigConfiguration for exporting metrics to prometheus PrometheusHttpService [jvm]@Singletonclass PrometheusHttpService : AbstractIdleService PrometheusMetricsServiceModule [jvm]class PrometheusMetricsServiceModule(config: PrometheusConfig) : KAbstractModuleExposes prometheus metrics over a dedicated port. Allows internal metrics to be exposed via a k8s ClusterIP address, where they can be scraped by a cluster local Prometheus server without also exposing them to the outside world via the port bound to the service load balancer. If using the prometheus operator, one would generally create a k8s ClusterIP service exporting the metrics port, then a prometheus ServiceMonitor selecting that service via a label."},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/","title":"PrometheusConfig - Misk","text":"<p>//misk-prometheus/misk.metrics.backends.prometheus/PrometheusConfig</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/#prometheusconfig","title":"PrometheusConfig","text":"<p>[jvm]\\ data class PrometheusConfig(hostname: String?, http_port: Int, max_age_in_seconds: Long?) : Config</p> <p>Configuration for exporting metrics to prometheus</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/#constructors","title":"Constructors","text":"PrometheusConfig [jvm]@Injectfun PrometheusConfig() PrometheusConfig [jvm]fun PrometheusConfig(hostname: String? = null, http_port: Int = 9102, max_age_in_seconds: Long? = null)"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/#properties","title":"Properties","text":"Name Summary hostname [jvm]val hostname: String? = null http_port [jvm]val http_port: Int = 9102 max_age_in_seconds [jvm]val max_age_in_seconds: Long? = null"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/-prometheus-config/","title":"PrometheusConfig - Misk","text":"<p>//misk-prometheus/misk.metrics.backends.prometheus/PrometheusConfig/PrometheusConfig</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/-prometheus-config/#prometheusconfig","title":"PrometheusConfig","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun PrometheusConfig()</p> <p>fun PrometheusConfig(hostname: String? = null, http_port: Int = 9102, max_age_in_seconds: Long? = null)</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/hostname/","title":"hostname - Misk","text":"<p>//misk-prometheus/misk.metrics.backends.prometheus/PrometheusConfig/hostname</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/hostname/#hostname","title":"hostname","text":"<p>[jvm]\\ val hostname: String? = null</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/http_port/","title":"http_port - Misk","text":"<p>//misk-prometheus/misk.metrics.backends.prometheus/PrometheusConfig/http_port</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/http_port/#http_port","title":"http_port","text":"<p>[jvm]\\ val http_port: Int = 9102</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/max_age_in_seconds/","title":"max_age_in_seconds - Misk","text":"<p>//misk-prometheus/misk.metrics.backends.prometheus/PrometheusConfig/max_age_in_seconds</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/max_age_in_seconds/#max_age_in_seconds","title":"max_age_in_seconds","text":"<p>[jvm]\\ val max_age_in_seconds: Long? = null</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-http-service/","title":"PrometheusHttpService - Misk","text":"<p>//misk-prometheus/misk.metrics.backends.prometheus/PrometheusHttpService</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-http-service/#prometheushttpservice","title":"PrometheusHttpService","text":"<p>[jvm]\\ @Singleton</p> <p>class PrometheusHttpService : AbstractIdleService</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-http-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/","title":"PrometheusMetricsServiceModule - Misk","text":"<p>//misk-prometheus/misk.metrics.backends.prometheus/PrometheusMetricsServiceModule</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/#prometheusmetricsservicemodule","title":"PrometheusMetricsServiceModule","text":"<p>[jvm]\\ class PrometheusMetricsServiceModule(config: PrometheusConfig) : KAbstractModule</p> <p>Exposes prometheus metrics over a dedicated port. Allows internal metrics to be exposed via a k8s ClusterIP address, where they can be scraped by a cluster local Prometheus server without also exposing them to the outside world via the port bound to the service load balancer. If using the prometheus operator, one would generally create a k8s ClusterIP service exporting the metrics port, then a prometheus ServiceMonitor selecting that service via a label.</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/#constructors","title":"Constructors","text":"PrometheusMetricsServiceModule [jvm]fun PrometheusMetricsServiceModule(config: PrometheusConfig)"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/-prometheus-metrics-service-module/","title":"PrometheusMetricsServiceModule - Misk","text":"<p>//misk-prometheus/misk.metrics.backends.prometheus/PrometheusMetricsServiceModule/PrometheusMetricsServiceModule</p>"},{"location":"0.x/misk-prometheus/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/-prometheus-metrics-service-module/#prometheusmetricsservicemodule","title":"PrometheusMetricsServiceModule","text":"<p>[jvm]\\ fun PrometheusMetricsServiceModule(config: PrometheusConfig)</p>"},{"location":"0.x/misk-redis/","title":"misk-redis - Misk","text":"<p>//misk-redis</p>"},{"location":"0.x/misk-redis/#misk-redis","title":"misk-redis","text":""},{"location":"0.x/misk-redis/#packages","title":"Packages","text":"Name misk.redis"},{"location":"0.x/misk-redis/misk-redis/misk.redis/","title":"Package misk.redis - Misk","text":"<p>//misk-redis/misk.redis</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/#package-miskredis","title":"Package misk.redis","text":""},{"location":"0.x/misk-redis/misk-redis/misk.redis/#types","title":"Types","text":"Name Summary RealRedis [jvm]class RealRedis(jedisPool: JedisPool, clientMetrics: RedisClientMetrics) : RedisFor each command, a Jedis instance is retrieved from the pool and returned once the command has been issued. Redis [jvm]interface RedisA Redis client. RedisClientMetrics [jvm]class RedisClientMetrics(ticker: Ticker, metrics: Metrics) RedisConfig [jvm]class RedisConfig : LinkedHashMap&lt;String, RedisReplicationGroupConfig&gt; , Config RedisConnectionException [jvm]class RedisConnectionException(cluster: String, cause: Throwable) : RuntimeException RedisModule [jvm]class RedisModule@JvmOverloadsconstructor(redisConfig: RedisConfig, jedisPoolConfig: JedisPoolConfig, useSsl: Boolean) : KAbstractModuleConfigures a Redis client with metrics, this also installs a ServiceModule for RedisService. If other services require a working client connection to Redis before they can be used, specify a dependency like: RedisNodeConfig [jvm]data class RedisNodeConfig(hostname: String, port: Int) RedisReplicationGroupConfig [jvm]data class RedisReplicationGroupConfig@JvmOverloadsconstructor(writer_endpoint: RedisNodeConfig, reader_endpoint: RedisNodeConfig, redis_auth_password: String, timeout_ms: Int) RedisService [jvm]@Singletonclass RedisService : AbstractIdleServiceControls the connection lifecycle for Redis."},{"location":"0.x/misk-redis/misk-redis/misk.redis/#functions","title":"Functions","text":"Name Summary checkHrandFieldCount [jvm]inline fun checkHrandFieldCount(count: Long)Validates count is positive and non-zero. This is to avoid unexpected behaviour due to limitations in Jedis: https://github.com/redis/jedis/issues/3017"},{"location":"0.x/misk-redis/misk-redis/misk.redis/check-hrand-field-count/","title":"checkHrandFieldCount - Misk","text":"<p>//misk-redis/misk.redis/checkHrandFieldCount</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/check-hrand-field-count/#checkhrandfieldcount","title":"checkHrandFieldCount","text":"<p>[jvm]\\ inline fun checkHrandFieldCount(count: Long)</p> <p>Validates count is positive and non-zero. This is to avoid unexpected behaviour due to limitations in Jedis: https://github.com/redis/jedis/issues/3017</p> <p>This check can be removed when Jedis v5.x is released with full support for the behaviours for negative counts that are specified by Redis.</p> <p>https://redis.io/commands/hrandfield/#specification-of-the-behavior-when-count-is-passed</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/","title":"RealRedis - Misk","text":"<p>//misk-redis/misk.redis/RealRedis</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/#realredis","title":"RealRedis","text":"<p>[jvm]\\ class RealRedis(jedisPool: JedisPool, clientMetrics: RedisClientMetrics) : Redis</p> <p>For each command, a Jedis instance is retrieved from the pool and returned once the command has been issued.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/#constructors","title":"Constructors","text":"RealRedis [jvm]fun RealRedis(jedisPool: JedisPool, clientMetrics: RedisClientMetrics)"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/#functions","title":"Functions","text":"Name Summary blmove [jvm]open override fun blmove(sourceKey: String, destinationKey: String, from: ListDirection, to: ListDirection, timeoutSeconds: Double): ByteString?blmove is the blocking variant of lmove. When source contains elements, this command behaves exactly like lmove. When used inside a MULTI/EXEC block, this command behaves exactly like lmove. When source is empty, Redis will block the connection until another client pushes to it or until timeout (a double value specifying the maximum number of seconds to block) is reached. A timeout of zero can be used to block indefinitely. brpoplpush [jvm]open override fun brpoplpush(sourceKey: String, destinationKey: String, timeoutSeconds: Int): ByteString?brpoplpush is the blocking variant of rpoplpush. When source contains elements, this command behaves exactly like rpoplpush. When used inside a MULTI/EXEC block, this command behaves exactly like rpoplpush. When source is empty, Redis will block the connection until another client pushes to it or until timeout is reached. A timeout of zero can be used to block indefinitely. close [jvm]open override fun close()Closes the connection to Redis. del [jvm]open override fun del(vararg keys: String): IntDeletes multiple keys.[jvm]open override fun del(key: String): BooleanDeletes a single key. expire [jvm]open override fun expire(key: String, seconds: Long): BooleanSet a timeout on key. After the timeout has expired, the key will automatically be deleted. A key with an associated timeout is often said to be volatile in Redis terminology. expireAt [jvm]open override fun expireAt(key: String, timestampSeconds: Long): BooleanexpireAt has the same effect and semantic as expire, but instead of specifying the number of seconds representing the TTL (time to live), it takes an absolute Unix timestamp (seconds since January 1, 1970). A timestamp in the past will delete the key immediately. get [jvm]open operator override fun get(key: String): ByteString?Retrieves the value for the given key as a ByteString. hdel [jvm]open override fun hdel(key: String, vararg fields: String): LongDelete one or more hash fields stored at key. Specified fields that do not exist are ignored. hget [jvm]open override fun hget(key: String, field: String): ByteString?Retrieves the value for the given key and field as a ByteString. hgetAll [jvm]open override fun hgetAll(key: String): Map&lt;String, ByteString&gt;?Retrieves all the fields and associated values for the given key. Returns null if nothing found. hincrBy [jvm]open override fun hincrBy(key: String, field: String, increment: Long): LongIncrements the number stored at field in the hash stored at key by increment. If key does not exist, a new key holding a hash is created. If field does not exist the value is set to 0 before the operation is performed. hlen [jvm]open override fun hlen(key: String): LongReturns the number of fields contained in the hash stored at key. hmget [jvm]open override fun hmget(key: String, vararg fields: String): List&lt;ByteString?&gt;Retrieve the values associated to the specified fields. hrandField [jvm]open override fun hrandField(key: String, count: Long): List&lt;String&gt;Throws if count is negative. hrandFieldWithValues [jvm]open override fun hrandFieldWithValues(key: String, count: Long): Map&lt;String, ByteString&gt;?Throws if count is negative. hset [jvm]open override fun hset(key: String, hash: Map&lt;String, ByteString&gt;): LongSets the ByteString values for the given key and fields[jvm]open override fun hset(key: String, field: String, value: ByteString): LongSets the ByteString value for the given key and field incr [jvm]open override fun incr(key: String): LongIncrements the number stored at key by one. If the key does not exist, it is set to 0 before performing the operation. An error is returned if the key contains a value of the wrong type or contains a string that can not be represented as integer. incrBy [jvm]open override fun incrBy(key: String, increment: Long): LongIncrements the number stored at key by increment. If the key does not exist, it is set to 0 before performing the operation. An error is returned if the key contains a value of the wrong type or contains a string that can not be represented as integer. lmove [jvm]open override fun lmove(sourceKey: String, destinationKey: String, from: ListDirection, to: ListDirection): ByteString?Atomically returns and removes the first/last element (head/tail depending on the wherefrom argument) of the list stored at source, and pushes the element at the first/last element (head/tail depending on the whereto argument) of the list stored at destination. lpop [jvm]open override fun lpop(key: String): ByteString?Removes and returns the first element of the list stored at key.[jvm]open override fun lpop(key: String, count: Int): List&lt;ByteString?&gt;Removes and returns the first count elements of the list stored at key. lpush [jvm]open override fun lpush(key: String, vararg elements: ByteString): LongInsert all the specified elements at the head of the list stored at key. If key does not exist, it is created as empty list before performing the push operations. When key holds a value that is not a list, an error is returned. lrange [jvm]open override fun lrange(key: String, start: Long, stop: Long): List&lt;ByteString?&gt;Returns the specified elements of the list stored at key. The offsets start and stop are zero-based indexes, with 0 being the first element of the list (the head of the list), 1 being the next element and so on. lrem [jvm]open override fun lrem(key: String, count: Long, element: ByteString): LongRemoves the first count occurrences of elements equal to element from the list stored at key. The count argument influences the operation in the following ways: count 0: Remove elements equal to element moving from head to tail. count &lt; 0: Remove elements equal to element moving from tail to head. count = 0: Remove all elements equal to element. For example, LREM list -2 \u201chello\u201d will remove the last two occurrences of \u201chello\u201d in the list stored at list. mget [jvm]open override fun mget(vararg keys: String): List&lt;ByteString?&gt;Retrieves the values for the given list of keys. mset [jvm]open override fun mset(vararg keyValues: ByteString)Sets the key value pairs. multi [jvm]open override fun multi(): TransactionMarks the start of a transaction block. Subsequent commands will be queued for atomic execution using EXEC. pExpire [jvm]open override fun pExpire(key: String, milliseconds: Long): BooleanThis command works exactly like expire but the time to live of the key is specified in milliseconds instead of seconds. pExpireAt [jvm]open override fun pExpireAt(key: String, timestampMilliseconds: Long): BooleanpExpireAt has the same effect and semantic as expireAt, but the Unix time at which the key will expire is specified in milliseconds instead of seconds. pipelined [jvm]open override fun pipelined(): PipelineBegin a pipeline operation to batch together several updates for optimal performance publish [jvm]open override fun publish(channel: String, message: String)Publish a message to a channel. rpop [jvm]open override fun rpop(key: String): ByteString?Removes and returns the last element of the list stored at key.[jvm]open override fun rpop(key: String, count: Int): List&lt;ByteString?&gt;Removes and returns the last count elements of the list stored at key. rpoplpush [jvm]open override fun rpoplpush(sourceKey: String, destinationKey: String): ByteString?Atomically returns and removes the last element (tail) of the list stored at source, and pushes the element at the first element (head) of the list stored at destination. rpush [jvm]open override fun rpush(key: String, vararg elements: ByteString): LongInsert all the specified elements at the tail of the list stored at key. If key does not exist, it is created as empty list before performing the push operations. When key holds a value that is not a list, an error is returned. set [jvm]open operator override fun set(key: String, value: ByteString)Sets the ByteString value for the given key.[jvm]open operator override fun set(key: String, expiryDuration: Duration, value: ByteString)Sets the ByteString value for a key with an expiration date. setnx [jvm]open override fun setnx(key: String, value: ByteString): Booleanopen override fun setnx(key: String, expiryDuration: Duration, value: ByteString): BooleanSets the ByteString value for the given key if it does not already exist. subscribe [jvm]open override fun subscribe(jedisPubSub: JedisPubSub, channel: String)Subscribe to a redis channel via pubsub. This is blocking! unwatch [jvm]open override fun unwatch(vararg keys: String)Flushes all the previously watched keys for a transaction. If you call EXEC or DISCARD, there\u2019s no need to manually call UNWATCH. watch [jvm]open override fun watch(vararg keys: String)Marks the given keys to be watched for conditional execution of a transaction."},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/-real-redis/","title":"RealRedis - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/RealRedis</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/-real-redis/#realredis","title":"RealRedis","text":"<p>[jvm]\\ fun RealRedis(jedisPool: JedisPool, clientMetrics: RedisClientMetrics)</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/blmove/","title":"blmove - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/blmove</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/blmove/#blmove","title":"blmove","text":"<p>[jvm]\\ open override fun blmove(sourceKey: String, destinationKey: String, from: ListDirection, to: ListDirection, timeoutSeconds: Double): ByteString?</p> <p>blmove is the blocking variant of lmove. When source contains elements, this command behaves exactly like lmove. When used inside a MULTI/EXEC block, this command behaves exactly like lmove. When source is empty, Redis will block the connection until another client pushes to it or until timeout (a double value specifying the maximum number of seconds to block) is reached. A timeout of zero can be used to block indefinitely.</p> <p>This command comes in place of the now deprecated brpoplpush. Doing BLMOVE RIGHT LEFT is equivalent.</p> <p>See lmove for more information.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/brpoplpush/","title":"brpoplpush - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/brpoplpush</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/brpoplpush/#brpoplpush","title":"brpoplpush","text":"<p>[jvm]\\ open override fun brpoplpush(sourceKey: String, destinationKey: String, timeoutSeconds: Int): ByteString?</p> <p>brpoplpush is the blocking variant of rpoplpush. When source contains elements, this command behaves exactly like rpoplpush. When used inside a MULTI/EXEC block, this command behaves exactly like rpoplpush. When source is empty, Redis will block the connection until another client pushes to it or until timeout is reached. A timeout of zero can be used to block indefinitely.</p> <p>See rpoplpush for more information.</p> <p>As of Redis version 6.2.0, this command is regarded as deprecated.</p> <p>It can be replaced by blmove with the RIGHT and LEFT arguments when migrating or writing new code.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/close/","title":"close - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/close</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/close/#close","title":"close","text":"<p>[jvm]\\ open override fun close()</p> <p>Closes the connection to Redis.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/del/","title":"del - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/del</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/del/#del","title":"del","text":"<p>[jvm]\\ open override fun del(key: String): Boolean</p> <p>Deletes a single key.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/del/#return","title":"Return","text":"<p>false if the key was not deleted, true if the key was deleted</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/del/#parameters","title":"Parameters","text":"<p>jvm</p> key the key to delete <p>[jvm]\\ open override fun del(vararg keys: String): Int</p> <p>Deletes multiple keys.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/del/#return_1","title":"Return","text":"<p>0 if none of the keys were deleted, otherwise a positive integer     representing the number of keys that were deleted</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/del/#parameters_1","title":"Parameters","text":"<p>jvm</p> keys the keys to delete"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/expire-at/","title":"expireAt - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/expireAt</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/expire-at/#expireat","title":"expireAt","text":"<p>[jvm]\\ open override fun expireAt(key: String, timestampSeconds: Long): Boolean</p> <p>expireAt has the same effect and semantic as expire, but instead of specifying the number of seconds representing the TTL (time to live), it takes an absolute Unix timestamp (seconds since January 1, 1970). A timestamp in the past will delete the key immediately.</p> <p>Please for the specific semantics of the command refer to the documentation of expire.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/expire-at/#return","title":"Return","text":"<p>true if the timeout was set. false if the timeout was not set. e.g. key doesn\u2019t exist, or operation skipped due to the provided arguments.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/expire/","title":"expire - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/expire</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/expire/#expire","title":"expire","text":"<p>[jvm]\\ open override fun expire(key: String, seconds: Long): Boolean</p> <p>Set a timeout on key. After the timeout has expired, the key will automatically be deleted. A key with an associated timeout is often said to be volatile in Redis terminology.</p> <p>The timeout will only be cleared by commands that delete or overwrite the contents of the key, including del, set, GETSET and all the *STORE commands. This means that all the operations that conceptually alter the value stored at the key without replacing it with a new one will leave the timeout untouched. For instance, incrementing the value of a key with incr, pushing a new value into a list with LPUSH, or altering the field value of a hash with hset are all operations that will leave the timeout untouched.</p> <p>The timeout can also be cleared, turning the key back into a persistent key, using the PERSIST command.</p> <p>If a key is renamed with RENAME, the associated time to live is transferred to the new key name.</p> <p>If a key is overwritten by RENAME, like in the case of an existing key Key_A that is overwritten by a call like RENAME Key_B Key_A, it does not matter if the original Key_A had a timeout associated or not, the new key Key_A will inherit all the characteristics of Key_B.</p> <p>Note that calling expire/pExpire with a non-positive timeout or expireAt/pExpireAt with a time in the past will result in the key being deleted rather than expired (accordingly, the emitted key event will be del, not expired).</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/expire/#return","title":"Return","text":"<p>true if the timeout was set. false if the timeout was not set. e.g. key doesn\u2019t exist, or operation skipped due to the provided arguments.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/get/","title":"get - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/get</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/get/#get","title":"get","text":"<p>[jvm]\\ open operator override fun get(key: String): ByteString?</p> <p>Retrieves the value for the given key as a ByteString.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/get/#return","title":"Return","text":"<p>a ByteString if the key was found, null if the key was not found</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/get/#parameters","title":"Parameters","text":"<p>jvm</p> key the key to retrieve"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hdel/","title":"hdel - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/hdel</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hdel/#hdel","title":"hdel","text":"<p>[jvm]\\ open override fun hdel(key: String, vararg fields: String): Long</p> <p>Delete one or more hash fields stored at key. Specified fields that do not exist are ignored.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hdel/#return","title":"Return","text":"<p>The number of fields that were removed from the hash. If the key does not exist,     it is treated as an empty hash and 0 is returned.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hget-all/","title":"hgetAll - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/hgetAll</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hget-all/#hgetall","title":"hgetAll","text":"<p>[jvm]\\ open override fun hgetAll(key: String): Map&lt;String, ByteString&gt;?</p> <p>Retrieves all the fields and associated values for the given key. Returns null if nothing found.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hget-all/#return","title":"Return","text":"<p>a Map of the fields to their associated values</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hget-all/#parameters","title":"Parameters","text":"<p>jvm</p> key the key"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hget/","title":"hget - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/hget</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hget/#hget","title":"hget","text":"<p>[jvm]\\ open override fun hget(key: String, field: String): ByteString?</p> <p>Retrieves the value for the given key and field as a ByteString.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hget/#return","title":"Return","text":"<p>a ByteString if the key/field combination was found, null if not found</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hget/#parameters","title":"Parameters","text":"<p>jvm</p> key the key field the field"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hincr-by/","title":"hincrBy - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/hincrBy</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hincr-by/#hincrby","title":"hincrBy","text":"<p>[jvm]\\ open override fun hincrBy(key: String, field: String, increment: Long): Long</p> <p>Increments the number stored at field in the hash stored at key by increment. If key does not exist, a new key holding a hash is created. If field does not exist the value is set to 0 before the operation is performed.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hincr-by/#return","title":"Return","text":"<p>the value at field after the increment operation.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hincr-by/#parameters","title":"Parameters","text":"<p>jvm</p> key the key. field the field."},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hlen/","title":"hlen - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/hlen</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hlen/#hlen","title":"hlen","text":"<p>[jvm]\\ open override fun hlen(key: String): Long</p> <p>Returns the number of fields contained in the hash stored at key.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hmget/","title":"hmget - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/hmget</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hmget/#hmget","title":"hmget","text":"<p>[jvm]\\ open override fun hmget(key: String, vararg fields: String): List&lt;ByteString?&gt;</p> <p>Retrieve the values associated to the specified fields.</p> <p>If some specified fields do not exist, nil values are returned. Non-existing keys are considered like empty hashes.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hmget/#return","title":"Return","text":"<p>a List of the values for the specific fields requested, in the same order of the request. Null for missing fields</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hmget/#parameters","title":"Parameters","text":"<p>jvm</p> key the key fields the specific fields to retrieve"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hrand-field-with-values/","title":"hrandFieldWithValues - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/hrandFieldWithValues</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hrand-field-with-values/#hrandfieldwithvalues","title":"hrandFieldWithValues","text":"<p>[jvm]\\ open override fun hrandFieldWithValues(key: String, count: Long): Map&lt;String, ByteString&gt;?</p> <p>Throws if count is negative.</p> <p>See misk.redis.Redis.hrandFieldWithValues.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hrand-field/","title":"hrandField - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/hrandField</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hrand-field/#hrandfield","title":"hrandField","text":"<p>[jvm]\\ open override fun hrandField(key: String, count: Long): List&lt;String&gt;</p> <p>Throws if count is negative.</p> <p>See misk.redis.Redis.hrandField.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hset/","title":"hset - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/hset</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hset/#hset","title":"hset","text":"<p>[jvm]\\ open override fun hset(key: String, field: String, value: ByteString): Long</p> <p>Sets the ByteString value for the given key and field</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hset/#return","title":"Return","text":"<p>The number of fields that were added.     Returns 0 if all fields had their values overwritten.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hset/#parameters","title":"Parameters","text":"<p>jvm</p> key the key field the field value the value to set <p>[jvm]\\ open override fun hset(key: String, hash: Map&lt;String, ByteString&gt;): Long</p> <p>Sets the ByteString values for the given key and fields</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hset/#return_1","title":"Return","text":"<p>The number of fields that were added.     Returns 0 if all fields had their values overwritten.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/hset/#parameters_1","title":"Parameters","text":"<p>jvm</p> key the key hash the map of fields to ByteString value"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/incr-by/","title":"incrBy - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/incrBy</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/incr-by/#incrby","title":"incrBy","text":"<p>[jvm]\\ open override fun incrBy(key: String, increment: Long): Long</p> <p>Increments the number stored at key by increment. If the key does not exist, it is set to 0 before performing the operation. An error is returned if the key contains a value of the wrong type or contains a string that can not be represented as integer.</p> <p>See incr for extra information.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/incr/","title":"incr - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/incr</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/incr/#incr","title":"incr","text":"<p>[jvm]\\ open override fun incr(key: String): Long</p> <p>Increments the number stored at key by one. If the key does not exist, it is set to 0 before performing the operation. An error is returned if the key contains a value of the wrong type or contains a string that can not be represented as integer.</p> <p>Note: this is a string operation because Redis does not have a dedicated integer type. The string stored at the key is interpreted as a base-10 64 bit signed integer to execute the operation.</p> <p>Redis stores integers in their integer representation, so for string values that actually hold an integer, there is no overhead for storing the string representation of the integer.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/lmove/","title":"lmove - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/lmove</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/lmove/#lmove","title":"lmove","text":"<p>[jvm]\\ open override fun lmove(sourceKey: String, destinationKey: String, from: ListDirection, to: ListDirection): ByteString?</p> <p>Atomically returns and removes the first/last element (head/tail depending on the wherefrom argument) of the list stored at source, and pushes the element at the first/last element (head/tail depending on the whereto argument) of the list stored at destination.</p> <p>For example: consider source holding the list a,b,c, and destination holding the list x,y,z. Executing LMOVE source destination RIGHT LEFT results in source holding a,b and destination holding c,x,y,z.</p> <p>If source does not exist, the value nil is returned and no operation is performed. If source and destination are the same, the operation is equivalent to removing the first/last element from the list and pushing it as first/last element of the list, so it can be considered as a list rotation command (or a no-op if wherefrom is the same as whereto).</p> <p>This command comes in place of the now deprecated RPOPLPUSH. Doing LMOVE RIGHT LEFT is equivalent.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/lpop/","title":"lpop - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/lpop</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/lpop/#lpop","title":"lpop","text":"<p>[jvm]\\ open override fun lpop(key: String, count: Int): List&lt;ByteString?&gt;</p> <p>Removes and returns the first count elements of the list stored at key.</p> <p>Only available on Redis 6.2.0 and higher. Throws if Redis is too low of a version.</p> <p>[jvm]\\ open override fun lpop(key: String): ByteString?</p> <p>Removes and returns the first element of the list stored at key.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/lpush/","title":"lpush - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/lpush</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/lpush/#lpush","title":"lpush","text":"<p>[jvm]\\ open override fun lpush(key: String, vararg elements: ByteString): Long</p> <p>Insert all the specified elements at the head of the list stored at key. If key does not exist, it is created as empty list before performing the push operations. When key holds a value that is not a list, an error is returned.</p> <p>It is possible to push multiple elements using a single command call just specifying multiple arguments at the end of the command. Elements are inserted one after the other to the head of the list, from the leftmost element to the rightmost element. So for instance the command LPUSH mylist a b c will result into a list containing c as first element, b as second element and a as third element.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/lrange/","title":"lrange - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/lrange</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/lrange/#lrange","title":"lrange","text":"<p>[jvm]\\ open override fun lrange(key: String, start: Long, stop: Long): List&lt;ByteString?&gt;</p> <p>Returns the specified elements of the list stored at key. The offsets start and stop are zero-based indexes, with 0 being the first element of the list (the head of the list), 1 being the next element and so on.</p> <p>These offsets can also be negative numbers indicating offsets starting at the end of the list. For example, -1 is the last element of the list, -2 the penultimate, and so on.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/lrem/","title":"lrem - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/lrem</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/lrem/#lrem","title":"lrem","text":"<p>[jvm]\\ open override fun lrem(key: String, count: Long, element: ByteString): Long</p> <p>Removes the first count occurrences of elements equal to element from the list stored at key. The count argument influences the operation in the following ways: count 0: Remove elements equal to element moving from head to tail. count &lt; 0: Remove elements equal to element moving from tail to head. count = 0: Remove all elements equal to element. For example, LREM list -2 \u201chello\u201d will remove the last two occurrences of \u201chello\u201d in the list stored at list.</p> <p>Note that non-existing keys are treated like empty lists, so when key does not exist, the command will always return 0.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/mget/","title":"mget - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/mget</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/mget/#mget","title":"mget","text":"<p>[jvm]\\ open override fun mget(vararg keys: String): List&lt;ByteString?&gt;</p> <p>Retrieves the values for the given list of keys.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/mget/#return","title":"Return","text":"<p>a list of String in the same order as the specified list of keys. For each key, a value will be returned if a key was found, otherwise null is returned.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/mget/#parameters","title":"Parameters","text":"<p>jvm</p> keys the keys to retrieve"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/mset/","title":"mset - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/mset</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/mset/#mset","title":"mset","text":"<p>[jvm]\\ open override fun mset(vararg keyValues: ByteString)</p> <p>Sets the key value pairs.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/mset/#parameters","title":"Parameters","text":"<p>jvm</p> keyValues the list of keys and values in alternating order."},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/multi/","title":"multi - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/multi</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/multi/#multi","title":"multi","text":"<p>[jvm]\\ open override fun multi(): Transaction</p> <p>Marks the start of a transaction block. Subsequent commands will be queued for atomic execution using EXEC.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/p-expire-at/","title":"pExpireAt - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/pExpireAt</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/p-expire-at/#pexpireat","title":"pExpireAt","text":"<p>[jvm]\\ open override fun pExpireAt(key: String, timestampMilliseconds: Long): Boolean</p> <p>pExpireAt has the same effect and semantic as expireAt, but the Unix time at which the key will expire is specified in milliseconds instead of seconds.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/p-expire-at/#return","title":"Return","text":"<p>true if the timeout was set. false if the timeout was not set. e.g. key doesn\u2019t exist, or operation skipped due to the provided arguments.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/p-expire/","title":"pExpire - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/pExpire</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/p-expire/#pexpire","title":"pExpire","text":"<p>[jvm]\\ open override fun pExpire(key: String, milliseconds: Long): Boolean</p> <p>This command works exactly like expire but the time to live of the key is specified in milliseconds instead of seconds.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/p-expire/#return","title":"Return","text":"<p>true if the timeout was set. false if the timeout was not set. e.g. key doesn\u2019t exist, or operation skipped due to the provided arguments.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/pipelined/","title":"pipelined - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/pipelined</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/pipelined/#pipelined","title":"pipelined","text":"<p>[jvm]\\ open override fun pipelined(): Pipeline</p> <p>Begin a pipeline operation to batch together several updates for optimal performance</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/publish/","title":"publish - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/publish</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/publish/#publish","title":"publish","text":"<p>[jvm]\\ open override fun publish(channel: String, message: String)</p> <p>Publish a message to a channel.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/rpop/","title":"rpop - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/rpop</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/rpop/#rpop","title":"rpop","text":"<p>[jvm]\\ open override fun rpop(key: String, count: Int): List&lt;ByteString?&gt;</p> <p>Removes and returns the last count elements of the list stored at key.</p> <p>Only available on Redis 6.2.0 and higher. Throws if Redis is too low of a version.</p> <p>[jvm]\\ open override fun rpop(key: String): ByteString?</p> <p>Removes and returns the last element of the list stored at key.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/rpoplpush/","title":"rpoplpush - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/rpoplpush</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/rpoplpush/#rpoplpush","title":"rpoplpush","text":"<p>[jvm]\\ open override fun rpoplpush(sourceKey: String, destinationKey: String): ByteString?</p> <p>Atomically returns and removes the last element (tail) of the list stored at source, and pushes the element at the first element (head) of the list stored at destination.</p> <p>For example: consider source holding the list a,b,c, and destination holding the list x,y,z. Executing rpoplpush results in source holding a,b and destination holding c,x,y,z.</p> <p>If source does not exist, the value nil is returned and no operation is performed. If source and destination are the same, the operation is equivalent to removing the last element from the list and pushing it as first element of the list, so it can be considered as a list rotation command.</p> <p>As of Redis version 6.2.0, this command is regarded as deprecated.</p> <p>It can be replaced by lmove with the RIGHT and LEFT arguments when migrating or writing new code.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/rpush/","title":"rpush - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/rpush</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/rpush/#rpush","title":"rpush","text":"<p>[jvm]\\ open override fun rpush(key: String, vararg elements: ByteString): Long</p> <p>Insert all the specified elements at the tail of the list stored at key. If key does not exist, it is created as empty list before performing the push operations. When key holds a value that is not a list, an error is returned.</p> <p>It is possible to push multiple elements using a single command call just specifying multiple arguments at the end of the command. Elements are inserted one after the other to the tail of the list, from the leftmost element to the rightmost element. So for instance the command RPUSH mylist a b c will result into a list containing a as first element, b as second element and c as third element.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/set/","title":"set - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/set</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/set/#set","title":"set","text":"<p>[jvm]\\ open operator override fun set(key: String, value: ByteString)</p> <p>Sets the ByteString value for the given key.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/set/#parameters","title":"Parameters","text":"<p>jvm</p> key the key to set value the value to set <p>[jvm]\\ open operator override fun set(key: String, expiryDuration: Duration, value: ByteString)</p> <p>Sets the ByteString value for a key with an expiration date.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/set/#parameters_1","title":"Parameters","text":"<p>jvm</p> key the key to set expiryDuration the amount of time before the key expires value the value to set"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/setnx/","title":"setnx - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/setnx</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/setnx/#setnx","title":"setnx","text":"<p>[jvm]\\ open override fun setnx(key: String, value: ByteString): Boolean</p> <p>Sets the ByteString value for the given key if it does not already exist.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/setnx/#parameters","title":"Parameters","text":"<p>jvm</p> key the key to set value the value to set <p>[jvm]\\ open override fun setnx(key: String, expiryDuration: Duration, value: ByteString): Boolean</p> <p>Sets the ByteString value for the given key if it does not already exist.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/setnx/#parameters_1","title":"Parameters","text":"<p>jvm</p> key the key to set expiryDuration the amount of time before the key expires value the value to set"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/subscribe/","title":"subscribe - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/subscribe</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/subscribe/#subscribe","title":"subscribe","text":"<p>[jvm]\\ open override fun subscribe(jedisPubSub: JedisPubSub, channel: String)</p> <p>Subscribe to a redis channel via pubsub. This is blocking!</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/unwatch/","title":"unwatch - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/unwatch</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/unwatch/#unwatch","title":"unwatch","text":"<p>[jvm]\\ open override fun unwatch(vararg keys: String)</p> <p>Flushes all the previously watched keys for a transaction. If you call EXEC or DISCARD, there\u2019s no need to manually call UNWATCH.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/watch/","title":"watch - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/watch</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/watch/#watch","title":"watch","text":"<p>[jvm]\\ open override fun watch(vararg keys: String)</p> <p>Marks the given keys to be watched for conditional execution of a transaction.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/-companion/","title":"Companion - Misk","text":"<p>//misk-redis/misk.redis/RealRedis/Companion</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-real-redis/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/","title":"Redis - Misk","text":"<p>//misk-redis/misk.redis/Redis</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/#redis","title":"Redis","text":"<p>[jvm]\\ interface Redis</p> <p>A Redis client.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/#functions","title":"Functions","text":"Name Summary blmove [jvm]abstract fun blmove(sourceKey: String, destinationKey: String, from: ListDirection, to: ListDirection, timeoutSeconds: Double): ByteString?blmove is the blocking variant of lmove. When source contains elements, this command behaves exactly like lmove. When used inside a MULTI/EXEC block, this command behaves exactly like lmove. When source is empty, Redis will block the connection until another client pushes to it or until timeout (a double value specifying the maximum number of seconds to block) is reached. A timeout of zero can be used to block indefinitely. brpoplpush [jvm]abstract fun brpoplpush(sourceKey: String, destinationKey: String, timeoutSeconds: Int): ByteString?brpoplpush is the blocking variant of rpoplpush. When source contains elements, this command behaves exactly like rpoplpush. When used inside a MULTI/EXEC block, this command behaves exactly like rpoplpush. When source is empty, Redis will block the connection until another client pushes to it or until timeout is reached. A timeout of zero can be used to block indefinitely. close [jvm]abstract fun close()Closes the client, so it may not be used further. del [jvm]abstract fun del(vararg keys: String): IntDeletes multiple keys.[jvm]abstract fun del(key: String): BooleanDeletes a single key. expire [jvm]abstract fun expire(key: String, seconds: Long): BooleanSet a timeout on key. After the timeout has expired, the key will automatically be deleted. A key with an associated timeout is often said to be volatile in Redis terminology. expireAt [jvm]abstract fun expireAt(key: String, timestampSeconds: Long): BooleanexpireAt has the same effect and semantic as expire, but instead of specifying the number of seconds representing the TTL (time to live), it takes an absolute Unix timestamp (seconds since January 1, 1970). A timestamp in the past will delete the key immediately. get [jvm]abstract operator fun get(key: String): ByteString?Retrieves the value for the given key as a ByteString. hdel [jvm]abstract fun hdel(key: String, vararg fields: String): LongDelete one or more hash fields stored at key. Specified fields that do not exist are ignored. hget [jvm]abstract fun hget(key: String, field: String): ByteString?Retrieves the value for the given key and field as a ByteString. hgetAll [jvm]abstract fun hgetAll(key: String): Map&lt;String, ByteString&gt;?Retrieves all the fields and associated values for the given key. Returns null if nothing found. hincrBy [jvm]abstract fun hincrBy(key: String, field: String, increment: Long): LongIncrements the number stored at field in the hash stored at key by increment. If key does not exist, a new key holding a hash is created. If field does not exist the value is set to 0 before the operation is performed. hlen [jvm]abstract fun hlen(key: String): LongReturns the number of fields contained in the hash stored at key. hmget [jvm]abstract fun hmget(key: String, vararg fields: String): List&lt;ByteString?&gt;Retrieve the values associated to the specified fields. hrandField [jvm]abstract fun hrandField(key: String, count: Long): List&lt;String&gt;Like hrandFieldWithValues but only returns the fields of the hash stored at key. hrandFieldWithValues [jvm]abstract fun hrandFieldWithValues(key: String, count: Long): Map&lt;String, ByteString&gt;?Randomly selects count fields and values from the hash stored at key. hset [jvm]abstract fun hset(key: String, hash: Map&lt;String, ByteString&gt;): LongSets the ByteString values for the given key and fields[jvm]abstract fun hset(key: String, field: String, value: ByteString): LongSets the ByteString value for the given key and field incr [jvm]abstract fun incr(key: String): LongIncrements the number stored at key by one. If the key does not exist, it is set to 0 before performing the operation. An error is returned if the key contains a value of the wrong type or contains a string that can not be represented as integer. incrBy [jvm]abstract fun incrBy(key: String, increment: Long): LongIncrements the number stored at key by increment. If the key does not exist, it is set to 0 before performing the operation. An error is returned if the key contains a value of the wrong type or contains a string that can not be represented as integer. lmove [jvm]abstract fun lmove(sourceKey: String, destinationKey: String, from: ListDirection, to: ListDirection): ByteString?Atomically returns and removes the first/last element (head/tail depending on the wherefrom argument) of the list stored at source, and pushes the element at the first/last element (head/tail depending on the whereto argument) of the list stored at destination. lpop [jvm]abstract fun lpop(key: String): ByteString?Removes and returns the first element of the list stored at key.[jvm]abstract fun lpop(key: String, count: Int): List&lt;ByteString?&gt;Removes and returns the first count elements of the list stored at key. lpush [jvm]abstract fun lpush(key: String, vararg elements: ByteString): LongInsert all the specified elements at the head of the list stored at key. If key does not exist, it is created as empty list before performing the push operations. When key holds a value that is not a list, an error is returned. lrange [jvm]abstract fun lrange(key: String, start: Long, stop: Long): List&lt;ByteString?&gt;Returns the specified elements of the list stored at key. The offsets start and stop are zero-based indexes, with 0 being the first element of the list (the head of the list), 1 being the next element and so on. lrem [jvm]abstract fun lrem(key: String, count: Long, element: ByteString): LongRemoves the first count occurrences of elements equal to element from the list stored at key. The count argument influences the operation in the following ways: count 0: Remove elements equal to element moving from head to tail. count &lt; 0: Remove elements equal to element moving from tail to head. count = 0: Remove all elements equal to element. For example, LREM list -2 \u201chello\u201d will remove the last two occurrences of \u201chello\u201d in the list stored at list. mget [jvm]abstract fun mget(vararg keys: String): List&lt;ByteString?&gt;Retrieves the values for the given list of keys. mset [jvm]abstract fun mset(vararg keyValues: ByteString)Sets the key value pairs. multi [jvm]abstract fun multi(): TransactionMarks the start of a transaction block. Subsequent commands will be queued for atomic execution using EXEC. pExpire [jvm]abstract fun pExpire(key: String, milliseconds: Long): BooleanThis command works exactly like expire but the time to live of the key is specified in milliseconds instead of seconds. pExpireAt [jvm]abstract fun pExpireAt(key: String, timestampMilliseconds: Long): BooleanpExpireAt has the same effect and semantic as expireAt, but the Unix time at which the key will expire is specified in milliseconds instead of seconds. pipelined [jvm]abstract fun pipelined(): PipelineBegin a pipeline operation to batch together several updates for optimal performance publish [jvm]abstract fun publish(channel: String, message: String)Publish a message to a channel. rpop [jvm]abstract fun rpop(key: String): ByteString?Removes and returns the last element of the list stored at key.[jvm]abstract fun rpop(key: String, count: Int): List&lt;ByteString?&gt;Removes and returns the last count elements of the list stored at key. rpoplpush [jvm]abstract fun rpoplpush(sourceKey: String, destinationKey: String): ByteString?Atomically returns and removes the last element (tail) of the list stored at source, and pushes the element at the first element (head) of the list stored at destination. rpush [jvm]abstract fun rpush(key: String, vararg elements: ByteString): LongInsert all the specified elements at the tail of the list stored at key. If key does not exist, it is created as empty list before performing the push operations. When key holds a value that is not a list, an error is returned. set [jvm]abstract operator fun set(key: String, value: ByteString)Sets the ByteString value for the given key.[jvm]abstract operator fun set(key: String, expiryDuration: Duration, value: ByteString)Sets the ByteString value for a key with an expiration date. setnx [jvm]abstract fun setnx(key: String, value: ByteString): Booleanabstract fun setnx(key: String, expiryDuration: Duration, value: ByteString): BooleanSets the ByteString value for the given key if it does not already exist. subscribe [jvm]abstract fun subscribe(jedisPubSub: JedisPubSub, channel: String)Subscribe to a redis channel via pubsub. This is blocking! unwatch [jvm]abstract fun unwatch(vararg keys: String)Flushes all the previously watched keys for a transaction. If you call EXEC or DISCARD, there\u2019s no need to manually call UNWATCH. watch [jvm]abstract fun watch(vararg keys: String)Marks the given keys to be watched for conditional execution of a transaction."},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/#inheritors","title":"Inheritors","text":"Name RealRedis"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/blmove/","title":"blmove - Misk","text":"<p>//misk-redis/misk.redis/Redis/blmove</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/blmove/#blmove","title":"blmove","text":"<p>[jvm]\\ abstract fun blmove(sourceKey: String, destinationKey: String, from: ListDirection, to: ListDirection, timeoutSeconds: Double): ByteString?</p> <p>blmove is the blocking variant of lmove. When source contains elements, this command behaves exactly like lmove. When used inside a MULTI/EXEC block, this command behaves exactly like lmove. When source is empty, Redis will block the connection until another client pushes to it or until timeout (a double value specifying the maximum number of seconds to block) is reached. A timeout of zero can be used to block indefinitely.</p> <p>This command comes in place of the now deprecated brpoplpush. Doing BLMOVE RIGHT LEFT is equivalent.</p> <p>See lmove for more information.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/brpoplpush/","title":"brpoplpush - Misk","text":"<p>//misk-redis/misk.redis/Redis/brpoplpush</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/brpoplpush/#brpoplpush","title":"brpoplpush","text":"<p>[jvm]\\ abstract fun brpoplpush(sourceKey: String, destinationKey: String, timeoutSeconds: Int): ByteString?</p> <p>brpoplpush is the blocking variant of rpoplpush. When source contains elements, this command behaves exactly like rpoplpush. When used inside a MULTI/EXEC block, this command behaves exactly like rpoplpush. When source is empty, Redis will block the connection until another client pushes to it or until timeout is reached. A timeout of zero can be used to block indefinitely.</p> <p>See rpoplpush for more information.</p> <p>As of Redis version 6.2.0, this command is regarded as deprecated.</p> <p>It can be replaced by blmove with the RIGHT and LEFT arguments when migrating or writing new code.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/close/","title":"close - Misk","text":"<p>//misk-redis/misk.redis/Redis/close</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/close/#close","title":"close","text":"<p>[jvm]\\ abstract fun close()</p> <p>Closes the client, so it may not be used further.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/del/","title":"del - Misk","text":"<p>//misk-redis/misk.redis/Redis/del</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/del/#del","title":"del","text":"<p>[jvm]\\ abstract fun del(key: String): Boolean</p> <p>Deletes a single key.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/del/#return","title":"Return","text":"<p>false if the key was not deleted, true if the key was deleted</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/del/#parameters","title":"Parameters","text":"<p>jvm</p> key the key to delete <p>[jvm]\\ abstract fun del(vararg keys: String): Int</p> <p>Deletes multiple keys.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/del/#return_1","title":"Return","text":"<p>0 if none of the keys were deleted, otherwise a positive integer     representing the number of keys that were deleted</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/del/#parameters_1","title":"Parameters","text":"<p>jvm</p> keys the keys to delete"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/expire-at/","title":"expireAt - Misk","text":"<p>//misk-redis/misk.redis/Redis/expireAt</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/expire-at/#expireat","title":"expireAt","text":"<p>[jvm]\\ abstract fun expireAt(key: String, timestampSeconds: Long): Boolean</p> <p>expireAt has the same effect and semantic as expire, but instead of specifying the number of seconds representing the TTL (time to live), it takes an absolute Unix timestamp (seconds since January 1, 1970). A timestamp in the past will delete the key immediately.</p> <p>Please for the specific semantics of the command refer to the documentation of expire.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/expire-at/#return","title":"Return","text":"<p>true if the timeout was set. false if the timeout was not set. e.g. key doesn\u2019t exist, or operation skipped due to the provided arguments.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/expire/","title":"expire - Misk","text":"<p>//misk-redis/misk.redis/Redis/expire</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/expire/#expire","title":"expire","text":"<p>[jvm]\\ abstract fun expire(key: String, seconds: Long): Boolean</p> <p>Set a timeout on key. After the timeout has expired, the key will automatically be deleted. A key with an associated timeout is often said to be volatile in Redis terminology.</p> <p>The timeout will only be cleared by commands that delete or overwrite the contents of the key, including del, set, GETSET and all the *STORE commands. This means that all the operations that conceptually alter the value stored at the key without replacing it with a new one will leave the timeout untouched. For instance, incrementing the value of a key with incr, pushing a new value into a list with LPUSH, or altering the field value of a hash with hset are all operations that will leave the timeout untouched.</p> <p>The timeout can also be cleared, turning the key back into a persistent key, using the PERSIST command.</p> <p>If a key is renamed with RENAME, the associated time to live is transferred to the new key name.</p> <p>If a key is overwritten by RENAME, like in the case of an existing key Key_A that is overwritten by a call like RENAME Key_B Key_A, it does not matter if the original Key_A had a timeout associated or not, the new key Key_A will inherit all the characteristics of Key_B.</p> <p>Note that calling expire/pExpire with a non-positive timeout or expireAt/pExpireAt with a time in the past will result in the key being deleted rather than expired (accordingly, the emitted key event will be del, not expired).</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/expire/#return","title":"Return","text":"<p>true if the timeout was set. false if the timeout was not set. e.g. key doesn\u2019t exist, or operation skipped due to the provided arguments.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/get/","title":"get - Misk","text":"<p>//misk-redis/misk.redis/Redis/get</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/get/#get","title":"get","text":"<p>[jvm]\\ abstract operator fun get(key: String): ByteString?</p> <p>Retrieves the value for the given key as a ByteString.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/get/#return","title":"Return","text":"<p>a ByteString if the key was found, null if the key was not found</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/get/#parameters","title":"Parameters","text":"<p>jvm</p> key the key to retrieve"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hdel/","title":"hdel - Misk","text":"<p>//misk-redis/misk.redis/Redis/hdel</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hdel/#hdel","title":"hdel","text":"<p>[jvm]\\ abstract fun hdel(key: String, vararg fields: String): Long</p> <p>Delete one or more hash fields stored at key. Specified fields that do not exist are ignored.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hdel/#return","title":"Return","text":"<p>The number of fields that were removed from the hash. If the key does not exist,     it is treated as an empty hash and 0 is returned.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hget-all/","title":"hgetAll - Misk","text":"<p>//misk-redis/misk.redis/Redis/hgetAll</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hget-all/#hgetall","title":"hgetAll","text":"<p>[jvm]\\ abstract fun hgetAll(key: String): Map&lt;String, ByteString&gt;?</p> <p>Retrieves all the fields and associated values for the given key. Returns null if nothing found.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hget-all/#return","title":"Return","text":"<p>a Map of the fields to their associated values</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hget-all/#parameters","title":"Parameters","text":"<p>jvm</p> key the key"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hget/","title":"hget - Misk","text":"<p>//misk-redis/misk.redis/Redis/hget</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hget/#hget","title":"hget","text":"<p>[jvm]\\ abstract fun hget(key: String, field: String): ByteString?</p> <p>Retrieves the value for the given key and field as a ByteString.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hget/#return","title":"Return","text":"<p>a ByteString if the key/field combination was found, null if not found</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hget/#parameters","title":"Parameters","text":"<p>jvm</p> key the key field the field"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hincr-by/","title":"hincrBy - Misk","text":"<p>//misk-redis/misk.redis/Redis/hincrBy</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hincr-by/#hincrby","title":"hincrBy","text":"<p>[jvm]\\ abstract fun hincrBy(key: String, field: String, increment: Long): Long</p> <p>Increments the number stored at field in the hash stored at key by increment. If key does not exist, a new key holding a hash is created. If field does not exist the value is set to 0 before the operation is performed.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hincr-by/#return","title":"Return","text":"<p>the value at field after the increment operation.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hincr-by/#parameters","title":"Parameters","text":"<p>jvm</p> key the key. field the field."},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hlen/","title":"hlen - Misk","text":"<p>//misk-redis/misk.redis/Redis/hlen</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hlen/#hlen","title":"hlen","text":"<p>[jvm]\\ abstract fun hlen(key: String): Long</p> <p>Returns the number of fields contained in the hash stored at key.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hmget/","title":"hmget - Misk","text":"<p>//misk-redis/misk.redis/Redis/hmget</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hmget/#hmget","title":"hmget","text":"<p>[jvm]\\ abstract fun hmget(key: String, vararg fields: String): List&lt;ByteString?&gt;</p> <p>Retrieve the values associated to the specified fields.</p> <p>If some specified fields do not exist, nil values are returned. Non-existing keys are considered like empty hashes.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hmget/#return","title":"Return","text":"<p>a List of the values for the specific fields requested, in the same order of the request. Null for missing fields</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hmget/#parameters","title":"Parameters","text":"<p>jvm</p> key the key fields the specific fields to retrieve"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hrand-field-with-values/","title":"hrandFieldWithValues - Misk","text":"<p>//misk-redis/misk.redis/Redis/hrandFieldWithValues</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hrand-field-with-values/#hrandfieldwithvalues","title":"hrandFieldWithValues","text":"<p>[jvm]\\ abstract fun hrandFieldWithValues(key: String, count: Long): Map&lt;String, ByteString&gt;?</p> <p>Randomly selects count fields and values from the hash stored at key.</p> <p>NB: Implementations using Jedis 4 or seeking to emulate Jedis should use checkHrandFieldCount to avoid surprising behaviour like retrieving a result map which is smaller than requested by a completely random factor.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hrand-field/","title":"hrandField - Misk","text":"<p>//misk-redis/misk.redis/Redis/hrandField</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hrand-field/#hrandfield","title":"hrandField","text":"<p>[jvm]\\ abstract fun hrandField(key: String, count: Long): List&lt;String&gt;</p> <p>Like hrandFieldWithValues but only returns the fields of the hash stored at key.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hset/","title":"hset - Misk","text":"<p>//misk-redis/misk.redis/Redis/hset</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hset/#hset","title":"hset","text":"<p>[jvm]\\ abstract fun hset(key: String, field: String, value: ByteString): Long</p> <p>Sets the ByteString value for the given key and field</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hset/#return","title":"Return","text":"<p>The number of fields that were added.     Returns 0 if all fields had their values overwritten.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hset/#parameters","title":"Parameters","text":"<p>jvm</p> key the key field the field value the value to set <p>[jvm]\\ abstract fun hset(key: String, hash: Map&lt;String, ByteString&gt;): Long</p> <p>Sets the ByteString values for the given key and fields</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hset/#return_1","title":"Return","text":"<p>The number of fields that were added.     Returns 0 if all fields had their values overwritten.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/hset/#parameters_1","title":"Parameters","text":"<p>jvm</p> key the key hash the map of fields to ByteString value"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/incr-by/","title":"incrBy - Misk","text":"<p>//misk-redis/misk.redis/Redis/incrBy</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/incr-by/#incrby","title":"incrBy","text":"<p>[jvm]\\ abstract fun incrBy(key: String, increment: Long): Long</p> <p>Increments the number stored at key by increment. If the key does not exist, it is set to 0 before performing the operation. An error is returned if the key contains a value of the wrong type or contains a string that can not be represented as integer.</p> <p>See incr for extra information.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/incr/","title":"incr - Misk","text":"<p>//misk-redis/misk.redis/Redis/incr</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/incr/#incr","title":"incr","text":"<p>[jvm]\\ abstract fun incr(key: String): Long</p> <p>Increments the number stored at key by one. If the key does not exist, it is set to 0 before performing the operation. An error is returned if the key contains a value of the wrong type or contains a string that can not be represented as integer.</p> <p>Note: this is a string operation because Redis does not have a dedicated integer type. The string stored at the key is interpreted as a base-10 64 bit signed integer to execute the operation.</p> <p>Redis stores integers in their integer representation, so for string values that actually hold an integer, there is no overhead for storing the string representation of the integer.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/lmove/","title":"lmove - Misk","text":"<p>//misk-redis/misk.redis/Redis/lmove</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/lmove/#lmove","title":"lmove","text":"<p>[jvm]\\ abstract fun lmove(sourceKey: String, destinationKey: String, from: ListDirection, to: ListDirection): ByteString?</p> <p>Atomically returns and removes the first/last element (head/tail depending on the wherefrom argument) of the list stored at source, and pushes the element at the first/last element (head/tail depending on the whereto argument) of the list stored at destination.</p> <p>For example: consider source holding the list a,b,c, and destination holding the list x,y,z. Executing LMOVE source destination RIGHT LEFT results in source holding a,b and destination holding c,x,y,z.</p> <p>If source does not exist, the value nil is returned and no operation is performed. If source and destination are the same, the operation is equivalent to removing the first/last element from the list and pushing it as first/last element of the list, so it can be considered as a list rotation command (or a no-op if wherefrom is the same as whereto).</p> <p>This command comes in place of the now deprecated RPOPLPUSH. Doing LMOVE RIGHT LEFT is equivalent.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/lpop/","title":"lpop - Misk","text":"<p>//misk-redis/misk.redis/Redis/lpop</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/lpop/#lpop","title":"lpop","text":"<p>[jvm]\\ abstract fun lpop(key: String, count: Int): List&lt;ByteString?&gt;</p> <p>Removes and returns the first count elements of the list stored at key.</p> <p>Only available on Redis 6.2.0 and higher. Throws if Redis is too low of a version.</p> <p>[jvm]\\ abstract fun lpop(key: String): ByteString?</p> <p>Removes and returns the first element of the list stored at key.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/lpush/","title":"lpush - Misk","text":"<p>//misk-redis/misk.redis/Redis/lpush</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/lpush/#lpush","title":"lpush","text":"<p>[jvm]\\ abstract fun lpush(key: String, vararg elements: ByteString): Long</p> <p>Insert all the specified elements at the head of the list stored at key. If key does not exist, it is created as empty list before performing the push operations. When key holds a value that is not a list, an error is returned.</p> <p>It is possible to push multiple elements using a single command call just specifying multiple arguments at the end of the command. Elements are inserted one after the other to the head of the list, from the leftmost element to the rightmost element. So for instance the command LPUSH mylist a b c will result into a list containing c as first element, b as second element and a as third element.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/lrange/","title":"lrange - Misk","text":"<p>//misk-redis/misk.redis/Redis/lrange</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/lrange/#lrange","title":"lrange","text":"<p>[jvm]\\ abstract fun lrange(key: String, start: Long, stop: Long): List&lt;ByteString?&gt;</p> <p>Returns the specified elements of the list stored at key. The offsets start and stop are zero-based indexes, with 0 being the first element of the list (the head of the list), 1 being the next element and so on.</p> <p>These offsets can also be negative numbers indicating offsets starting at the end of the list. For example, -1 is the last element of the list, -2 the penultimate, and so on.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/lrem/","title":"lrem - Misk","text":"<p>//misk-redis/misk.redis/Redis/lrem</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/lrem/#lrem","title":"lrem","text":"<p>[jvm]\\ abstract fun lrem(key: String, count: Long, element: ByteString): Long</p> <p>Removes the first count occurrences of elements equal to element from the list stored at key. The count argument influences the operation in the following ways: count 0: Remove elements equal to element moving from head to tail. count &lt; 0: Remove elements equal to element moving from tail to head. count = 0: Remove all elements equal to element. For example, LREM list -2 \u201chello\u201d will remove the last two occurrences of \u201chello\u201d in the list stored at list.</p> <p>Note that non-existing keys are treated like empty lists, so when key does not exist, the command will always return 0.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/mget/","title":"mget - Misk","text":"<p>//misk-redis/misk.redis/Redis/mget</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/mget/#mget","title":"mget","text":"<p>[jvm]\\ abstract fun mget(vararg keys: String): List&lt;ByteString?&gt;</p> <p>Retrieves the values for the given list of keys.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/mget/#return","title":"Return","text":"<p>a list of String in the same order as the specified list of keys. For each key, a value will be returned if a key was found, otherwise null is returned.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/mget/#parameters","title":"Parameters","text":"<p>jvm</p> keys the keys to retrieve"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/mset/","title":"mset - Misk","text":"<p>//misk-redis/misk.redis/Redis/mset</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/mset/#mset","title":"mset","text":"<p>[jvm]\\ abstract fun mset(vararg keyValues: ByteString)</p> <p>Sets the key value pairs.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/mset/#parameters","title":"Parameters","text":"<p>jvm</p> keyValues the list of keys and values in alternating order."},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/multi/","title":"multi - Misk","text":"<p>//misk-redis/misk.redis/Redis/multi</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/multi/#multi","title":"multi","text":"<p>[jvm]\\ abstract fun multi(): Transaction</p> <p>Marks the start of a transaction block. Subsequent commands will be queued for atomic execution using EXEC.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/p-expire-at/","title":"pExpireAt - Misk","text":"<p>//misk-redis/misk.redis/Redis/pExpireAt</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/p-expire-at/#pexpireat","title":"pExpireAt","text":"<p>[jvm]\\ abstract fun pExpireAt(key: String, timestampMilliseconds: Long): Boolean</p> <p>pExpireAt has the same effect and semantic as expireAt, but the Unix time at which the key will expire is specified in milliseconds instead of seconds.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/p-expire-at/#return","title":"Return","text":"<p>true if the timeout was set. false if the timeout was not set. e.g. key doesn\u2019t exist, or operation skipped due to the provided arguments.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/p-expire/","title":"pExpire - Misk","text":"<p>//misk-redis/misk.redis/Redis/pExpire</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/p-expire/#pexpire","title":"pExpire","text":"<p>[jvm]\\ abstract fun pExpire(key: String, milliseconds: Long): Boolean</p> <p>This command works exactly like expire but the time to live of the key is specified in milliseconds instead of seconds.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/p-expire/#return","title":"Return","text":"<p>true if the timeout was set. false if the timeout was not set. e.g. key doesn\u2019t exist, or operation skipped due to the provided arguments.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/pipelined/","title":"pipelined - Misk","text":"<p>//misk-redis/misk.redis/Redis/pipelined</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/pipelined/#pipelined","title":"pipelined","text":"<p>[jvm]\\ abstract fun pipelined(): Pipeline</p> <p>Begin a pipeline operation to batch together several updates for optimal performance</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/publish/","title":"publish - Misk","text":"<p>//misk-redis/misk.redis/Redis/publish</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/publish/#publish","title":"publish","text":"<p>[jvm]\\ abstract fun publish(channel: String, message: String)</p> <p>Publish a message to a channel.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/rpop/","title":"rpop - Misk","text":"<p>//misk-redis/misk.redis/Redis/rpop</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/rpop/#rpop","title":"rpop","text":"<p>[jvm]\\ abstract fun rpop(key: String, count: Int): List&lt;ByteString?&gt;</p> <p>Removes and returns the last count elements of the list stored at key.</p> <p>Only available on Redis 6.2.0 and higher. Throws if Redis is too low of a version.</p> <p>[jvm]\\ abstract fun rpop(key: String): ByteString?</p> <p>Removes and returns the last element of the list stored at key.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/rpoplpush/","title":"rpoplpush - Misk","text":"<p>//misk-redis/misk.redis/Redis/rpoplpush</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/rpoplpush/#rpoplpush","title":"rpoplpush","text":"<p>[jvm]\\ abstract fun rpoplpush(sourceKey: String, destinationKey: String): ByteString?</p> <p>Atomically returns and removes the last element (tail) of the list stored at source, and pushes the element at the first element (head) of the list stored at destination.</p> <p>For example: consider source holding the list a,b,c, and destination holding the list x,y,z. Executing rpoplpush results in source holding a,b and destination holding c,x,y,z.</p> <p>If source does not exist, the value nil is returned and no operation is performed. If source and destination are the same, the operation is equivalent to removing the last element from the list and pushing it as first element of the list, so it can be considered as a list rotation command.</p> <p>As of Redis version 6.2.0, this command is regarded as deprecated.</p> <p>It can be replaced by lmove with the RIGHT and LEFT arguments when migrating or writing new code.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/rpush/","title":"rpush - Misk","text":"<p>//misk-redis/misk.redis/Redis/rpush</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/rpush/#rpush","title":"rpush","text":"<p>[jvm]\\ abstract fun rpush(key: String, vararg elements: ByteString): Long</p> <p>Insert all the specified elements at the tail of the list stored at key. If key does not exist, it is created as empty list before performing the push operations. When key holds a value that is not a list, an error is returned.</p> <p>It is possible to push multiple elements using a single command call just specifying multiple arguments at the end of the command. Elements are inserted one after the other to the tail of the list, from the leftmost element to the rightmost element. So for instance the command RPUSH mylist a b c will result into a list containing a as first element, b as second element and c as third element.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/set/","title":"set - Misk","text":"<p>//misk-redis/misk.redis/Redis/set</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/set/#set","title":"set","text":"<p>[jvm]\\ abstract operator fun set(key: String, value: ByteString)</p> <p>Sets the ByteString value for the given key.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/set/#parameters","title":"Parameters","text":"<p>jvm</p> key the key to set value the value to set <p>[jvm]\\ abstract operator fun set(key: String, expiryDuration: Duration, value: ByteString)</p> <p>Sets the ByteString value for a key with an expiration date.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/set/#parameters_1","title":"Parameters","text":"<p>jvm</p> key the key to set expiryDuration the amount of time before the key expires value the value to set"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/setnx/","title":"setnx - Misk","text":"<p>//misk-redis/misk.redis/Redis/setnx</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/setnx/#setnx","title":"setnx","text":"<p>[jvm]\\ abstract fun setnx(key: String, value: ByteString): Boolean</p> <p>Sets the ByteString value for the given key if it does not already exist.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/setnx/#parameters","title":"Parameters","text":"<p>jvm</p> key the key to set value the value to set <p>[jvm]\\ abstract fun setnx(key: String, expiryDuration: Duration, value: ByteString): Boolean</p> <p>Sets the ByteString value for the given key if it does not already exist.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/setnx/#parameters_1","title":"Parameters","text":"<p>jvm</p> key the key to set expiryDuration the amount of time before the key expires value the value to set"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/subscribe/","title":"subscribe - Misk","text":"<p>//misk-redis/misk.redis/Redis/subscribe</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/subscribe/#subscribe","title":"subscribe","text":"<p>[jvm]\\ abstract fun subscribe(jedisPubSub: JedisPubSub, channel: String)</p> <p>Subscribe to a redis channel via pubsub. This is blocking!</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/unwatch/","title":"unwatch - Misk","text":"<p>//misk-redis/misk.redis/Redis/unwatch</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/unwatch/#unwatch","title":"unwatch","text":"<p>[jvm]\\ abstract fun unwatch(vararg keys: String)</p> <p>Flushes all the previously watched keys for a transaction. If you call EXEC or DISCARD, there\u2019s no need to manually call UNWATCH.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/watch/","title":"watch - Misk","text":"<p>//misk-redis/misk.redis/Redis/watch</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis/watch/#watch","title":"watch","text":"<p>[jvm]\\ abstract fun watch(vararg keys: String)</p> <p>Marks the given keys to be watched for conditional execution of a transaction.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-client-metrics/","title":"RedisClientMetrics - Misk","text":"<p>//misk-redis/misk.redis/RedisClientMetrics</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-client-metrics/#redisclientmetrics","title":"RedisClientMetrics","text":"<p>[jvm]\\ class RedisClientMetrics(ticker: Ticker, metrics: Metrics)</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-client-metrics/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-client-metrics/#functions","title":"Functions","text":"Name Summary timed [jvm]fun &lt;T&gt; timed(commandName: String, block: () -&gt; T): T"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-client-metrics/-redis-client-metrics/","title":"RedisClientMetrics - Misk","text":"<p>//misk-redis/misk.redis/RedisClientMetrics/RedisClientMetrics</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-client-metrics/-redis-client-metrics/#redisclientmetrics","title":"RedisClientMetrics","text":"<p>[jvm]\\ fun RedisClientMetrics(ticker: Ticker, metrics: Metrics)</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-client-metrics/timed/","title":"timed - Misk","text":"<p>//misk-redis/misk.redis/RedisClientMetrics/timed</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-client-metrics/timed/#timed","title":"timed","text":"<p>[jvm]\\ fun &lt;T&gt; timed(commandName: String, block: () -&gt; T): T</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-client-metrics/-companion/","title":"Companion - Misk","text":"<p>//misk-redis/misk.redis/RedisClientMetrics/Companion</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-client-metrics/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-config/","title":"RedisConfig - Misk","text":"<p>//misk-redis/misk.redis/RedisConfig</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-config/#redisconfig","title":"RedisConfig","text":"<p>[jvm]\\ class RedisConfig : LinkedHashMap&lt;String, RedisReplicationGroupConfig&gt; , Config</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-config/#constructors","title":"Constructors","text":"RedisConfig [jvm]fun RedisConfig() RedisConfig [jvm]fun RedisConfig(m: Map&lt;String, RedisReplicationGroupConfig&gt;)"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-config/#functions","title":"Functions","text":"Name Summary afterNodeAccess [jvm]open override fun afterNodeAccess(p0: HashMap.Node&lt;String, RedisReplicationGroupConfig&gt;) afterNodeInsertion [jvm]open override fun afterNodeInsertion(p0: Boolean) afterNodeRemoval [jvm]open override fun afterNodeRemoval(p0: HashMap.Node&lt;String, RedisReplicationGroupConfig&gt;) capacity [jvm]fun capacity(): Int clear [jvm]open override fun clear() clone [jvm]open override fun clone(): Any compute [jvm]open override fun compute(p0: String, p1: BiFunction&lt;in String, in RedisReplicationGroupConfig?, out RedisReplicationGroupConfig?&gt;): RedisReplicationGroupConfig? computeIfAbsent [jvm]open override fun computeIfAbsent(p0: String, p1: Function&lt;in String, out RedisReplicationGroupConfig&gt;): RedisReplicationGroupConfig computeIfPresent [jvm]open override fun computeIfPresent(p0: String, p1: BiFunction&lt;in String, in RedisReplicationGroupConfig, out RedisReplicationGroupConfig?&gt;): RedisReplicationGroupConfig? containsKey [jvm]open override fun containsKey(key: String): Boolean containsValue [jvm]open override fun containsValue(value: RedisReplicationGroupConfig): Boolean equals [jvm]open operator override fun equals(other: Any?): Boolean forEach [jvm]open override fun forEach(p0: BiConsumer&lt;in String, in RedisReplicationGroupConfig&gt;) get [jvm]open operator override fun get(key: String): RedisReplicationGroupConfig? getNode [jvm]fun getNode(p0: Any): HashMap.Node&lt;String, RedisReplicationGroupConfig&gt; getOrDefault [jvm]open override fun getOrDefault(key: String, defaultValue: RedisReplicationGroupConfig): RedisReplicationGroupConfig hashCode [jvm]open override fun hashCode(): Int internalWriteEntries [jvm]open override fun internalWriteEntries(p0: ObjectOutputStream) isEmpty [jvm]open override fun isEmpty(): Boolean keysToArray [jvm]override fun &lt;T : Any&gt; keysToArray(p0: Array&lt;T&gt;): Array&lt;T&gt; loadFactor [jvm]fun loadFactor(): Float merge [jvm]open override fun merge(p0: String, p1: RedisReplicationGroupConfig, p2: BiFunction&lt;in RedisReplicationGroupConfig, in RedisReplicationGroupConfig, out RedisReplicationGroupConfig?&gt;): RedisReplicationGroupConfig? newNode [jvm]open override fun newNode(p0: Int, p1: String, p2: RedisReplicationGroupConfig, p3: HashMap.Node&lt;String, RedisReplicationGroupConfig&gt;): HashMap.Node&lt;String, RedisReplicationGroupConfig&gt; newTreeNode [jvm]open override fun newTreeNode(p0: Int, p1: String, p2: RedisReplicationGroupConfig, p3: HashMap.Node&lt;String, RedisReplicationGroupConfig&gt;): HashMap.TreeNode&lt;String, RedisReplicationGroupConfig&gt; prepareArray [jvm]fun &lt;T : Any&gt; prepareArray(p0: Array&lt;T&gt;): Array&lt;T&gt; put [jvm]open override fun put(key: String, value: RedisReplicationGroupConfig): RedisReplicationGroupConfig? putAll [jvm]open override fun putAll(from: Map&lt;out String, RedisReplicationGroupConfig&gt;) putIfAbsent [jvm]open override fun putIfAbsent(p0: String, p1: RedisReplicationGroupConfig): RedisReplicationGroupConfig? putMapEntries [jvm]fun putMapEntries(p0: MutableMap&lt;out String, out RedisReplicationGroupConfig&gt;, p1: Boolean) putVal [jvm]fun putVal(p0: Int, p1: String, p2: RedisReplicationGroupConfig, p3: Boolean, p4: Boolean): RedisReplicationGroupConfig reinitialize [jvm]open override fun reinitialize() remove [jvm]open override fun remove(key: String): RedisReplicationGroupConfig?open override fun remove(key: String, value: RedisReplicationGroupConfig): Boolean removeEldestEntry [jvm]open fun removeEldestEntry(p0: MutableMap.MutableEntry&lt;String, RedisReplicationGroupConfig&gt;): Boolean removeNode [jvm]fun removeNode(p0: Int, p1: Any, p2: Any, p3: Boolean, p4: Boolean): HashMap.Node&lt;String, RedisReplicationGroupConfig&gt; replace [jvm]open override fun replace(p0: String, p1: RedisReplicationGroupConfig): RedisReplicationGroupConfig?open override fun replace(p0: String, p1: RedisReplicationGroupConfig, p2: RedisReplicationGroupConfig): Boolean replaceAll [jvm]open override fun replaceAll(p0: BiFunction&lt;in String, in RedisReplicationGroupConfig, out RedisReplicationGroupConfig&gt;) replacementNode [jvm]open override fun replacementNode(p0: HashMap.Node&lt;String, RedisReplicationGroupConfig&gt;, p1: HashMap.Node&lt;String, RedisReplicationGroupConfig&gt;): HashMap.Node&lt;String, RedisReplicationGroupConfig&gt; replacementTreeNode [jvm]open override fun replacementTreeNode(p0: HashMap.Node&lt;String, RedisReplicationGroupConfig&gt;, p1: HashMap.Node&lt;String, RedisReplicationGroupConfig&gt;): HashMap.TreeNode&lt;String, RedisReplicationGroupConfig&gt; resize [jvm]fun resize(): Array&lt;HashMap.Node&lt;String, RedisReplicationGroupConfig&gt;&gt; toString [jvm]open override fun toString(): String treeifyBin [jvm]fun treeifyBin(p0: Array&lt;HashMap.Node&lt;String, RedisReplicationGroupConfig&gt;&gt;, p1: Int) valuesToArray [jvm]override fun &lt;T : Any&gt; valuesToArray(p0: Array&lt;T&gt;): Array&lt;T&gt;"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-config/#properties","title":"Properties","text":"Name Summary accessOrder [jvm]val accessOrder: Boolean entries [jvm]open override val entries: MutableSet&lt;MutableMap.MutableEntry&lt;String, RedisReplicationGroupConfig&gt;&gt; entrySet [jvm]val entrySet: MutableSet&lt;MutableMap.MutableEntry&lt;String, RedisReplicationGroupConfig&gt;&gt; head [jvm]val head: LinkedHashMap.Entry&lt;String, RedisReplicationGroupConfig&gt; keys [jvm]open override val keys: MutableSet&lt;String&gt; keySet [jvm]val keySet: MutableSet&lt;String&gt; loadFactor [jvm]val loadFactor: Float modCount [jvm]val modCount: Int size [jvm]open override val size: Int size [jvm]val size: Int table [jvm]val table: Array&lt;HashMap.Node&lt;String, RedisReplicationGroupConfig&gt;&gt; tail [jvm]val tail: LinkedHashMap.Entry&lt;String, RedisReplicationGroupConfig&gt; threshold [jvm]val threshold: Int values [jvm]open override val values: MutableCollection&lt;RedisReplicationGroupConfig&gt; values [jvm]val values: MutableCollection&lt;RedisReplicationGroupConfig&gt;"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-config/-redis-config/","title":"RedisConfig - Misk","text":"<p>//misk-redis/misk.redis/RedisConfig/RedisConfig</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-config/-redis-config/#redisconfig","title":"RedisConfig","text":"<p>[jvm]\\ fun RedisConfig()</p> <p>fun RedisConfig(m: Map&lt;String, RedisReplicationGroupConfig&gt;)</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-connection-exception/","title":"RedisConnectionException - Misk","text":"<p>//misk-redis/misk.redis/RedisConnectionException</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-connection-exception/#redisconnectionexception","title":"RedisConnectionException","text":"<p>[jvm]\\ class RedisConnectionException(cluster: String, cause: Throwable) : RuntimeException</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-connection-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-connection-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-connection-exception/-redis-connection-exception/","title":"RedisConnectionException - Misk","text":"<p>//misk-redis/misk.redis/RedisConnectionException/RedisConnectionException</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-connection-exception/-redis-connection-exception/#redisconnectionexception","title":"RedisConnectionException","text":"<p>[jvm]\\ fun RedisConnectionException(cluster: String, cause: Throwable)</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-module/","title":"RedisModule - Misk","text":"<p>//misk-redis/misk.redis/RedisModule</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-module/#redismodule","title":"RedisModule","text":"<p>[jvm]\\ class RedisModule@JvmOverloadsconstructor(redisConfig: RedisConfig, jedisPoolConfig: JedisPoolConfig, useSsl: Boolean) : KAbstractModule</p> <p>Configures a Redis client with metrics, this also installs a ServiceModule for RedisService. If other services require a working client connection to Redis before they can be used, specify a dependency like:</p> <p>install(ServiceModule&lt;MyService&gt;()\\     .dependsOn(keyOf&lt;RedisService&gt;())\\ )</p> <p>You must pass in configuration for your Redis client.</p> <p>redisConfig: Only one replication group config is supported; this module will use the first configuration it finds. An empty RedisReplicationGroupConfig.redis_auth_password is only permitted in fake environments. See Deployment.</p> <p>jedisPoolConfig: Misk-redis is backed by a JedisPool, you may not want to use the JedisPoolConfig defaults! Be sure to understand them!</p> <p>See: https://github.com/xetorthio/jedis/wiki/Getting-started#using-jedis-in-a-multithreaded-environment</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-module/#constructors","title":"Constructors","text":"RedisModule [jvm]@JvmOverloadsfun RedisModule(redisConfig: RedisConfig, jedisPoolConfig: JedisPoolConfig, useSsl: Boolean = true)"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-module/-redis-module/","title":"RedisModule - Misk","text":"<p>//misk-redis/misk.redis/RedisModule/RedisModule</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-module/-redis-module/#redismodule","title":"RedisModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun RedisModule(redisConfig: RedisConfig, jedisPoolConfig: JedisPoolConfig, useSsl: Boolean = true)</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-node-config/","title":"RedisNodeConfig - Misk","text":"<p>//misk-redis/misk.redis/RedisNodeConfig</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-node-config/#redisnodeconfig","title":"RedisNodeConfig","text":"<p>[jvm]\\ data class RedisNodeConfig(hostname: String, port: Int)</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-node-config/#properties","title":"Properties","text":"Name Summary hostname [jvm]val hostname: String port [jvm]val port: Int"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-node-config/-redis-node-config/","title":"RedisNodeConfig - Misk","text":"<p>//misk-redis/misk.redis/RedisNodeConfig/RedisNodeConfig</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-node-config/-redis-node-config/#redisnodeconfig","title":"RedisNodeConfig","text":"<p>[jvm]\\ fun RedisNodeConfig(hostname: String, port: Int)</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-node-config/hostname/","title":"hostname - Misk","text":"<p>//misk-redis/misk.redis/RedisNodeConfig/hostname</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-node-config/hostname/#hostname","title":"hostname","text":"<p>[jvm]\\ val hostname: String</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-node-config/port/","title":"port - Misk","text":"<p>//misk-redis/misk.redis/RedisNodeConfig/port</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-node-config/port/#port","title":"port","text":"<p>[jvm]\\ val port: Int</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-replication-group-config/","title":"RedisReplicationGroupConfig - Misk","text":"<p>//misk-redis/misk.redis/RedisReplicationGroupConfig</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-replication-group-config/#redisreplicationgroupconfig","title":"RedisReplicationGroupConfig","text":"<p>[jvm]\\ data class RedisReplicationGroupConfig@JvmOverloadsconstructor(writer_endpoint: RedisNodeConfig, reader_endpoint: RedisNodeConfig, redis_auth_password: String, timeout_ms: Int)</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-replication-group-config/#properties","title":"Properties","text":"Name Summary reader_endpoint [jvm]val reader_endpoint: RedisNodeConfig redis_auth_password [jvm]val redis_auth_password: String timeout_ms [jvm]val timeout_ms: Int writer_endpoint [jvm]val writer_endpoint: RedisNodeConfig"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-replication-group-config/-redis-replication-group-config/","title":"RedisReplicationGroupConfig - Misk","text":"<p>//misk-redis/misk.redis/RedisReplicationGroupConfig/RedisReplicationGroupConfig</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-replication-group-config/-redis-replication-group-config/#redisreplicationgroupconfig","title":"RedisReplicationGroupConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun RedisReplicationGroupConfig(writer_endpoint: RedisNodeConfig, reader_endpoint: RedisNodeConfig, redis_auth_password: String, timeout_ms: Int = Protocol.DEFAULT_TIMEOUT)</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-replication-group-config/reader_endpoint/","title":"reader_endpoint - Misk","text":"<p>//misk-redis/misk.redis/RedisReplicationGroupConfig/reader_endpoint</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-replication-group-config/reader_endpoint/#reader_endpoint","title":"reader_endpoint","text":"<p>[jvm]\\ val reader_endpoint: RedisNodeConfig</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-replication-group-config/redis_auth_password/","title":"redis_auth_password - Misk","text":"<p>//misk-redis/misk.redis/RedisReplicationGroupConfig/redis_auth_password</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-replication-group-config/redis_auth_password/#redis_auth_password","title":"redis_auth_password","text":"<p>[jvm]\\ val redis_auth_password: String</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-replication-group-config/timeout_ms/","title":"timeout_ms - Misk","text":"<p>//misk-redis/misk.redis/RedisReplicationGroupConfig/timeout_ms</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-replication-group-config/timeout_ms/#timeout_ms","title":"timeout_ms","text":"<p>[jvm]\\ val timeout_ms: Int</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-replication-group-config/writer_endpoint/","title":"writer_endpoint - Misk","text":"<p>//misk-redis/misk.redis/RedisReplicationGroupConfig/writer_endpoint</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-replication-group-config/writer_endpoint/#writer_endpoint","title":"writer_endpoint","text":"<p>[jvm]\\ val writer_endpoint: RedisNodeConfig</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-service/","title":"RedisService - Misk","text":"<p>//misk-redis/misk.redis/RedisService</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-service/#redisservice","title":"RedisService","text":"<p>[jvm]\\ @Singleton</p> <p>class RedisService : AbstractIdleService</p> <p>Controls the connection lifecycle for Redis.</p>"},{"location":"0.x/misk-redis/misk-redis/misk.redis/-redis-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-service/","title":"misk-service - Misk","text":"<p>//misk-service</p>"},{"location":"0.x/misk-service/#misk-service","title":"misk-service","text":""},{"location":"0.x/misk-service/#packages","title":"Packages","text":"Name misk"},{"location":"0.x/misk-service/misk-service/misk/","title":"Package misk - Misk","text":"<p>//misk-service/misk</p>"},{"location":"0.x/misk-service/misk-service/misk/#package-misk","title":"Package misk","text":""},{"location":"0.x/misk-service/misk-service/misk/#types","title":"Types","text":"Name Summary DelegatingService [jvm]interface DelegatingService : ServiceInterface to retrieve the underlying Service of a wrapper Service ReadyService [jvm]@Singletonclass ReadyService@Injectconstructor : AbstractIdleServiceThis is a symbolic service that\u2019s useful to define the relationship, generally, between services which process traffic (Jetty, SQS, Kinesis, Cron, Tasks, etc.) and services which are required to do work (Database, Redis, GCP, Feature Flags). ServiceManagerModule [jvm]class ServiceManagerModule : KAbstractModule ServiceModule [jvm]class ServiceModule(key: Key&lt;out Service&gt;, dependsOn: List&lt;Key&lt;out Service&gt;&gt;, enhancedBy: List&lt;Key&lt;out Service&gt;&gt;) : KAbstractModuleServices in Misk can depend on other services."},{"location":"0.x/misk-service/misk-service/misk/#functions","title":"Functions","text":"Name Summary ServiceModule [jvm]inline fun &lt;T : Service&gt; ServiceModule(qualifier: KClass&lt;out Annotation&gt;? = null): ServiceModuleReturns a ServiceModule and hooks up service dependencies and enhancements."},{"location":"0.x/misk-service/misk-service/misk/-service-module/","title":"ServiceModule - Misk","text":"<p>//misk-service/misk/ServiceModule</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/#servicemodule","title":"ServiceModule","text":"<p>[jvm]\\ inline fun &lt;T : Service&gt; ServiceModule(qualifier: KClass&lt;out Annotation&gt;? = null): ServiceModule</p> <p>Returns a ServiceModule and hooks up service dependencies and enhancements.</p> <p>Here\u2019s how:</p> <p>Guice.createInjector(object : KAbstractModule() {\\   override fun configure() {\\     install(ServiceModule&lt;MyService&gt;()\\         .dependsOn&lt;MyServiceDependency&gt;())\\     install(ServiceModule&lt;MyServiceDependency&gt;())\\   }\\ }</p> <p>Dependencies and services may be optionally annotated:</p> <p>Guice.createInjector(object : KAbstractModule() {\\   override fun configure() {\\     install(ServiceModule&lt;MyService&gt;(MyAnnotation::class)\\         .dependsOn&lt;MyServiceDependency&gt;(AnotherAnnotation::class))\\     install(ServiceModule&lt;MyServiceDependency&gt;(AnotherAnnotation::class))\\   }\\ }</p>"},{"location":"0.x/misk-service/misk-service/misk/-delegating-service/","title":"DelegatingService - Misk","text":"<p>//misk-service/misk/DelegatingService</p>"},{"location":"0.x/misk-service/misk-service/misk/-delegating-service/#delegatingservice","title":"DelegatingService","text":"<p>[jvm]\\ interface DelegatingService : Service</p> <p>Interface to retrieve the underlying Service of a wrapper Service</p>"},{"location":"0.x/misk-service/misk-service/misk/-delegating-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]abstract fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]abstract fun awaitRunning()open fun awaitRunning(timeout: Duration)abstract fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]abstract fun awaitTerminated()open fun awaitTerminated(timeout: Duration)abstract fun awaitTerminated(timeout: Long, unit: TimeUnit) failureCause [jvm]abstract fun failureCause(): Throwable isRunning [jvm]abstract fun isRunning(): Boolean startAsync [jvm]@CanIgnoreReturnValueabstract fun startAsync(): Service state [jvm]abstract fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueabstract fun stopAsync(): Service"},{"location":"0.x/misk-service/misk-service/misk/-delegating-service/#properties","title":"Properties","text":"Name Summary service [jvm]abstract val service: Service"},{"location":"0.x/misk-service/misk-service/misk/-delegating-service/service/","title":"service - Misk","text":"<p>//misk-service/misk/DelegatingService/service</p>"},{"location":"0.x/misk-service/misk-service/misk/-delegating-service/service/#service","title":"service","text":"<p>[jvm]\\ abstract val service: Service</p>"},{"location":"0.x/misk-service/misk-service/misk/-ready-service/","title":"ReadyService - Misk","text":"<p>//misk-service/misk/ReadyService</p>"},{"location":"0.x/misk-service/misk-service/misk/-ready-service/#readyservice","title":"ReadyService","text":"<p>[jvm]\\ @Singleton</p> <p>class ReadyService@Injectconstructor : AbstractIdleService</p> <p>This is a symbolic service that\u2019s useful to define the relationship, generally, between services which process traffic (Jetty, SQS, Kinesis, Cron, Tasks, etc.) and services which are required to do work (Database, Redis, GCP, Feature Flags).</p> <p>By having the former depend on ReadyService and the latter enhanced by ReadyService we can force, for example, JettyService to stop before our feature flag service without having to intertwine our dependency graph.</p> <p>Example</p> <p>install(\\   ServiceModule&lt;TransacterService&gt;(qualifier)\\     .enhancedBy&lt;SchemaMigratorService&gt;(qualifier)\\     // ReadyService won\u2019t run until TransacterService is complete\\     .enhancedBy&lt;ReadyService&gt;()\\     .dependsOn&lt;DataSourceService&gt;(qualifier)\\ )</p>"},{"location":"0.x/misk-service/misk-service/misk/-ready-service/#constructors","title":"Constructors","text":"ReadyService [jvm]@Injectfun ReadyService()"},{"location":"0.x/misk-service/misk-service/misk/-ready-service/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-service/misk-service/misk/-ready-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-service/misk-service/misk/-ready-service/-ready-service/","title":"ReadyService - Misk","text":"<p>//misk-service/misk/ReadyService/ReadyService</p>"},{"location":"0.x/misk-service/misk-service/misk/-ready-service/-ready-service/#readyservice","title":"ReadyService","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ReadyService()</p>"},{"location":"0.x/misk-service/misk-service/misk/-ready-service/-companion/","title":"Companion - Misk","text":"<p>//misk-service/misk/ReadyService/Companion</p>"},{"location":"0.x/misk-service/misk-service/misk/-ready-service/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-manager-module/","title":"ServiceManagerModule - Misk","text":"<p>//misk-service/misk/ServiceManagerModule</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-manager-module/#servicemanagermodule","title":"ServiceManagerModule","text":"<p>[jvm]\\ class ServiceManagerModule : KAbstractModule</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-manager-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-service/misk-service/misk/-service-manager-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-service/misk-service/misk/-service-manager-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-service/misk-service/misk/-service-manager-module/-service-manager-module/","title":"ServiceManagerModule - Misk","text":"<p>//misk-service/misk/ServiceManagerModule/ServiceManagerModule</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-manager-module/-service-manager-module/#servicemanagermodule","title":"ServiceManagerModule","text":"<p>[jvm]\\ fun ServiceManagerModule()</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-manager-module/-companion/","title":"Companion - Misk","text":"<p>//misk-service/misk/ServiceManagerModule/Companion</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-manager-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/","title":"ServiceModule - Misk","text":"<p>//misk-service/misk/ServiceModule</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/#servicemodule","title":"ServiceModule","text":"<p>[jvm]\\ class ServiceModule(key: Key&lt;out Service&gt;, dependsOn: List&lt;Key&lt;out Service&gt;&gt;, enhancedBy: List&lt;Key&lt;out Service&gt;&gt;) : KAbstractModule</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/#misk-services","title":"Misk Services","text":"<p>Services in Misk can depend on other services.</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/#dependencies","title":"Dependencies","text":"<p>Suppose we have a DatabaseService and a MovieService, with the MovieService depending on the DatabaseService.</p> <p>DatabaseService\\   depended on by MovieService</p> <p>When you install a service via this module, start-up and shut-down of its dependencies are handled automatically, so that a service can only run when the services it depends on are running. In the example above, the MovieService doesn\u2019t enter the STARTING state until the DatabaseService has entered the RUNNING state. Conversely, the MovieService must enter the TERMINATED state before the DatabaseService enters the STOPPING state.</p> <p>Dependencies can have their own dependencies, so there\u2019s an entire graph to manage of what starts and stops when.</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/#enhancements","title":"Enhancements","text":"<p>Some services exist to enhance the behavior of another service.</p> <p>For example, a DatabaseService may manage a generic connection to a MySQL database, and the SchemaMigrationService may create tables specific to the application.</p> <p>We treat such enhancements as implementation details of the enhanced service: they depend on the service, but downstream dependencies like the MovieService don\u2019t need to know that they exist.</p> <p>DatabaseService\\   enhanced by SchemaMigrationService\\   depended on by MovieService</p> <p>In the above service graph we start the DatabaseService first, the SchemaMigrationService second, and finally the MovieService. The MovieService doesn\u2019t need to express a dependency on the SchemaMigrationService, that happens automatically for enhancements.</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/#what-does-this-look-like","title":"What does this look like?","text":"<p>Instead of using the regular service multi-bindings you might be used to, in the configure block of a Guice KAbstractModule, you would set up the above relationship as follows:</p> <p>override fun configure() {\\   install(ServiceModule&lt;SchemaMigrationService())\\   install(ServiceModule&lt;DatabaseService&gt;()\\       .enhancedBy&lt;SchemaMigrationService&gt;())\\   install(ServiceModule&lt;MoviesService&gt;()\\       .dependsOn&lt;DatabaseService&gt;())\\ }</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/#how-does-this-work","title":"How does this work?","text":"<p>Bindings are hooked up for a ServiceManager provider, which decorates the service with its dependencies and enhancements to defer its start up and shut down until its dependent services are ready.</p> <p>This service will stall in the STARTING state until all upstream services are RUNNING. Symmetrically it stalls in the STOPPING state until all dependent services are TERMINATED.</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/#constructors","title":"Constructors","text":"ServiceModule [jvm]fun ServiceModule(key: Key&lt;out Service&gt;, dependsOn: List&lt;Key&lt;out Service&gt;&gt; = listOf(), enhancedBy: List&lt;Key&lt;out Service&gt;&gt; = listOf())"},{"location":"0.x/misk-service/misk-service/misk/-service-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage dependsOn [jvm]fun dependsOn(upstream: Key&lt;out Service&gt;): ServiceModule@JvmOverloadsinline fun &lt;T : Service&gt; dependsOn(qualifier: KClass&lt;out Annotation&gt;? = null): ServiceModule enhancedBy [jvm]fun enhancedBy(enhancement: Key&lt;out Service&gt;): ServiceModule@JvmOverloadsinline fun &lt;T : Service&gt; enhancedBy(qualifier: KClass&lt;out Annotation&gt;? = null): ServiceModule getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-service/misk-service/misk/-service-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder dependsOn [jvm]val dependsOn: List&lt;Key&lt;out Service&gt;&gt; enhancedBy [jvm]val enhancedBy: List&lt;Key&lt;out Service&gt;&gt; key [jvm]val key: Key&lt;out Service&gt;"},{"location":"0.x/misk-service/misk-service/misk/-service-module/-service-module/","title":"ServiceModule - Misk","text":"<p>//misk-service/misk/ServiceModule/ServiceModule</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/-service-module/#servicemodule","title":"ServiceModule","text":"<p>[jvm]\\ fun ServiceModule(key: Key&lt;out Service&gt;, dependsOn: List&lt;Key&lt;out Service&gt;&gt; = listOf(), enhancedBy: List&lt;Key&lt;out Service&gt;&gt; = listOf())</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/depends-on/","title":"dependsOn - Misk","text":"<p>//misk-service/misk/ServiceModule/dependsOn</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/depends-on/#dependson","title":"dependsOn","text":"<p>[jvm]\\ fun dependsOn(upstream: Key&lt;out Service&gt;): ServiceModule</p> <p>@JvmOverloads</p> <p>inline fun &lt;T : Service&gt; dependsOn(qualifier: KClass&lt;out Annotation&gt;? = null): ServiceModule</p> <p>val dependsOn: List&lt;Key&lt;out Service&gt;&gt;</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/enhanced-by/","title":"enhancedBy - Misk","text":"<p>//misk-service/misk/ServiceModule/enhancedBy</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/enhanced-by/#enhancedby","title":"enhancedBy","text":"<p>[jvm]\\ fun enhancedBy(enhancement: Key&lt;out Service&gt;): ServiceModule</p> <p>@JvmOverloads</p> <p>inline fun &lt;T : Service&gt; enhancedBy(qualifier: KClass&lt;out Annotation&gt;? = null): ServiceModule</p> <p>val enhancedBy: List&lt;Key&lt;out Service&gt;&gt;</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/key/","title":"key - Misk","text":"<p>//misk-service/misk/ServiceModule/key</p>"},{"location":"0.x/misk-service/misk-service/misk/-service-module/key/#key","title":"key","text":"<p>[jvm]\\ val key: Key&lt;out Service&gt;</p>"},{"location":"0.x/misk-slack/","title":"misk-slack - Misk","text":"<p>//misk-slack</p>"},{"location":"0.x/misk-slack/#misk-slack","title":"misk-slack","text":""},{"location":"0.x/misk-slack/#packages","title":"Packages","text":"Name misk.slack misk.slack.webapi misk.slack.webapi.helpers misk.slack.webapi.interceptors misk.slack.webapi.slashcommands"},{"location":"0.x/misk-slack/misk-slack/misk.slack/","title":"Package misk.slack - Misk","text":"<p>//misk-slack/misk.slack</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/#package-miskslack","title":"Package misk.slack","text":""},{"location":"0.x/misk-slack/misk-slack/misk.slack/#types","title":"Types","text":"Name Summary RealSlackClient [jvm]class RealSlackClient@Injectconstructor(slackWebHookApi: SlackWebhookApi, config: SlackConfig) : SlackClient SlackClient [jvm]open class SlackClient@InjectconstructorDummy client that does nothing if SlackModule is not installed . SlackConfig [jvm]data class SlackConfig@JvmOverloadsconstructor(baseUrl: String, webhook_path: Secret&lt;String&gt;, default_channel: String?) SlackModule [jvm]class SlackModule(config: SlackConfig) : KAbstractModuleInstalls the Slack webhook client. This should be installed once per service and enables imported libraries to post to Slack using the service level config. SlackWebhookApi [jvm]interface SlackWebhookApi SlackWebhookRequest [jvm]@JsonClass(generateAdapter = true)data class SlackWebhookRequest(channel: String, username: String, text: String, icon_emoji: String) SlackWebhookResponse [jvm]@JsonClass(generateAdapter = true)enum SlackWebhookResponse : Enum&lt;SlackWebhookResponse&gt;"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-real-slack-client/","title":"RealSlackClient - Misk","text":"<p>//misk-slack/misk.slack/RealSlackClient</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-real-slack-client/#realslackclient","title":"RealSlackClient","text":"<p>[jvm]\\ class RealSlackClient@Injectconstructor(slackWebHookApi: SlackWebhookApi, config: SlackConfig) : SlackClient</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-real-slack-client/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-real-slack-client/#functions","title":"Functions","text":"Name Summary postMessage [jvm]open override fun postMessage(username: String, iconEmoji: String, message: String, channel: String?): SlackWebhookResponse?Post a message as the specified bot username and icon emoji in the channel. If no channel is provided, the default channel configured by the service is used. Does not throw on IO exceptions."},{"location":"0.x/misk-slack/misk-slack/misk.slack/-real-slack-client/-real-slack-client/","title":"RealSlackClient - Misk","text":"<p>//misk-slack/misk.slack/RealSlackClient/RealSlackClient</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-real-slack-client/-real-slack-client/#realslackclient","title":"RealSlackClient","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun RealSlackClient(slackWebHookApi: SlackWebhookApi, config: SlackConfig)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-real-slack-client/post-message/","title":"postMessage - Misk","text":"<p>//misk-slack/misk.slack/RealSlackClient/postMessage</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-real-slack-client/post-message/#postmessage","title":"postMessage","text":"<p>[jvm]\\ open override fun postMessage(username: String, iconEmoji: String, message: String, channel: String?): SlackWebhookResponse?</p> <p>Post a message as the specified bot username and icon emoji in the channel. If no channel is provided, the default channel configured by the service is used. Does not throw on IO exceptions.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-real-slack-client/-companion/","title":"Companion - Misk","text":"<p>//misk-slack/misk.slack/RealSlackClient/Companion</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-real-slack-client/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-real-slack-client/-companion/#properties","title":"Properties","text":"Name Summary logger [jvm]val logger: &lt;ERROR CLASS&gt;"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-real-slack-client/-companion/logger/","title":"logger - Misk","text":"<p>//misk-slack/misk.slack/RealSlackClient/Companion/logger</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-real-slack-client/-companion/logger/#logger","title":"logger","text":"<p>[jvm]\\ val logger: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-client/","title":"SlackClient - Misk","text":"<p>//misk-slack/misk.slack/SlackClient</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-client/#slackclient","title":"SlackClient","text":"<p>[jvm]\\ open class SlackClient@Injectconstructor</p> <p>Dummy client that does nothing if SlackModule is not installed .</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-client/#constructors","title":"Constructors","text":"SlackClient [jvm]@Injectfun SlackClient()"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-client/#functions","title":"Functions","text":"Name Summary postMessage [jvm]@JvmOverloadsopen fun postMessage(username: String, iconEmoji: String, message: String, channel: String? = null): SlackWebhookResponse?Post a message as the specified bot username and icon emoji in the channel. If no channel is provided, the default channel configured by the service is used. If the service has not configured a slack module, this method is a no-op. Does not throw on IO exceptions."},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-client/#inheritors","title":"Inheritors","text":"Name RealSlackClient"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-client/-slack-client/","title":"SlackClient - Misk","text":"<p>//misk-slack/misk.slack/SlackClient/SlackClient</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-client/-slack-client/#slackclient","title":"SlackClient","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun SlackClient()</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-client/post-message/","title":"postMessage - Misk","text":"<p>//misk-slack/misk.slack/SlackClient/postMessage</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-client/post-message/#postmessage","title":"postMessage","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>open fun postMessage(username: String, iconEmoji: String, message: String, channel: String? = null): SlackWebhookResponse?</p> <p>Post a message as the specified bot username and icon emoji in the channel. If no channel is provided, the default channel configured by the service is used. If the service has not configured a slack module, this method is a no-op. Does not throw on IO exceptions.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-config/","title":"SlackConfig - Misk","text":"<p>//misk-slack/misk.slack/SlackConfig</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-config/#slackconfig","title":"SlackConfig","text":"<p>[jvm]\\ data class SlackConfig@JvmOverloadsconstructor(baseUrl: String, webhook_path: Secret&lt;String&gt;, default_channel: String?)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-config/#properties","title":"Properties","text":"Name Summary baseUrl [jvm]val baseUrl: String default_channel [jvm]val default_channel: String?The channel to post to if the caller doesn\u2019t specify one. A service that always posts to one channel should specify this, but a service that operates on other services can instead specify a channel for each message. webhook_path [jvm]val webhook_path: Secret&lt;String&gt;The full webhook path, i.e. /services/\u2026"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-config/-slack-config/","title":"SlackConfig - Misk","text":"<p>//misk-slack/misk.slack/SlackConfig/SlackConfig</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-config/-slack-config/#slackconfig","title":"SlackConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun SlackConfig(baseUrl: String = \u201chttps://hooks.slack.com/\u201d, webhook_path: Secret&lt;String&gt;, default_channel: String?)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-config/base-url/","title":"baseUrl - Misk","text":"<p>//misk-slack/misk.slack/SlackConfig/baseUrl</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-config/base-url/#baseurl","title":"baseUrl","text":"<p>[jvm]\\ val baseUrl: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-config/default_channel/","title":"default_channel - Misk","text":"<p>//misk-slack/misk.slack/SlackConfig/default_channel</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-config/default_channel/#default_channel","title":"default_channel","text":"<p>[jvm]\\ val default_channel: String?</p> <p>The channel to post to if the caller doesn\u2019t specify one. A service that always posts to one channel should specify this, but a service that operates on other services can instead specify a channel for each message.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-config/webhook_path/","title":"webhook_path - Misk","text":"<p>//misk-slack/misk.slack/SlackConfig/webhook_path</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-config/webhook_path/#webhook_path","title":"webhook_path","text":"<p>[jvm]\\ val webhook_path: Secret&lt;String&gt;</p> <p>The full webhook path, i.e. /services/\u2026</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-module/","title":"SlackModule - Misk","text":"<p>//misk-slack/misk.slack/SlackModule</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-module/#slackmodule","title":"SlackModule","text":"<p>[jvm]\\ class SlackModule(config: SlackConfig) : KAbstractModule</p> <p>Installs the Slack webhook client. This should be installed once per service and enables imported libraries to post to Slack using the service level config.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-module/#constructors","title":"Constructors","text":"SlackModule [jvm]fun SlackModule(config: SlackConfig)"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideMoshi [jvm]@Provides@Singleton@Named(value = \u201cmisk-slack\u201d)fun provideMoshi(): Moshi provideSlackWebhookApi [jvm]@Provides@Singletonfun provideSlackWebhookApi(httpClientFactory: HttpClientFactory, @Named(value = \u201cmisk-slack\u201d)moshi: Moshi): SlackWebhookApi requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-module/-slack-module/","title":"SlackModule - Misk","text":"<p>//misk-slack/misk.slack/SlackModule/SlackModule</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-module/-slack-module/#slackmodule","title":"SlackModule","text":"<p>[jvm]\\ fun SlackModule(config: SlackConfig)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-module/provide-moshi/","title":"provideMoshi - Misk","text":"<p>//misk-slack/misk.slack/SlackModule/provideMoshi</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-module/provide-moshi/#providemoshi","title":"provideMoshi","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>@Named(value = \u201cmisk-slack\u201d)</p> <p>fun provideMoshi(): Moshi</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-module/provide-slack-webhook-api/","title":"provideSlackWebhookApi - Misk","text":"<p>//misk-slack/misk.slack/SlackModule/provideSlackWebhookApi</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-module/provide-slack-webhook-api/#provideslackwebhookapi","title":"provideSlackWebhookApi","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideSlackWebhookApi(httpClientFactory: HttpClientFactory, @Named(value = \u201cmisk-slack\u201d)moshi: Moshi): SlackWebhookApi</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-api/","title":"SlackWebhookApi - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookApi</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-api/#slackwebhookapi","title":"SlackWebhookApi","text":"<p>[jvm]\\ interface SlackWebhookApi</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-api/#functions","title":"Functions","text":"Name Summary post [jvm]@POSTabstract fun post(@Urlurl: String, @Bodyrequest: SlackWebhookRequest): Call&lt;Void&gt;"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-api/post/","title":"post - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookApi/post</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-api/post/#post","title":"post","text":"<p>[jvm]\\</p> <p>@POST</p> <p>abstract fun post(@Urlurl: String, @Bodyrequest: SlackWebhookRequest): Call&lt;Void&gt;</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-request/","title":"SlackWebhookRequest - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookRequest</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-request/#slackwebhookrequest","title":"SlackWebhookRequest","text":"<p>[jvm]\\ @JsonClass(generateAdapter = true)</p> <p>data class SlackWebhookRequest(channel: String, username: String, text: String, icon_emoji: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-request/#properties","title":"Properties","text":"Name Summary channel [jvm]val channel: String icon_emoji [jvm]val icon_emoji: String text [jvm]val text: String username [jvm]val username: String"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-request/-slack-webhook-request/","title":"SlackWebhookRequest - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookRequest/SlackWebhookRequest</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-request/-slack-webhook-request/#slackwebhookrequest","title":"SlackWebhookRequest","text":"<p>[jvm]\\ fun SlackWebhookRequest(channel: String, username: String, text: String, icon_emoji: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-request/channel/","title":"channel - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookRequest/channel</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-request/channel/#channel","title":"channel","text":"<p>[jvm]\\ val channel: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-request/icon_emoji/","title":"icon_emoji - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookRequest/icon_emoji</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-request/icon_emoji/#icon_emoji","title":"icon_emoji","text":"<p>[jvm]\\ val icon_emoji: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-request/text/","title":"text - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookRequest/text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-request/text/#text","title":"text","text":"<p>[jvm]\\ val text: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-request/username/","title":"username - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookRequest/username</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-request/username/#username","title":"username","text":"<p>[jvm]\\ val username: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/","title":"SlackWebhookResponse - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookResponse</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/#slackwebhookresponse","title":"SlackWebhookResponse","text":"<p>[jvm]\\ @JsonClass(generateAdapter = true)</p> <p>enum SlackWebhookResponse : Enum&lt;SlackWebhookResponse&gt;</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/#entries","title":"Entries","text":"missing_text_or_fallback_or_attachments [jvm]missing_text_or_fallback_or_attachments() action_prohibited [jvm]action_prohibited() channel_is_archived [jvm]channel_is_archived() channel_not_found [jvm]channel_not_found() user_not_found [jvm]user_not_found() invalid_payload [jvm]invalid_payload() ok [jvm]ok()"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/action_prohibited/","title":"action_prohibited - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookResponse/action_prohibited</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/action_prohibited/#action_prohibited","title":"action_prohibited","text":"<p>[jvm]\\ action_prohibited()</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/action_prohibited/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/channel_is_archived/","title":"channel_is_archived - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookResponse/channel_is_archived</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/channel_is_archived/#channel_is_archived","title":"channel_is_archived","text":"<p>[jvm]\\ channel_is_archived()</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/channel_is_archived/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/channel_not_found/","title":"channel_not_found - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookResponse/channel_not_found</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/channel_not_found/#channel_not_found","title":"channel_not_found","text":"<p>[jvm]\\ channel_not_found()</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/channel_not_found/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/invalid_payload/","title":"invalid_payload - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookResponse/invalid_payload</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/invalid_payload/#invalid_payload","title":"invalid_payload","text":"<p>[jvm]\\ invalid_payload()</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/invalid_payload/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/missing_text_or_fallback_or_attachments/","title":"missing_text_or_fallback_or_attachments - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookResponse/missing_text_or_fallback_or_attachments</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/missing_text_or_fallback_or_attachments/#missing_text_or_fallback_or_attachments","title":"missing_text_or_fallback_or_attachments","text":"<p>[jvm]\\ missing_text_or_fallback_or_attachments()</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/missing_text_or_fallback_or_attachments/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/ok/","title":"ok - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookResponse/ok</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/ok/#ok","title":"ok","text":"<p>[jvm]\\ ok()</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/ok/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/user_not_found/","title":"user_not_found - Misk","text":"<p>//misk-slack/misk.slack/SlackWebhookResponse/user_not_found</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/user_not_found/#user_not_found","title":"user_not_found","text":"<p>[jvm]\\ user_not_found()</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack/-slack-webhook-response/user_not_found/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/","title":"Package misk.slack.webapi - Misk","text":"<p>//misk-slack/misk.slack.webapi</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/#package-miskslackwebapi","title":"Package misk.slack.webapi","text":""},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/#types","title":"Types","text":"Name Summary RealSlackClient [jvm]class RealSlackClient@Injectconstructor(slackApi: SlackApi) : SlackClient RealSlackClientModule [jvm]class RealSlackClientModule(config: SlackConfig) : KAbstractModule SlackApi [jvm]interface SlackApi SlackClient [jvm]interface SlackClient SlackConfig [jvm]data class SlackConfig@JvmOverloadsconstructor(url: String, bearer_token: Secret&lt;String&gt;, signing_secret: Secret&lt;String&gt;)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/#functions","title":"Functions","text":"Name Summary checkSuccessful [jvm]fun Response&lt;PostMessageResponse&gt;.checkSuccessful()"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/check-successful/","title":"checkSuccessful - Misk","text":"<p>//misk-slack/misk.slack.webapi/checkSuccessful</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/check-successful/#checksuccessful","title":"checkSuccessful","text":"<p>[jvm]\\ fun Response&lt;PostMessageResponse&gt;.checkSuccessful()</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client/","title":"RealSlackClient - Misk","text":"<p>//misk-slack/misk.slack.webapi/RealSlackClient</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client/#realslackclient","title":"RealSlackClient","text":"<p>[jvm]\\ class RealSlackClient@Injectconstructor(slackApi: SlackApi) : SlackClient</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client/#functions","title":"Functions","text":"Name Summary getUserByEmail [jvm]open override fun getUserByEmail(email: String): GetUserResponse postConfirmation [jvm]open override fun postConfirmation(url: String, request: PostMessageRequest): PostMessageResponse postMessage [jvm]open override fun postMessage(request: PostMessageRequest): PostMessageResponse"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client/-real-slack-client/","title":"RealSlackClient - Misk","text":"<p>//misk-slack/misk.slack.webapi/RealSlackClient/RealSlackClient</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client/-real-slack-client/#realslackclient","title":"RealSlackClient","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun RealSlackClient(slackApi: SlackApi)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client/get-user-by-email/","title":"getUserByEmail - Misk","text":"<p>//misk-slack/misk.slack.webapi/RealSlackClient/getUserByEmail</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client/get-user-by-email/#getuserbyemail","title":"getUserByEmail","text":"<p>[jvm]\\ open override fun getUserByEmail(email: String): GetUserResponse</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client/post-confirmation/","title":"postConfirmation - Misk","text":"<p>//misk-slack/misk.slack.webapi/RealSlackClient/postConfirmation</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client/post-confirmation/#postconfirmation","title":"postConfirmation","text":"<p>[jvm]\\ open override fun postConfirmation(url: String, request: PostMessageRequest): PostMessageResponse</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client/post-message/","title":"postMessage - Misk","text":"<p>//misk-slack/misk.slack.webapi/RealSlackClient/postMessage</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client/post-message/#postmessage","title":"postMessage","text":"<p>[jvm]\\ open override fun postMessage(request: PostMessageRequest): PostMessageResponse</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client-module/","title":"RealSlackClientModule - Misk","text":"<p>//misk-slack/misk.slack.webapi/RealSlackClientModule</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client-module/#realslackclientmodule","title":"RealSlackClientModule","text":"<p>[jvm]\\ class RealSlackClientModule(config: SlackConfig) : KAbstractModule</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client-module/-real-slack-client-module/","title":"RealSlackClientModule - Misk","text":"<p>//misk-slack/misk.slack.webapi/RealSlackClientModule/RealSlackClientModule</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-real-slack-client-module/-real-slack-client-module/#realslackclientmodule","title":"RealSlackClientModule","text":"<p>[jvm]\\ fun RealSlackClientModule(config: SlackConfig)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-api/","title":"SlackApi - Misk","text":"<p>//misk-slack/misk.slack.webapi/SlackApi</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-api/#slackapi","title":"SlackApi","text":"<p>[jvm]\\ interface SlackApi</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-api/#functions","title":"Functions","text":"Name Summary getUserByEmail [jvm]@GET(value = \u201c/api/users.lookupByEmail\u201d)@Headers(value = [\u201caccept: application/json\u201d])abstract fun getUserByEmail(@Query(value = \u201cemail\u201d)email: String): Call&lt;GetUserResponse&gt;Calls Slack to fetch user for given email. postConfirmation [jvm]@POST@Headers(value = [\u201caccept: application/json\u201d])abstract fun postConfirmation(@Urlurl: String, @BodyconfirmationMessageJson: PostMessageRequest): Call&lt;PostMessageResponse&gt;Calls Slack and asks it to post a confirmation message to the dynamic URL sent from Slack. https://api.slack.com/interactivity/handling#message_responses postMessage [jvm]@POST(value = \u201c/api/chat.postMessage\u201d)@Headers(value = [\u201caccept: application/json\u201d])abstract fun postMessage(@BodypostMessageJson: PostMessageRequest): Call&lt;PostMessageResponse&gt;Calls Slack and asks it to post message. https://api.slack.com/methods/chat.postMessage"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-api/get-user-by-email/","title":"getUserByEmail - Misk","text":"<p>//misk-slack/misk.slack.webapi/SlackApi/getUserByEmail</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-api/get-user-by-email/#getuserbyemail","title":"getUserByEmail","text":"<p>[jvm]\\</p> <p>@GET(value = \u201c/api/users.lookupByEmail\u201d)</p> <p>@Headers(value = [\u201caccept: application/json\u201d])</p> <p>abstract fun getUserByEmail(@Query(value = \u201cemail\u201d)email: String): Call&lt;GetUserResponse&gt;</p> <p>Calls Slack to fetch user for given email.</p> <p>https://api.slack.com/methods/users.lookupByEmail</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-api/post-confirmation/","title":"postConfirmation - Misk","text":"<p>//misk-slack/misk.slack.webapi/SlackApi/postConfirmation</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-api/post-confirmation/#postconfirmation","title":"postConfirmation","text":"<p>[jvm]\\</p> <p>@POST</p> <p>@Headers(value = [\u201caccept: application/json\u201d])</p> <p>abstract fun postConfirmation(@Urlurl: String, @BodyconfirmationMessageJson: PostMessageRequest): Call&lt;PostMessageResponse&gt;</p> <p>Calls Slack and asks it to post a confirmation message to the dynamic URL sent from Slack. https://api.slack.com/interactivity/handling#message_responses</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-api/post-message/","title":"postMessage - Misk","text":"<p>//misk-slack/misk.slack.webapi/SlackApi/postMessage</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-api/post-message/#postmessage","title":"postMessage","text":"<p>[jvm]\\</p> <p>@POST(value = \u201c/api/chat.postMessage\u201d)</p> <p>@Headers(value = [\u201caccept: application/json\u201d])</p> <p>abstract fun postMessage(@BodypostMessageJson: PostMessageRequest): Call&lt;PostMessageResponse&gt;</p> <p>Calls Slack and asks it to post message. https://api.slack.com/methods/chat.postMessage</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-client/","title":"SlackClient - Misk","text":"<p>//misk-slack/misk.slack.webapi/SlackClient</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-client/#slackclient","title":"SlackClient","text":"<p>[jvm]\\ interface SlackClient</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-client/#functions","title":"Functions","text":"Name Summary getUserByEmail [jvm]abstract fun getUserByEmail(mail: String): GetUserResponse postConfirmation [jvm]abstract fun postConfirmation(url: String, request: PostMessageRequest): PostMessageResponse postMessage [jvm]abstract fun postMessage(request: PostMessageRequest): PostMessageResponse"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-client/#inheritors","title":"Inheritors","text":"Name RealSlackClient"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-client/get-user-by-email/","title":"getUserByEmail - Misk","text":"<p>//misk-slack/misk.slack.webapi/SlackClient/getUserByEmail</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-client/get-user-by-email/#getuserbyemail","title":"getUserByEmail","text":"<p>[jvm]\\ abstract fun getUserByEmail(mail: String): GetUserResponse</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-client/post-confirmation/","title":"postConfirmation - Misk","text":"<p>//misk-slack/misk.slack.webapi/SlackClient/postConfirmation</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-client/post-confirmation/#postconfirmation","title":"postConfirmation","text":"<p>[jvm]\\ abstract fun postConfirmation(url: String, request: PostMessageRequest): PostMessageResponse</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-client/post-message/","title":"postMessage - Misk","text":"<p>//misk-slack/misk.slack.webapi/SlackClient/postMessage</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-client/post-message/#postmessage","title":"postMessage","text":"<p>[jvm]\\ abstract fun postMessage(request: PostMessageRequest): PostMessageResponse</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-config/","title":"SlackConfig - Misk","text":"<p>//misk-slack/misk.slack.webapi/SlackConfig</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-config/#slackconfig","title":"SlackConfig","text":"<p>[jvm]\\ data class SlackConfig@JvmOverloadsconstructor(url: String, bearer_token: Secret&lt;String&gt;, signing_secret: Secret&lt;String&gt;)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-config/#properties","title":"Properties","text":"Name Summary bearer_token [jvm]val bearer_token: Secret&lt;String&gt; signing_secret [jvm]val signing_secret: Secret&lt;String&gt; url [jvm]val url: String"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-config/-slack-config/","title":"SlackConfig - Misk","text":"<p>//misk-slack/misk.slack.webapi/SlackConfig/SlackConfig</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-config/-slack-config/#slackconfig","title":"SlackConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun SlackConfig(url: String = \u201chttps://hooks.slack.com/\u201d, bearer_token: Secret&lt;String&gt;, signing_secret: Secret&lt;String&gt;)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-config/bearer_token/","title":"bearer_token - Misk","text":"<p>//misk-slack/misk.slack.webapi/SlackConfig/bearer_token</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-config/bearer_token/#bearer_token","title":"bearer_token","text":"<p>[jvm]\\ val bearer_token: Secret&lt;String&gt;</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-config/signing_secret/","title":"signing_secret - Misk","text":"<p>//misk-slack/misk.slack.webapi/SlackConfig/signing_secret</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-config/signing_secret/#signing_secret","title":"signing_secret","text":"<p>[jvm]\\ val signing_secret: Secret&lt;String&gt;</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-config/url/","title":"url - Misk","text":"<p>//misk-slack/misk.slack.webapi/SlackConfig/url</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi/-slack-config/url/#url","title":"url","text":"<p>[jvm]\\ val url: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/","title":"Package misk.slack.webapi.helpers - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/#package-miskslackwebapihelpers","title":"Package misk.slack.webapi.helpers","text":""},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/#types","title":"Types","text":"Name Summary Actions [jvm]data class Actions(type: String, block_id: String, action_id: String, text: Text, value: String, action_ts: String) Block [jvm]data class Block@JvmOverloadsconstructor(type: String, replace_original: Boolean?, block_id: String?, text: Text?, accessory: ButtonLinkAndValue?, elements: List&lt;ButtonLinkAndValue&gt;?)An envelope that contains text or elements. ButtonLinkAndValue [jvm]data class ButtonLinkAndValue@JvmOverloadsconstructor(type: String, text: Text, value: String?, url: String?, action_id: String?)https://api.slack.com/reference/block-kit/block-elements#button ButtonPress [jvm]data class ButtonPress(type: String, user: User, api_app_id: String, token: String, container: Container, trigger_id: String, team: Team, enterprise: Id, is_enterprise_install: Boolean, channel: Id, message: Message, state: Values, response_url: String, actions: List&lt;Actions&gt;)Message received from Slack upon button press. Container [jvm]data class Container(type: String, message_ts: String, channel_id: String, is_ephemeral: Boolean) EnterpriseUser [jvm]data class EnterpriseUser@JvmOverloadsconstructor(enterprise_id: String?, enterprise_name: String?, id: String?, is_admin: Boolean?, is_owner: Boolean?, teams: Array&lt;String&gt;?)An object containing info related to an Enterprise Grid user. GetUserResponse [jvm]data class GetUserResponse@JvmOverloadsconstructor(ok: Boolean, error: String?, user: UserData?)Message received from slack after posting a message Id [jvm]data class Id(id: String, name: String) Message [jvm]data class Message(bot_id: String, type: String, text: String, user: String, ts: String, app_id: String, blocks: List&lt;Block&gt;, team: String) MrkdwnBuilder [jvm]class MrkdwnBuilderMrkdwn is Slack\u2019s weird thing that isn\u2019t Markdown. This class attempts to implement proper escaping and formatting. PostMessageRequest [jvm]data class PostMessageRequest@JvmOverloadsconstructor(channel: String, response_type: String?, blocks: List&lt;Any&gt;)Message posted to /api/chat.postMessage PostMessageResponse [jvm]data class PostMessageResponse@JvmOverloadsconstructor(ok: Boolean, error: String?, channel: String?, ts: String?, message: Message?)Message received from slack after posting a message SlashCommand [jvm]data class SlashCommand(command: String, text: String, response_url: String, trigger_id: String, user_id: String, user_name: String, channel_id: String, api_app_id: String)Payload received from Slack when user invokes slash command SlashInteractionResponse [jvm]data class SlashInteractionResponse@JvmOverloadsconstructor(response_type: String?, text: String)Response sent back to Slack while slash commands are being handled. Team [jvm]data class Team(id: String, domain: String, enterprise_id: String, enterprise_name: String) Text [jvm]data class Text@JvmOverloadsconstructor(type: String, text: String?, emoji: Boolean?)https://api.slack.com/reference/block-kit/composition-objects#text User [jvm]data class User(id: String, username: String, name: String, team_id: String) UserData [jvm]data class UserData@JvmOverloadsconstructor(always_active: Boolean?, color: String?, deleted: Boolean?, enterprise_user: EnterpriseUser?, has_2fa: Boolean?, id: String?, is_admin: Boolean?, is_app_user: Boolean?, is_bot: Boolean?, is_email_confirmed: Boolean?, is_invited_user: Boolean?, is_owner: Boolean?, is_primary_owner: Boolean?, is_restricted: Boolean?, is_stranger: Boolean?, is_ultra_restricted: Boolean?, locale: String?, name: String?, profile: UserProfile?, real_name: String?, team_id: String?, two_factor_type: String?, tz: String?, tz_label: String?, tz_offset: Int?, updated: Int?)A user object contains information about a Slack workspace user. The composition of user objects can vary greatly depending on the API being used, or the context of each Slack workspace. Data that has not been supplied may not be present at all, may be null, or may contain an empty string. UserProfile [jvm]data class UserProfile@JvmOverloadsconstructor(avatar_hash: String?, display_name: String?, display_name_normalized: String?, email: String?, fields: UserProfileFields?, first_name: String?, image_24: String?, image_32: String?, image_48: String?, image_72: String?, image_192: String?, image_512: String?, last_name: String?, phone: String?, pronouns: String?, real_name: String?, real_name_normalized: String?, skype: String?, start_date: String?, status_emoji: String?, status_expiration: Int?, status_text: String?, team: String?, title: String?)A user object contains information about a Slack workspace user. UserProfileFields [jvm]data class UserProfileFields@JvmOverloadsconstructor(display_name: String?, email: String?, first_name: String?, last_name: String?, phone: String?, pronouns: String?, real_name: String?, start_date: String?, title: String?)The following fields are the default fields of a user\u2019s workspace profile. Values [jvm]data class Values(text: String?)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/#functions","title":"Functions","text":"Name Summary buildMrkdwn [jvm]fun buildMrkdwn(builderAction: MrkdwnBuilder.() -&gt; Unit): String"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/#properties","title":"Properties","text":"Name Summary zwsp [jvm]val zwsp: StringInserting a zero-width space is enough to prevent Slack from attempting to link a string like :smile: as an emoji."},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/build-mrkdwn/","title":"buildMrkdwn - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/buildMrkdwn</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/build-mrkdwn/#buildmrkdwn","title":"buildMrkdwn","text":"<p>[jvm]\\ fun buildMrkdwn(builderAction: MrkdwnBuilder.() -&gt; Unit): String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/zwsp/","title":"zwsp - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/zwsp</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/zwsp/#zwsp","title":"zwsp","text":"<p>[jvm]\\ val zwsp: String</p> <p>Inserting a zero-width space is enough to prevent Slack from attempting to link a string like :smile: as an emoji.</p> <p>https://en.wikipedia.org/wiki/Zero-width_space</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/","title":"Actions - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Actions</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/#actions","title":"Actions","text":"<p>[jvm]\\ data class Actions(type: String, block_id: String, action_id: String, text: Text, value: String, action_ts: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/#properties","title":"Properties","text":"Name Summary action_id [jvm]val action_id: String action_ts [jvm]val action_ts: String block_id [jvm]val block_id: String text [jvm]val text: Text type [jvm]val type: String value [jvm]val value: String"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/-actions/","title":"Actions - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Actions/Actions</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/-actions/#actions","title":"Actions","text":"<p>[jvm]\\ fun Actions(type: String, block_id: String, action_id: String, text: Text, value: String, action_ts: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/action_id/","title":"action_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Actions/action_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/action_id/#action_id","title":"action_id","text":"<p>[jvm]\\ val action_id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/action_ts/","title":"action_ts - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Actions/action_ts</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/action_ts/#action_ts","title":"action_ts","text":"<p>[jvm]\\ val action_ts: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/block_id/","title":"block_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Actions/block_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/block_id/#block_id","title":"block_id","text":"<p>[jvm]\\ val block_id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/text/","title":"text - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Actions/text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/text/#text","title":"text","text":"<p>[jvm]\\ val text: Text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/type/","title":"type - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Actions/type</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/type/#type","title":"type","text":"<p>[jvm]\\ val type: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/value/","title":"value - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Actions/value</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-actions/value/#value","title":"value","text":"<p>[jvm]\\ val value: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/","title":"Block - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Block</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/#block","title":"Block","text":"<p>[jvm]\\ data class Block@JvmOverloadsconstructor(type: String, replace_original: Boolean?, block_id: String?, text: Text?, accessory: ButtonLinkAndValue?, elements: List&lt;ButtonLinkAndValue&gt;?)</p> <p>An envelope that contains text or elements.</p> <p>https://api.slack.com/reference/block-kit/blocks</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/#constructors","title":"Constructors","text":"Block [jvm]@JvmOverloadsfun Block(type: String, replace_original: Boolean? = null, block_id: String? = null, text: Text? = null, accessory: ButtonLinkAndValue? = null, elements: List&lt;ButtonLinkAndValue&gt;? = null)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/#properties","title":"Properties","text":"Name Summary accessory [jvm]val accessory: ButtonLinkAndValue? = null block_id [jvm]val block_id: String? = null elements [jvm]val elements: List&lt;ButtonLinkAndValue&gt;? = null replace_original [jvm]val replace_original: Boolean? = null text [jvm]val text: Text? = null type [jvm]val type: String"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/-block/","title":"Block - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Block/Block</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/-block/#block","title":"Block","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun Block(type: String, replace_original: Boolean? = null, block_id: String? = null, text: Text? = null, accessory: ButtonLinkAndValue? = null, elements: List&lt;ButtonLinkAndValue&gt;? = null)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/accessory/","title":"accessory - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Block/accessory</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/accessory/#accessory","title":"accessory","text":"<p>[jvm]\\ val accessory: ButtonLinkAndValue? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/block_id/","title":"block_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Block/block_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/block_id/#block_id","title":"block_id","text":"<p>[jvm]\\ val block_id: String? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/elements/","title":"elements - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Block/elements</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/elements/#elements","title":"elements","text":"<p>[jvm]\\ val elements: List&lt;ButtonLinkAndValue&gt;? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/replace_original/","title":"replace_original - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Block/replace_original</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/replace_original/#replace_original","title":"replace_original","text":"<p>[jvm]\\ val replace_original: Boolean? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/text/","title":"text - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Block/text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/text/#text","title":"text","text":"<p>[jvm]\\ val text: Text? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/type/","title":"type - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Block/type</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-block/type/#type","title":"type","text":"<p>[jvm]\\ val type: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/","title":"ButtonLinkAndValue - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonLinkAndValue</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/#buttonlinkandvalue","title":"ButtonLinkAndValue","text":"<p>[jvm]\\ data class ButtonLinkAndValue@JvmOverloadsconstructor(type: String, text: Text, value: String?, url: String?, action_id: String?)</p> <p>https://api.slack.com/reference/block-kit/block-elements#button</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/#constructors","title":"Constructors","text":"ButtonLinkAndValue [jvm]@JvmOverloadsfun ButtonLinkAndValue(type: String, text: Text, value: String? = null, url: String? = null, action_id: String? = null)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/#properties","title":"Properties","text":"Name Summary action_id [jvm]val action_id: String? = null text [jvm]val text: Text type [jvm]val type: String url [jvm]val url: String? = null value [jvm]val value: String? = null"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/-button-link-and-value/","title":"ButtonLinkAndValue - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonLinkAndValue/ButtonLinkAndValue</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/-button-link-and-value/#buttonlinkandvalue","title":"ButtonLinkAndValue","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun ButtonLinkAndValue(type: String, text: Text, value: String? = null, url: String? = null, action_id: String? = null)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/action_id/","title":"action_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonLinkAndValue/action_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/action_id/#action_id","title":"action_id","text":"<p>[jvm]\\ val action_id: String? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/text/","title":"text - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonLinkAndValue/text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/text/#text","title":"text","text":"<p>[jvm]\\ val text: Text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/type/","title":"type - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonLinkAndValue/type</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/type/#type","title":"type","text":"<p>[jvm]\\ val type: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/url/","title":"url - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonLinkAndValue/url</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/url/#url","title":"url","text":"<p>[jvm]\\ val url: String? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/value/","title":"value - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonLinkAndValue/value</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-link-and-value/value/#value","title":"value","text":"<p>[jvm]\\ val value: String? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/","title":"ButtonPress - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/#buttonpress","title":"ButtonPress","text":"<p>[jvm]\\ data class ButtonPress(type: String, user: User, api_app_id: String, token: String, container: Container, trigger_id: String, team: Team, enterprise: Id, is_enterprise_install: Boolean, channel: Id, message: Message, state: Values, response_url: String, actions: List&lt;Actions&gt;)</p> <p>Message received from Slack upon button press.</p> <p>https://api.slack.com/reference/interaction-payloads/block-actions</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/#constructors","title":"Constructors","text":"ButtonPress [jvm]fun ButtonPress(type: String, user: User, api_app_id: String, token: String, container: Container, trigger_id: String, team: Team, enterprise: Id, is_enterprise_install: Boolean, channel: Id, message: Message, state: Values, response_url: String, actions: List&lt;Actions&gt;)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/#properties","title":"Properties","text":"Name Summary actions [jvm]val actions: List&lt;Actions&gt; api_app_id [jvm]val api_app_id: String channel [jvm]val channel: Id container [jvm]val container: Container enterprise [jvm]val enterprise: Id is_enterprise_install [jvm]val is_enterprise_install: Boolean message [jvm]val message: Message response_url [jvm]val response_url: String state [jvm]val state: Values team [jvm]val team: Team token [jvm]val token: String trigger_id [jvm]val trigger_id: String type [jvm]val type: String user [jvm]val user: User"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/-button-press/","title":"ButtonPress - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/ButtonPress</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/-button-press/#buttonpress","title":"ButtonPress","text":"<p>[jvm]\\ fun ButtonPress(type: String, user: User, api_app_id: String, token: String, container: Container, trigger_id: String, team: Team, enterprise: Id, is_enterprise_install: Boolean, channel: Id, message: Message, state: Values, response_url: String, actions: List&lt;Actions&gt;)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/actions/","title":"actions - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/actions</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/actions/#actions","title":"actions","text":"<p>[jvm]\\ val actions: List&lt;Actions&gt;</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/api_app_id/","title":"api_app_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/api_app_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/api_app_id/#api_app_id","title":"api_app_id","text":"<p>[jvm]\\ val api_app_id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/channel/","title":"channel - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/channel</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/channel/#channel","title":"channel","text":"<p>[jvm]\\ val channel: Id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/container/","title":"container - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/container</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/container/#container","title":"container","text":"<p>[jvm]\\ val container: Container</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/enterprise/","title":"enterprise - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/enterprise</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/enterprise/#enterprise","title":"enterprise","text":"<p>[jvm]\\ val enterprise: Id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/is_enterprise_install/","title":"is_enterprise_install - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/is_enterprise_install</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/is_enterprise_install/#is_enterprise_install","title":"is_enterprise_install","text":"<p>[jvm]\\ val is_enterprise_install: Boolean</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/message/","title":"message - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/message</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/message/#message","title":"message","text":"<p>[jvm]\\ val message: Message</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/response_url/","title":"response_url - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/response_url</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/response_url/#response_url","title":"response_url","text":"<p>[jvm]\\ val response_url: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/state/","title":"state - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/state</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/state/#state","title":"state","text":"<p>[jvm]\\ val state: Values</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/team/","title":"team - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/team</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/team/#team","title":"team","text":"<p>[jvm]\\ val team: Team</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/token/","title":"token - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/token</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/token/#token","title":"token","text":"<p>[jvm]\\ val token: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/trigger_id/","title":"trigger_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/trigger_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/trigger_id/#trigger_id","title":"trigger_id","text":"<p>[jvm]\\ val trigger_id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/type/","title":"type - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/type</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/type/#type","title":"type","text":"<p>[jvm]\\ val type: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/user/","title":"user - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/ButtonPress/user</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-button-press/user/#user","title":"user","text":"<p>[jvm]\\ val user: User</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-container/","title":"Container - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Container</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-container/#container","title":"Container","text":"<p>[jvm]\\ data class Container(type: String, message_ts: String, channel_id: String, is_ephemeral: Boolean)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-container/#properties","title":"Properties","text":"Name Summary channel_id [jvm]val channel_id: String is_ephemeral [jvm]val is_ephemeral: Boolean message_ts [jvm]val message_ts: String type [jvm]val type: String"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-container/-container/","title":"Container - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Container/Container</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-container/-container/#container","title":"Container","text":"<p>[jvm]\\ fun Container(type: String, message_ts: String, channel_id: String, is_ephemeral: Boolean)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-container/channel_id/","title":"channel_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Container/channel_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-container/channel_id/#channel_id","title":"channel_id","text":"<p>[jvm]\\ val channel_id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-container/is_ephemeral/","title":"is_ephemeral - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Container/is_ephemeral</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-container/is_ephemeral/#is_ephemeral","title":"is_ephemeral","text":"<p>[jvm]\\ val is_ephemeral: Boolean</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-container/message_ts/","title":"message_ts - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Container/message_ts</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-container/message_ts/#message_ts","title":"message_ts","text":"<p>[jvm]\\ val message_ts: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-container/type/","title":"type - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Container/type</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-container/type/#type","title":"type","text":"<p>[jvm]\\ val type: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/","title":"EnterpriseUser - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/EnterpriseUser</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/#enterpriseuser","title":"EnterpriseUser","text":"<p>[jvm]\\ data class EnterpriseUser@JvmOverloadsconstructor(enterprise_id: String?, enterprise_name: String?, id: String?, is_admin: Boolean?, is_owner: Boolean?, teams: Array&lt;String&gt;?)</p> <p>An object containing info related to an Enterprise Grid user.</p> <p>https://api.slack.com/enterprise/grid</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/#constructors","title":"Constructors","text":"EnterpriseUser [jvm]@JvmOverloadsfun EnterpriseUser(enterprise_id: String? = null, enterprise_name: String? = null, id: String? = null, is_admin: Boolean? = null, is_owner: Boolean? = null, teams: Array&lt;String&gt;? = null)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/#properties","title":"Properties","text":"Name Summary enterprise_id [jvm]val enterprise_id: String? = nullA unique ID for the Enterprise Grid organization this user belongs to. enterprise_name [jvm]val enterprise_name: String? = nullA display name for the Enterprise Grid organization. id [jvm]val id: String? = nullThis user\u2019s ID - some Grid users have a kind of dual identity \u2014 a local, workspace-centric user ID as well as a Grid-wise user ID, called the Enterprise user ID. In most cases these IDs can be used interchangeably, but when it is provided, we strongly recommend using this Enterprise user id over the root level user id field. is_admin [jvm]val is_admin: Boolean? = nullIndicates whether the user is an Admin of the Enterprise Grid organization. is_owner [jvm]val is_owner: Boolean? = nullIndicates whether the user is an Owner of the Enterprise Grid organization. teams [jvm]val teams: Array&lt;String&gt;? = nullAn array of workspace IDs that are in the Enterprise Grid organization."},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/-enterprise-user/","title":"EnterpriseUser - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/EnterpriseUser/EnterpriseUser</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/-enterprise-user/#enterpriseuser","title":"EnterpriseUser","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun EnterpriseUser(enterprise_id: String? = null, enterprise_name: String? = null, id: String? = null, is_admin: Boolean? = null, is_owner: Boolean? = null, teams: Array&lt;String&gt;? = null)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/enterprise_id/","title":"enterprise_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/EnterpriseUser/enterprise_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/enterprise_id/#enterprise_id","title":"enterprise_id","text":"<p>[jvm]\\ val enterprise_id: String? = null</p> <p>A unique ID for the Enterprise Grid organization this user belongs to.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/enterprise_name/","title":"enterprise_name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/EnterpriseUser/enterprise_name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/enterprise_name/#enterprise_name","title":"enterprise_name","text":"<p>[jvm]\\ val enterprise_name: String? = null</p> <p>A display name for the Enterprise Grid organization.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/id/","title":"id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/EnterpriseUser/id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/id/#id","title":"id","text":"<p>[jvm]\\ val id: String? = null</p> <p>This user\u2019s ID - some Grid users have a kind of dual identity \u2014 a local, workspace-centric user ID as well as a Grid-wise user ID, called the Enterprise user ID. In most cases these IDs can be used interchangeably, but when it is provided, we strongly recommend using this Enterprise user id over the root level user id field.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/is_admin/","title":"is_admin - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/EnterpriseUser/is_admin</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/is_admin/#is_admin","title":"is_admin","text":"<p>[jvm]\\ val is_admin: Boolean? = null</p> <p>Indicates whether the user is an Admin of the Enterprise Grid organization.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/is_owner/","title":"is_owner - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/EnterpriseUser/is_owner</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/is_owner/#is_owner","title":"is_owner","text":"<p>[jvm]\\ val is_owner: Boolean? = null</p> <p>Indicates whether the user is an Owner of the Enterprise Grid organization.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/teams/","title":"teams - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/EnterpriseUser/teams</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-enterprise-user/teams/#teams","title":"teams","text":"<p>[jvm]\\ val teams: Array&lt;String&gt;? = null</p> <p>An array of workspace IDs that are in the Enterprise Grid organization.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-get-user-response/","title":"GetUserResponse - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/GetUserResponse</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-get-user-response/#getuserresponse","title":"GetUserResponse","text":"<p>[jvm]\\ data class GetUserResponse@JvmOverloadsconstructor(ok: Boolean, error: String?, user: UserData?)</p> <p>Message received from slack after posting a message</p> <p>https://api.slack.com/methods/chat.postMessage</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-get-user-response/#constructors","title":"Constructors","text":"GetUserResponse [jvm]@JvmOverloadsfun GetUserResponse(ok: Boolean, error: String? = null, user: UserData? = null)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-get-user-response/#properties","title":"Properties","text":"Name Summary error [jvm]val error: String? = null ok [jvm]val ok: Boolean user [jvm]val user: UserData? = null"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-get-user-response/-get-user-response/","title":"GetUserResponse - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/GetUserResponse/GetUserResponse</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-get-user-response/-get-user-response/#getuserresponse","title":"GetUserResponse","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun GetUserResponse(ok: Boolean, error: String? = null, user: UserData? = null)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-get-user-response/error/","title":"error - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/GetUserResponse/error</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-get-user-response/error/#error","title":"error","text":"<p>[jvm]\\ val error: String? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-get-user-response/ok/","title":"ok - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/GetUserResponse/ok</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-get-user-response/ok/#ok","title":"ok","text":"<p>[jvm]\\ val ok: Boolean</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-get-user-response/user/","title":"user - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/GetUserResponse/user</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-get-user-response/user/#user","title":"user","text":"<p>[jvm]\\ val user: UserData? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-id/","title":"Id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-id/#id","title":"Id","text":"<p>[jvm]\\ data class Id(id: String, name: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-id/#properties","title":"Properties","text":"Name Summary id [jvm]val id: String name [jvm]val name: String"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-id/-id/","title":"Id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Id/Id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-id/-id/#id","title":"Id","text":"<p>[jvm]\\ fun Id(id: String, name: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-id/id/","title":"id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Id/id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-id/id/#id","title":"id","text":"<p>[jvm]\\ val id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-id/name/","title":"name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Id/name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-id/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/","title":"Message - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Message</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/#message","title":"Message","text":"<p>[jvm]\\ data class Message(bot_id: String, type: String, text: String, user: String, ts: String, app_id: String, blocks: List&lt;Block&gt;, team: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/#properties","title":"Properties","text":"Name Summary app_id [jvm]val app_id: String blocks [jvm]val blocks: List&lt;Block&gt; bot_id [jvm]val bot_id: String team [jvm]val team: String text [jvm]val text: String ts [jvm]val ts: String type [jvm]val type: String user [jvm]val user: String"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/-message/","title":"Message - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Message/Message</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/-message/#message","title":"Message","text":"<p>[jvm]\\ fun Message(bot_id: String, type: String, text: String, user: String, ts: String, app_id: String, blocks: List&lt;Block&gt;, team: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/app_id/","title":"app_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Message/app_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/app_id/#app_id","title":"app_id","text":"<p>[jvm]\\ val app_id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/blocks/","title":"blocks - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Message/blocks</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/blocks/#blocks","title":"blocks","text":"<p>[jvm]\\ val blocks: List&lt;Block&gt;</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/bot_id/","title":"bot_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Message/bot_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/bot_id/#bot_id","title":"bot_id","text":"<p>[jvm]\\ val bot_id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/team/","title":"team - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Message/team</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/team/#team","title":"team","text":"<p>[jvm]\\ val team: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/text/","title":"text - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Message/text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/text/#text","title":"text","text":"<p>[jvm]\\ val text: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/ts/","title":"ts - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Message/ts</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/ts/#ts","title":"ts","text":"<p>[jvm]\\ val ts: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/type/","title":"type - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Message/type</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/type/#type","title":"type","text":"<p>[jvm]\\ val type: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/user/","title":"user - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Message/user</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-message/user/#user","title":"user","text":"<p>[jvm]\\ val user: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/","title":"MrkdwnBuilder - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/MrkdwnBuilder</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/#mrkdwnbuilder","title":"MrkdwnBuilder","text":"<p>[jvm]\\ class MrkdwnBuilder</p> <p>Mrkdwn is Slack\u2019s weird thing that isn\u2019t Markdown. This class attempts to implement proper escaping and formatting.</p> <p>SlackApi.postMessage and SlackApi.postConfirmation can both post JSON with markdown formatting. SlackJson.TextJson allows you to set the type as plain text or markdown.</p> <p>Note that the Mrkdwn docs aren\u2019t particularly helpful here.</p> <p>Note that this implementation is more conservative about encoding than strictly necessary. For example, it escapes things like the colon at the end of Notice:, even though colons only really need to be escaped when they signal an emoji (:smile:).</p> <p>https://api.slack.com/reference/surfaces/formatting#basics</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/#constructors","title":"Constructors","text":"MrkdwnBuilder [jvm]fun MrkdwnBuilder()"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/#functions","title":"Functions","text":"Name Summary append [jvm]fun append(s: String) appendBlockquotePrefix [jvm]fun appendBlockquotePrefix() appendLink [jvm]fun appendLink(url: String, label: String) build [jvm]fun build(): String"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/-mrkdwn-builder/","title":"MrkdwnBuilder - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/MrkdwnBuilder/MrkdwnBuilder</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/-mrkdwn-builder/#mrkdwnbuilder","title":"MrkdwnBuilder","text":"<p>[jvm]\\ fun MrkdwnBuilder()</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/append-blockquote-prefix/","title":"appendBlockquotePrefix - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/MrkdwnBuilder/appendBlockquotePrefix</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/append-blockquote-prefix/#appendblockquoteprefix","title":"appendBlockquotePrefix","text":"<p>[jvm]\\ fun appendBlockquotePrefix()</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/append-link/","title":"appendLink - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/MrkdwnBuilder/appendLink</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/append-link/#appendlink","title":"appendLink","text":"<p>[jvm]\\ fun appendLink(url: String, label: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/append/","title":"append - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/MrkdwnBuilder/append</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/append/#append","title":"append","text":"<p>[jvm]\\ fun append(s: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/build/","title":"build - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/MrkdwnBuilder/build</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-mrkdwn-builder/build/#build","title":"build","text":"<p>[jvm]\\ fun build(): String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-request/","title":"PostMessageRequest - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/PostMessageRequest</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-request/#postmessagerequest","title":"PostMessageRequest","text":"<p>[jvm]\\ data class PostMessageRequest@JvmOverloadsconstructor(channel: String, response_type: String?, blocks: List&lt;Any&gt;)</p> <p>Message posted to /api/chat.postMessage</p> <p>https://api.slack.com/methods/chat.postMessage</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-request/#constructors","title":"Constructors","text":"PostMessageRequest [jvm]@JvmOverloadsfun PostMessageRequest(channel: String, response_type: String? = \u201cin_channel\u201d, blocks: List&lt;Any&gt;)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-request/#properties","title":"Properties","text":"Name Summary blocks [jvm]val blocks: List&lt;Any&gt; channel [jvm]val channel: String response_type [jvm]val response_type: String?"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-request/-post-message-request/","title":"PostMessageRequest - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/PostMessageRequest/PostMessageRequest</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-request/-post-message-request/#postmessagerequest","title":"PostMessageRequest","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun PostMessageRequest(channel: String, response_type: String? = \u201cin_channel\u201d, blocks: List&lt;Any&gt;)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-request/blocks/","title":"blocks - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/PostMessageRequest/blocks</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-request/blocks/#blocks","title":"blocks","text":"<p>[jvm]\\ val blocks: List&lt;Any&gt;</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-request/channel/","title":"channel - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/PostMessageRequest/channel</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-request/channel/#channel","title":"channel","text":"<p>[jvm]\\ val channel: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-request/response_type/","title":"response_type - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/PostMessageRequest/response_type</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-request/response_type/#response_type","title":"response_type","text":"<p>[jvm]\\ val response_type: String?</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/","title":"PostMessageResponse - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/PostMessageResponse</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/#postmessageresponse","title":"PostMessageResponse","text":"<p>[jvm]\\ data class PostMessageResponse@JvmOverloadsconstructor(ok: Boolean, error: String?, channel: String?, ts: String?, message: Message?)</p> <p>Message received from slack after posting a message</p> <p>https://api.slack.com/methods/chat.postMessage</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/#constructors","title":"Constructors","text":"PostMessageResponse [jvm]@JvmOverloadsfun PostMessageResponse(ok: Boolean, error: String? = null, channel: String? = null, ts: String? = null, message: Message? = null)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/#properties","title":"Properties","text":"Name Summary channel [jvm]val channel: String? = null error [jvm]val error: String? = null message [jvm]val message: Message? = null ok [jvm]val ok: Boolean ts [jvm]val ts: String? = null"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/-post-message-response/","title":"PostMessageResponse - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/PostMessageResponse/PostMessageResponse</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/-post-message-response/#postmessageresponse","title":"PostMessageResponse","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun PostMessageResponse(ok: Boolean, error: String? = null, channel: String? = null, ts: String? = null, message: Message? = null)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/channel/","title":"channel - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/PostMessageResponse/channel</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/channel/#channel","title":"channel","text":"<p>[jvm]\\ val channel: String? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/error/","title":"error - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/PostMessageResponse/error</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/error/#error","title":"error","text":"<p>[jvm]\\ val error: String? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/message/","title":"message - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/PostMessageResponse/message</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/message/#message","title":"message","text":"<p>[jvm]\\ val message: Message? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/ok/","title":"ok - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/PostMessageResponse/ok</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/ok/#ok","title":"ok","text":"<p>[jvm]\\ val ok: Boolean</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/ts/","title":"ts - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/PostMessageResponse/ts</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-post-message-response/ts/#ts","title":"ts","text":"<p>[jvm]\\ val ts: String? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/","title":"SlashCommand - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashCommand</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/#slashcommand","title":"SlashCommand","text":"<p>[jvm]\\ data class SlashCommand(command: String, text: String, response_url: String, trigger_id: String, user_id: String, user_name: String, channel_id: String, api_app_id: String)</p> <p>Payload received from Slack when user invokes slash command</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/#constructors","title":"Constructors","text":"SlashCommand [jvm]fun SlashCommand(command: String, text: String, response_url: String, trigger_id: String, user_id: String, user_name: String, channel_id: String, api_app_id: String)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/#properties","title":"Properties","text":"Name Summary api_app_id [jvm]val api_app_id: String channel_id [jvm]val channel_id: String command [jvm]val command: String response_url [jvm]val response_url: String text [jvm]val text: String trigger_id [jvm]val trigger_id: String user_id [jvm]val user_id: String user_name [jvm]val user_name: String"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/-slash-command/","title":"SlashCommand - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashCommand/SlashCommand</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/-slash-command/#slashcommand","title":"SlashCommand","text":"<p>[jvm]\\ fun SlashCommand(command: String, text: String, response_url: String, trigger_id: String, user_id: String, user_name: String, channel_id: String, api_app_id: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/api_app_id/","title":"api_app_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashCommand/api_app_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/api_app_id/#api_app_id","title":"api_app_id","text":"<p>[jvm]\\ val api_app_id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/channel_id/","title":"channel_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashCommand/channel_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/channel_id/#channel_id","title":"channel_id","text":"<p>[jvm]\\ val channel_id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/command/","title":"command - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashCommand/command</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/command/#command","title":"command","text":"<p>[jvm]\\ val command: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/response_url/","title":"response_url - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashCommand/response_url</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/response_url/#response_url","title":"response_url","text":"<p>[jvm]\\ val response_url: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/text/","title":"text - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashCommand/text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/text/#text","title":"text","text":"<p>[jvm]\\ val text: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/trigger_id/","title":"trigger_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashCommand/trigger_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/trigger_id/#trigger_id","title":"trigger_id","text":"<p>[jvm]\\ val trigger_id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/user_id/","title":"user_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashCommand/user_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/user_id/#user_id","title":"user_id","text":"<p>[jvm]\\ val user_id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/user_name/","title":"user_name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashCommand/user_name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-command/user_name/#user_name","title":"user_name","text":"<p>[jvm]\\ val user_name: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-interaction-response/","title":"SlashInteractionResponse - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashInteractionResponse</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-interaction-response/#slashinteractionresponse","title":"SlashInteractionResponse","text":"<p>[jvm]\\ data class SlashInteractionResponse@JvmOverloadsconstructor(response_type: String?, text: String)</p> <p>Response sent back to Slack while slash commands are being handled.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-interaction-response/#constructors","title":"Constructors","text":"SlashInteractionResponse [jvm]@JvmOverloadsfun SlashInteractionResponse(response_type: String? = \u201cin_channel\u201d, text: String)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-interaction-response/#properties","title":"Properties","text":"Name Summary response_type [jvm]val response_type: String? text [jvm]val text: String"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-interaction-response/-slash-interaction-response/","title":"SlashInteractionResponse - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashInteractionResponse/SlashInteractionResponse</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-interaction-response/-slash-interaction-response/#slashinteractionresponse","title":"SlashInteractionResponse","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun SlashInteractionResponse(response_type: String? = \u201cin_channel\u201d, text: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-interaction-response/response_type/","title":"response_type - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashInteractionResponse/response_type</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-interaction-response/response_type/#response_type","title":"response_type","text":"<p>[jvm]\\ val response_type: String?</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-interaction-response/text/","title":"text - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/SlashInteractionResponse/text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-slash-interaction-response/text/#text","title":"text","text":"<p>[jvm]\\ val text: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-team/","title":"Team - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Team</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-team/#team","title":"Team","text":"<p>[jvm]\\ data class Team(id: String, domain: String, enterprise_id: String, enterprise_name: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-team/#properties","title":"Properties","text":"Name Summary domain [jvm]val domain: String enterprise_id [jvm]val enterprise_id: String enterprise_name [jvm]val enterprise_name: String id [jvm]val id: String"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-team/-team/","title":"Team - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Team/Team</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-team/-team/#team","title":"Team","text":"<p>[jvm]\\ fun Team(id: String, domain: String, enterprise_id: String, enterprise_name: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-team/domain/","title":"domain - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Team/domain</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-team/domain/#domain","title":"domain","text":"<p>[jvm]\\ val domain: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-team/enterprise_id/","title":"enterprise_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Team/enterprise_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-team/enterprise_id/#enterprise_id","title":"enterprise_id","text":"<p>[jvm]\\ val enterprise_id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-team/enterprise_name/","title":"enterprise_name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Team/enterprise_name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-team/enterprise_name/#enterprise_name","title":"enterprise_name","text":"<p>[jvm]\\ val enterprise_name: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-team/id/","title":"id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Team/id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-team/id/#id","title":"id","text":"<p>[jvm]\\ val id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-text/","title":"Text - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-text/#text","title":"Text","text":"<p>[jvm]\\ data class Text@JvmOverloadsconstructor(type: String, text: String?, emoji: Boolean?)</p> <p>https://api.slack.com/reference/block-kit/composition-objects#text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-text/#constructors","title":"Constructors","text":"Text [jvm]@JvmOverloadsfun Text(type: String, text: String? = null, emoji: Boolean? = null)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-text/#properties","title":"Properties","text":"Name Summary emoji [jvm]val emoji: Boolean? = nullThis must be null if type is \u201cmrkdwn\u201d. text [jvm]val text: String? = null type [jvm]val type: String"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-text/-text/","title":"Text - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Text/Text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-text/-text/#text","title":"Text","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun Text(type: String, text: String? = null, emoji: Boolean? = null)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-text/emoji/","title":"emoji - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Text/emoji</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-text/emoji/#emoji","title":"emoji","text":"<p>[jvm]\\ val emoji: Boolean? = null</p> <p>This must be null if type is \u201cmrkdwn\u201d.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-text/text/","title":"text - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Text/text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-text/text/#text","title":"text","text":"<p>[jvm]\\ val text: String? = null</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-text/type/","title":"type - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Text/type</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-text/type/#type","title":"type","text":"<p>[jvm]\\ val type: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user/","title":"User - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/User</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user/#user","title":"User","text":"<p>[jvm]\\ data class User(id: String, username: String, name: String, team_id: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user/#properties","title":"Properties","text":"Name Summary id [jvm]val id: String name [jvm]val name: String team_id [jvm]val team_id: String username [jvm]val username: String"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user/-user/","title":"User - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/User/User</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user/-user/#user","title":"User","text":"<p>[jvm]\\ fun User(id: String, username: String, name: String, team_id: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user/id/","title":"id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/User/id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user/id/#id","title":"id","text":"<p>[jvm]\\ val id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user/name/","title":"name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/User/name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user/team_id/","title":"team_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/User/team_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user/team_id/#team_id","title":"team_id","text":"<p>[jvm]\\ val team_id: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user/username/","title":"username - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/User/username</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user/username/#username","title":"username","text":"<p>[jvm]\\ val username: String</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/","title":"UserData - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/#userdata","title":"UserData","text":"<p>[jvm]\\ data class UserData@JvmOverloadsconstructor(always_active: Boolean?, color: String?, deleted: Boolean?, enterprise_user: EnterpriseUser?, has_2fa: Boolean?, id: String?, is_admin: Boolean?, is_app_user: Boolean?, is_bot: Boolean?, is_email_confirmed: Boolean?, is_invited_user: Boolean?, is_owner: Boolean?, is_primary_owner: Boolean?, is_restricted: Boolean?, is_stranger: Boolean?, is_ultra_restricted: Boolean?, locale: String?, name: String?, profile: UserProfile?, real_name: String?, team_id: String?, two_factor_type: String?, tz: String?, tz_label: String?, tz_offset: Int?, updated: Int?)</p> <p>A user object contains information about a Slack workspace user. The composition of user objects can vary greatly depending on the API being used, or the context of each Slack workspace. Data that has not been supplied may not be present at all, may be null, or may contain an empty string.</p> <p>https://api.slack.com/types/user</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/#constructors","title":"Constructors","text":"UserData [jvm]@JvmOverloadsfun UserData(always_active: Boolean? = null, color: String? = null, deleted: Boolean? = null, enterprise_user: EnterpriseUser? = null, has_2fa: Boolean? = null, id: String? = null, is_admin: Boolean? = null, is_app_user: Boolean? = null, is_bot: Boolean? = null, is_email_confirmed: Boolean? = null, is_invited_user: Boolean? = null, is_owner: Boolean? = null, is_primary_owner: Boolean? = null, is_restricted: Boolean? = null, is_stranger: Boolean? = null, is_ultra_restricted: Boolean? = null, locale: String? = null, name: String? = null, profile: UserProfile? = null, real_name: String? = null, team_id: String? = null, two_factor_type: String? = null, tz: String? = null, tz_label: String? = null, tz_offset: Int? = null, updated: Int? = null)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/#properties","title":"Properties","text":"Name Summary always_active [jvm]val always_active: Boolean? = nullIndicates that a bot user is set to be constantly active in presence status. color [jvm]val color: String? = nullUsed in some clients to display a special username color. deleted [jvm]val deleted: Boolean? = nullThis user has been deactivated when the value of this field is true. Otherwise, the value is false, or the field may not appear at all. enterprise_user [jvm]val enterprise_user: EnterpriseUser? = nullAn object containing info related to an Enterprise Grid user. has_2fa [jvm]val has_2fa: Boolean? = nullDescribes whether two-factor authentication is enabled for this user. Only visible if the user executing the call is an admin. id [jvm]val id: String? = nullIdentifier for this workspace user. It is unique to the workspace containing the user. Use this field together with team_id as a unique key when storing related data or when specifying the user in API requests. We recommend considering the format of the string to be an opaque value, and not to rely on a particular structure. is_admin [jvm]val is_admin: Boolean? = nullIndicates whether the user is an Admin of the current workspace. is_app_user [jvm]val is_app_user: Boolean? = nullIndicates whether the user is an authorized user of the calling app. is_bot [jvm]val is_bot: Boolean? = nullIndicates whether the user is actually a bot user. Bleep bloop. Note that Slackbot is special, so is_bot will be false for it. is_email_confirmed [jvm]val is_email_confirmed: Boolean? = nullIndicates whether the user email has been confirmed. is_invited_user [jvm]val is_invited_user: Boolean? = nullOnly present (and always true) when a user has been invited but has not yet signed in. Once the user signs in, this field is no longer present. is_owner [jvm]val is_owner: Boolean? = nullIndicates whether the user is an Owner of the current workspace. is_primary_owner [jvm]val is_primary_owner: Boolean? = nullIndicates whether the user is the Primary Owner of the current workspace. is_restricted [jvm]val is_restricted: Boolean? = nullIndicates whether the user is a guest user. Use in combination with the is_ultra_restricted field to check if the user is a single-channel guest user. is_stranger [jvm]val is_stranger: Boolean? = nullIf true, this user belongs to a different workspace than the one associated with your app\u2019s token, and isn\u2019t in any shared channels visible to your app. If false (or this field is not present), the user is either from the same workspace as associated with your app\u2019s token, or they are from a different workspace, but are in a shared channel that your app has access to. Read our shared channels docs for more detail. is_ultra_restricted [jvm]val is_ultra_restricted: Boolean? = nullIndicates whether the user is a single-channel guest. locale [jvm]val locale: String? = nullContains an IETF language code that represents this user\u2019s chosen display language for Slack clients. Useful for localizing your apps. name [jvm]val name: String? = nullDon\u2019t use this. It once indicated the preferred username for a user, but that behavior has fundamentally changed since. profile [jvm]val profile: UserProfile? = nullThe profile object contains the default fields of a user\u2019s workspace profile. A user\u2019s custom profile fields may be discovered using users.profile.get. real_name [jvm]val real_name: String? = nullThe user\u2019s first and last name. Updating this field will update first_name and last_name. If only one name is provided, the value of last_name will be cleared. team_id [jvm]val team_id: String? = nullThe ID of the team the user is on. two_factor_type [jvm]val two_factor_type: String? = nullIndicates the type of two-factor authentication in use. Only present if has_2fa is true. The value will be either app or sms. tz [jvm]val tz: String? = nullA human-readable string for the geographic timezone-related region this user has specified in their account. tz_label [jvm]val tz_label: String? = nullDescribes the commonly used name of the tz timezone. tz_offset [jvm]val tz_offset: Int? = nullIndicates the number of seconds to offset UTC time by for this user\u2019s tz. Changes silently if changed due to daylight savings. updated [jvm]val updated: Int? = nullA Unix timestamp indicating when the user object was last updated."},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/-user-data/","title":"UserData - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/UserData</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/-user-data/#userdata","title":"UserData","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun UserData(always_active: Boolean? = null, color: String? = null, deleted: Boolean? = null, enterprise_user: EnterpriseUser? = null, has_2fa: Boolean? = null, id: String? = null, is_admin: Boolean? = null, is_app_user: Boolean? = null, is_bot: Boolean? = null, is_email_confirmed: Boolean? = null, is_invited_user: Boolean? = null, is_owner: Boolean? = null, is_primary_owner: Boolean? = null, is_restricted: Boolean? = null, is_stranger: Boolean? = null, is_ultra_restricted: Boolean? = null, locale: String? = null, name: String? = null, profile: UserProfile? = null, real_name: String? = null, team_id: String? = null, two_factor_type: String? = null, tz: String? = null, tz_label: String? = null, tz_offset: Int? = null, updated: Int? = null)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/always_active/","title":"always_active - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/always_active</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/always_active/#always_active","title":"always_active","text":"<p>[jvm]\\ val always_active: Boolean? = null</p> <p>Indicates that a bot user is set to be constantly active in presence status.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/color/","title":"color - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/color</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/color/#color","title":"color","text":"<p>[jvm]\\ val color: String? = null</p> <p>Used in some clients to display a special username color.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/deleted/","title":"deleted - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/deleted</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/deleted/#deleted","title":"deleted","text":"<p>[jvm]\\ val deleted: Boolean? = null</p> <p>This user has been deactivated when the value of this field is true. Otherwise, the value is false, or the field may not appear at all.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/enterprise_user/","title":"enterprise_user - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/enterprise_user</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/enterprise_user/#enterprise_user","title":"enterprise_user","text":"<p>[jvm]\\ val enterprise_user: EnterpriseUser? = null</p> <p>An object containing info related to an Enterprise Grid user.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/has_2fa/","title":"has_2fa - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/has_2fa</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/has_2fa/#has_2fa","title":"has_2fa","text":"<p>[jvm]\\ val has_2fa: Boolean? = null</p> <p>Describes whether two-factor authentication is enabled for this user. Only visible if the user executing the call is an admin.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/id/","title":"id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/id/#id","title":"id","text":"<p>[jvm]\\ val id: String? = null</p> <p>Identifier for this workspace user. It is unique to the workspace containing the user. Use this field together with team_id as a unique key when storing related data or when specifying the user in API requests. We recommend considering the format of the string to be an opaque value, and not to rely on a particular structure.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_admin/","title":"is_admin - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/is_admin</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_admin/#is_admin","title":"is_admin","text":"<p>[jvm]\\ val is_admin: Boolean? = null</p> <p>Indicates whether the user is an Admin of the current workspace.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_app_user/","title":"is_app_user - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/is_app_user</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_app_user/#is_app_user","title":"is_app_user","text":"<p>[jvm]\\ val is_app_user: Boolean? = null</p> <p>Indicates whether the user is an authorized user of the calling app.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_bot/","title":"is_bot - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/is_bot</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_bot/#is_bot","title":"is_bot","text":"<p>[jvm]\\ val is_bot: Boolean? = null</p> <p>Indicates whether the user is actually a bot user. Bleep bloop. Note that Slackbot is special, so is_bot will be false for it.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_email_confirmed/","title":"is_email_confirmed - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/is_email_confirmed</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_email_confirmed/#is_email_confirmed","title":"is_email_confirmed","text":"<p>[jvm]\\ val is_email_confirmed: Boolean? = null</p> <p>Indicates whether the user email has been confirmed.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_invited_user/","title":"is_invited_user - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/is_invited_user</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_invited_user/#is_invited_user","title":"is_invited_user","text":"<p>[jvm]\\ val is_invited_user: Boolean? = null</p> <p>Only present (and always true) when a user has been invited but has not yet signed in. Once the user signs in, this field is no longer present.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_owner/","title":"is_owner - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/is_owner</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_owner/#is_owner","title":"is_owner","text":"<p>[jvm]\\ val is_owner: Boolean? = null</p> <p>Indicates whether the user is an Owner of the current workspace.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_primary_owner/","title":"is_primary_owner - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/is_primary_owner</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_primary_owner/#is_primary_owner","title":"is_primary_owner","text":"<p>[jvm]\\ val is_primary_owner: Boolean? = null</p> <p>Indicates whether the user is the Primary Owner of the current workspace.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_restricted/","title":"is_restricted - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/is_restricted</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_restricted/#is_restricted","title":"is_restricted","text":"<p>[jvm]\\ val is_restricted: Boolean? = null</p> <p>Indicates whether the user is a guest user. Use in combination with the is_ultra_restricted field to check if the user is a single-channel guest user.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_stranger/","title":"is_stranger - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/is_stranger</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_stranger/#is_stranger","title":"is_stranger","text":"<p>[jvm]\\ val is_stranger: Boolean? = null</p> <p>If true, this user belongs to a different workspace than the one associated with your app\u2019s token, and isn\u2019t in any shared channels visible to your app. If false (or this field is not present), the user is either from the same workspace as associated with your app\u2019s token, or they are from a different workspace, but are in a shared channel that your app has access to. Read our shared channels docs for more detail.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_ultra_restricted/","title":"is_ultra_restricted - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/is_ultra_restricted</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/is_ultra_restricted/#is_ultra_restricted","title":"is_ultra_restricted","text":"<p>[jvm]\\ val is_ultra_restricted: Boolean? = null</p> <p>Indicates whether the user is a single-channel guest.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/locale/","title":"locale - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/locale</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/locale/#locale","title":"locale","text":"<p>[jvm]\\ val locale: String? = null</p> <p>Contains an IETF language code that represents this user\u2019s chosen display language for Slack clients. Useful for localizing your apps.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/name/","title":"name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/name/#name","title":"name","text":"<p>[jvm]\\ val name: String? = null</p> <p>Don\u2019t use this. It once indicated the preferred username for a user, but that behavior has fundamentally changed since.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/profile/","title":"profile - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/profile</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/profile/#profile","title":"profile","text":"<p>[jvm]\\ val profile: UserProfile? = null</p> <p>The profile object contains the default fields of a user\u2019s workspace profile. A user\u2019s custom profile fields may be discovered using users.profile.get.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/real_name/","title":"real_name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/real_name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/real_name/#real_name","title":"real_name","text":"<p>[jvm]\\ val real_name: String? = null</p> <p>The user\u2019s first and last name. Updating this field will update first_name and last_name. If only one name is provided, the value of last_name will be cleared.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/team_id/","title":"team_id - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/team_id</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/team_id/#team_id","title":"team_id","text":"<p>[jvm]\\ val team_id: String? = null</p> <p>The ID of the team the user is on.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/two_factor_type/","title":"two_factor_type - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/two_factor_type</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/two_factor_type/#two_factor_type","title":"two_factor_type","text":"<p>[jvm]\\ val two_factor_type: String? = null</p> <p>Indicates the type of two-factor authentication in use. Only present if has_2fa is true. The value will be either app or sms.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/tz/","title":"tz - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/tz</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/tz/#tz","title":"tz","text":"<p>[jvm]\\ val tz: String? = null</p> <p>A human-readable string for the geographic timezone-related region this user has specified in their account.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/tz_label/","title":"tz_label - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/tz_label</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/tz_label/#tz_label","title":"tz_label","text":"<p>[jvm]\\ val tz_label: String? = null</p> <p>Describes the commonly used name of the tz timezone.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/tz_offset/","title":"tz_offset - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/tz_offset</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/tz_offset/#tz_offset","title":"tz_offset","text":"<p>[jvm]\\ val tz_offset: Int? = null</p> <p>Indicates the number of seconds to offset UTC time by for this user\u2019s tz. Changes silently if changed due to daylight savings.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/updated/","title":"updated - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserData/updated</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-data/updated/#updated","title":"updated","text":"<p>[jvm]\\ val updated: Int? = null</p> <p>A Unix timestamp indicating when the user object was last updated.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/","title":"UserProfile - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/#userprofile","title":"UserProfile","text":"<p>[jvm]\\ data class UserProfile@JvmOverloadsconstructor(avatar_hash: String?, display_name: String?, display_name_normalized: String?, email: String?, fields: UserProfileFields?, first_name: String?, image_24: String?, image_32: String?, image_48: String?, image_72: String?, image_192: String?, image_512: String?, last_name: String?, phone: String?, pronouns: String?, real_name: String?, real_name_normalized: String?, skype: String?, start_date: String?, status_emoji: String?, status_expiration: Int?, status_text: String?, team: String?, title: String?)</p> <p>A user object contains information about a Slack workspace user.</p> <p>https://api.slack.com/types/user</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/#constructors","title":"Constructors","text":"UserProfile [jvm]@JvmOverloadsfun UserProfile(avatar_hash: String? = null, display_name: String? = null, display_name_normalized: String? = null, email: String? = null, fields: UserProfileFields? = null, first_name: String? = null, image_24: String? = null, image_32: String? = null, image_48: String? = null, image_72: String? = null, image_192: String? = null, image_512: String? = null, last_name: String? = null, phone: String? = null, pronouns: String? = null, real_name: String? = null, real_name_normalized: String? = null, skype: String? = null, start_date: String? = null, status_emoji: String? = null, status_expiration: Int? = null, status_text: String? = null, team: String? = null, title: String? = null)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/#properties","title":"Properties","text":"Name Summary avatar_hash [jvm]val avatar_hash: String? = nullThe hash identifier for the user\u2019s avatar image. display_name [jvm]val display_name: String? = nullThe display name the user has chosen to identify themselves by in their workspace profile. Do not use this field as a unique identifier for a user, as it may change at any time. Instead, use id and team_id in concert. display_name_normalized [jvm]val display_name_normalized: String? = nullThe display_name field, but with any non-Latin characters filtered out. email [jvm]val email: String? = nullA valid email address for the user. It cannot have spaces and must have an @ and a domain. It cannot be in use by another member of the same team. Changing a user\u2019s email address will send an email to both the old and new addresses and post a slackbot to the user informing them of the change. This field can only be changed by admins for users on paid teams. fields [jvm]val fields: UserProfileFields? = nullAll the custom profile fields for the user. first_name [jvm]val first_name: String? = nullThe user\u2019s first name. The name \u201cslackbot\u201d cannot be used. Updating first_name will update the first name within real_name. image_192 [jvm]val image_192: String? = nullURL pointing to a 192x192 pixel image representing the user\u2019s profile picture. image_24 [jvm]val image_24: String? = nullURL pointing to a 24x24 pixel image representing the user\u2019s profile picture. image_32 [jvm]val image_32: String? = nullURL pointing to a 32x32 pixel image representing the user\u2019s profile picture. image_48 [jvm]val image_48: String? = nullURL pointing to a 48x48 pixel image representing the user\u2019s profile picture. image_512 [jvm]val image_512: String? = nullURL pointing to a 512x512 pixel image representing the user\u2019s profile picture. image_72 [jvm]val image_72: String? = nullURL pointing to a 72x72 pixel image representing the user\u2019s profile picture. last_name [jvm]val last_name: String? = nullThe user\u2019s last name. The name \u201cslackbot\u201d cannot be used. Updating last_name will update the second name within real_name. phone [jvm]val phone: String? = nullThe user\u2019s phone number, in any format. pronouns [jvm]val pronouns: String? = nullThe pronouns the user prefers to be addressed by. real_name [jvm]val real_name: String? = nullThe user\u2019s first and last name. Updating this field will update first_name and last_name. If only one name is provided, the value of last_name will be cleared. real_name_normalized [jvm]val real_name_normalized: String? = nullThe real_name field, but with any non-Latin characters filtered out. skype [jvm]val skype: String? = nullA shadow from a bygone era. It will always be an empty string and cannot be set otherwise. start_date [jvm]val start_date: String? = nullThe date the person joined the organization. Only available if Slack Atlas is enabled. status_emoji [jvm]val status_emoji: String? = nullThe displayed emoji that is enabled for the Slack team, such as \u201c:train:\u201d. status_expiration [jvm]val status_expiration: Int? = nullThe Unix timestamp of when the status will expire. Providing 0 or omitting this field results in a custom status that will not expire. status_text [jvm]val status_text: String? = nullThe displayed text of up to 100 characters. We strongly encourage brevity. team [jvm]val team: String? = nullThe ID of the team the user is on. title [jvm]val title: String? = nullThe user\u2019s title."},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/-user-profile/","title":"UserProfile - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/UserProfile</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/-user-profile/#userprofile","title":"UserProfile","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun UserProfile(avatar_hash: String? = null, display_name: String? = null, display_name_normalized: String? = null, email: String? = null, fields: UserProfileFields? = null, first_name: String? = null, image_24: String? = null, image_32: String? = null, image_48: String? = null, image_72: String? = null, image_192: String? = null, image_512: String? = null, last_name: String? = null, phone: String? = null, pronouns: String? = null, real_name: String? = null, real_name_normalized: String? = null, skype: String? = null, start_date: String? = null, status_emoji: String? = null, status_expiration: Int? = null, status_text: String? = null, team: String? = null, title: String? = null)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/avatar_hash/","title":"avatar_hash - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/avatar_hash</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/avatar_hash/#avatar_hash","title":"avatar_hash","text":"<p>[jvm]\\ val avatar_hash: String? = null</p> <p>The hash identifier for the user\u2019s avatar image.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/display_name/","title":"display_name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/display_name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/display_name/#display_name","title":"display_name","text":"<p>[jvm]\\ val display_name: String? = null</p> <p>The display name the user has chosen to identify themselves by in their workspace profile. Do not use this field as a unique identifier for a user, as it may change at any time. Instead, use id and team_id in concert.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/display_name_normalized/","title":"display_name_normalized - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/display_name_normalized</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/display_name_normalized/#display_name_normalized","title":"display_name_normalized","text":"<p>[jvm]\\ val display_name_normalized: String? = null</p> <p>The display_name field, but with any non-Latin characters filtered out.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/email/","title":"email - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/email</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/email/#email","title":"email","text":"<p>[jvm]\\ val email: String? = null</p> <p>A valid email address for the user. It cannot have spaces and must have an @ and a domain. It cannot be in use by another member of the same team. Changing a user\u2019s email address will send an email to both the old and new addresses and post a slackbot to the user informing them of the change. This field can only be changed by admins for users on paid teams.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/fields/","title":"fields - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/fields</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/fields/#fields","title":"fields","text":"<p>[jvm]\\ val fields: UserProfileFields? = null</p> <p>All the custom profile fields for the user.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/first_name/","title":"first_name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/first_name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/first_name/#first_name","title":"first_name","text":"<p>[jvm]\\ val first_name: String? = null</p> <p>The user\u2019s first name. The name \u201cslackbot\u201d cannot be used. Updating first_name will update the first name within real_name.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/image_192/","title":"image_192 - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/image_192</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/image_192/#image_192","title":"image_192","text":"<p>[jvm]\\ val image_192: String? = null</p> <p>URL pointing to a 192x192 pixel image representing the user\u2019s profile picture.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/image_24/","title":"image_24 - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/image_24</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/image_24/#image_24","title":"image_24","text":"<p>[jvm]\\ val image_24: String? = null</p> <p>URL pointing to a 24x24 pixel image representing the user\u2019s profile picture.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/image_32/","title":"image_32 - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/image_32</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/image_32/#image_32","title":"image_32","text":"<p>[jvm]\\ val image_32: String? = null</p> <p>URL pointing to a 32x32 pixel image representing the user\u2019s profile picture.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/image_48/","title":"image_48 - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/image_48</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/image_48/#image_48","title":"image_48","text":"<p>[jvm]\\ val image_48: String? = null</p> <p>URL pointing to a 48x48 pixel image representing the user\u2019s profile picture.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/image_512/","title":"image_512 - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/image_512</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/image_512/#image_512","title":"image_512","text":"<p>[jvm]\\ val image_512: String? = null</p> <p>URL pointing to a 512x512 pixel image representing the user\u2019s profile picture.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/image_72/","title":"image_72 - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/image_72</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/image_72/#image_72","title":"image_72","text":"<p>[jvm]\\ val image_72: String? = null</p> <p>URL pointing to a 72x72 pixel image representing the user\u2019s profile picture.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/last_name/","title":"last_name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/last_name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/last_name/#last_name","title":"last_name","text":"<p>[jvm]\\ val last_name: String? = null</p> <p>The user\u2019s last name. The name \u201cslackbot\u201d cannot be used. Updating last_name will update the second name within real_name.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/phone/","title":"phone - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/phone</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/phone/#phone","title":"phone","text":"<p>[jvm]\\ val phone: String? = null</p> <p>The user\u2019s phone number, in any format.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/pronouns/","title":"pronouns - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/pronouns</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/pronouns/#pronouns","title":"pronouns","text":"<p>[jvm]\\ val pronouns: String? = null</p> <p>The pronouns the user prefers to be addressed by.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/real_name/","title":"real_name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/real_name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/real_name/#real_name","title":"real_name","text":"<p>[jvm]\\ val real_name: String? = null</p> <p>The user\u2019s first and last name. Updating this field will update first_name and last_name. If only one name is provided, the value of last_name will be cleared.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/real_name_normalized/","title":"real_name_normalized - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/real_name_normalized</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/real_name_normalized/#real_name_normalized","title":"real_name_normalized","text":"<p>[jvm]\\ val real_name_normalized: String? = null</p> <p>The real_name field, but with any non-Latin characters filtered out.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/skype/","title":"skype - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/skype</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/skype/#skype","title":"skype","text":"<p>[jvm]\\ val skype: String? = null</p> <p>A shadow from a bygone era. It will always be an empty string and cannot be set otherwise.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/start_date/","title":"start_date - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/start_date</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/start_date/#start_date","title":"start_date","text":"<p>[jvm]\\ val start_date: String? = null</p> <p>The date the person joined the organization. Only available if Slack Atlas is enabled.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/status_emoji/","title":"status_emoji - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/status_emoji</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/status_emoji/#status_emoji","title":"status_emoji","text":"<p>[jvm]\\ val status_emoji: String? = null</p> <p>The displayed emoji that is enabled for the Slack team, such as \u201c:train:\u201d.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/status_expiration/","title":"status_expiration - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/status_expiration</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/status_expiration/#status_expiration","title":"status_expiration","text":"<p>[jvm]\\ val status_expiration: Int? = null</p> <p>The Unix timestamp of when the status will expire. Providing 0 or omitting this field results in a custom status that will not expire.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/status_text/","title":"status_text - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/status_text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/status_text/#status_text","title":"status_text","text":"<p>[jvm]\\ val status_text: String? = null</p> <p>The displayed text of up to 100 characters. We strongly encourage brevity.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/team/","title":"team - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/team</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/team/#team","title":"team","text":"<p>[jvm]\\ val team: String? = null</p> <p>The ID of the team the user is on.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/title/","title":"title - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfile/title</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile/title/#title","title":"title","text":"<p>[jvm]\\ val title: String? = null</p> <p>The user\u2019s title.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/","title":"UserProfileFields - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfileFields</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/#userprofilefields","title":"UserProfileFields","text":"<p>[jvm]\\ data class UserProfileFields@JvmOverloadsconstructor(display_name: String?, email: String?, first_name: String?, last_name: String?, phone: String?, pronouns: String?, real_name: String?, start_date: String?, title: String?)</p> <p>The following fields are the default fields of a user\u2019s workspace profile.</p> <p>https://api.slack.com/types/user#profile</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/#constructors","title":"Constructors","text":"UserProfileFields [jvm]@JvmOverloadsfun UserProfileFields(display_name: String?, email: String?, first_name: String?, last_name: String?, phone: String?, pronouns: String?, real_name: String?, start_date: String?, title: String?)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/#properties","title":"Properties","text":"Name Summary display_name [jvm]val display_name: String?The display name the user has chosen to identify themselves by in their workspace profile. email [jvm]val email: String?A valid email address. It cannot have spaces, or be in use by another member of the same team. It must have an @ and a domain. Changing a user\u2019s email address will send an email to both the old and new addresses, and also post a slackbot message to the user informing them of the change. You cannot update your own email using this method. This field can only be changed by admins for users on paid teams. first_name [jvm]val first_name: String?The user\u2019s first name. The name \u201cslackbot\u201d cannot be used. Updating first_name will update the first name within real_name. last_name [jvm]val last_name: String?The user\u2019s last name. The name \u201cslackbot\u201d cannot be used. Updating last_name will update the second name within real_name. phone [jvm]val phone: String?The user\u2019s phone number, in any format. pronouns [jvm]val pronouns: String?The user\u2019s pronouns. real_name [jvm]val real_name: String?The user\u2019s first and last name. Updating this field will update first_name and last_name. If only one name is provided, the value of last_name will be cleared. start_date [jvm]val start_date: String?The date the person joined the organization. Only available if Slack Atlas is enabled. title [jvm]val title: String?The user\u2019s title."},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/-user-profile-fields/","title":"UserProfileFields - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfileFields/UserProfileFields</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/-user-profile-fields/#userprofilefields","title":"UserProfileFields","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun UserProfileFields(display_name: String?, email: String?, first_name: String?, last_name: String?, phone: String?, pronouns: String?, real_name: String?, start_date: String?, title: String?)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/display_name/","title":"display_name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfileFields/display_name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/display_name/#display_name","title":"display_name","text":"<p>[jvm]\\ val display_name: String?</p> <p>The display name the user has chosen to identify themselves by in their workspace profile.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/email/","title":"email - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfileFields/email</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/email/#email","title":"email","text":"<p>[jvm]\\ val email: String?</p> <p>A valid email address. It cannot have spaces, or be in use by another member of the same team. It must have an @ and a domain. Changing a user\u2019s email address will send an email to both the old and new addresses, and also post a slackbot message to the user informing them of the change. You cannot update your own email using this method. This field can only be changed by admins for users on paid teams.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/first_name/","title":"first_name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfileFields/first_name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/first_name/#first_name","title":"first_name","text":"<p>[jvm]\\ val first_name: String?</p> <p>The user\u2019s first name. The name \u201cslackbot\u201d cannot be used. Updating first_name will update the first name within real_name.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/last_name/","title":"last_name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfileFields/last_name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/last_name/#last_name","title":"last_name","text":"<p>[jvm]\\ val last_name: String?</p> <p>The user\u2019s last name. The name \u201cslackbot\u201d cannot be used. Updating last_name will update the second name within real_name.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/phone/","title":"phone - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfileFields/phone</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/phone/#phone","title":"phone","text":"<p>[jvm]\\ val phone: String?</p> <p>The user\u2019s phone number, in any format.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/pronouns/","title":"pronouns - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfileFields/pronouns</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/pronouns/#pronouns","title":"pronouns","text":"<p>[jvm]\\ val pronouns: String?</p> <p>The user\u2019s pronouns.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/real_name/","title":"real_name - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfileFields/real_name</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/real_name/#real_name","title":"real_name","text":"<p>[jvm]\\ val real_name: String?</p> <p>The user\u2019s first and last name. Updating this field will update first_name and last_name. If only one name is provided, the value of last_name will be cleared.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/start_date/","title":"start_date - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfileFields/start_date</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/start_date/#start_date","title":"start_date","text":"<p>[jvm]\\ val start_date: String?</p> <p>The date the person joined the organization. Only available if Slack Atlas is enabled.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/title/","title":"title - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/UserProfileFields/title</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-user-profile-fields/title/#title","title":"title","text":"<p>[jvm]\\ val title: String?</p> <p>The user\u2019s title.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-values/","title":"Values - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Values</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-values/#values","title":"Values","text":"<p>[jvm]\\ data class Values(text: String?)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-values/#properties","title":"Properties","text":"Name Summary text [jvm]val text: String?"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-values/-values/","title":"Values - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Values/Values</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-values/-values/#values","title":"Values","text":"<p>[jvm]\\ fun Values(text: String?)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-values/text/","title":"text - Misk","text":"<p>//misk-slack/misk.slack.webapi.helpers/Values/text</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.helpers/-values/text/#text","title":"text","text":"<p>[jvm]\\ val text: String?</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/","title":"Package misk.slack.webapi.interceptors - Misk","text":"<p>//misk-slack/misk.slack.webapi.interceptors</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/#package-miskslackwebapiinterceptors","title":"Package misk.slack.webapi.interceptors","text":""},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/#types","title":"Types","text":"Name Summary SlackClientInterceptor [jvm]@Singletonclass SlackClientInterceptor@Injectconstructor(config: SlackConfig) : Interceptor SlackSignedRequestsInterceptor [jvm]@Singletonclass SlackSignedRequestsInterceptor@Injectconstructor(clock: Clock, slackConfig: SlackConfig) : NetworkInterceptor SlackSignedRequestsOnly [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION, AnnotationTarget.CLASS])annotation class SlackSignedRequestsOnly"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-client-interceptor/","title":"SlackClientInterceptor - Misk","text":"<p>//misk-slack/misk.slack.webapi.interceptors/SlackClientInterceptor</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-client-interceptor/#slackclientinterceptor","title":"SlackClientInterceptor","text":"<p>[jvm]\\ @Singleton</p> <p>class SlackClientInterceptor@Injectconstructor(config: SlackConfig) : Interceptor</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-client-interceptor/#functions","title":"Functions","text":"Name Summary intercept [jvm]open override fun intercept(chain: Interceptor.Chain): ResponseThe SlackClientInterceptor intercepts outgoing requests to Slack and chains the bearer token to the request. This token is provided by the Slack API when a Slack app is originally created. https://api.slack.com/web#url-encoded-bodies"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-client-interceptor/#properties","title":"Properties","text":"Name Summary config [jvm]val config: SlackConfig"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-client-interceptor/-slack-client-interceptor/","title":"SlackClientInterceptor - Misk","text":"<p>//misk-slack/misk.slack.webapi.interceptors/SlackClientInterceptor/SlackClientInterceptor</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-client-interceptor/-slack-client-interceptor/#slackclientinterceptor","title":"SlackClientInterceptor","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun SlackClientInterceptor(config: SlackConfig)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-client-interceptor/config/","title":"config - Misk","text":"<p>//misk-slack/misk.slack.webapi.interceptors/SlackClientInterceptor/config</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-client-interceptor/config/#config","title":"config","text":"<p>[jvm]\\ val config: SlackConfig</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-client-interceptor/intercept/","title":"intercept - Misk","text":"<p>//misk-slack/misk.slack.webapi.interceptors/SlackClientInterceptor/intercept</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-client-interceptor/intercept/#intercept","title":"intercept","text":"<p>[jvm]\\ open override fun intercept(chain: Interceptor.Chain): Response</p> <p>The SlackClientInterceptor intercepts outgoing requests to Slack and chains the bearer token to the request. This token is provided by the Slack API when a Slack app is originally created. https://api.slack.com/web#url-encoded-bodies</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/","title":"SlackSignedRequestsInterceptor - Misk","text":"<p>//misk-slack/misk.slack.webapi.interceptors/SlackSignedRequestsInterceptor</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/#slacksignedrequestsinterceptor","title":"SlackSignedRequestsInterceptor","text":"<p>[jvm]\\ @Singleton</p> <p>class SlackSignedRequestsInterceptor@Injectconstructor(clock: Clock, slackConfig: SlackConfig) : NetworkInterceptor</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/#types","title":"Types","text":"Name Summary Factory [jvm]@Singletonclass Factory@Injectconstructor(slackSignedRequestsInterceptor: SlackSignedRequestsInterceptor) : NetworkInterceptor.Factory"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/#functions","title":"Functions","text":"Name Summary intercept [jvm]open override fun intercept(chain: NetworkChain)The SlackSignedRequestsInterceptor verifies that the incoming request is authorized by using the signing secret provided from Slack and cross-checking it against slack\u2019s incoming header with a signature https://api.slack.com/authentication/verifying-requests-from-slack"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/-slack-signed-requests-interceptor/","title":"SlackSignedRequestsInterceptor - Misk","text":"<p>//misk-slack/misk.slack.webapi.interceptors/SlackSignedRequestsInterceptor/SlackSignedRequestsInterceptor</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/-slack-signed-requests-interceptor/#slacksignedrequestsinterceptor","title":"SlackSignedRequestsInterceptor","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun SlackSignedRequestsInterceptor(clock: Clock, slackConfig: SlackConfig)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/intercept/","title":"intercept - Misk","text":"<p>//misk-slack/misk.slack.webapi.interceptors/SlackSignedRequestsInterceptor/intercept</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/intercept/#intercept","title":"intercept","text":"<p>[jvm]\\ open override fun intercept(chain: NetworkChain)</p> <p>The SlackSignedRequestsInterceptor verifies that the incoming request is authorized by using the signing secret provided from Slack and cross-checking it against slack\u2019s incoming header with a signature https://api.slack.com/authentication/verifying-requests-from-slack</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/-factory/","title":"Factory - Misk","text":"<p>//misk-slack/misk.slack.webapi.interceptors/SlackSignedRequestsInterceptor/Factory</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/-factory/#factory","title":"Factory","text":"<p>[jvm]\\ @Singleton</p> <p>class Factory@Injectconstructor(slackSignedRequestsInterceptor: SlackSignedRequestsInterceptor) : NetworkInterceptor.Factory</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/-factory/#functions","title":"Functions","text":"Name Summary create [jvm]open override fun create(action: Action): NetworkInterceptor?"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/-factory/-factory/","title":"Factory - Misk","text":"<p>//misk-slack/misk.slack.webapi.interceptors/SlackSignedRequestsInterceptor/Factory/Factory</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/-factory/-factory/#factory","title":"Factory","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun Factory(slackSignedRequestsInterceptor: SlackSignedRequestsInterceptor)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/-factory/create/","title":"create - Misk","text":"<p>//misk-slack/misk.slack.webapi.interceptors/SlackSignedRequestsInterceptor/Factory/create</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-interceptor/-factory/create/#create","title":"create","text":"<p>[jvm]\\ open override fun create(action: Action): NetworkInterceptor?</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-only/","title":"SlackSignedRequestsOnly - Misk","text":"<p>//misk-slack/misk.slack.webapi.interceptors/SlackSignedRequestsOnly</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-only/#slacksignedrequestsonly","title":"SlackSignedRequestsOnly","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION, AnnotationTarget.CLASS])</p> <p>annotation class SlackSignedRequestsOnly</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-only/-slack-signed-requests-only/","title":"SlackSignedRequestsOnly - Misk","text":"<p>//misk-slack/misk.slack.webapi.interceptors/SlackSignedRequestsOnly/SlackSignedRequestsOnly</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.interceptors/-slack-signed-requests-only/-slack-signed-requests-only/#slacksignedrequestsonly","title":"SlackSignedRequestsOnly","text":"<p>[jvm]\\ fun SlackSignedRequestsOnly()</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/","title":"Package misk.slack.webapi.slashcommands - Misk","text":"<p>//misk-slack/misk.slack.webapi.slashcommands</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/#package-miskslackwebapislashcommands","title":"Package misk.slack.webapi.slashcommands","text":""},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/#types","title":"Types","text":"Name Summary SlashCommandHandler [jvm]abstract class SlashCommandHandler(slackApi: SlackApi)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/-slash-command-handler/","title":"SlashCommandHandler - Misk","text":"<p>//misk-slack/misk.slack.webapi.slashcommands/SlashCommandHandler</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/-slash-command-handler/#slashcommandhandler","title":"SlashCommandHandler","text":"<p>[jvm]\\ abstract class SlashCommandHandler(slackApi: SlackApi)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/-slash-command-handler/#functions","title":"Functions","text":"Name Summary handle [jvm]abstract fun handle(slashCommandJson: SlashCommand): BooleanBusiness logic to handle the slash command sent from the user https://api.slack.com/interactivity/slash-commands Returns true if slashCommandJson was handled. sendSlackConfirmation [jvm]open fun sendSlackConfirmation(channelId: String, text: String, responseUrl: String)"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/-slash-command-handler/#properties","title":"Properties","text":"Name Summary slackApi [jvm]open val slackApi: SlackApi"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/-slash-command-handler/-slash-command-handler/","title":"SlashCommandHandler - Misk","text":"<p>//misk-slack/misk.slack.webapi.slashcommands/SlashCommandHandler/SlashCommandHandler</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/-slash-command-handler/-slash-command-handler/#slashcommandhandler","title":"SlashCommandHandler","text":"<p>[jvm]\\ fun SlashCommandHandler(slackApi: SlackApi)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/-slash-command-handler/handle/","title":"handle - Misk","text":"<p>//misk-slack/misk.slack.webapi.slashcommands/SlashCommandHandler/handle</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/-slash-command-handler/handle/#handle","title":"handle","text":"<p>[jvm]\\ abstract fun handle(slashCommandJson: SlashCommand): Boolean</p> <p>Business logic to handle the slash command sent from the user https://api.slack.com/interactivity/slash-commands Returns true if slashCommandJson was handled.</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/-slash-command-handler/send-slack-confirmation/","title":"sendSlackConfirmation - Misk","text":"<p>//misk-slack/misk.slack.webapi.slashcommands/SlashCommandHandler/sendSlackConfirmation</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/-slash-command-handler/send-slack-confirmation/#sendslackconfirmation","title":"sendSlackConfirmation","text":"<p>[jvm]\\ open fun sendSlackConfirmation(channelId: String, text: String, responseUrl: String)</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/-slash-command-handler/slack-api/","title":"slackApi - Misk","text":"<p>//misk-slack/misk.slack.webapi.slashcommands/SlashCommandHandler/slackApi</p>"},{"location":"0.x/misk-slack/misk-slack/misk.slack.webapi.slashcommands/-slash-command-handler/slack-api/#slackapi","title":"slackApi","text":"<p>[jvm]\\ open val slackApi: SlackApi</p>"},{"location":"0.x/misk-tailwind/","title":"misk-tailwind - Misk","text":"<p>//misk-tailwind</p>"},{"location":"0.x/misk-tailwind/#misk-tailwind","title":"misk-tailwind","text":""},{"location":"0.x/misk-tailwind/#packages","title":"Packages","text":"Name misk.tailwind misk.tailwind.icons misk.tailwind.pages"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/","title":"Package misk.tailwind - Misk","text":"<p>//misk-tailwind/misk.tailwind</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/#package-misktailwind","title":"Package misk.tailwind","text":""},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/#types","title":"Types","text":"Name Summary Link [jvm]data class Link@JvmOverloadsconstructor(label: String, href: String, style: Style?, isSelected: Boolean, isPageNavigation: Boolean, dataTurbo: Boolean?, openInNewTab: Boolean, rawHtml: String?)Defines a link (such as for ) with configuration including for styles and Hotwire Turbo handling. Style [jvm]interface Style"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/#functions","title":"Functions","text":"Name Summary TailwindHtmlLayout [jvm]fun TagConsumer&lt;&gt;.TailwindHtmlLayout(appRoot: String, title: String, playCdn: Boolean, appCssPath: String? = null, headBlock: TagConsumer&lt;&gt;.() -&gt; Unit = {}, bodyBlock: TagConsumer&lt;*&gt;.() -&gt; Unit)"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-tailwind-html-layout/","title":"TailwindHtmlLayout - Misk","text":"<p>//misk-tailwind/misk.tailwind/TailwindHtmlLayout</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-tailwind-html-layout/#tailwindhtmllayout","title":"TailwindHtmlLayout","text":"<p>[jvm]\\ fun TagConsumer&lt;&gt;.TailwindHtmlLayout(appRoot: String, title: String, playCdn: Boolean, appCssPath: String? = null, headBlock: TagConsumer&lt;&gt;.() -&gt; Unit = {}, bodyBlock: TagConsumer&lt;*&gt;.() -&gt; Unit)</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/","title":"Link - Misk","text":"<p>//misk-tailwind/misk.tailwind/Link</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/#link","title":"Link","text":"<p>[jvm]\\ data class Link@JvmOverloadsconstructor(label: String, href: String, style: Style?, isSelected: Boolean, isPageNavigation: Boolean, dataTurbo: Boolean?, openInNewTab: Boolean, rawHtml: String?)</p> <p>Defines a link (such as for ) with configuration including for styles and Hotwire Turbo handling.</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/#constructors","title":"Constructors","text":"Link [jvm]@JvmOverloadsfun Link(label: String, href: String, style: Style? = null, isSelected: Boolean = false, isPageNavigation: Boolean = false, dataTurbo: Boolean? = true, openInNewTab: Boolean = false, rawHtml: String? = null)"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/#properties","title":"Properties","text":"Name Summary dataTurbo [jvm]val dataTurbo: Boolean? = truenull: default true: preload false: disabled href [jvm]val href: String isPageNavigation [jvm]val isPageNavigation: Boolean = falseThis forces page navigation vs within Turbo Frame navigation by adding a target=\u201d_top\u201d attribute. isSelected [jvm]val isSelected: Boolean = false label [jvm]val label: String openInNewTab [jvm]val openInNewTab: Boolean = false rawHtml [jvm]val rawHtml: String? = null style [jvm]val style: Style? = null"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/-link/","title":"Link - Misk","text":"<p>//misk-tailwind/misk.tailwind/Link/Link</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/-link/#link","title":"Link","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun Link(label: String, href: String, style: Style? = null, isSelected: Boolean = false, isPageNavigation: Boolean = false, dataTurbo: Boolean? = true, openInNewTab: Boolean = false, rawHtml: String? = null)</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/data-turbo/","title":"dataTurbo - Misk","text":"<p>//misk-tailwind/misk.tailwind/Link/dataTurbo</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/data-turbo/#dataturbo","title":"dataTurbo","text":"<p>[jvm]\\ val dataTurbo: Boolean? = true</p> <p>null: default true: preload false: disabled</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/href/","title":"href - Misk","text":"<p>//misk-tailwind/misk.tailwind/Link/href</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/href/#href","title":"href","text":"<p>[jvm]\\ val href: String</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/is-page-navigation/","title":"isPageNavigation - Misk","text":"<p>//misk-tailwind/misk.tailwind/Link/isPageNavigation</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/is-page-navigation/#ispagenavigation","title":"isPageNavigation","text":"<p>[jvm]\\ val isPageNavigation: Boolean = false</p> <p>This forces page navigation vs within Turbo Frame navigation by adding a target=\u201d_top\u201d attribute.</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/is-selected/","title":"isSelected - Misk","text":"<p>//misk-tailwind/misk.tailwind/Link/isSelected</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/is-selected/#isselected","title":"isSelected","text":"<p>[jvm]\\ val isSelected: Boolean = false</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/label/","title":"label - Misk","text":"<p>//misk-tailwind/misk.tailwind/Link/label</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/label/#label","title":"label","text":"<p>[jvm]\\ val label: String</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/open-in-new-tab/","title":"openInNewTab - Misk","text":"<p>//misk-tailwind/misk.tailwind/Link/openInNewTab</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/open-in-new-tab/#openinnewtab","title":"openInNewTab","text":"<p>[jvm]\\ val openInNewTab: Boolean = false</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/raw-html/","title":"rawHtml - Misk","text":"<p>//misk-tailwind/misk.tailwind/Link/rawHtml</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/raw-html/#rawhtml","title":"rawHtml","text":"<p>[jvm]\\ val rawHtml: String? = null</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/style/","title":"style - Misk","text":"<p>//misk-tailwind/misk.tailwind/Link/style</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-link/style/#style","title":"style","text":"<p>[jvm]\\ val style: Style? = null</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-style/","title":"Style - Misk","text":"<p>//misk-tailwind/misk.tailwind/Style</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-style/#style","title":"Style","text":"<p>[jvm]\\ interface Style</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-style/#properties","title":"Properties","text":"Name Summary classes [jvm]abstract val classes: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-style/classes/","title":"classes - Misk","text":"<p>//misk-tailwind/misk.tailwind/Style/classes</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind/-style/classes/#classes","title":"classes","text":"<p>[jvm]\\ abstract val classes: String</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/","title":"Package misk.tailwind.icons - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/#package-misktailwindicons","title":"Package misk.tailwind.icons","text":""},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/#types","title":"Types","text":"Name Summary HeroiconProps [jvm]data class HeroiconProps@JvmOverloadsconstructor(icon: Heroicons, modifierClass: String?, spanClass: String?) Heroicons [jvm]enum Heroicons : Enum&lt;Heroicons&gt; Tailwind Heroicons Kotlin Bindings https://heroicons.com/"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/#functions","title":"Functions","text":"Name Summary heroicon [jvm]fun TagConsumer&lt;*&gt;.heroicon(icon: Heroicons, modifierClass: String? = null, spanClass: String? = null)kotlinx.html component to use the above Heroicons enum to inline SVG icons."},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/heroicon/","title":"heroicon - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/heroicon</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/heroicon/#heroicon","title":"heroicon","text":"<p>[jvm]\\ fun TagConsumer&lt;*&gt;.heroicon(icon: Heroicons, modifierClass: String? = null, spanClass: String? = null)</p> <p>kotlinx.html component to use the above Heroicons enum to inline SVG icons.</p> <p>div {\\   heroicon(Heroicons.MINI_CHEVRON_DOWN)\\   heroicon(Heroicons.MINI_CHEVRON_DOWN, \u201ctext-gray-400 group-hover:text-gray-500\u201d)\\ }</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/heroicon/#parameters","title":"Parameters","text":"<p>jvm</p> modifierClass override of the icon\u2019s defaultModifierClass. For example if icon should     have a different color, boldness\u2026etc then a modifierClass can be provided which overrides     the icon\u2019s defaultModifierClass."},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicon-props/","title":"HeroiconProps - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/HeroiconProps</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicon-props/#heroiconprops","title":"HeroiconProps","text":"<p>[jvm]\\ data class HeroiconProps@JvmOverloadsconstructor(icon: Heroicons, modifierClass: String?, spanClass: String?)</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicon-props/#properties","title":"Properties","text":"Name Summary icon [jvm]val icon: Heroicons modifierClass [jvm]val modifierClass: String? = null spanClass [jvm]val spanClass: String? = null"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicon-props/-heroicon-props/","title":"HeroiconProps - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/HeroiconProps/HeroiconProps</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicon-props/-heroicon-props/#heroiconprops","title":"HeroiconProps","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun HeroiconProps(icon: Heroicons, modifierClass: String? = null, spanClass: String? = null)</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicon-props/icon/","title":"icon - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/HeroiconProps/icon</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicon-props/icon/#icon","title":"icon","text":"<p>[jvm]\\ val icon: Heroicons</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicon-props/modifier-class/","title":"modifierClass - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/HeroiconProps/modifierClass</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicon-props/modifier-class/#modifierclass","title":"modifierClass","text":"<p>[jvm]\\ val modifierClass: String? = null</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicon-props/span-class/","title":"spanClass - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/HeroiconProps/spanClass</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicon-props/span-class/#spanclass","title":"spanClass","text":"<p>[jvm]\\ val spanClass: String? = null</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/","title":"Heroicons - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/#heroicons","title":"Heroicons","text":"<p>[jvm]\\ enum Heroicons : Enum&lt;Heroicons&gt; </p> <p>Tailwind Heroicons Kotlin Bindings https://heroicons.com/</p> <p>Add any new icons as they are used.</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/#entries","title":"Entries","text":"MINI_ARROW_LONG_RIGHT [jvm]MINI_ARROW_LONG_RIGHT(\u201cmini/arrow-long-right\u201d, \u201cml-3 h-5 w-5\u201d, \u201ctext-gray-400\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d viewBox=\u201d0 0 20 20\u201d fill=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;         &lt;path fill-rule=\u201devenodd\u201d d=\u201dM2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z\u201d clip-rule=\u201devenodd\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) MINI_ARROW_LONG_LEFT [jvm]MINI_ARROW_LONG_LEFT(\u201cmini/arrow-long-left\u201d, \u201cmr-3 h-5 w-5\u201d, \u201ctext-gray-400\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d viewBox=\u201d0 0 20 20\u201d fill=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;         &lt;path fill-rule=\u201devenodd\u201d d=\u201dM18 10a.75.75 0 01-.75.75H4.66l2.1 1.95a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 111.02 1.1l-2.1 1.95h12.59A.75.75 0 0118 10z\u201d clip-rule=\u201devenodd\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) MINI_CHEVRON_DOWN [jvm]MINI_CHEVRON_DOWN(\u201cmini/chevron-down\u201d, \u201ch-5 w-5 flex-shrink-0\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d viewBox=\u201d0 0 20 20\u201d fill=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;         &lt;path fill-rule=\u201devenodd\u201d d=\u201dM5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\u201d clip-rule=\u201devenodd\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) MINI_CHEVRON_UP [jvm]MINI_CHEVRON_UP(\u201cmini/chevron-up\u201d, \u201ch-5 w-5 flex-shrink-0\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d viewBox=\u201d0 0 20 20\u201d fill=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;         &lt;path fill-rule=\u201devenodd\u201d d=\u201dM14.77 12.79a.75.75 0 01-1.06-.02L10 8.832 6.29 12.77a.75.75 0 11-1.08-1.04l4.25-4.5a.75.75 0 011.08 0l4.25 4.5a.75.75 0 01-.02 1.06z\u201d clip-rule=\u201devenodd\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) MINI_FUNNEL [jvm]MINI_FUNNEL(\u201cmini/funnel\u201d, \u201cmr-2 h-5 w-5 flex-none\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d aria-hidden=\u201dtrue\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d viewBox=\u201d0 0 20 20\u201d fill=\u201dcurrentColor\u201d&gt;          &lt;path fill-rule=\u201devenodd\u201d d=\u201dM2.628 1.601C5.028 1.206 7.49 1 10 1s4.973.206 7.372.601a.75.75 0 01.628.74v2.288a2.25 2.25 0 01-.659 1.59l-4.682 4.683a2.25 2.25 0 00-.659 1.59v3.037c0 .684-.31 1.33-.844 1.757l-1.937 1.55A.75.75 0 018 18.25v-5.757a2.25 2.25 0 00-.659-1.591L2.659 6.22A2.25 2.25 0 012 4.629V2.34a.75.75 0 01.628-.74z\u201d clip-rule=\u201devenodd\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) MAGNIFYING_GLASS [jvm]MAGNIFYING_GLASS(\u201cmagnifying-glass\u201d, \u201ch-5 w-5\u201d, \u201ctext-gray-400\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;         &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) OUTLINE_BARS_3_CENTER_LEFT [jvm]OUTLINE_BARS_3_CENTER_LEFT(\u201coutline/bars-3-center-left\u201d, \u201ch-6 w-6\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;         &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM3.75 6.75h16.5M3.75 12H12m-8.25 5.25h16.5\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) BELL_ALERT [jvm]BELL_ALERT(\u201cbell-alert\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0M3.124 7.5A8.969 8.969 0 015.292 3m13.416 0a8.969 8.969 0 012.168 4.5\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) DOCUMENT_MAGNIFYING_GLASS [jvm]DOCUMENT_MAGNIFYING_GLASS(\u201cdocument-magnifying-glass\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m5.231 13.481L15 17.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v16.5c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9zm3.75 11.625a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) QUEUE_LIST [jvm]QUEUE_LIST(\u201cqueue-list\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 010 3.75H5.625a1.875 1.875 0 010-3.75z\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) MINI_CHEVRON_UP_DOWN [jvm]MINI_CHEVRON_UP_DOWN(\u201cmini/chevron-up-down\u201d, \u201ch-5 w-5 flex-shrink-0\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d viewBox=\u201d0 0 20 20\u201d fill=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;          &lt;path fill-rule=\u201devenodd\u201d d=\u201dM10 3a.75.75 0 01.55.24l3.25 3.5a.75.75 0 11-1.1 1.02L10 4.852 7.3 7.76a.75.75 0 01-1.1-1.02l3.25-3.5A.75.75 0 0110 3zm-3.76 9.2a.75.75 0 011.06.04l2.7 2.908 2.7-2.908a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0l-3.25-3.5a.75.75 0 01.04-1.06z\u201d clip-rule=\u201devenodd\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) OUTLINE_DOCUMENT_MAGNIFYING_GLASS [jvm]OUTLINE_DOCUMENT_MAGNIFYING_GLASS(\u201coutline/document-magnifying-glass\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0M3.124 7.5A8.969 8.969 0 015.292 3m13.416 0a8.969 8.969 0 012.168 4.5\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) OUTLINE_CLOCK [jvm]OUTLINE_CLOCK(\u201coutline/clock\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m5.231 13.481L15 17.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v16.5c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9zm3.75 11.625a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) OUTLINE_BARS_4 [jvm]OUTLINE_BARS_4(\u201coutline/bars-4\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-400 group-hover:text-gray-500 \u201c, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 010 3.75H5.625a1.875 1.875 0 010-3.75z\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) OUTLINE_HOME [jvm]OUTLINE_HOME(\u201coutline/home\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     }) OUTLINE_XMARK [jvm]OUTLINE_XMARK(\u201coutline/x-mark\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\u201d /&gt;       &lt;/svg&gt;       \u201c\u201d\u201c.trimIndent()     })"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/default-modifier-class/","title":"defaultModifierClass - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/defaultModifierClass</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/default-modifier-class/#defaultmodifierclass","title":"defaultModifierClass","text":"<p>[jvm]\\ val defaultModifierClass: String</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/id/","title":"id - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/id</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/id/#id","title":"id","text":"<p>[jvm]\\ val id: String</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/raw-html/","title":"rawHtml - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/rawHtml</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/raw-html/#rawhtml","title":"rawHtml","text":"<p>[jvm]\\ val rawHtml: (String) -&gt; String</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/svg-class/","title":"svgClass - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/svgClass</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/svg-class/#svgclass","title":"svgClass","text":"<p>[jvm]\\ val svgClass: String</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-b-e-l-l_-a-l-e-r-t/","title":"BELL_ALERT - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/BELL_ALERT</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-b-e-l-l_-a-l-e-r-t/#bell_alert","title":"BELL_ALERT","text":"<p>[jvm]\\ BELL_ALERT(\u201cbell-alert\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0M3.124 7.5A8.969 8.969 0 015.292 3m13.416 0a8.969 8.969 0 012.168 4.5\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-b-e-l-l_-a-l-e-r-t/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-d-o-c-u-m-e-n-t_-m-a-g-n-i-f-y-i-n-g_-g-l-a-s-s/","title":"DOCUMENT_MAGNIFYING_GLASS - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/DOCUMENT_MAGNIFYING_GLASS</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-d-o-c-u-m-e-n-t_-m-a-g-n-i-f-y-i-n-g_-g-l-a-s-s/#document_magnifying_glass","title":"DOCUMENT_MAGNIFYING_GLASS","text":"<p>[jvm]\\ DOCUMENT_MAGNIFYING_GLASS(\u201cdocument-magnifying-glass\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m5.231 13.481L15 17.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v16.5c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9zm3.75 11.625a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-d-o-c-u-m-e-n-t_-m-a-g-n-i-f-y-i-n-g_-g-l-a-s-s/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-a-g-n-i-f-y-i-n-g_-g-l-a-s-s/","title":"MAGNIFYING_GLASS - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/MAGNIFYING_GLASS</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-a-g-n-i-f-y-i-n-g_-g-l-a-s-s/#magnifying_glass","title":"MAGNIFYING_GLASS","text":"<p>[jvm]\\ MAGNIFYING_GLASS(\u201cmagnifying-glass\u201d, \u201ch-5 w-5\u201d, \u201ctext-gray-400\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;         &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-a-g-n-i-f-y-i-n-g_-g-l-a-s-s/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-a-r-r-o-w_-l-o-n-g_-l-e-f-t/","title":"MINI_ARROW_LONG_LEFT - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/MINI_ARROW_LONG_LEFT</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-a-r-r-o-w_-l-o-n-g_-l-e-f-t/#mini_arrow_long_left","title":"MINI_ARROW_LONG_LEFT","text":"<p>[jvm]\\ MINI_ARROW_LONG_LEFT(\u201cmini/arrow-long-left\u201d, \u201cmr-3 h-5 w-5\u201d, \u201ctext-gray-400\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d viewBox=\u201d0 0 20 20\u201d fill=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;         &lt;path fill-rule=\u201devenodd\u201d d=\u201dM18 10a.75.75 0 01-.75.75H4.66l2.1 1.95a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 111.02 1.1l-2.1 1.95h12.59A.75.75 0 0118 10z\u201d clip-rule=\u201devenodd\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-a-r-r-o-w_-l-o-n-g_-l-e-f-t/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-a-r-r-o-w_-l-o-n-g_-r-i-g-h-t/","title":"MINI_ARROW_LONG_RIGHT - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/MINI_ARROW_LONG_RIGHT</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-a-r-r-o-w_-l-o-n-g_-r-i-g-h-t/#mini_arrow_long_right","title":"MINI_ARROW_LONG_RIGHT","text":"<p>[jvm]\\ MINI_ARROW_LONG_RIGHT(\u201cmini/arrow-long-right\u201d, \u201cml-3 h-5 w-5\u201d, \u201ctext-gray-400\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d viewBox=\u201d0 0 20 20\u201d fill=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;         &lt;path fill-rule=\u201devenodd\u201d d=\u201dM2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z\u201d clip-rule=\u201devenodd\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-a-r-r-o-w_-l-o-n-g_-r-i-g-h-t/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-c-h-e-v-r-o-n_-d-o-w-n/","title":"MINI_CHEVRON_DOWN - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/MINI_CHEVRON_DOWN</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-c-h-e-v-r-o-n_-d-o-w-n/#mini_chevron_down","title":"MINI_CHEVRON_DOWN","text":"<p>[jvm]\\ MINI_CHEVRON_DOWN(\u201cmini/chevron-down\u201d, \u201ch-5 w-5 flex-shrink-0\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d viewBox=\u201d0 0 20 20\u201d fill=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;         &lt;path fill-rule=\u201devenodd\u201d d=\u201dM5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\u201d clip-rule=\u201devenodd\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-c-h-e-v-r-o-n_-d-o-w-n/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-c-h-e-v-r-o-n_-u-p/","title":"MINI_CHEVRON_UP - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/MINI_CHEVRON_UP</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-c-h-e-v-r-o-n_-u-p/#mini_chevron_up","title":"MINI_CHEVRON_UP","text":"<p>[jvm]\\ MINI_CHEVRON_UP(\u201cmini/chevron-up\u201d, \u201ch-5 w-5 flex-shrink-0\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d viewBox=\u201d0 0 20 20\u201d fill=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;         &lt;path fill-rule=\u201devenodd\u201d d=\u201dM14.77 12.79a.75.75 0 01-1.06-.02L10 8.832 6.29 12.77a.75.75 0 11-1.08-1.04l4.25-4.5a.75.75 0 011.08 0l4.25 4.5a.75.75 0 01-.02 1.06z\u201d clip-rule=\u201devenodd\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-c-h-e-v-r-o-n_-u-p/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-c-h-e-v-r-o-n_-u-p_-d-o-w-n/","title":"MINI_CHEVRON_UP_DOWN - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/MINI_CHEVRON_UP_DOWN</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-c-h-e-v-r-o-n_-u-p_-d-o-w-n/#mini_chevron_up_down","title":"MINI_CHEVRON_UP_DOWN","text":"<p>[jvm]\\ MINI_CHEVRON_UP_DOWN(\u201cmini/chevron-up-down\u201d, \u201ch-5 w-5 flex-shrink-0\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d viewBox=\u201d0 0 20 20\u201d fill=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;          &lt;path fill-rule=\u201devenodd\u201d d=\u201dM10 3a.75.75 0 01.55.24l3.25 3.5a.75.75 0 11-1.1 1.02L10 4.852 7.3 7.76a.75.75 0 01-1.1-1.02l3.25-3.5A.75.75 0 0110 3zm-3.76 9.2a.75.75 0 011.06.04l2.7 2.908 2.7-2.908a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0l-3.25-3.5a.75.75 0 01.04-1.06z\u201d clip-rule=\u201devenodd\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-c-h-e-v-r-o-n_-u-p_-d-o-w-n/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-f-u-n-n-e-l/","title":"MINI_FUNNEL - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/MINI_FUNNEL</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-f-u-n-n-e-l/#mini_funnel","title":"MINI_FUNNEL","text":"<p>[jvm]\\ MINI_FUNNEL(\u201cmini/funnel\u201d, \u201cmr-2 h-5 w-5 flex-none\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d aria-hidden=\u201dtrue\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d viewBox=\u201d0 0 20 20\u201d fill=\u201dcurrentColor\u201d&gt;          &lt;path fill-rule=\u201devenodd\u201d d=\u201dM2.628 1.601C5.028 1.206 7.49 1 10 1s4.973.206 7.372.601a.75.75 0 01.628.74v2.288a2.25 2.25 0 01-.659 1.59l-4.682 4.683a2.25 2.25 0 00-.659 1.59v3.037c0 .684-.31 1.33-.844 1.757l-1.937 1.55A.75.75 0 018 18.25v-5.757a2.25 2.25 0 00-.659-1.591L2.659 6.22A2.25 2.25 0 012 4.629V2.34a.75.75 0 01.628-.74z\u201d clip-rule=\u201devenodd\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-m-i-n-i_-f-u-n-n-e-l/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-b-a-r-s_3_-c-e-n-t-e-r_-l-e-f-t/","title":"OUTLINE_BARS_3_CENTER_LEFT - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/OUTLINE_BARS_3_CENTER_LEFT</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-b-a-r-s_3_-c-e-n-t-e-r_-l-e-f-t/#outline_bars_3_center_left","title":"OUTLINE_BARS_3_CENTER_LEFT","text":"<p>[jvm]\\ OUTLINE_BARS_3_CENTER_LEFT(\u201coutline/bars-3-center-left\u201d, \u201ch-6 w-6\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;         &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM3.75 6.75h16.5M3.75 12H12m-8.25 5.25h16.5\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-b-a-r-s_3_-c-e-n-t-e-r_-l-e-f-t/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-b-a-r-s_4/","title":"OUTLINE_BARS_4 - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/OUTLINE_BARS_4</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-b-a-r-s_4/#outline_bars_4","title":"OUTLINE_BARS_4","text":"<p>[jvm]\\ OUTLINE_BARS_4(\u201coutline/bars-4\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-400 group-hover:text-gray-500 \u201c, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 010 3.75H5.625a1.875 1.875 0 010-3.75z\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-b-a-r-s_4/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-c-l-o-c-k/","title":"OUTLINE_CLOCK - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/OUTLINE_CLOCK</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-c-l-o-c-k/#outline_clock","title":"OUTLINE_CLOCK","text":"<p>[jvm]\\ OUTLINE_CLOCK(\u201coutline/clock\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m5.231 13.481L15 17.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v16.5c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9zm3.75 11.625a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-c-l-o-c-k/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-d-o-c-u-m-e-n-t_-m-a-g-n-i-f-y-i-n-g_-g-l-a-s-s/","title":"OUTLINE_DOCUMENT_MAGNIFYING_GLASS - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/OUTLINE_DOCUMENT_MAGNIFYING_GLASS</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-d-o-c-u-m-e-n-t_-m-a-g-n-i-f-y-i-n-g_-g-l-a-s-s/#outline_document_magnifying_glass","title":"OUTLINE_DOCUMENT_MAGNIFYING_GLASS","text":"<p>[jvm]\\ OUTLINE_DOCUMENT_MAGNIFYING_GLASS(\u201coutline/document-magnifying-glass\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0M3.124 7.5A8.969 8.969 0 015.292 3m13.416 0a8.969 8.969 0 012.168 4.5\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-d-o-c-u-m-e-n-t_-m-a-g-n-i-f-y-i-n-g_-g-l-a-s-s/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-h-o-m-e/","title":"OUTLINE_HOME - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/OUTLINE_HOME</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-h-o-m-e/#outline_home","title":"OUTLINE_HOME","text":"<p>[jvm]\\ OUTLINE_HOME(\u201coutline/home\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-h-o-m-e/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-x-m-a-r-k/","title":"OUTLINE_XMARK - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/OUTLINE_XMARK</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-x-m-a-r-k/#outline_xmark","title":"OUTLINE_XMARK","text":"<p>[jvm]\\ OUTLINE_XMARK(\u201coutline/x-mark\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d aria-hidden=\u201dtrue\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\u201d /&gt;       &lt;/svg&gt;       \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-o-u-t-l-i-n-e_-x-m-a-r-k/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-q-u-e-u-e_-l-i-s-t/","title":"QUEUE_LIST - Misk","text":"<p>//misk-tailwind/misk.tailwind.icons/Heroicons/QUEUE_LIST</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-q-u-e-u-e_-l-i-s-t/#queue_list","title":"QUEUE_LIST","text":"<p>[jvm]\\ QUEUE_LIST(\u201cqueue-list\u201d, \u201cmr-3 flex-shrink-0 h-5 w-5\u201d, \u201ctext-gray-400 group-hover:text-gray-500\u201d, {       \u201c\u201d\u201d       &lt;svg class=\u201d$it\u201d xmlns=\u201dhttp://www.w3.org/2000/svg\u201d fill=\u201dnone\u201d viewBox=\u201d0 0 24 24\u201d stroke-width=\u201d1.5\u201d stroke=\u201dcurrentColor\u201d class=\u201dw-6 h-6\u201d&gt;          &lt;path stroke-linecap=\u201dround\u201d stroke-linejoin=\u201dround\u201d d=\u201dM3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 010 3.75H5.625a1.875 1.875 0 010-3.75z\u201d /&gt;       &lt;/svg&gt;     \u201c\u201d\u201c.trimIndent()     })</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.icons/-heroicons/-q-u-e-u-e_-l-i-s-t/#properties","title":"Properties","text":"Name Summary defaultModifierClass [jvm]val defaultModifierClass: String id [jvm]val id: String name [jvm]val name: String ordinal [jvm]val ordinal: Int rawHtml [jvm]val rawHtml: (String) -&gt; String svgClass [jvm]val svgClass: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/","title":"Package misk.tailwind.pages - Misk","text":"<p>//misk-tailwind/misk.tailwind.pages</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/#package-misktailwindpages","title":"Package misk.tailwind.pages","text":""},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/#types","title":"Types","text":"Name Summary MenuSection [jvm]data class MenuSection(title: String, links: List&lt;Link&gt;)"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/#functions","title":"Functions","text":"Name Summary Navbar [jvm]fun TagConsumer&lt;&gt;.Navbar(appName: String, deployment: Deployment, homeHref: String, menuSections: List&lt;MenuSection&gt; = listOf(), content: TagConsumer&lt;&gt;.() -&gt; Unit = {})"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/-navbar/","title":"Navbar - Misk","text":"<p>//misk-tailwind/misk.tailwind.pages/Navbar</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/-navbar/#navbar","title":"Navbar","text":"<p>[jvm]\\ fun TagConsumer&lt;&gt;.Navbar(appName: String, deployment: Deployment, homeHref: String, menuSections: List&lt;MenuSection&gt; = listOf(), content: TagConsumer&lt;&gt;.() -&gt; Unit = {})</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/-menu-section/","title":"MenuSection - Misk","text":"<p>//misk-tailwind/misk.tailwind.pages/MenuSection</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/-menu-section/#menusection","title":"MenuSection","text":"<p>[jvm]\\ data class MenuSection(title: String, links: List&lt;Link&gt;)</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/-menu-section/#properties","title":"Properties","text":"Name Summary links [jvm]val links: List&lt;Link&gt; title [jvm]val title: String"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/-menu-section/-menu-section/","title":"MenuSection - Misk","text":"<p>//misk-tailwind/misk.tailwind.pages/MenuSection/MenuSection</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/-menu-section/-menu-section/#menusection","title":"MenuSection","text":"<p>[jvm]\\ fun MenuSection(title: String, links: List&lt;Link&gt;)</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/-menu-section/links/","title":"links - Misk","text":"<p>//misk-tailwind/misk.tailwind.pages/MenuSection/links</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/-menu-section/links/#links","title":"links","text":"<p>[jvm]\\ val links: List&lt;Link&gt;</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/-menu-section/title/","title":"title - Misk","text":"<p>//misk-tailwind/misk.tailwind.pages/MenuSection/title</p>"},{"location":"0.x/misk-tailwind/misk-tailwind/misk.tailwind.pages/-menu-section/title/#title","title":"title","text":"<p>[jvm]\\ val title: String</p>"},{"location":"0.x/misk-testing/","title":"misk-testing - Misk","text":"<p>//misk-testing</p>"},{"location":"0.x/misk-testing/#misk-testing","title":"misk-testing","text":""},{"location":"0.x/misk-testing/#packages","title":"Packages","text":"Name misk misk.cloud.fake.security.keys misk.concurrent misk.containers misk.logging misk.mockito misk.random misk.service misk.services misk.testing misk.time misk.web org.assertj.core.api"},{"location":"0.x/misk-testing/misk-testing/misk/","title":"Package misk - Misk","text":"<p>//misk-testing/misk</p>"},{"location":"0.x/misk-testing/misk-testing/misk/#package-misk","title":"Package misk","text":""},{"location":"0.x/misk-testing/misk-testing/misk/#types","title":"Types","text":"Name Summary MiskTestingServiceModule [jvm]class MiskTestingServiceModule : KAbstractModuleMiskTestingServiceModule should be installed in unit testing environments."},{"location":"0.x/misk-testing/misk-testing/misk/-misk-testing-service-module/","title":"MiskTestingServiceModule - Misk","text":"<p>//misk-testing/misk/MiskTestingServiceModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk/-misk-testing-service-module/#misktestingservicemodule","title":"MiskTestingServiceModule","text":"<p>[jvm]\\ class MiskTestingServiceModule : KAbstractModule</p> <p>MiskTestingServiceModule should be installed in unit testing environments.</p> <p>This should not contain application level fakes for testing. It includes a small, selective set of fake bindings to replace real bindings that cannot exist in a unit testing environment (e.g system env vars and filesystem dependencies).</p>"},{"location":"0.x/misk-testing/misk-testing/misk/-misk-testing-service-module/#constructors","title":"Constructors","text":"MiskTestingServiceModule [jvm]fun MiskTestingServiceModule()"},{"location":"0.x/misk-testing/misk-testing/misk/-misk-testing-service-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-testing/misk-testing/misk/-misk-testing-service-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-testing/misk-testing/misk/-misk-testing-service-module/-misk-testing-service-module/","title":"MiskTestingServiceModule - Misk","text":"<p>//misk-testing/misk/MiskTestingServiceModule/MiskTestingServiceModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk/-misk-testing-service-module/-misk-testing-service-module/#misktestingservicemodule","title":"MiskTestingServiceModule","text":"<p>[jvm]\\ fun MiskTestingServiceModule()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/","title":"Package misk.cloud.fake.security.keys - Misk","text":"<p>//misk-testing/misk.cloud.fake.security.keys</p>"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/#package-miskcloudfakesecuritykeys","title":"Package misk.cloud.fake.security.keys","text":""},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/#types","title":"Types","text":"Name Summary FakeKeyManagementModule [jvm]class FakeKeyManagementModule : KAbstractModule FakeKeyService [jvm]class FakeKeyService : KeyService"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/","title":"FakeKeyManagementModule - Misk","text":"<p>//misk-testing/misk.cloud.fake.security.keys/FakeKeyManagementModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/#fakekeymanagementmodule","title":"FakeKeyManagementModule","text":"<p>[jvm]\\ class FakeKeyManagementModule : KAbstractModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/-fake-key-management-module/","title":"FakeKeyManagementModule - Misk","text":"<p>//misk-testing/misk.cloud.fake.security.keys/FakeKeyManagementModule/FakeKeyManagementModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/-fake-key-management-module/#fakekeymanagementmodule","title":"FakeKeyManagementModule","text":"<p>[jvm]\\ fun FakeKeyManagementModule()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/","title":"FakeKeyService - Misk","text":"<p>//misk-testing/misk.cloud.fake.security.keys/FakeKeyService</p>"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/#fakekeyservice","title":"FakeKeyService","text":"<p>[jvm]\\ class FakeKeyService : KeyService</p>"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/#functions","title":"Functions","text":"Name Summary decrypt [jvm]open override fun decrypt(keyAlias: String, cipherText: ByteString): ByteString encrypt [jvm]open override fun encrypt(keyAlias: String, plainText: ByteString): ByteString"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/-fake-key-service/","title":"FakeKeyService - Misk","text":"<p>//misk-testing/misk.cloud.fake.security.keys/FakeKeyService/FakeKeyService</p>"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/-fake-key-service/#fakekeyservice","title":"FakeKeyService","text":"<p>[jvm]\\ fun FakeKeyService()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/decrypt/","title":"decrypt - Misk","text":"<p>//misk-testing/misk.cloud.fake.security.keys/FakeKeyService/decrypt</p>"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/decrypt/#decrypt","title":"decrypt","text":"<p>[jvm]\\ open override fun decrypt(keyAlias: String, cipherText: ByteString): ByteString</p>"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/encrypt/","title":"encrypt - Misk","text":"<p>//misk-testing/misk.cloud.fake.security.keys/FakeKeyService/encrypt</p>"},{"location":"0.x/misk-testing/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/encrypt/#encrypt","title":"encrypt","text":"<p>[jvm]\\ open override fun encrypt(keyAlias: String, plainText: ByteString): ByteString</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/","title":"Package misk.concurrent - Misk","text":"<p>//misk-testing/misk.concurrent</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/#package-miskconcurrent","title":"Package misk.concurrent","text":""},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/#types","title":"Types","text":"Name Summary FakeScheduledExecutorService [jvm]@Singletonclass FakeScheduledExecutorService@Injectconstructor(clock: Clock) : ScheduledExecutorService, ExecutorServiceScheduledExecutorService for testing that runs in the current thread and is triggered using the tick() method. An injected Clock is used to decide whether to execute a scheduled task. FakeSleeper [jvm]@Singletonclass FakeSleeper@Injectconstructor(clock: Clock) : SleeperSleeper for testing that blocks threads calling sleep, and checks whether the threads should wake using the tick() method. An injected Clock is used to decide whether to wake a thread. FakeSleeperModule [jvm]class FakeSleeperModule : KAbstractModule FakeTicker [jvm]@Singletonclass FakeTicker@Injectconstructor : Ticker, Sleeper"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/","title":"FakeScheduledExecutorService - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/#fakescheduledexecutorservice","title":"FakeScheduledExecutorService","text":"<p>[jvm]\\ @Singleton</p> <p>class FakeScheduledExecutorService@Injectconstructor(clock: Clock) : ScheduledExecutorService, ExecutorService</p> <p>ScheduledExecutorService for testing that runs in the current thread and is triggered using the tick() method. An injected Clock is used to decide whether to execute a scheduled task.</p> <p>This service must always \u201ccatch up\u201d to the clock, so fixed rate and fixed delay jobs are not different.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/#constructors","title":"Constructors","text":"FakeScheduledExecutorService [jvm]@Injectfun FakeScheduledExecutorService(clock: Clock)"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/#types","title":"Types","text":"Name Summary ScheduledFutureTask [jvm]inner class ScheduledFutureTask&lt;V&gt;(executeAt: Long, fixedDelay: Long, clock: Clock, task: () -&gt; V) : FutureTask&lt;V&gt; , ScheduledFuture&lt;V&gt;"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/#functions","title":"Functions","text":"Name Summary awaitTermination [jvm]open override fun awaitTermination(p0: Long, p1: TimeUnit): Boolean execute [jvm]open override fun execute(p0: Runnable) invokeAll [jvm]open override fun &lt;T : Any&gt; invokeAll(p0: MutableCollection&lt;out Callable&lt;T&gt;&gt;): MutableList&lt;Future&lt;T&gt;&gt;open override fun &lt;T : Any&gt; invokeAll(p0: MutableCollection&lt;out Callable&lt;T&gt;&gt;, p1: Long, p2: TimeUnit): MutableList&lt;Future&lt;T&gt;&gt; invokeAny [jvm]open override fun &lt;T : Any&gt; invokeAny(p0: MutableCollection&lt;out Callable&lt;T&gt;&gt;): Topen override fun &lt;T : Any&gt; invokeAny(p0: MutableCollection&lt;out Callable&lt;T&gt;&gt;, p1: Long, p2: TimeUnit): T isShutdown [jvm]open override fun isShutdown(): Boolean isTerminated [jvm]open override fun isTerminated(): Boolean schedule [jvm]open override fun schedule(command: Runnable, delay: Long, unit: TimeUnit): ScheduledFuture&lt;Unit&gt;open override fun &lt;V&gt; schedule(callable: Callable&lt;V&gt;, delay: Long, unit: TimeUnit): ScheduledFuture&lt;V&gt; scheduleAtFixedRate [jvm]open override fun scheduleAtFixedRate(command: Runnable, initialDelay: Long, period: Long, unit: TimeUnit): ScheduledFuture&lt;*&gt; scheduleWithFixedDelay [jvm]open override fun scheduleWithFixedDelay(command: Runnable, initialDelay: Long, delay: Long, unit: TimeUnit): ScheduledFuture&lt;*&gt; shutdown [jvm]open override fun shutdown() shutdownNow [jvm]open override fun shutdownNow(): MutableList&lt;Runnable&gt; submit [jvm]open override fun submit(p0: Runnable): Future&lt;*&gt;open override fun &lt;T : Any&gt; submit(p0: Callable&lt;T&gt;): Future&lt;T&gt;open override fun &lt;T : Any&gt; submit(p0: Runnable, p1: T): Future&lt;T&gt; tick [jvm]fun tick()Check the current time on the clock and run any scheduled tasks that are due."},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-fake-scheduled-executor-service/","title":"FakeScheduledExecutorService - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/FakeScheduledExecutorService</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-fake-scheduled-executor-service/#fakescheduledexecutorservice","title":"FakeScheduledExecutorService","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun FakeScheduledExecutorService(clock: Clock)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/is-shutdown/","title":"isShutdown - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/isShutdown</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/is-shutdown/#isshutdown","title":"isShutdown","text":"<p>[jvm]\\ open override fun isShutdown(): Boolean</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/schedule-at-fixed-rate/","title":"scheduleAtFixedRate - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/scheduleAtFixedRate</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/schedule-at-fixed-rate/#scheduleatfixedrate","title":"scheduleAtFixedRate","text":"<p>[jvm]\\ open override fun scheduleAtFixedRate(command: Runnable, initialDelay: Long, period: Long, unit: TimeUnit): ScheduledFuture&lt;*&gt;</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/schedule-with-fixed-delay/","title":"scheduleWithFixedDelay - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/scheduleWithFixedDelay</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/schedule-with-fixed-delay/#schedulewithfixeddelay","title":"scheduleWithFixedDelay","text":"<p>[jvm]\\ open override fun scheduleWithFixedDelay(command: Runnable, initialDelay: Long, delay: Long, unit: TimeUnit): ScheduledFuture&lt;*&gt;</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/schedule/","title":"schedule - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/schedule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/schedule/#schedule","title":"schedule","text":"<p>[jvm]\\ open override fun schedule(command: Runnable, delay: Long, unit: TimeUnit): ScheduledFuture&lt;Unit&gt;</p> <p>open override fun &lt;V&gt; schedule(callable: Callable&lt;V&gt;, delay: Long, unit: TimeUnit): ScheduledFuture&lt;V&gt;</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/shutdown/","title":"shutdown - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/shutdown</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/shutdown/#shutdown","title":"shutdown","text":"<p>[jvm]\\ open override fun shutdown()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/tick/","title":"tick - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/tick</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/tick/#tick","title":"tick","text":"<p>[jvm]\\ fun tick()</p> <p>Check the current time on the clock and run any scheduled tasks that are due.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/","title":"ScheduledFutureTask - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/ScheduledFutureTask</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/#scheduledfuturetask","title":"ScheduledFutureTask","text":"<p>[jvm]\\ inner class ScheduledFutureTask&lt;V&gt;(executeAt: Long, fixedDelay: Long, clock: Clock, task: () -&gt; V) : FutureTask&lt;V&gt; , ScheduledFuture&lt;V&gt;</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/#constructors","title":"Constructors","text":"ScheduledFutureTask [jvm]fun &lt;V&gt; ScheduledFutureTask(executeAt: Long, clock: Clock, task: () -&gt; V)"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/#functions","title":"Functions","text":"Name Summary cancel [jvm]open override fun cancel(p0: Boolean): Boolean compareTo [jvm]open operator override fun compareTo(other: Delayed): Int done [jvm]open fun done() get [jvm]open override fun get(): Vopen operator override fun get(p0: Long, p1: TimeUnit): V getDelay [jvm]open override fun getDelay(unit: TimeUnit): Long isCancelled [jvm]open override fun isCancelled(): Boolean isDone [jvm]open override fun isDone(): Boolean run [jvm]open override fun run() runAndReset [jvm]open override fun runAndReset(): Boolean set [jvm]open fun set(p0: V) setException [jvm]open fun setException(p0: Throwable) toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/#properties","title":"Properties","text":"Name Summary clock [jvm]val clock: Clock executeAt [jvm]var executeAt: Long isRepeated [jvm]val isRepeated: Boolean task [jvm]val task: () -&gt; V"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/-scheduled-future-task/","title":"ScheduledFutureTask - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/ScheduledFutureTask/ScheduledFutureTask</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/-scheduled-future-task/#scheduledfuturetask","title":"ScheduledFutureTask","text":"<p>[jvm]\\ fun &lt;V&gt; ScheduledFutureTask(executeAt: Long, clock: Clock, task: () -&gt; V)</p> <p>fun &lt;V&gt; ScheduledFutureTask(executeAt: Long, fixedDelay: Long, clock: Clock, task: () -&gt; V)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/clock/","title":"clock - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/ScheduledFutureTask/clock</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/clock/#clock","title":"clock","text":"<p>[jvm]\\ val clock: Clock</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/compare-to/","title":"compareTo - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/ScheduledFutureTask/compareTo</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/compare-to/#compareto","title":"compareTo","text":"<p>[jvm]\\ open operator override fun compareTo(other: Delayed): Int</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/execute-at/","title":"executeAt - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/ScheduledFutureTask/executeAt</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/execute-at/#executeat","title":"executeAt","text":"<p>[jvm]\\ var executeAt: Long</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/get-delay/","title":"getDelay - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/ScheduledFutureTask/getDelay</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/get-delay/#getdelay","title":"getDelay","text":"<p>[jvm]\\ open override fun getDelay(unit: TimeUnit): Long</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/is-repeated/","title":"isRepeated - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/ScheduledFutureTask/isRepeated</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/is-repeated/#isrepeated","title":"isRepeated","text":"<p>[jvm]\\ val isRepeated: Boolean</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/run-and-reset/","title":"runAndReset - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/ScheduledFutureTask/runAndReset</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/run-and-reset/#runandreset","title":"runAndReset","text":"<p>[jvm]\\ open override fun runAndReset(): Boolean</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/task/","title":"task - Misk","text":"<p>//misk-testing/misk.concurrent/FakeScheduledExecutorService/ScheduledFutureTask/task</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/task/#task","title":"task","text":"<p>[jvm]\\ val task: () -&gt; V</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/","title":"FakeSleeper - Misk","text":"<p>//misk-testing/misk.concurrent/FakeSleeper</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/#fakesleeper","title":"FakeSleeper","text":"<p>[jvm]\\ @Singleton</p> <p>class FakeSleeper@Injectconstructor(clock: Clock) : Sleeper</p> <p>Sleeper for testing that blocks threads calling sleep, and checks whether the threads should wake using the tick() method. An injected Clock is used to decide whether to wake a thread.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/#constructors","title":"Constructors","text":"FakeSleeper [jvm]@Injectfun FakeSleeper(clock: Clock)"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/#functions","title":"Functions","text":"Name Summary lastSleepDuration [jvm]fun lastSleepDuration(): Duration?Returns the last duration FakeSleeper was called with. This is thread-safe, but the value may not be meaningful if the sleeper is being used concurrently. sleep [jvm]open override fun sleep(duration: Duration) sleepCount [jvm]fun sleepCount(): IntReturns the total number of times the FakeSleeper has been called. This is thread-safe, but the value may not be meaningful if the sleeper is being used concurrently. tick [jvm]fun tick()Check the current time and triggers any sleeping threads that are due to be awoken. waitForSleep [jvm]fun waitForSleep(numThreads: Int)Blocks until the given number of threads are asleep (as a result of calling sleep on this FakeSleeper)."},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/-fake-sleeper/","title":"FakeSleeper - Misk","text":"<p>//misk-testing/misk.concurrent/FakeSleeper/FakeSleeper</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/-fake-sleeper/#fakesleeper","title":"FakeSleeper","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun FakeSleeper(clock: Clock)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/last-sleep-duration/","title":"lastSleepDuration - Misk","text":"<p>//misk-testing/misk.concurrent/FakeSleeper/lastSleepDuration</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/last-sleep-duration/#lastsleepduration","title":"lastSleepDuration","text":"<p>[jvm]\\ fun lastSleepDuration(): Duration?</p> <p>Returns the last duration FakeSleeper was called with. This is thread-safe, but the value may not be meaningful if the sleeper is being used concurrently.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/sleep-count/","title":"sleepCount - Misk","text":"<p>//misk-testing/misk.concurrent/FakeSleeper/sleepCount</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/sleep-count/#sleepcount","title":"sleepCount","text":"<p>[jvm]\\ fun sleepCount(): Int</p> <p>Returns the total number of times the FakeSleeper has been called. This is thread-safe, but the value may not be meaningful if the sleeper is being used concurrently.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/sleep/","title":"sleep - Misk","text":"<p>//misk-testing/misk.concurrent/FakeSleeper/sleep</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/sleep/#sleep","title":"sleep","text":"<p>[jvm]\\ open override fun sleep(duration: Duration)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/tick/","title":"tick - Misk","text":"<p>//misk-testing/misk.concurrent/FakeSleeper/tick</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/tick/#tick","title":"tick","text":"<p>[jvm]\\ fun tick()</p> <p>Check the current time and triggers any sleeping threads that are due to be awoken.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/wait-for-sleep/","title":"waitForSleep - Misk","text":"<p>//misk-testing/misk.concurrent/FakeSleeper/waitForSleep</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper/wait-for-sleep/#waitforsleep","title":"waitForSleep","text":"<p>[jvm]\\ fun waitForSleep(numThreads: Int)</p> <p>Blocks until the given number of threads are asleep (as a result of calling sleep on this FakeSleeper).</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper-module/","title":"FakeSleeperModule - Misk","text":"<p>//misk-testing/misk.concurrent/FakeSleeperModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper-module/#fakesleepermodule","title":"FakeSleeperModule","text":"<p>[jvm]\\ class FakeSleeperModule : KAbstractModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper-module/-fake-sleeper-module/","title":"FakeSleeperModule - Misk","text":"<p>//misk-testing/misk.concurrent/FakeSleeperModule/FakeSleeperModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-sleeper-module/-fake-sleeper-module/#fakesleepermodule","title":"FakeSleeperModule","text":"<p>[jvm]\\ fun FakeSleeperModule()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/","title":"FakeTicker - Misk","text":"<p>//misk-testing/misk.concurrent/FakeTicker</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/#faketicker","title":"FakeTicker","text":"<p>[jvm]\\ @Singleton</p> <p>class FakeTicker@Injectconstructor : Ticker, Sleeper</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/#functions","title":"Functions","text":"Name Summary read [jvm]open override fun read(): Long sleep [jvm]open override fun sleep(duration: Duration) sleepMs [jvm]fun sleepMs(durationMs: Long)"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/#properties","title":"Properties","text":"Name Summary nowMs [jvm]val nowMs: Long"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/-fake-ticker/","title":"FakeTicker - Misk","text":"<p>//misk-testing/misk.concurrent/FakeTicker/FakeTicker</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/-fake-ticker/#faketicker","title":"FakeTicker","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun FakeTicker()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/now-ms/","title":"nowMs - Misk","text":"<p>//misk-testing/misk.concurrent/FakeTicker/nowMs</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/now-ms/#nowms","title":"nowMs","text":"<p>[jvm]\\ val nowMs: Long</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/read/","title":"read - Misk","text":"<p>//misk-testing/misk.concurrent/FakeTicker/read</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/read/#read","title":"read","text":"<p>[jvm]\\ open override fun read(): Long</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/sleep-ms/","title":"sleepMs - Misk","text":"<p>//misk-testing/misk.concurrent/FakeTicker/sleepMs</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/sleep-ms/#sleepms","title":"sleepMs","text":"<p>[jvm]\\ fun sleepMs(durationMs: Long)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/sleep/","title":"sleep - Misk","text":"<p>//misk-testing/misk.concurrent/FakeTicker/sleep</p>"},{"location":"0.x/misk-testing/misk-testing/misk.concurrent/-fake-ticker/sleep/#sleep","title":"sleep","text":"<p>[jvm]\\ open override fun sleep(duration: Duration)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/","title":"Package misk.containers - Misk","text":"<p>//misk-testing/misk.containers</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/#package-miskcontainers","title":"Package misk.containers","text":""},{"location":"0.x/misk-testing/misk-testing/misk.containers/#types","title":"Types","text":"Name Summary Composer [jvm]class Composer(name: String, containers: Container)Composer composes many Containers together to use in a unit test. Container [jvm]data class Container(createCmd: CreateContainerCmd.() -&gt; Unit, beforeStartHook: (docker: DockerClient, id: String) -&gt; Unit)A Container creates a Docker container for testing."},{"location":"0.x/misk-testing/misk-testing/misk.containers/-composer/","title":"Composer - Misk","text":"<p>//misk-testing/misk.containers/Composer</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-composer/#composer","title":"Composer","text":"<p>[jvm]\\ class Composer(name: String, containers: Container)</p> <p>Composer composes many Containers together to use in a unit test.</p> <p>The Containers are networked using a dedicated Docker network. Tests need to expose ports in order for the test to communicate with the containers over 127.0.0.1.</p> <p>The following example composes Kafka and Zookeeper containers for testing. Kafka is exposed to the jUnit test via 127.0.0.1:9102. In this example, Zookeeper is not exposed to the test.</p> <pre><code>val zkContainer = Container {\\\n    withImage(\"confluentinc/cp-zookeeper\")\\\n    withName(\"zookeeper\")\\\n    withEnv(\"ZOOKEEPER_CLIENT_PORT=2181\")\\\n}\\\nval kafka = Container {\\\n    withImage(\"confluentinc/cp-kafka\"\\\n    withName(\"kafka\")\\\n    withExposedPorts(ExposedPort.tcp(port))\\\n    withPortBindings(Ports().apply {\\\n      bind(ExposedPort.tcp(9102), Ports.Binding.bindPort(9102))\\\n    })\\\n    withEnv(\\\n      \"KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181\",\\\n      \"KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9102\")\\\n    }\\\nval composer = Composer(\"e-kafka\", zkContainer, kafka)\\\ncomposer.start()\n</code></pre>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-composer/#constructors","title":"Constructors","text":"Composer [jvm]fun Composer(name: String, vararg containers: Container)"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-composer/#functions","title":"Functions","text":"Name Summary start [jvm]fun start() stop [jvm]fun stop()"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-composer/-composer/","title":"Composer - Misk","text":"<p>//misk-testing/misk.containers/Composer/Composer</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-composer/-composer/#composer","title":"Composer","text":"<p>[jvm]\\ fun Composer(name: String, vararg containers: Container)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-composer/start/","title":"start - Misk","text":"<p>//misk-testing/misk.containers/Composer/start</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-composer/start/#start","title":"start","text":"<p>[jvm]\\ fun start()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-composer/stop/","title":"stop - Misk","text":"<p>//misk-testing/misk.containers/Composer/stop</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-composer/stop/#stop","title":"stop","text":"<p>[jvm]\\ fun stop()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-container/","title":"Container - Misk","text":"<p>//misk-testing/misk.containers/Container</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-container/#container","title":"Container","text":"<p>[jvm]\\ data class Container(createCmd: CreateContainerCmd.() -&gt; Unit, beforeStartHook: (docker: DockerClient, id: String) -&gt; Unit)</p> <p>A Container creates a Docker container for testing.</p> <p>Tests provide a lambda to build a CreateContainerCmd. The createCmd lambda must set CreateContainerCmd.withName and CreateContainerCmd.withImage. All other fields are optional. The Composer takes care of setting up the network.</p> <p>There may be a need to configure your container between the creation and start steps. beforeStartHook provides you with an id to your container allowing you to manipulate as necessary before the command/entrypoint is invoked.</p> <p>See Composer for an example.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-container/#constructors","title":"Constructors","text":"Container [jvm]fun Container(createCmd: CreateContainerCmd.() -&gt; Unit) Container [jvm]fun Container(createCmd: CreateContainerCmd.() -&gt; Unit, beforeStartHook: (docker: DockerClient, id: String) -&gt; Unit)"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-container/#properties","title":"Properties","text":"Name Summary beforeStartHook [jvm]val beforeStartHook: (docker: DockerClient, id: String) -&gt; Unit createCmd [jvm]val createCmd: CreateContainerCmd.() -&gt; Unit"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-container/-container/","title":"Container - Misk","text":"<p>//misk-testing/misk.containers/Container/Container</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-container/-container/#container","title":"Container","text":"<p>[jvm]\\ fun Container(createCmd: CreateContainerCmd.() -&gt; Unit)</p> <p>fun Container(createCmd: CreateContainerCmd.() -&gt; Unit, beforeStartHook: (docker: DockerClient, id: String) -&gt; Unit)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-container/before-start-hook/","title":"beforeStartHook - Misk","text":"<p>//misk-testing/misk.containers/Container/beforeStartHook</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-container/before-start-hook/#beforestarthook","title":"beforeStartHook","text":"<p>[jvm]\\ val beforeStartHook: (docker: DockerClient, id: String) -&gt; Unit</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-container/create-cmd/","title":"createCmd - Misk","text":"<p>//misk-testing/misk.containers/Container/createCmd</p>"},{"location":"0.x/misk-testing/misk-testing/misk.containers/-container/create-cmd/#createcmd","title":"createCmd","text":"<p>[jvm]\\ val createCmd: CreateContainerCmd.() -&gt; Unit</p>"},{"location":"0.x/misk-testing/misk-testing/misk.logging/","title":"Package misk.logging - Misk","text":"<p>//misk-testing/misk.logging</p>"},{"location":"0.x/misk-testing/misk-testing/misk.logging/#package-misklogging","title":"Package misk.logging","text":""},{"location":"0.x/misk-testing/misk-testing/misk.logging/#types","title":"Types","text":"Name Summary LogCollectorModule [jvm]class LogCollectorModule : KAbstractModule LogCollectorService [jvm]interface LogCollectorService : ServiceMarker interface for the service that produces a LogCollector."},{"location":"0.x/misk-testing/misk-testing/misk.logging/-log-collector-module/","title":"LogCollectorModule - Misk","text":"<p>//misk-testing/misk.logging/LogCollectorModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.logging/-log-collector-module/#logcollectormodule","title":"LogCollectorModule","text":"<p>[jvm]\\ class LogCollectorModule : KAbstractModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.logging/-log-collector-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-testing/misk-testing/misk.logging/-log-collector-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-testing/misk-testing/misk.logging/-log-collector-module/-log-collector-module/","title":"LogCollectorModule - Misk","text":"<p>//misk-testing/misk.logging/LogCollectorModule/LogCollectorModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.logging/-log-collector-module/-log-collector-module/#logcollectormodule","title":"LogCollectorModule","text":"<p>[jvm]\\ fun LogCollectorModule()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.logging/-log-collector-service/","title":"LogCollectorService - Misk","text":"<p>//misk-testing/misk.logging/LogCollectorService</p>"},{"location":"0.x/misk-testing/misk-testing/misk.logging/-log-collector-service/#logcollectorservice","title":"LogCollectorService","text":"<p>[jvm]\\ interface LogCollectorService : Service</p> <p>Marker interface for the service that produces a LogCollector.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.logging/-log-collector-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]abstract fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]abstract fun awaitRunning()open fun awaitRunning(timeout: Duration)abstract fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]abstract fun awaitTerminated()open fun awaitTerminated(timeout: Duration)abstract fun awaitTerminated(timeout: Long, unit: TimeUnit) failureCause [jvm]abstract fun failureCause(): Throwable isRunning [jvm]abstract fun isRunning(): Boolean startAsync [jvm]@CanIgnoreReturnValueabstract fun startAsync(): Service state [jvm]abstract fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueabstract fun stopAsync(): Service"},{"location":"0.x/misk-testing/misk-testing/misk.mockito/","title":"Package misk.mockito - Misk","text":"<p>//misk-testing/misk.mockito</p>"},{"location":"0.x/misk-testing/misk-testing/misk.mockito/#package-miskmockito","title":"Package misk.mockito","text":""},{"location":"0.x/misk-testing/misk-testing/misk.mockito/#types","title":"Types","text":"Name Summary Mockito [jvm]object Mockito"},{"location":"0.x/misk-testing/misk-testing/misk.mockito/-mockito/","title":"Mockito - Misk","text":"<p>//misk-testing/misk.mockito/Mockito</p>"},{"location":"0.x/misk-testing/misk-testing/misk.mockito/-mockito/#mockito","title":"Mockito","text":"<p>[jvm]\\ object Mockito</p>"},{"location":"0.x/misk-testing/misk-testing/misk.mockito/-mockito/#functions","title":"Functions","text":"Name Summary captor [jvm]inline fun &lt;T : Any&gt; captor(): ArgumentCaptor&lt;T&gt; mock [jvm]inline fun &lt;T : Any&gt; mock(): T whenever [jvm]inline fun &lt;T : Any&gt; whenever(t: T): OngoingStubbing&lt;T&gt;"},{"location":"0.x/misk-testing/misk-testing/misk.mockito/-mockito/captor/","title":"captor - Misk","text":"<p>//misk-testing/misk.mockito/Mockito/captor</p>"},{"location":"0.x/misk-testing/misk-testing/misk.mockito/-mockito/captor/#captor","title":"captor","text":"<p>[jvm]\\ inline fun &lt;T : Any&gt; captor(): ArgumentCaptor&lt;T&gt;</p>"},{"location":"0.x/misk-testing/misk-testing/misk.mockito/-mockito/mock/","title":"mock - Misk","text":"<p>//misk-testing/misk.mockito/Mockito/mock</p>"},{"location":"0.x/misk-testing/misk-testing/misk.mockito/-mockito/mock/#mock","title":"mock","text":"<p>[jvm]\\ inline fun &lt;T : Any&gt; mock(): T</p>"},{"location":"0.x/misk-testing/misk-testing/misk.mockito/-mockito/whenever/","title":"whenever - Misk","text":"<p>//misk-testing/misk.mockito/Mockito/whenever</p>"},{"location":"0.x/misk-testing/misk-testing/misk.mockito/-mockito/whenever/#whenever","title":"whenever","text":"<p>[jvm]\\ inline fun &lt;T : Any&gt; whenever(t: T): OngoingStubbing&lt;T&gt;</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/","title":"Package misk.random - Misk","text":"<p>//misk-testing/misk.random</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/#package-miskrandom","title":"Package misk.random","text":""},{"location":"0.x/misk-testing/misk-testing/misk.random/#types","title":"Types","text":"Name Summary FakeRandom [jvm]@Singletonclass FakeRandom@Injectconstructor : Random FakeRandomModule [jvm]class FakeRandomModule : KAbstractModule FakeThreadLocalRandom [jvm]@Singletonclass FakeThreadLocalRandom@Injectconstructor : ThreadLocalRandom"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/","title":"FakeRandom - Misk","text":"<p>//misk-testing/misk.random/FakeRandom</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/#fakerandom","title":"FakeRandom","text":"<p>[jvm]\\ @Singleton</p> <p>class FakeRandom@Injectconstructor : Random</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/#functions","title":"Functions","text":"Name Summary doubles [jvm]open override fun doubles(): DoubleStreamopen override fun doubles(p0: Long): DoubleStreamopen override fun doubles(p0: Double, p1: Double): DoubleStreamopen override fun doubles(p0: Long, p1: Double, p2: Double): DoubleStream ints [jvm]open override fun ints(): IntStreamopen override fun ints(p0: Long): IntStreamopen override fun ints(p0: Int, p1: Int): IntStreamopen override fun ints(p0: Long, p1: Int, p2: Int): IntStream isDeprecated [jvm]open fun isDeprecated(): Boolean longs [jvm]open override fun longs(): LongStreamopen override fun longs(p0: Long): LongStreamopen override fun longs(p0: Long, p1: Long): LongStreamopen override fun longs(p0: Long, p1: Long, p2: Long): LongStream next [jvm]open fun next(p0: Int): Int nextBoolean [jvm]open override fun nextBoolean(): Boolean nextBytes [jvm]open override fun nextBytes(p0: ByteArray) nextDouble [jvm]open override fun nextDouble(): Doubleopen fun nextDouble(p0: Double): Doubleopen fun nextDouble(p0: Double, p1: Double): Double nextExponential [jvm]open fun nextExponential(): Double nextFloat [jvm]open override fun nextFloat(): Floatopen fun nextFloat(p0: Float): Floatopen fun nextFloat(p0: Float, p1: Float): Float nextGaussian [jvm]open override fun nextGaussian(): Doubleopen fun nextGaussian(p0: Double, p1: Double): Double nextInt [jvm]open override fun nextInt(): Intopen override fun nextInt(p0: Int): Intopen fun nextInt(p0: Int, p1: Int): Int nextLong [jvm]open override fun nextLong(): Longopen fun nextLong(p0: Long): Longopen fun nextLong(p0: Long, p1: Long): Long setSeed [jvm]open fun setSeed(p0: Long)"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/#properties","title":"Properties","text":"Name Summary nextBoolean [jvm]var nextBoolean: Boolean? = null nextDouble [jvm]var nextDouble: Double? = null nextFloat [jvm]var nextFloat: Float? = null nextInt [jvm]var nextInt: Int? = null nextLong [jvm]var nextLong: Long? = null"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/-fake-random/","title":"FakeRandom - Misk","text":"<p>//misk-testing/misk.random/FakeRandom/FakeRandom</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/-fake-random/#fakerandom","title":"FakeRandom","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun FakeRandom()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/next-boolean/","title":"nextBoolean - Misk","text":"<p>//misk-testing/misk.random/FakeRandom/nextBoolean</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/next-boolean/#nextboolean","title":"nextBoolean","text":"<p>[jvm]\\ open override fun nextBoolean(): Boolean</p> <p>var nextBoolean: Boolean? = null</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/next-double/","title":"nextDouble - Misk","text":"<p>//misk-testing/misk.random/FakeRandom/nextDouble</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/next-double/#nextdouble","title":"nextDouble","text":"<p>[jvm]\\ open override fun nextDouble(): Double</p> <p>var nextDouble: Double? = null</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/next-float/","title":"nextFloat - Misk","text":"<p>//misk-testing/misk.random/FakeRandom/nextFloat</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/next-float/#nextfloat","title":"nextFloat","text":"<p>[jvm]\\ open override fun nextFloat(): Float</p> <p>var nextFloat: Float? = null</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/next-int/","title":"nextInt - Misk","text":"<p>//misk-testing/misk.random/FakeRandom/nextInt</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/next-int/#nextint","title":"nextInt","text":"<p>[jvm]\\ open override fun nextInt(): Int</p> <p>var nextInt: Int? = null</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/next-long/","title":"nextLong - Misk","text":"<p>//misk-testing/misk.random/FakeRandom/nextLong</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random/next-long/#nextlong","title":"nextLong","text":"<p>[jvm]\\ open override fun nextLong(): Long</p> <p>var nextLong: Long? = null</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random-module/","title":"FakeRandomModule - Misk","text":"<p>//misk-testing/misk.random/FakeRandomModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random-module/#fakerandommodule","title":"FakeRandomModule","text":"<p>[jvm]\\ class FakeRandomModule : KAbstractModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random-module/-fake-random-module/","title":"FakeRandomModule - Misk","text":"<p>//misk-testing/misk.random/FakeRandomModule/FakeRandomModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-random-module/-fake-random-module/#fakerandommodule","title":"FakeRandomModule","text":"<p>[jvm]\\ fun FakeRandomModule()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-thread-local-random/","title":"FakeThreadLocalRandom - Misk","text":"<p>//misk-testing/misk.random/FakeThreadLocalRandom</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-thread-local-random/#fakethreadlocalrandom","title":"FakeThreadLocalRandom","text":"<p>[jvm]\\ @Singleton</p> <p>class FakeThreadLocalRandom@Injectconstructor : ThreadLocalRandom</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-thread-local-random/#functions","title":"Functions","text":"Name Summary current [jvm]open override fun current(): FakeRandom"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-thread-local-random/#properties","title":"Properties","text":"Name Summary fakeRandom [jvm]@Injectlateinit var fakeRandom: FakeRandom"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-thread-local-random/-fake-thread-local-random/","title":"FakeThreadLocalRandom - Misk","text":"<p>//misk-testing/misk.random/FakeThreadLocalRandom/FakeThreadLocalRandom</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-thread-local-random/-fake-thread-local-random/#fakethreadlocalrandom","title":"FakeThreadLocalRandom","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun FakeThreadLocalRandom()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-thread-local-random/current/","title":"current - Misk","text":"<p>//misk-testing/misk.random/FakeThreadLocalRandom/current</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-thread-local-random/current/#current","title":"current","text":"<p>[jvm]\\ open override fun current(): FakeRandom</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-thread-local-random/fake-random/","title":"fakeRandom - Misk","text":"<p>//misk-testing/misk.random/FakeThreadLocalRandom/fakeRandom</p>"},{"location":"0.x/misk-testing/misk-testing/misk.random/-fake-thread-local-random/fake-random/#fakerandom","title":"fakeRandom","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>lateinit var fakeRandom: FakeRandom</p>"},{"location":"0.x/misk-testing/misk-testing/misk.service/","title":"Package misk.service - Misk","text":"<p>//misk-testing/misk.service</p>"},{"location":"0.x/misk-testing/misk-testing/misk.service/#package-miskservice","title":"Package misk.service","text":""},{"location":"0.x/misk-testing/misk-testing/misk.service/#types","title":"Types","text":"Name Summary CachedTestService [jvm]abstract class CachedTestService : AbstractIdleServiceTest services can derive from CachedTestService if they\u2019d like to reuse the same service for the span of a given runtime. This is helpful when you want to avoid incurring the cost of service startup and shutdown with each test run."},{"location":"0.x/misk-testing/misk-testing/misk.service/-cached-test-service/","title":"CachedTestService - Misk","text":"<p>//misk-testing/misk.service/CachedTestService</p>"},{"location":"0.x/misk-testing/misk-testing/misk.service/-cached-test-service/#cachedtestservice","title":"CachedTestService","text":"<p>[jvm]\\ abstract class CachedTestService : AbstractIdleService</p> <p>Test services can derive from CachedTestService if they\u2019d like to reuse the same service for the span of a given runtime. This is helpful when you want to avoid incurring the cost of service startup and shutdown with each test run.</p> <p>NOTE: The caching is only useful if the implementing service references a shared instance of their underlying resources. A common way to do this is to leverage a companion object.</p> <p>Example:</p>"},{"location":"0.x/misk-testing/misk-testing/misk.service/-cached-test-service/#constructors","title":"Constructors","text":"CachedTestService [jvm]fun CachedTestService()"},{"location":"0.x/misk-testing/misk-testing/misk.service/-cached-test-service/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-testing/misk-testing/misk.service/-cached-test-service/#functions","title":"Functions","text":"Name Summary actualShutdown [jvm]abstract fun actualShutdown()Actually shuts the service down. This will be invoked once per runtime. actualStartup [jvm]abstract fun actualStartup()Actually starts the service up. This will be invoked once per runtime. addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-testing/misk-testing/misk.service/-cached-test-service/-cached-test-service/","title":"CachedTestService - Misk","text":"<p>//misk-testing/misk.service/CachedTestService/CachedTestService</p>"},{"location":"0.x/misk-testing/misk-testing/misk.service/-cached-test-service/-cached-test-service/#cachedtestservice","title":"CachedTestService","text":"<p>[jvm]\\ fun CachedTestService()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.service/-cached-test-service/actual-shutdown/","title":"actualShutdown - Misk","text":"<p>//misk-testing/misk.service/CachedTestService/actualShutdown</p>"},{"location":"0.x/misk-testing/misk-testing/misk.service/-cached-test-service/actual-shutdown/#actualshutdown","title":"actualShutdown","text":"<p>[jvm]\\ abstract fun actualShutdown()</p> <p>Actually shuts the service down. This will be invoked once per runtime.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.service/-cached-test-service/actual-startup/","title":"actualStartup - Misk","text":"<p>//misk-testing/misk.service/CachedTestService/actualStartup</p>"},{"location":"0.x/misk-testing/misk-testing/misk.service/-cached-test-service/actual-startup/#actualstartup","title":"actualStartup","text":"<p>[jvm]\\ abstract fun actualStartup()</p> <p>Actually starts the service up. This will be invoked once per runtime.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.service/-cached-test-service/-companion/","title":"Companion - Misk","text":"<p>//misk-testing/misk.service/CachedTestService/Companion</p>"},{"location":"0.x/misk-testing/misk-testing/misk.service/-cached-test-service/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-testing/misk-testing/misk.services/","title":"Package misk.services - Misk","text":"<p>//misk-testing/misk.services</p>"},{"location":"0.x/misk-testing/misk-testing/misk.services/#package-miskservices","title":"Package misk.services","text":""},{"location":"0.x/misk-testing/misk-testing/misk.services/#types","title":"Types","text":"Name Summary FakeService [jvm]@Singletonclass FakeService@Injectconstructor : AbstractIdleService FakeServiceModule [jvm]class FakeServiceModule : KAbstractModule"},{"location":"0.x/misk-testing/misk-testing/misk.services/-fake-service/","title":"FakeService - Misk","text":"<p>//misk-testing/misk.services/FakeService</p>"},{"location":"0.x/misk-testing/misk-testing/misk.services/-fake-service/#fakeservice","title":"FakeService","text":"<p>[jvm]\\ @Singleton</p> <p>class FakeService@Injectconstructor : AbstractIdleService</p>"},{"location":"0.x/misk-testing/misk-testing/misk.services/-fake-service/#functions","title":"Functions","text":"Name Summary addListener [jvm]override fun addListener(listener: Service.Listener, executor: Executor) awaitRunning [jvm]override fun awaitRunning()override fun awaitRunning(timeout: Duration)override fun awaitRunning(timeout: Long, unit: TimeUnit) awaitTerminated [jvm]override fun awaitTerminated()override fun awaitTerminated(timeout: Duration)override fun awaitTerminated(timeout: Long, unit: TimeUnit) executor [jvm]open fun executor(): Executor failureCause [jvm]override fun failureCause(): Throwable isRunning [jvm]override fun isRunning(): Boolean serviceName [jvm]open fun serviceName(): String startAsync [jvm]@CanIgnoreReturnValueoverride fun startAsync(): Service state [jvm]override fun state(): Service.State stopAsync [jvm]@CanIgnoreReturnValueoverride fun stopAsync(): Service toString [jvm]open override fun toString(): String"},{"location":"0.x/misk-testing/misk-testing/misk.services/-fake-service/-fake-service/","title":"FakeService - Misk","text":"<p>//misk-testing/misk.services/FakeService/FakeService</p>"},{"location":"0.x/misk-testing/misk-testing/misk.services/-fake-service/-fake-service/#fakeservice","title":"FakeService","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun FakeService()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.services/-fake-service-module/","title":"FakeServiceModule - Misk","text":"<p>//misk-testing/misk.services/FakeServiceModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.services/-fake-service-module/#fakeservicemodule","title":"FakeServiceModule","text":"<p>[jvm]\\ class FakeServiceModule : KAbstractModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.services/-fake-service-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-testing/misk-testing/misk.services/-fake-service-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-testing/misk-testing/misk.services/-fake-service-module/-fake-service-module/","title":"FakeServiceModule - Misk","text":"<p>//misk-testing/misk.services/FakeServiceModule/FakeServiceModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.services/-fake-service-module/-fake-service-module/#fakeservicemodule","title":"FakeServiceModule","text":"<p>[jvm]\\ fun FakeServiceModule()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/","title":"Package misk.testing - Misk","text":"<p>//misk-testing/misk.testing</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/#package-misktesting","title":"Package misk.testing","text":""},{"location":"0.x/misk-testing/misk-testing/misk.testing/#types","title":"Types","text":"Name Summary ConcurrentMockTracer [jvm]@Singletonclass ConcurrentMockTracer@Injectconstructor : MockTracerExtends MockTracer for use in concurrent environments, such as a web server and test client. Prefer this wherever you\u2019d otherwise use MockTracer. ExternalDependency [jvm]interface ExternalDependencyAn external dependency of the Misk Application that needs to be started for test, like Redis, Vitess, MySQL, SQS, etc. InjectingParameterResolver [jvm]class InjectingParameterResolver : ParameterResolver InjectTest [jvm]@Target(allowedTargets = [AnnotationTarget.FUNCTION])@Test@ExtendWith(value = [InjectingParameterResolver::class])annotation class InjectTest LogLevel [jvm]@Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.FUNCTION])annotation class LogLevel(level: LogLevel.Level)Annotate your test classes or methods with @LogLevel to change the log level used by the test. It can be useful to have different LogLevel by test, specially if you\u2019re debugging issues on CI. LogLevelExtension [jvm]class LogLevelExtension@Injectconstructor : BeforeEachCallback MiskExternalDependency [jvm]@Target(allowedTargets = [AnnotationTarget.FIELD])annotation class MiskExternalDependency MiskTest [jvm]@Target(allowedTargets = [AnnotationTarget.CLASS])@ExtendWith(value = [MiskTestExtension::class])annotation class MiskTest(startService: Boolean)Annotate your test classes with @MiskTest to have fields annotated with @Inject initialized. Provide modules to be installed by annotating a Module field in your test class with MiskTestModule. This can be a compound module, composed using Modules.combine. MiskTestModule [jvm]@Target(allowedTargets = [AnnotationTarget.FIELD])annotation class MiskTestModule MockTracingBackendModule [jvm]class MockTracingBackendModule : KAbstractModule TemporaryFolder [jvm]class TemporaryFolder(root: Path)A temporary folder for use by a given test TemporaryFolderModule [jvm]class TemporaryFolderModule : KAbstractModule"},{"location":"0.x/misk-testing/misk-testing/misk.testing/#functions","title":"Functions","text":"Name Summary retrieve [jvm]inline fun &lt;T&gt; ExtensionContext.retrieve(name: String): T store [jvm]fun &lt;T&gt; ExtensionContext.store(name: String, value: T)Stores an object scoped to the test class on the context"},{"location":"0.x/misk-testing/misk-testing/misk.testing/retrieve/","title":"retrieve - Misk","text":"<p>//misk-testing/misk.testing/retrieve</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/retrieve/#retrieve","title":"retrieve","text":"<p>[jvm]\\ inline fun &lt;T&gt; ExtensionContext.retrieve(name: String): T</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/retrieve/#return","title":"Return","text":"<p>A previously stored object scoped to the test class</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/store/","title":"store - Misk","text":"<p>//misk-testing/misk.testing/store</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/store/#store","title":"store","text":"<p>[jvm]\\ fun &lt;T&gt; ExtensionContext.store(name: String, value: T)</p> <p>Stores an object scoped to the test class on the context</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-concurrent-mock-tracer/","title":"ConcurrentMockTracer - Misk","text":"<p>//misk-testing/misk.testing/ConcurrentMockTracer</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-concurrent-mock-tracer/#concurrentmocktracer","title":"ConcurrentMockTracer","text":"<p>[jvm]\\ @Singleton</p> <p>class ConcurrentMockTracer@Injectconstructor : MockTracer</p> <p>Extends MockTracer for use in concurrent environments, such as a web server and test client. Prefer this wherever you\u2019d otherwise use MockTracer.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-concurrent-mock-tracer/#constructors","title":"Constructors","text":"ConcurrentMockTracer [jvm]@Injectfun ConcurrentMockTracer()"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-concurrent-mock-tracer/#functions","title":"Functions","text":"Name Summary activateSpan [jvm]open override fun activateSpan(p0: Span): Scope activeSpan [jvm]open override fun activeSpan(): Span appendFinishedSpan [jvm]open fun appendFinishedSpan(p0: MockSpan) buildSpan [jvm]open override fun buildSpan(p0: String): MockTracer.SpanBuilder close [jvm]open override fun close() extract [jvm]open override fun &lt;C : Any&gt; extract(p0: Format&lt;C&gt;, p1: C): SpanContext finishedSpans [jvm]open fun finishedSpans(): MutableList&lt;MockSpan&gt; inject [jvm]open override fun &lt;C : Any&gt; inject(p0: SpanContext, p1: Format&lt;C&gt;, p2: C) reset [jvm]open fun reset() scopeManager [jvm]open override fun scopeManager(): ScopeManager take [jvm]fun take(): MockSpanAwaits a span, removes it, and returns it.[jvm]fun take(operationName: String): MockSpanAwaits a span named operationName, removes it, and returns it. Spans with other names are consumed and discarded."},{"location":"0.x/misk-testing/misk-testing/misk.testing/-concurrent-mock-tracer/-concurrent-mock-tracer/","title":"ConcurrentMockTracer - Misk","text":"<p>//misk-testing/misk.testing/ConcurrentMockTracer/ConcurrentMockTracer</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-concurrent-mock-tracer/-concurrent-mock-tracer/#concurrentmocktracer","title":"ConcurrentMockTracer","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun ConcurrentMockTracer()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-concurrent-mock-tracer/take/","title":"take - Misk","text":"<p>//misk-testing/misk.testing/ConcurrentMockTracer/take</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-concurrent-mock-tracer/take/#take","title":"take","text":"<p>[jvm]\\ fun take(): MockSpan</p> <p>Awaits a span, removes it, and returns it.</p> <p>[jvm]\\ fun take(operationName: String): MockSpan</p> <p>Awaits a span named operationName, removes it, and returns it. Spans with other names are consumed and discarded.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/","title":"ExternalDependency - Misk","text":"<p>//misk-testing/misk.testing/ExternalDependency</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/#externaldependency","title":"ExternalDependency","text":"<p>[jvm]\\ interface ExternalDependency</p> <p>An external dependency of the Misk Application that needs to be started for test, like Redis, Vitess, MySQL, SQS, etc.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/#functions","title":"Functions","text":"Name Summary afterEach [jvm]abstract fun afterEach()Called before each test run beforeEach [jvm]abstract fun beforeEach()Called before each test run shutdown [jvm]abstract fun shutdown()Stops the dependency. startup [jvm]abstract fun startup()Starts the dependency."},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/#properties","title":"Properties","text":"Name Summary id [jvm]open val id: StringUnique ID for the dependency, used as a stable key across tests. Can be overridden if more than one instance of the dependency is supported."},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/after-each/","title":"afterEach - Misk","text":"<p>//misk-testing/misk.testing/ExternalDependency/afterEach</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/after-each/#aftereach","title":"afterEach","text":"<p>[jvm]\\ abstract fun afterEach()</p> <p>Called before each test run</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/before-each/","title":"beforeEach - Misk","text":"<p>//misk-testing/misk.testing/ExternalDependency/beforeEach</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/before-each/#beforeeach","title":"beforeEach","text":"<p>[jvm]\\ abstract fun beforeEach()</p> <p>Called before each test run</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/id/","title":"id - Misk","text":"<p>//misk-testing/misk.testing/ExternalDependency/id</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/id/#id","title":"id","text":"<p>[jvm]\\ open val id: String</p> <p>Unique ID for the dependency, used as a stable key across tests. Can be overridden if more than one instance of the dependency is supported.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/shutdown/","title":"shutdown - Misk","text":"<p>//misk-testing/misk.testing/ExternalDependency/shutdown</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/shutdown/#shutdown","title":"shutdown","text":"<p>[jvm]\\ abstract fun shutdown()</p> <p>Stops the dependency.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/startup/","title":"startup - Misk","text":"<p>//misk-testing/misk.testing/ExternalDependency/startup</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-external-dependency/startup/#startup","title":"startup","text":"<p>[jvm]\\ abstract fun startup()</p> <p>Starts the dependency.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-inject-test/","title":"InjectTest - Misk","text":"<p>//misk-testing/misk.testing/InjectTest</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-inject-test/#injecttest","title":"InjectTest","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FUNCTION])</p> <p>@Test</p> <p>@ExtendWith(value = [InjectingParameterResolver::class])</p> <p>annotation class InjectTest</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-inject-test/-inject-test/","title":"InjectTest - Misk","text":"<p>//misk-testing/misk.testing/InjectTest/InjectTest</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-inject-test/-inject-test/#injecttest","title":"InjectTest","text":"<p>[jvm]\\ fun InjectTest()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-injecting-parameter-resolver/","title":"InjectingParameterResolver - Misk","text":"<p>//misk-testing/misk.testing/InjectingParameterResolver</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-injecting-parameter-resolver/#injectingparameterresolver","title":"InjectingParameterResolver","text":"<p>[jvm]\\ class InjectingParameterResolver : ParameterResolver</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-injecting-parameter-resolver/#functions","title":"Functions","text":"Name Summary resolveParameter [jvm]open override fun resolveParameter(parameterContext: ParameterContext, extensionContext: ExtensionContext): Any supportsParameter [jvm]open override fun supportsParameter(parameterContext: ParameterContext, extensionContext: ExtensionContext): Boolean"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-injecting-parameter-resolver/-injecting-parameter-resolver/","title":"InjectingParameterResolver - Misk","text":"<p>//misk-testing/misk.testing/InjectingParameterResolver/InjectingParameterResolver</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-injecting-parameter-resolver/-injecting-parameter-resolver/#injectingparameterresolver","title":"InjectingParameterResolver","text":"<p>[jvm]\\ fun InjectingParameterResolver()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-injecting-parameter-resolver/resolve-parameter/","title":"resolveParameter - Misk","text":"<p>//misk-testing/misk.testing/InjectingParameterResolver/resolveParameter</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-injecting-parameter-resolver/resolve-parameter/#resolveparameter","title":"resolveParameter","text":"<p>[jvm]\\ open override fun resolveParameter(parameterContext: ParameterContext, extensionContext: ExtensionContext): Any</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-injecting-parameter-resolver/supports-parameter/","title":"supportsParameter - Misk","text":"<p>//misk-testing/misk.testing/InjectingParameterResolver/supportsParameter</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-injecting-parameter-resolver/supports-parameter/#supportsparameter","title":"supportsParameter","text":"<p>[jvm]\\ open override fun supportsParameter(parameterContext: ParameterContext, extensionContext: ExtensionContext): Boolean</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/","title":"LogLevel - Misk","text":"<p>//misk-testing/misk.testing/LogLevel</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/#loglevel","title":"LogLevel","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.CLASS, AnnotationTarget.FUNCTION])</p> <p>annotation class LogLevel(level: LogLevel.Level)</p> <p>Annotate your test classes or methods with @LogLevel to change the log level used by the test. It can be useful to have different LogLevel by test, specially if you\u2019re debugging issues on CI.</p> <p>You can annotate methods:</p> <p>@LogLevel(level = LogLevel.Level.DEBUG)\\ @Test fun levelDebug() {\\ }</p> <p>Also, You can annotate test classes:</p> <p>@LogLevel(level = LogLevel.Level.ERROR)\\ class <code>you can annotate the test</code> {\\ @Test fun levelError() {</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/#constructors","title":"Constructors","text":"LogLevel [jvm]fun LogLevel(level: LogLevel.Level = Level.INFO)"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/#types","title":"Types","text":"Name Summary Level [jvm]enum Level : Enum&lt;LogLevel.Level&gt;"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/#properties","title":"Properties","text":"Name Summary level [jvm]val level: LogLevel.Level"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-log-level/","title":"LogLevel - Misk","text":"<p>//misk-testing/misk.testing/LogLevel/LogLevel</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-log-level/#loglevel","title":"LogLevel","text":"<p>[jvm]\\ fun LogLevel(level: LogLevel.Level = Level.INFO)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/level/","title":"level - Misk","text":"<p>//misk-testing/misk.testing/LogLevel/level</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/level/#level","title":"level","text":"<p>[jvm]\\ val level: LogLevel.Level</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/","title":"Level - Misk","text":"<p>//misk-testing/misk.testing/LogLevel/Level</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/#level","title":"Level","text":"<p>[jvm]\\ enum Level : Enum&lt;LogLevel.Level&gt;</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/#entries","title":"Entries","text":"ERROR [jvm]ERROR() WARN [jvm]WARN() INFO [jvm]INFO() DEBUG [jvm]DEBUG()"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/-d-e-b-u-g/","title":"DEBUG - Misk","text":"<p>//misk-testing/misk.testing/LogLevel/Level/DEBUG</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/-d-e-b-u-g/#debug","title":"DEBUG","text":"<p>[jvm]\\ DEBUG()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/-d-e-b-u-g/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/-e-r-r-o-r/","title":"ERROR - Misk","text":"<p>//misk-testing/misk.testing/LogLevel/Level/ERROR</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/-e-r-r-o-r/#error","title":"ERROR","text":"<p>[jvm]\\ ERROR()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/-e-r-r-o-r/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/-i-n-f-o/","title":"INFO - Misk","text":"<p>//misk-testing/misk.testing/LogLevel/Level/INFO</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/-i-n-f-o/#info","title":"INFO","text":"<p>[jvm]\\ INFO()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/-i-n-f-o/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/-w-a-r-n/","title":"WARN - Misk","text":"<p>//misk-testing/misk.testing/LogLevel/Level/WARN</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/-w-a-r-n/#warn","title":"WARN","text":"<p>[jvm]\\ WARN()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level/-level/-w-a-r-n/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level-extension/","title":"LogLevelExtension - Misk","text":"<p>//misk-testing/misk.testing/LogLevelExtension</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level-extension/#loglevelextension","title":"LogLevelExtension","text":"<p>[jvm]\\ class LogLevelExtension@Injectconstructor : BeforeEachCallback</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level-extension/#functions","title":"Functions","text":"Name Summary beforeEach [jvm]open override fun beforeEach(context: ExtensionContext?)"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level-extension/-log-level-extension/","title":"LogLevelExtension - Misk","text":"<p>//misk-testing/misk.testing/LogLevelExtension/LogLevelExtension</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level-extension/-log-level-extension/#loglevelextension","title":"LogLevelExtension","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun LogLevelExtension()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level-extension/before-each/","title":"beforeEach - Misk","text":"<p>//misk-testing/misk.testing/LogLevelExtension/beforeEach</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-log-level-extension/before-each/#beforeeach","title":"beforeEach","text":"<p>[jvm]\\ open override fun beforeEach(context: ExtensionContext?)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-external-dependency/","title":"MiskExternalDependency - Misk","text":"<p>//misk-testing/misk.testing/MiskExternalDependency</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-external-dependency/#miskexternaldependency","title":"MiskExternalDependency","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FIELD])</p> <p>annotation class MiskExternalDependency</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-external-dependency/-misk-external-dependency/","title":"MiskExternalDependency - Misk","text":"<p>//misk-testing/misk.testing/MiskExternalDependency/MiskExternalDependency</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-external-dependency/-misk-external-dependency/#miskexternaldependency","title":"MiskExternalDependency","text":"<p>[jvm]\\ fun MiskExternalDependency()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-test/","title":"MiskTest - Misk","text":"<p>//misk-testing/misk.testing/MiskTest</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-test/#misktest","title":"MiskTest","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.CLASS])</p> <p>@ExtendWith(value = [MiskTestExtension::class])</p> <p>annotation class MiskTest(startService: Boolean)</p> <p>Annotate your test classes with @MiskTest to have fields annotated with @Inject initialized. Provide modules to be installed by annotating a Module field in your test class with MiskTestModule. This can be a compound module, composed using Modules.combine.</p> <p>Configure test callbacks with Guice multibindings. Register instances by calling multibind() in a KAbstractModule:</p> <p>multibind&lt;BeforeEachCallback&gt;().to&lt;MyBeforeEach&gt;()\\ multibind&lt;AfterEachCallback&gt;().to&lt;MyAfterEach&gt;()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-test/#constructors","title":"Constructors","text":"MiskTest [jvm]fun MiskTest(startService: Boolean = false)"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-test/#properties","title":"Properties","text":"Name Summary startService [jvm]val startService: Boolean = false"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-test/-misk-test/","title":"MiskTest - Misk","text":"<p>//misk-testing/misk.testing/MiskTest/MiskTest</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-test/-misk-test/#misktest","title":"MiskTest","text":"<p>[jvm]\\ fun MiskTest(startService: Boolean = false)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-test/start-service/","title":"startService - Misk","text":"<p>//misk-testing/misk.testing/MiskTest/startService</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-test/start-service/#startservice","title":"startService","text":"<p>[jvm]\\ val startService: Boolean = false</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-test-module/","title":"MiskTestModule - Misk","text":"<p>//misk-testing/misk.testing/MiskTestModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-test-module/#misktestmodule","title":"MiskTestModule","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.FIELD])</p> <p>annotation class MiskTestModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-test-module/-misk-test-module/","title":"MiskTestModule - Misk","text":"<p>//misk-testing/misk.testing/MiskTestModule/MiskTestModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-misk-test-module/-misk-test-module/#misktestmodule","title":"MiskTestModule","text":"<p>[jvm]\\ fun MiskTestModule()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-mock-tracing-backend-module/","title":"MockTracingBackendModule - Misk","text":"<p>//misk-testing/misk.testing/MockTracingBackendModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-mock-tracing-backend-module/#mocktracingbackendmodule","title":"MockTracingBackendModule","text":"<p>[jvm]\\ class MockTracingBackendModule : KAbstractModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-mock-tracing-backend-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-mock-tracing-backend-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-mock-tracing-backend-module/-mock-tracing-backend-module/","title":"MockTracingBackendModule - Misk","text":"<p>//misk-testing/misk.testing/MockTracingBackendModule/MockTracingBackendModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-mock-tracing-backend-module/-mock-tracing-backend-module/#mocktracingbackendmodule","title":"MockTracingBackendModule","text":"<p>[jvm]\\ fun MockTracingBackendModule()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/","title":"TemporaryFolder - Misk","text":"<p>//misk-testing/misk.testing/TemporaryFolder</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/#temporaryfolder","title":"TemporaryFolder","text":"<p>[jvm]\\ class TemporaryFolder(root: Path)</p> <p>A temporary folder for use by a given test</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/#constructors","title":"Constructors","text":"TemporaryFolder [jvm]fun TemporaryFolder(root: Path)"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/#functions","title":"Functions","text":"Name Summary delete [jvm]fun delete()Deletes all files and folders under the temporary folder newFile [jvm]fun newFile(): Pathfun newFile(name: String): Path newFolder [jvm]fun newFolder(): Pathfun newFolder(name: String): Path"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/#properties","title":"Properties","text":"Name Summary root [jvm]val root: Path"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/-temporary-folder/","title":"TemporaryFolder - Misk","text":"<p>//misk-testing/misk.testing/TemporaryFolder/TemporaryFolder</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/-temporary-folder/#temporaryfolder","title":"TemporaryFolder","text":"<p>[jvm]\\ fun TemporaryFolder(root: Path)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/delete/","title":"delete - Misk","text":"<p>//misk-testing/misk.testing/TemporaryFolder/delete</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/delete/#delete","title":"delete","text":"<p>[jvm]\\ fun delete()</p> <p>Deletes all files and folders under the temporary folder</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/new-file/","title":"newFile - Misk","text":"<p>//misk-testing/misk.testing/TemporaryFolder/newFile</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/new-file/#newfile","title":"newFile","text":"<p>[jvm]\\ fun newFile(): Path</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/new-file/#return","title":"Return","text":"<p>a new file with a randomly generated name</p> <p>[jvm]\\ fun newFile(name: String): Path</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/new-file/#return_1","title":"Return","text":"<p>a new file with the given name</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/new-folder/","title":"newFolder - Misk","text":"<p>//misk-testing/misk.testing/TemporaryFolder/newFolder</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/new-folder/#newfolder","title":"newFolder","text":"<p>[jvm]\\ fun newFolder(): Path</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/new-folder/#return","title":"Return","text":"<p>a new folder with a randomly generated name</p> <p>[jvm]\\ fun newFolder(name: String): Path</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/new-folder/#return_1","title":"Return","text":"<p>a new folder with the given name</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/root/","title":"root - Misk","text":"<p>//misk-testing/misk.testing/TemporaryFolder/root</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder/root/#root","title":"root","text":"<p>[jvm]\\ val root: Path</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/","title":"TemporaryFolderModule - Misk","text":"<p>//misk-testing/misk.testing/TemporaryFolderModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/#temporaryfoldermodule","title":"TemporaryFolderModule","text":"<p>[jvm]\\ class TemporaryFolderModule : KAbstractModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/#types","title":"Types","text":"Name Summary DeleteTempFolder [jvm]class DeleteTempFolder@Injectconstructor(tempDir: TemporaryFolder) : AfterEachCallback"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) provideTemporaryFolder [jvm]@Provides@Singletonfun provideTemporaryFolder(): TemporaryFolder requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/-temporary-folder-module/","title":"TemporaryFolderModule - Misk","text":"<p>//misk-testing/misk.testing/TemporaryFolderModule/TemporaryFolderModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/-temporary-folder-module/#temporaryfoldermodule","title":"TemporaryFolderModule","text":"<p>[jvm]\\ fun TemporaryFolderModule()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/provide-temporary-folder/","title":"provideTemporaryFolder - Misk","text":"<p>//misk-testing/misk.testing/TemporaryFolderModule/provideTemporaryFolder</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/provide-temporary-folder/#providetemporaryfolder","title":"provideTemporaryFolder","text":"<p>[jvm]\\</p> <p>@Provides</p> <p>@Singleton</p> <p>fun provideTemporaryFolder(): TemporaryFolder</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/","title":"DeleteTempFolder - Misk","text":"<p>//misk-testing/misk.testing/TemporaryFolderModule/DeleteTempFolder</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/#deletetempfolder","title":"DeleteTempFolder","text":"<p>[jvm]\\ class DeleteTempFolder@Injectconstructor(tempDir: TemporaryFolder) : AfterEachCallback</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/#functions","title":"Functions","text":"Name Summary afterEach [jvm]open override fun afterEach(context: ExtensionContext)"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/-delete-temp-folder/","title":"DeleteTempFolder - Misk","text":"<p>//misk-testing/misk.testing/TemporaryFolderModule/DeleteTempFolder/DeleteTempFolder</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/-delete-temp-folder/#deletetempfolder","title":"DeleteTempFolder","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun DeleteTempFolder(tempDir: TemporaryFolder)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/after-each/","title":"afterEach - Misk","text":"<p>//misk-testing/misk.testing/TemporaryFolderModule/DeleteTempFolder/afterEach</p>"},{"location":"0.x/misk-testing/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/after-each/#aftereach","title":"afterEach","text":"<p>[jvm]\\ open override fun afterEach(context: ExtensionContext)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.time/","title":"Package misk.time - Misk","text":"<p>//misk-testing/misk.time</p>"},{"location":"0.x/misk-testing/misk-testing/misk.time/#package-misktime","title":"Package misk.time","text":""},{"location":"0.x/misk-testing/misk-testing/misk.time/#types","title":"Types","text":"Name Summary FakeClock [jvm]@Singletonclass FakeClock@Injectconstructor : FakeClock FakeClockModule [jvm]class FakeClockModule : KInstallOnceModule FakeTickerModule [jvm]class FakeTickerModule : KAbstractModule"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-clock/","title":"FakeClock - Misk","text":"<p>//misk-testing/misk.time/FakeClock</p>"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-clock/#fakeclock","title":"FakeClock","text":"<p>[jvm]\\ @Singleton</p> <p>class FakeClock@Injectconstructor : FakeClock</p>"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-clock/#functions","title":"Functions","text":"Name Summary add [jvm]fun add(d: Duration): Longfun add(p: Period): Longfun add(n: Long, unit: TimeUnit): Long equals [jvm]open operator override fun equals(other: Any?): Boolean getZone [jvm]open override fun getZone(): ZoneId hashCode [jvm]open override fun hashCode(): Int instant [jvm]open override fun instant(): Instant millis [jvm]open override fun millis(): Long setNow [jvm]fun setNow(instant: Instant) withZone [jvm]open override fun withZone(zone: ZoneId): Clock"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-clock/-fake-clock/","title":"FakeClock - Misk","text":"<p>//misk-testing/misk.time/FakeClock/FakeClock</p>"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-clock/-fake-clock/#fakeclock","title":"FakeClock","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun FakeClock()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-clock-module/","title":"FakeClockModule - Misk","text":"<p>//misk-testing/misk.time/FakeClockModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-clock-module/#fakeclockmodule","title":"FakeClockModule","text":"<p>[jvm]\\ class FakeClockModule : KInstallOnceModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-clock-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage equals [jvm]operator override fun equals(other: Any?): Boolean getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; hashCode [jvm]override fun hashCode(): Int install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-clock-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-clock-module/-fake-clock-module/","title":"FakeClockModule - Misk","text":"<p>//misk-testing/misk.time/FakeClockModule/FakeClockModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-clock-module/-fake-clock-module/#fakeclockmodule","title":"FakeClockModule","text":"<p>[jvm]\\ fun FakeClockModule()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-ticker-module/","title":"FakeTickerModule - Misk","text":"<p>//misk-testing/misk.time/FakeTickerModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-ticker-module/#faketickermodule","title":"FakeTickerModule","text":"<p>[jvm]\\ class FakeTickerModule : KAbstractModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-ticker-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-ticker-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-ticker-module/-fake-ticker-module/","title":"FakeTickerModule - Misk","text":"<p>//misk-testing/misk.time/FakeTickerModule/FakeTickerModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.time/-fake-ticker-module/-fake-ticker-module/#faketickermodule","title":"FakeTickerModule","text":"<p>[jvm]\\ fun FakeTickerModule()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/","title":"Package misk.web - Misk","text":"<p>//misk-testing/misk.web</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/#package-miskweb","title":"Package misk.web","text":""},{"location":"0.x/misk-testing/misk-testing/misk.web/#types","title":"Types","text":"Name Summary FakeHttpCall [jvm]data class FakeHttpCall@JvmOverloadsconstructor(url: HttpUrl, linkLayerLocalAddress: SocketAddress, dispatchMechanism: DispatchMechanism, requestHeaders: Headers, statusCode: Int, networkStatusCode: Int, headersBuilder: Headers.Builder, sendTrailers: Boolean, trailersBuilder: Headers.Builder, requestBody: BufferedSource?, responseBody: BufferedSink?, webSocket: WebSocket?, webSocketListener: WebSocketListener?, cookies: List&lt;Cookie&gt;) : HttpCall FakeWebSocket [jvm]class FakeWebSocket : WebSocket FakeWebSocketListener [jvm]class FakeWebSocketListener : WebSocketListener MiskCallerExtension [jvm]class MiskCallerExtension : BeforeTestExecutionCallback, AfterTestExecutionCallback WebServerTestingModule [jvm]class WebServerTestingModule@JvmOverloadsconstructor(webConfig: WebConfig) : KAbstractModuleA module that starts an embedded Jetty web server configured for testing. The server supports both plaintext and TLS. WebTestClient [jvm]class WebTestClient@Injectconstructor(moshi: Moshi, jettyService: JettyService)Use WebTestClient to test calls to the application at the integration level. WithMiskCaller [jvm]@Target(allowedTargets = [AnnotationTarget.CLASS])@ExtendWith(value = [MiskCallerExtension::class])annotation class WithMiskCaller(user: String, service: String)Use this annotation to specify an ActionScoped for this class."},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/","title":"FakeHttpCall - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/#fakehttpcall","title":"FakeHttpCall","text":"<p>[jvm]\\ data class FakeHttpCall@JvmOverloadsconstructor(url: HttpUrl, linkLayerLocalAddress: SocketAddress, dispatchMechanism: DispatchMechanism, requestHeaders: Headers, statusCode: Int, networkStatusCode: Int, headersBuilder: Headers.Builder, sendTrailers: Boolean, trailersBuilder: Headers.Builder, requestBody: BufferedSource?, responseBody: BufferedSink?, webSocket: WebSocket?, webSocketListener: WebSocketListener?, cookies: List&lt;Cookie&gt;) : HttpCall</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/#functions","title":"Functions","text":"Name Summary accepts [jvm]open fun accepts(): List&lt;MediaRange&gt; addResponseHeaders [jvm]open override fun addResponseHeaders(headers: Headers) asOkHttpRequest [jvm]open fun asOkHttpRequest(): Request computeRequestHeader [jvm]open fun computeRequestHeader(name: String, computeFn: (String?) -&gt; Pair&lt;String, String&gt;?) contentType [jvm]open fun contentType(): MediaType? initWebSocketListener [jvm]open override fun initWebSocketListener(webSocketListener: WebSocketListener) putRequestBody [jvm]open override fun putRequestBody(requestBody: BufferedSource) putResponseBody [jvm]open override fun putResponseBody(responseBody: BufferedSink) putWebSocket [jvm]open override fun putWebSocket(webSocket: WebSocket) requireTrailers [jvm]open override fun requireTrailers() setResponseHeader [jvm]open override fun setResponseHeader(name: String, value: String) setResponseTrailer [jvm]open override fun setResponseTrailer(name: String, value: String) setStatusCodes [jvm]open override fun setStatusCodes(statusCode: Int, networkStatusCode: Int) takeRequestBody [jvm]open override fun takeRequestBody(): BufferedSource? takeResponseBody [jvm]open override fun takeResponseBody(): BufferedSink? takeWebSocket [jvm]open override fun takeWebSocket(): WebSocket?"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/#properties","title":"Properties","text":"Name Summary cookies [jvm]open override var cookies: List&lt;Cookie&gt; dispatchMechanism [jvm]open override val dispatchMechanism: DispatchMechanism headersBuilder [jvm]val headersBuilder: Headers.Builder linkLayerLocalAddress [jvm]open override val linkLayerLocalAddress: SocketAddress networkStatusCode [jvm]open override var networkStatusCode: Int = 200 requestBody [jvm]var requestBody: BufferedSource? requestHeaders [jvm]open override var requestHeaders: Headers responseBody [jvm]var responseBody: BufferedSink? responseHeaders [jvm]open override val responseHeaders: Headers sendTrailers [jvm]var sendTrailers: Boolean = false statusCode [jvm]open override var statusCode: Int = 200 trailersBuilder [jvm]val trailersBuilder: Headers.Builder url [jvm]open override val url: HttpUrl webSocket [jvm]var webSocket: WebSocket? = null webSocketListener [jvm]var webSocketListener: WebSocketListener? = null"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/-fake-http-call/","title":"FakeHttpCall - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/FakeHttpCall</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/-fake-http-call/#fakehttpcall","title":"FakeHttpCall","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun FakeHttpCall(url: HttpUrl = \u201chttps://example.com/\".toHttpUrl(), linkLayerLocalAddress: SocketAddress = SocketAddress.Network(\u201c1.2.3.4\u201d, 56789), dispatchMechanism: DispatchMechanism = DispatchMechanism.GET, requestHeaders: Headers = headersOf(), statusCode: Int = 200, networkStatusCode: Int = 200, headersBuilder: Headers.Builder = Headers.Builder(), sendTrailers: Boolean = false, trailersBuilder: Headers.Builder = Headers.Builder(), requestBody: BufferedSource? = Buffer(), responseBody: BufferedSink? = Buffer(), webSocket: WebSocket? = null, webSocketListener: WebSocketListener? = null, cookies: List&lt;Cookie&gt; = listOf())</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/add-response-headers/","title":"addResponseHeaders - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/addResponseHeaders</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/add-response-headers/#addresponseheaders","title":"addResponseHeaders","text":"<p>[jvm]\\ open override fun addResponseHeaders(headers: Headers)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/cookies/","title":"cookies - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/cookies</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/cookies/#cookies","title":"cookies","text":"<p>[jvm]\\ open override var cookies: List&lt;Cookie&gt;</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/dispatch-mechanism/","title":"dispatchMechanism - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/dispatchMechanism</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/dispatch-mechanism/#dispatchmechanism","title":"dispatchMechanism","text":"<p>[jvm]\\ open override val dispatchMechanism: DispatchMechanism</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/headers-builder/","title":"headersBuilder - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/headersBuilder</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/headers-builder/#headersbuilder","title":"headersBuilder","text":"<p>[jvm]\\ val headersBuilder: Headers.Builder</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/init-web-socket-listener/","title":"initWebSocketListener - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/initWebSocketListener</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/init-web-socket-listener/#initwebsocketlistener","title":"initWebSocketListener","text":"<p>[jvm]\\ open override fun initWebSocketListener(webSocketListener: WebSocketListener)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/link-layer-local-address/","title":"linkLayerLocalAddress - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/linkLayerLocalAddress</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/link-layer-local-address/#linklayerlocaladdress","title":"linkLayerLocalAddress","text":"<p>[jvm]\\ open override val linkLayerLocalAddress: SocketAddress</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/network-status-code/","title":"networkStatusCode - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/networkStatusCode</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/network-status-code/#networkstatuscode","title":"networkStatusCode","text":"<p>[jvm]\\ open override var networkStatusCode: Int = 200</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/put-request-body/","title":"putRequestBody - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/putRequestBody</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/put-request-body/#putrequestbody","title":"putRequestBody","text":"<p>[jvm]\\ open override fun putRequestBody(requestBody: BufferedSource)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/put-response-body/","title":"putResponseBody - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/putResponseBody</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/put-response-body/#putresponsebody","title":"putResponseBody","text":"<p>[jvm]\\ open override fun putResponseBody(responseBody: BufferedSink)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/put-web-socket/","title":"putWebSocket - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/putWebSocket</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/put-web-socket/#putwebsocket","title":"putWebSocket","text":"<p>[jvm]\\ open override fun putWebSocket(webSocket: WebSocket)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/request-body/","title":"requestBody - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/requestBody</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/request-body/#requestbody","title":"requestBody","text":"<p>[jvm]\\ var requestBody: BufferedSource?</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/request-headers/","title":"requestHeaders - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/requestHeaders</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/request-headers/#requestheaders","title":"requestHeaders","text":"<p>[jvm]\\ open override var requestHeaders: Headers</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/require-trailers/","title":"requireTrailers - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/requireTrailers</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/require-trailers/#requiretrailers","title":"requireTrailers","text":"<p>[jvm]\\ open override fun requireTrailers()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/response-body/","title":"responseBody - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/responseBody</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/response-body/#responsebody","title":"responseBody","text":"<p>[jvm]\\ var responseBody: BufferedSink?</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/response-headers/","title":"responseHeaders - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/responseHeaders</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/response-headers/#responseheaders","title":"responseHeaders","text":"<p>[jvm]\\ open override val responseHeaders: Headers</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/send-trailers/","title":"sendTrailers - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/sendTrailers</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/send-trailers/#sendtrailers","title":"sendTrailers","text":"<p>[jvm]\\ var sendTrailers: Boolean = false</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/set-response-header/","title":"setResponseHeader - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/setResponseHeader</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/set-response-header/#setresponseheader","title":"setResponseHeader","text":"<p>[jvm]\\ open override fun setResponseHeader(name: String, value: String)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/set-response-trailer/","title":"setResponseTrailer - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/setResponseTrailer</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/set-response-trailer/#setresponsetrailer","title":"setResponseTrailer","text":"<p>[jvm]\\ open override fun setResponseTrailer(name: String, value: String)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/set-status-codes/","title":"setStatusCodes - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/setStatusCodes</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/set-status-codes/#setstatuscodes","title":"setStatusCodes","text":"<p>[jvm]\\ open override fun setStatusCodes(statusCode: Int, networkStatusCode: Int)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/status-code/","title":"statusCode - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/statusCode</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/status-code/#statuscode","title":"statusCode","text":"<p>[jvm]\\ open override var statusCode: Int = 200</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/take-request-body/","title":"takeRequestBody - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/takeRequestBody</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/take-request-body/#takerequestbody","title":"takeRequestBody","text":"<p>[jvm]\\ open override fun takeRequestBody(): BufferedSource?</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/take-response-body/","title":"takeResponseBody - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/takeResponseBody</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/take-response-body/#takeresponsebody","title":"takeResponseBody","text":"<p>[jvm]\\ open override fun takeResponseBody(): BufferedSink?</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/take-web-socket/","title":"takeWebSocket - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/takeWebSocket</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/take-web-socket/#takewebsocket","title":"takeWebSocket","text":"<p>[jvm]\\ open override fun takeWebSocket(): WebSocket?</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/trailers-builder/","title":"trailersBuilder - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/trailersBuilder</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/trailers-builder/#trailersbuilder","title":"trailersBuilder","text":"<p>[jvm]\\ val trailersBuilder: Headers.Builder</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/url/","title":"url - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/url</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/url/#url","title":"url","text":"<p>[jvm]\\ open override val url: HttpUrl</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/web-socket-listener/","title":"webSocketListener - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/webSocketListener</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/web-socket-listener/#websocketlistener","title":"webSocketListener","text":"<p>[jvm]\\ var webSocketListener: WebSocketListener? = null</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/web-socket/","title":"webSocket - Misk","text":"<p>//misk-testing/misk.web/FakeHttpCall/webSocket</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-http-call/web-socket/#websocket","title":"webSocket","text":"<p>[jvm]\\ var webSocket: WebSocket? = null</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/","title":"FakeWebSocket - Misk","text":"<p>//misk-testing/misk.web/FakeWebSocket</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/#fakewebsocket","title":"FakeWebSocket","text":"<p>[jvm]\\ class FakeWebSocket : WebSocket</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/#functions","title":"Functions","text":"Name Summary cancel [jvm]open override fun cancel() close [jvm]open override fun close(code: Int, reason: String?): Boolean poll [jvm]fun poll(): String? queueSize [jvm]open override fun queueSize(): Long send [jvm]open override fun send(text: String): Booleanopen override fun send(bytes: ByteString): Boolean"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/-fake-web-socket/","title":"FakeWebSocket - Misk","text":"<p>//misk-testing/misk.web/FakeWebSocket/FakeWebSocket</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/-fake-web-socket/#fakewebsocket","title":"FakeWebSocket","text":"<p>[jvm]\\ fun FakeWebSocket()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/cancel/","title":"cancel - Misk","text":"<p>//misk-testing/misk.web/FakeWebSocket/cancel</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/cancel/#cancel","title":"cancel","text":"<p>[jvm]\\ open override fun cancel()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/close/","title":"close - Misk","text":"<p>//misk-testing/misk.web/FakeWebSocket/close</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/close/#close","title":"close","text":"<p>[jvm]\\ open override fun close(code: Int, reason: String?): Boolean</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/poll/","title":"poll - Misk","text":"<p>//misk-testing/misk.web/FakeWebSocket/poll</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/poll/#poll","title":"poll","text":"<p>[jvm]\\ fun poll(): String?</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/queue-size/","title":"queueSize - Misk","text":"<p>//misk-testing/misk.web/FakeWebSocket/queueSize</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/queue-size/#queuesize","title":"queueSize","text":"<p>[jvm]\\ open override fun queueSize(): Long</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/send/","title":"send - Misk","text":"<p>//misk-testing/misk.web/FakeWebSocket/send</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket/send/#send","title":"send","text":"<p>[jvm]\\ open override fun send(bytes: ByteString): Boolean</p> <p>open override fun send(text: String): Boolean</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket-listener/","title":"FakeWebSocketListener - Misk","text":"<p>//misk-testing/misk.web/FakeWebSocketListener</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket-listener/#fakewebsocketlistener","title":"FakeWebSocketListener","text":"<p>[jvm]\\ class FakeWebSocketListener : WebSocketListener</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket-listener/#functions","title":"Functions","text":"Name Summary onClosed [jvm]open fun onClosed(webSocket: WebSocket, code: Int, reason: String) onClosing [jvm]open fun onClosing(webSocket: WebSocket, code: Int, reason: String) onFailure [jvm]open fun onFailure(webSocket: WebSocket, t: Throwable, response: Response?) onMessage [jvm]open override fun onMessage(webSocket: WebSocket, text: String)open fun onMessage(webSocket: WebSocket, bytes: ByteString) onOpen [jvm]open fun onOpen(webSocket: WebSocket, response: Response) takeMessage [jvm]fun takeMessage(): String"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket-listener/#properties","title":"Properties","text":"Name Summary messages [jvm]val messages: LinkedBlockingDeque&lt;String&gt;"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket-listener/-fake-web-socket-listener/","title":"FakeWebSocketListener - Misk","text":"<p>//misk-testing/misk.web/FakeWebSocketListener/FakeWebSocketListener</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket-listener/-fake-web-socket-listener/#fakewebsocketlistener","title":"FakeWebSocketListener","text":"<p>[jvm]\\ fun FakeWebSocketListener()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket-listener/messages/","title":"messages - Misk","text":"<p>//misk-testing/misk.web/FakeWebSocketListener/messages</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket-listener/messages/#messages","title":"messages","text":"<p>[jvm]\\ val messages: LinkedBlockingDeque&lt;String&gt;</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket-listener/on-message/","title":"onMessage - Misk","text":"<p>//misk-testing/misk.web/FakeWebSocketListener/onMessage</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket-listener/on-message/#onmessage","title":"onMessage","text":"<p>[jvm]\\ open override fun onMessage(webSocket: WebSocket, text: String)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket-listener/take-message/","title":"takeMessage - Misk","text":"<p>//misk-testing/misk.web/FakeWebSocketListener/takeMessage</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-fake-web-socket-listener/take-message/#takemessage","title":"takeMessage","text":"<p>[jvm]\\ fun takeMessage(): String</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-misk-caller-extension/","title":"MiskCallerExtension - Misk","text":"<p>//misk-testing/misk.web/MiskCallerExtension</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-misk-caller-extension/#miskcallerextension","title":"MiskCallerExtension","text":"<p>[jvm]\\ class MiskCallerExtension : BeforeTestExecutionCallback, AfterTestExecutionCallback</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-misk-caller-extension/#functions","title":"Functions","text":"Name Summary afterTestExecution [jvm]open override fun afterTestExecution(context: ExtensionContext) beforeTestExecution [jvm]open override fun beforeTestExecution(context: ExtensionContext)"},{"location":"0.x/misk-testing/misk-testing/misk.web/-misk-caller-extension/-misk-caller-extension/","title":"MiskCallerExtension - Misk","text":"<p>//misk-testing/misk.web/MiskCallerExtension/MiskCallerExtension</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-misk-caller-extension/-misk-caller-extension/#miskcallerextension","title":"MiskCallerExtension","text":"<p>[jvm]\\ fun MiskCallerExtension()</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-misk-caller-extension/after-test-execution/","title":"afterTestExecution - Misk","text":"<p>//misk-testing/misk.web/MiskCallerExtension/afterTestExecution</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-misk-caller-extension/after-test-execution/#aftertestexecution","title":"afterTestExecution","text":"<p>[jvm]\\ open override fun afterTestExecution(context: ExtensionContext)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-misk-caller-extension/before-test-execution/","title":"beforeTestExecution - Misk","text":"<p>//misk-testing/misk.web/MiskCallerExtension/beforeTestExecution</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-misk-caller-extension/before-test-execution/#beforetestexecution","title":"beforeTestExecution","text":"<p>[jvm]\\ open override fun beforeTestExecution(context: ExtensionContext)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-server-testing-module/","title":"WebServerTestingModule - Misk","text":"<p>//misk-testing/misk.web/WebServerTestingModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-server-testing-module/#webservertestingmodule","title":"WebServerTestingModule","text":"<p>[jvm]\\ class WebServerTestingModule@JvmOverloadsconstructor(webConfig: WebConfig) : KAbstractModule</p> <p>A module that starts an embedded Jetty web server configured for testing. The server supports both plaintext and TLS.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-server-testing-module/#constructors","title":"Constructors","text":"WebServerTestingModule [jvm]@JvmOverloadsfun WebServerTestingModule(webConfig: WebConfig = TESTING_WEB_CONFIG)"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-server-testing-module/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-server-testing-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-server-testing-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-server-testing-module/-web-server-testing-module/","title":"WebServerTestingModule - Misk","text":"<p>//misk-testing/misk.web/WebServerTestingModule/WebServerTestingModule</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-server-testing-module/-web-server-testing-module/#webservertestingmodule","title":"WebServerTestingModule","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun WebServerTestingModule(webConfig: WebConfig = TESTING_WEB_CONFIG)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-server-testing-module/-companion/","title":"Companion - Misk","text":"<p>//misk-testing/misk.web/WebServerTestingModule/Companion</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-server-testing-module/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-server-testing-module/-companion/#properties","title":"Properties","text":"Name Summary TESTING_WEB_CONFIG [jvm]val TESTING_WEB_CONFIG: WebConfig"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-server-testing-module/-companion/-t-e-s-t-i-n-g_-w-e-b_-c-o-n-f-i-g/","title":"TESTING_WEB_CONFIG - Misk","text":"<p>//misk-testing/misk.web/WebServerTestingModule/Companion/TESTING_WEB_CONFIG</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-server-testing-module/-companion/-t-e-s-t-i-n-g_-w-e-b_-c-o-n-f-i-g/#testing_web_config","title":"TESTING_WEB_CONFIG","text":"<p>[jvm]\\ val TESTING_WEB_CONFIG: WebConfig</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/","title":"WebTestClient - Misk","text":"<p>//misk-testing/misk.web/WebTestClient</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/#webtestclient","title":"WebTestClient","text":"<p>[jvm]\\ class WebTestClient@Injectconstructor(moshi: Moshi, jettyService: JettyService)</p> <p>Use WebTestClient to test calls to the application at the integration level.</p> <p>To use:</p> <ul> <li>Add @MiskTest(startService = true) to the test class</li> <li>Add a module under test: @MiskTestModule val module = TestModule()</li> <li>Add WebTestingModule to the module under test: install(WebTestingModule())</li> <li>Inject WebTestClient in the test class</li> </ul>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/#constructors","title":"Constructors","text":"WebTestClient [jvm]@Injectfun WebTestClient(moshi: Moshi, jettyService: JettyService)"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/#types","title":"Types","text":"Name Summary WebTestResponse [jvm]data class WebTestResponse(response: Response, moshi: Moshi)"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/#functions","title":"Functions","text":"Name Summary call [jvm]fun call(path: String, action: Request.Builder.() -&gt; Unit): WebTestClient.WebTestResponsePerforms a call to the started service. Allows the caller to customize the action before it\u2019s sent through. get [jvm]fun get(path: String): WebTestClient.WebTestResponse post [jvm]inline fun &lt;T : Any&gt; post(path: String, body: T): WebTestClient.WebTestResponsefun &lt;T : Any&gt; post(path: String, body: T, tClass: KClass&lt;T&gt;): WebTestClient.WebTestResponsePerforms a POST request with a JSON request body created from the input.[jvm]@JvmOverloadsfun post(path: String, body: String, mediaType: MediaType = MediaTypes.APPLICATION_JSON_MEDIA_TYPE): WebTestClient.WebTestResponsePerforms a POST request."},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/-web-test-client/","title":"WebTestClient - Misk","text":"<p>//misk-testing/misk.web/WebTestClient/WebTestClient</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/-web-test-client/#webtestclient","title":"WebTestClient","text":"<p>[jvm]\\</p> <p>@Inject</p> <p>fun WebTestClient(moshi: Moshi, jettyService: JettyService)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/call/","title":"call - Misk","text":"<p>//misk-testing/misk.web/WebTestClient/call</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/call/#call","title":"call","text":"<p>[jvm]\\ fun call(path: String, action: Request.Builder.() -&gt; Unit): WebTestClient.WebTestResponse</p> <p>Performs a call to the started service. Allows the caller to customize the action before it\u2019s sent through.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/get/","title":"get - Misk","text":"<p>//misk-testing/misk.web/WebTestClient/get</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/get/#get","title":"get","text":"<p>[jvm]\\ fun get(path: String): WebTestClient.WebTestResponse</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/post/","title":"post - Misk","text":"<p>//misk-testing/misk.web/WebTestClient/post</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/post/#post","title":"post","text":"<p>[jvm]\\ fun &lt;T : Any&gt; post(path: String, body: T, tClass: KClass&lt;T&gt;): WebTestClient.WebTestResponse</p> <p>inline fun &lt;T : Any&gt; post(path: String, body: T): WebTestClient.WebTestResponse</p> <p>Performs a POST request with a JSON request body created from the input.</p> <p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun post(path: String, body: String, mediaType: MediaType = MediaTypes.APPLICATION_JSON_MEDIA_TYPE): WebTestClient.WebTestResponse</p> <p>Performs a POST request.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/-web-test-response/","title":"WebTestResponse - Misk","text":"<p>//misk-testing/misk.web/WebTestClient/WebTestResponse</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/-web-test-response/#webtestresponse","title":"WebTestResponse","text":"<p>[jvm]\\ data class WebTestResponse(response: Response, moshi: Moshi)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/-web-test-response/#functions","title":"Functions","text":"Name Summary parseJson [jvm]inline fun &lt;T : Any&gt; parseJson(): Tfun &lt;T : Any&gt; parseJson(tClass: KClass&lt;T&gt;): T"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/-web-test-response/#properties","title":"Properties","text":"Name Summary response [jvm]val response: Response"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/-web-test-response/-web-test-response/","title":"WebTestResponse - Misk","text":"<p>//misk-testing/misk.web/WebTestClient/WebTestResponse/WebTestResponse</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/-web-test-response/-web-test-response/#webtestresponse","title":"WebTestResponse","text":"<p>[jvm]\\ fun WebTestResponse(response: Response, moshi: Moshi)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/-web-test-response/parse-json/","title":"parseJson - Misk","text":"<p>//misk-testing/misk.web/WebTestClient/WebTestResponse/parseJson</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/-web-test-response/parse-json/#parsejson","title":"parseJson","text":"<p>[jvm]\\ fun &lt;T : Any&gt; parseJson(tClass: KClass&lt;T&gt;): T</p> <p>inline fun &lt;T : Any&gt; parseJson(): T</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/-web-test-response/response/","title":"response - Misk","text":"<p>//misk-testing/misk.web/WebTestClient/WebTestResponse/response</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-web-test-client/-web-test-response/response/#response","title":"response","text":"<p>[jvm]\\ val response: Response</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-with-misk-caller/","title":"WithMiskCaller - Misk","text":"<p>//misk-testing/misk.web/WithMiskCaller</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-with-misk-caller/#withmiskcaller","title":"WithMiskCaller","text":"<p>[jvm]\\ @Target(allowedTargets = [AnnotationTarget.CLASS])</p> <p>@ExtendWith(value = [MiskCallerExtension::class])</p> <p>annotation class WithMiskCaller(user: String, service: String)</p> <p>Use this annotation to specify an ActionScoped for this class. <p>Annotate after misk.testing.MiskTest.</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-with-misk-caller/#constructors","title":"Constructors","text":"WithMiskCaller [jvm]fun WithMiskCaller(user: String = \u201c\u201d, service: String = \u201c\u201d)"},{"location":"0.x/misk-testing/misk-testing/misk.web/-with-misk-caller/#properties","title":"Properties","text":"Name Summary service [jvm]val service: String user [jvm]val user: String"},{"location":"0.x/misk-testing/misk-testing/misk.web/-with-misk-caller/-with-misk-caller/","title":"WithMiskCaller - Misk","text":"<p>//misk-testing/misk.web/WithMiskCaller/WithMiskCaller</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-with-misk-caller/-with-misk-caller/#withmiskcaller","title":"WithMiskCaller","text":"<p>[jvm]\\ fun WithMiskCaller(user: String = \u201c\u201d, service: String = \u201c\u201d)</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-with-misk-caller/service/","title":"service - Misk","text":"<p>//misk-testing/misk.web/WithMiskCaller/service</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-with-misk-caller/service/#service","title":"service","text":"<p>[jvm]\\ val service: String</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-with-misk-caller/user/","title":"user - Misk","text":"<p>//misk-testing/misk.web/WithMiskCaller/user</p>"},{"location":"0.x/misk-testing/misk-testing/misk.web/-with-misk-caller/user/#user","title":"user","text":"<p>[jvm]\\ val user: String</p>"},{"location":"0.x/misk-testing/misk-testing/org.assertj.core.api/","title":"Package org.assertj.core.api - Misk","text":"<p>//misk-testing/org.assertj.core.api</p>"},{"location":"0.x/misk-testing/misk-testing/org.assertj.core.api/#package-orgassertjcoreapi","title":"Package org.assertj.core.api","text":""},{"location":"0.x/misk-testing/misk-testing/org.assertj.core.api/#functions","title":"Functions","text":"Name Summary assertOrdering [jvm]fun &lt;A : Comparable&lt;A&gt;&gt; assertOrdering(vararg values: A) containsExactly [jvm]inline fun &lt;KEY, VALUE&gt; MapAssert&lt;KEY, VALUE&gt;.containsExactly(vararg p: Pair&lt;KEY, VALUE&gt;): MapAssert&lt;KEY, VALUE&gt; isEqualToAsJson [jvm]fun &lt;ACTUAL : CharSequence&gt; AbstractCharSequenceAssert&lt;, ACTUAL&gt;.isEqualToAsJson(expected: CharSequence): AbstractCharSequenceAssert&lt;, ACTUAL&gt;"},{"location":"0.x/misk-testing/misk-testing/org.assertj.core.api/assert-ordering/","title":"assertOrdering - Misk","text":"<p>//misk-testing/org.assertj.core.api/assertOrdering</p>"},{"location":"0.x/misk-testing/misk-testing/org.assertj.core.api/assert-ordering/#assertordering","title":"assertOrdering","text":"<p>[jvm]\\ fun &lt;A : Comparable&lt;A&gt;&gt; assertOrdering(vararg values: A)</p>"},{"location":"0.x/misk-testing/misk-testing/org.assertj.core.api/contains-exactly/","title":"containsExactly - Misk","text":"<p>//misk-testing/org.assertj.core.api/containsExactly</p>"},{"location":"0.x/misk-testing/misk-testing/org.assertj.core.api/contains-exactly/#containsexactly","title":"containsExactly","text":"<p>[jvm]\\ inline fun &lt;KEY, VALUE&gt; MapAssert&lt;KEY, VALUE&gt;.containsExactly(vararg p: Pair&lt;KEY, VALUE&gt;): MapAssert&lt;KEY, VALUE&gt;</p>"},{"location":"0.x/misk-testing/misk-testing/org.assertj.core.api/is-equal-to-as-json/","title":"isEqualToAsJson - Misk","text":"<p>//misk-testing/org.assertj.core.api/isEqualToAsJson</p>"},{"location":"0.x/misk-testing/misk-testing/org.assertj.core.api/is-equal-to-as-json/#isequaltoasjson","title":"isEqualToAsJson","text":"<p>[jvm]\\ fun &lt;ACTUAL : CharSequence&gt; AbstractCharSequenceAssert&lt;, ACTUAL&gt;.isEqualToAsJson(expected: CharSequence): AbstractCharSequenceAssert&lt;, ACTUAL&gt;</p>"},{"location":"0.x/misk-warmup/","title":"misk-warmup - Misk","text":"<p>//misk-warmup</p>"},{"location":"0.x/misk-warmup/#misk-warmup","title":"misk-warmup","text":""},{"location":"0.x/misk-warmup/#packages","title":"Packages","text":"Name misk.warmup"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/","title":"Package misk.warmup - Misk","text":"<p>//misk-warmup/misk.warmup</p>"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/#package-miskwarmup","title":"Package misk.warmup","text":""},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/#types","title":"Types","text":"Name Summary WarmupModule [jvm]class WarmupModule(name: String, key: Key&lt;out WarmupTask&gt;) : KAbstractModule WarmupTask [jvm]abstract class WarmupTaskRegister a warmup task in your service with the following:"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/#functions","title":"Functions","text":"Name Summary WarmupModule [jvm]inline fun &lt;T : WarmupTask&gt; WarmupModule(qualifier: KClass&lt;out Annotation&gt;? = null): WarmupModule"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-module/","title":"WarmupModule - Misk","text":"<p>//misk-warmup/misk.warmup/WarmupModule</p>"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-module/#warmupmodule","title":"WarmupModule","text":"<p>[jvm]\\ inline fun &lt;T : WarmupTask&gt; WarmupModule(qualifier: KClass&lt;out Annotation&gt;? = null): WarmupModule</p>"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-module/","title":"WarmupModule - Misk","text":"<p>//misk-warmup/misk.warmup/WarmupModule</p>"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-module/#warmupmodule","title":"WarmupModule","text":"<p>[jvm]\\ class WarmupModule(name: String, key: Key&lt;out WarmupTask&gt;) : KAbstractModule</p>"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-module/#functions","title":"Functions","text":"Name Summary addError [jvm]open fun addError(message: Message)open fun addError(t: Throwable)open fun addError(message: String, vararg arguments: Any) bind [jvm]open fun &lt;T : Any&gt; bind(key: Key&lt;T&gt;): LinkedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(typeLiteral: TypeLiteral&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt;open fun &lt;T : Any&gt; bind(clazz: Class&lt;T&gt;): AnnotatedBindingBuilder&lt;T&gt; bindConstant [jvm]open fun bindConstant(): AnnotatedConstantBindingBuilder bindInterceptor [jvm]open fun bindInterceptor(classMatcher: Matcher&lt;in Class&lt;*&gt;&gt;, methodMatcher: Matcher&lt;in Method&gt;, vararg interceptors: MethodInterceptor) bindListener [jvm]open fun bindListener(bindingMatcher: Matcher&lt;in Binding&lt;&gt;&gt;, vararg listener: ProvisionListener)open fun bindListener(typeMatcher: Matcher&lt;in TypeLiteral&lt;&gt;&gt;, listener: TypeListener) bindScope [jvm]open fun bindScope(scopeAnnotation: Class&lt;out Annotation&gt;, scope: Scope) configure [jvm]override fun configure(builder: Binder) convertToTypes [jvm]open fun convertToTypes(typeMatcher: Matcher&lt;in TypeLiteral&lt;*&gt;&gt;, converter: TypeConverter) currentStage [jvm]open fun currentStage(): Stage getMembersInjector [jvm]open fun &lt;T : Any&gt; getMembersInjector(type: TypeLiteral&lt;T&gt;): MembersInjector&lt;T&gt;open fun &lt;T : Any&gt; getMembersInjector(type: Class&lt;T&gt;): MembersInjector&lt;T&gt; getProvider [jvm]open fun &lt;T : Any&gt; getProvider(key: Key&lt;T&gt;): Provider&lt;T&gt;open fun &lt;T : Any&gt; getProvider(type: Class&lt;T&gt;): Provider&lt;T&gt; install [jvm]open fun install(module: Module) requestInjection [jvm]open fun requestInjection(instance: Any)open fun &lt;T : Any&gt; requestInjection(type: TypeLiteral&lt;T&gt;, instance: T) requestStaticInjection [jvm]open fun requestStaticInjection(vararg types: Class&lt;*&gt;) requireBinding [jvm]open fun requireBinding(key: Key&lt;&gt;)open fun requireBinding(type: Class&lt;&gt;)"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-module/#properties","title":"Properties","text":"Name Summary binder [jvm]val binder: Binder"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-module/-warmup-module/","title":"WarmupModule - Misk","text":"<p>//misk-warmup/misk.warmup/WarmupModule/WarmupModule</p>"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-module/-warmup-module/#warmupmodule","title":"WarmupModule","text":"<p>[jvm]\\ fun WarmupModule(name: String, key: Key&lt;out WarmupTask&gt;)</p>"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-task/","title":"WarmupTask - Misk","text":"<p>//misk-warmup/misk.warmup/WarmupTask</p>"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-task/#warmuptask","title":"WarmupTask","text":"<p>[jvm]\\ abstract class WarmupTask</p> <p>Register a warmup task in your service with the following:</p> <p>install(WarmupModule&lt;MyWarmupTask&gt;())</p> <p>Misk will run the task after all services have started successfully, but before health checks report the service as healthy. Warm up tasks should complete quickly (under 10 seconds is best) because the service won\u2019t serve live traffic until all warm up tasks complete.</p>"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-task/#constructors","title":"Constructors","text":"WarmupTask [jvm]fun WarmupTask()"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-task/#functions","title":"Functions","text":"Name Summary execute [jvm]abstract fun execute()Perform production-like work to cause caches to be seeded, pools to be filled, and hot spots to be compiled. This should return once warmup is complete."},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-task/-warmup-task/","title":"WarmupTask - Misk","text":"<p>//misk-warmup/misk.warmup/WarmupTask/WarmupTask</p>"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-task/-warmup-task/#warmuptask","title":"WarmupTask","text":"<p>[jvm]\\ fun WarmupTask()</p>"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-task/execute/","title":"execute - Misk","text":"<p>//misk-warmup/misk.warmup/WarmupTask/execute</p>"},{"location":"0.x/misk-warmup/misk-warmup/misk.warmup/-warmup-task/execute/#execute","title":"execute","text":"<p>[jvm]\\ abstract fun execute()</p> <p>Perform production-like work to cause caches to be seeded, pools to be filled, and hot spots to be compiled. This should return once warmup is complete.</p>"},{"location":"0.x/wisp-aws-environment/","title":"wisp-aws-environment - Misk","text":"<p>//wisp-aws-environment</p>"},{"location":"0.x/wisp-aws-environment/#wisp-aws-environment","title":"wisp-aws-environment","text":""},{"location":"0.x/wisp-aws-environment/#packages","title":"Packages","text":"Name wisp.aws.environment"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/","title":"Package wisp.aws.environment - Misk","text":"<p>//wisp-aws-environment/wisp.aws.environment</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/#package-wispawsenvironment","title":"Package wisp.aws.environment","text":""},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/#types","title":"Types","text":"Name Summary AwsAccountId [jvm]data class AwsAccountId(value: String)AwsAccountId is the id of the account in which the service is running AwsEnvironment [jvm]object AwsEnvironmentAwsEnvironment pulls region and account information from installed environment variables AwsRegion [jvm]data class AwsRegion(name: String)AwsRegion is the region in which the service is running"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-account-id/","title":"AwsAccountId - Misk","text":"<p>//wisp-aws-environment/wisp.aws.environment/AwsAccountId</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-account-id/#awsaccountid","title":"AwsAccountId","text":"<p>[jvm]\\ data class AwsAccountId(value: String)</p> <p>AwsAccountId is the id of the account in which the service is running</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-account-id/#constructors","title":"Constructors","text":"AwsAccountId [jvm]fun AwsAccountId(value: String)"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-account-id/#properties","title":"Properties","text":"Name Summary value [jvm]val value: String"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-account-id/-aws-account-id/","title":"AwsAccountId - Misk","text":"<p>//wisp-aws-environment/wisp.aws.environment/AwsAccountId/AwsAccountId</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-account-id/-aws-account-id/#awsaccountid","title":"AwsAccountId","text":"<p>[jvm]\\ fun AwsAccountId(value: String)</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-account-id/value/","title":"value - Misk","text":"<p>//wisp-aws-environment/wisp.aws.environment/AwsAccountId/value</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-account-id/value/#value","title":"value","text":"<p>[jvm]\\ val value: String</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-environment/","title":"AwsEnvironment - Misk","text":"<p>//wisp-aws-environment/wisp.aws.environment/AwsEnvironment</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-environment/#awsenvironment","title":"AwsEnvironment","text":"<p>[jvm]\\ object AwsEnvironment</p> <p>AwsEnvironment pulls region and account information from installed environment variables</p> <p>Note: Because of different package names for AWS1 vs AWS2 sdks, we can\u2019t use AWS\u2019s Region class.</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-environment/#functions","title":"Functions","text":"Name Summary awsAccountId [jvm]fun awsAccountId(environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real, environmentVariable: String = \u201cACCOUNT_ID\u201d): AwsAccountId awsRegion [jvm]fun awsRegion(environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real, environmentVariables: List&lt;String&gt; = listOf(\u201cREGION\u201d, \u201cAWS_REGION\u201d), defaultAwsRegion: String = \u201cus-west-2\u201d): AwsRegion"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-environment/aws-account-id/","title":"awsAccountId - Misk","text":"<p>//wisp-aws-environment/wisp.aws.environment/AwsEnvironment/awsAccountId</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-environment/aws-account-id/#awsaccountid","title":"awsAccountId","text":"<p>[jvm]\\ fun awsAccountId(environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real, environmentVariable: String = \u201cACCOUNT_ID\u201d): AwsAccountId</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-environment/aws-region/","title":"awsRegion - Misk","text":"<p>//wisp-aws-environment/wisp.aws.environment/AwsEnvironment/awsRegion</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-environment/aws-region/#awsregion","title":"awsRegion","text":"<p>[jvm]\\ fun awsRegion(environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real, environmentVariables: List&lt;String&gt; = listOf(\u201cREGION\u201d, \u201cAWS_REGION\u201d), defaultAwsRegion: String = \u201cus-west-2\u201d): AwsRegion</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-region/","title":"AwsRegion - Misk","text":"<p>//wisp-aws-environment/wisp.aws.environment/AwsRegion</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-region/#awsregion","title":"AwsRegion","text":"<p>[jvm]\\ data class AwsRegion(name: String)</p> <p>AwsRegion is the region in which the service is running</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-region/#constructors","title":"Constructors","text":"AwsRegion [jvm]fun AwsRegion(name: String)"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-region/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-region/-aws-region/","title":"AwsRegion - Misk","text":"<p>//wisp-aws-environment/wisp.aws.environment/AwsRegion/AwsRegion</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-region/-aws-region/#awsregion","title":"AwsRegion","text":"<p>[jvm]\\ fun AwsRegion(name: String)</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-region/name/","title":"name - Misk","text":"<p>//wisp-aws-environment/wisp.aws.environment/AwsRegion/name</p>"},{"location":"0.x/wisp-aws-environment/wisp-aws-environment/wisp.aws.environment/-aws-region/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/wisp-client/","title":"wisp-client - Misk","text":"<p>//wisp-client</p>"},{"location":"0.x/wisp-client/#wisp-client","title":"wisp-client","text":""},{"location":"0.x/wisp-client/#packages","title":"Packages","text":"Name wisp.client"},{"location":"0.x/wisp-client/wisp-client/wisp.client/","title":"Package wisp.client - Misk","text":"<p>//wisp-client/wisp.client</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/#package-wispclient","title":"Package wisp.client","text":""},{"location":"0.x/wisp-client/wisp-client/wisp.client/#types","title":"Types","text":"Name Summary EnvoyClientEndpointProvider [jvm]interface EnvoyClientEndpointProviderEnvoy configuration provider per endpoint that wisp clients can customize to their needs. HttpClientConfig [jvm]data class HttpClientConfig@JvmOverloadsconstructor(connectTimeout: Duration?, writeTimeout: Duration?, readTimeout: Duration?, pingInterval: Duration?, callTimeout: Duration?, maxRequests: Int?, maxRequestsPerHost: Int?, maxIdleConnections: Int?, keepAliveDuration: Duration?, ssl: HttpClientSSLConfig?, unixSocketFile: String?, protocols: List&lt;String&gt;?, retryOnConnectionFailure: Boolean?) HttpClientEndpointConfig [jvm]data class HttpClientEndpointConfig@JvmOverloadsconstructor(url: String?, envoy: HttpClientEnvoyConfig?, clientConfig: HttpClientConfig) HttpClientEnvoyConfig [jvm]data class HttpClientEnvoyConfig@JvmOverloadsconstructor(app: String, env: String?) HttpClientFactory [jvm]class HttpClientFactory@JvmOverloadsconstructor(sslLoader: SslLoader, sslContextFactory: SslContextFactory, okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator, envoyClientEndpointProvider: EnvoyClientEndpointProvider?, okhttpInterceptors: List&lt;Interceptor&gt;?) HttpClientsConfig [jvm]data class HttpClientsConfig@JvmOverloadsconstructor(hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt;, endpoints: Map&lt;String, HttpClientEndpointConfig&gt;) HttpClientSSLConfig [jvm]data class HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig) NoOpDns [jvm]object NoOpDns : Dns OkHttpClientCommonConfigurator [jvm]class OkHttpClientCommonConfigurator UnixDomainServerSocketFactory [jvm]class UnixDomainServerSocketFactory : ServerSocketFactoryImpersonate TCP-style ServerSocketFactory over UNIX domain sockets. UnixDomainSocketFactory [jvm]class UnixDomainSocketFactory : SocketFactoryImpersonate TCP-style SocketFactory over UNIX domain sockets."},{"location":"0.x/wisp-client/wisp-client/wisp.client/#functions","title":"Functions","text":"Name Summary applyDefaults [jvm]fun HttpClientConfig.applyDefaults(other: HttpClientConfig): HttpClientConfig"},{"location":"0.x/wisp-client/wisp-client/wisp.client/apply-defaults/","title":"applyDefaults - Misk","text":"<p>//wisp-client/wisp.client/applyDefaults</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/apply-defaults/#applydefaults","title":"applyDefaults","text":"<p>[jvm]\\ fun HttpClientConfig.applyDefaults(other: HttpClientConfig): HttpClientConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-envoy-client-endpoint-provider/","title":"EnvoyClientEndpointProvider - Misk","text":"<p>//wisp-client/wisp.client/EnvoyClientEndpointProvider</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-envoy-client-endpoint-provider/#envoyclientendpointprovider","title":"EnvoyClientEndpointProvider","text":"<p>[jvm]\\ interface EnvoyClientEndpointProvider</p> <p>Envoy configuration provider per endpoint that wisp clients can customize to their needs.</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-envoy-client-endpoint-provider/#functions","title":"Functions","text":"Name Summary unixSocket [jvm]abstract fun unixSocket(httpClientEnvoyConfig: HttpClientEnvoyConfig): FileUnix socket file to be used to communicate to the local Envoy sidecar. url [jvm]abstract fun url(httpClientEnvoyConfig: HttpClientEnvoyConfig): StringHost header that will be used to route the request."},{"location":"0.x/wisp-client/wisp-client/wisp.client/-envoy-client-endpoint-provider/unix-socket/","title":"unixSocket - Misk","text":"<p>//wisp-client/wisp.client/EnvoyClientEndpointProvider/unixSocket</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-envoy-client-endpoint-provider/unix-socket/#unixsocket","title":"unixSocket","text":"<p>[jvm]\\ abstract fun unixSocket(httpClientEnvoyConfig: HttpClientEnvoyConfig): File</p> <p>Unix socket file to be used to communicate to the local Envoy sidecar.</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-envoy-client-endpoint-provider/url/","title":"url - Misk","text":"<p>//wisp-client/wisp.client/EnvoyClientEndpointProvider/url</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-envoy-client-endpoint-provider/url/#url","title":"url","text":"<p>[jvm]\\ abstract fun url(httpClientEnvoyConfig: HttpClientEnvoyConfig): String</p> <p>Host header that will be used to route the request.</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/","title":"HttpClientConfig - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/#httpclientconfig","title":"HttpClientConfig","text":"<p>[jvm]\\ data class HttpClientConfig@JvmOverloadsconstructor(connectTimeout: Duration?, writeTimeout: Duration?, readTimeout: Duration?, pingInterval: Duration?, callTimeout: Duration?, maxRequests: Int?, maxRequestsPerHost: Int?, maxIdleConnections: Int?, keepAliveDuration: Duration?, ssl: HttpClientSSLConfig?, unixSocketFile: String?, protocols: List&lt;String&gt;?, retryOnConnectionFailure: Boolean?)</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/#properties","title":"Properties","text":"Name Summary callTimeout [jvm]val callTimeout: Duration? = null connectTimeout [jvm]val connectTimeout: Duration? = null keepAliveDuration [jvm]val keepAliveDuration: Duration? = null maxIdleConnections [jvm]val maxIdleConnections: Int? = null maxRequests [jvm]val maxRequests: Int? = null maxRequestsPerHost [jvm]val maxRequestsPerHost: Int? = null pingInterval [jvm]val pingInterval: Duration? = null protocols [jvm]val protocols: List&lt;String&gt;? = null readTimeout [jvm]val readTimeout: Duration? = null retryOnConnectionFailure [jvm]val retryOnConnectionFailure: Boolean? = null ssl [jvm]val ssl: HttpClientSSLConfig? = null unixSocketFile [jvm]val unixSocketFile: String? = null writeTimeout [jvm]val writeTimeout: Duration? = null"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/#extensions","title":"Extensions","text":"Name Summary applyDefaults [jvm]fun HttpClientConfig.applyDefaults(other: HttpClientConfig): HttpClientConfig"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/-http-client-config/","title":"HttpClientConfig - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/HttpClientConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/-http-client-config/#httpclientconfig","title":"HttpClientConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun HttpClientConfig(connectTimeout: Duration? = null, writeTimeout: Duration? = null, readTimeout: Duration? = null, pingInterval: Duration? = null, callTimeout: Duration? = null, maxRequests: Int? = null, maxRequestsPerHost: Int? = null, maxIdleConnections: Int? = null, keepAliveDuration: Duration? = null, ssl: HttpClientSSLConfig? = null, unixSocketFile: String? = null, protocols: List&lt;String&gt;? = null, retryOnConnectionFailure: Boolean? = null)</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/call-timeout/","title":"callTimeout - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/callTimeout</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/call-timeout/#calltimeout","title":"callTimeout","text":"<p>[jvm]\\ val callTimeout: Duration? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/connect-timeout/","title":"connectTimeout - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/connectTimeout</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/connect-timeout/#connecttimeout","title":"connectTimeout","text":"<p>[jvm]\\ val connectTimeout: Duration? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/keep-alive-duration/","title":"keepAliveDuration - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/keepAliveDuration</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/keep-alive-duration/#keepaliveduration","title":"keepAliveDuration","text":"<p>[jvm]\\ val keepAliveDuration: Duration? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/max-idle-connections/","title":"maxIdleConnections - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/maxIdleConnections</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/max-idle-connections/#maxidleconnections","title":"maxIdleConnections","text":"<p>[jvm]\\ val maxIdleConnections: Int? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/max-requests-per-host/","title":"maxRequestsPerHost - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/maxRequestsPerHost</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/max-requests-per-host/#maxrequestsperhost","title":"maxRequestsPerHost","text":"<p>[jvm]\\ val maxRequestsPerHost: Int? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/max-requests/","title":"maxRequests - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/maxRequests</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/max-requests/#maxrequests","title":"maxRequests","text":"<p>[jvm]\\ val maxRequests: Int? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/ping-interval/","title":"pingInterval - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/pingInterval</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/ping-interval/#pinginterval","title":"pingInterval","text":"<p>[jvm]\\ val pingInterval: Duration? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/protocols/","title":"protocols - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/protocols</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/protocols/#protocols","title":"protocols","text":"<p>[jvm]\\ val protocols: List&lt;String&gt;? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/read-timeout/","title":"readTimeout - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/readTimeout</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/read-timeout/#readtimeout","title":"readTimeout","text":"<p>[jvm]\\ val readTimeout: Duration? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/retry-on-connection-failure/","title":"retryOnConnectionFailure - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/retryOnConnectionFailure</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/retry-on-connection-failure/#retryonconnectionfailure","title":"retryOnConnectionFailure","text":"<p>[jvm]\\ val retryOnConnectionFailure: Boolean? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/ssl/","title":"ssl - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/ssl</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/ssl/#ssl","title":"ssl","text":"<p>[jvm]\\ val ssl: HttpClientSSLConfig? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/unix-socket-file/","title":"unixSocketFile - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/unixSocketFile</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/unix-socket-file/#unixsocketfile","title":"unixSocketFile","text":"<p>[jvm]\\ val unixSocketFile: String? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/write-timeout/","title":"writeTimeout - Misk","text":"<p>//wisp-client/wisp.client/HttpClientConfig/writeTimeout</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-config/write-timeout/#writetimeout","title":"writeTimeout","text":"<p>[jvm]\\ val writeTimeout: Duration? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-endpoint-config/","title":"HttpClientEndpointConfig - Misk","text":"<p>//wisp-client/wisp.client/HttpClientEndpointConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-endpoint-config/#httpclientendpointconfig","title":"HttpClientEndpointConfig","text":"<p>[jvm]\\ data class HttpClientEndpointConfig@JvmOverloadsconstructor(url: String?, envoy: HttpClientEnvoyConfig?, clientConfig: HttpClientConfig)</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-endpoint-config/#properties","title":"Properties","text":"Name Summary clientConfig [jvm]val clientConfig: HttpClientConfig envoy [jvm]val envoy: HttpClientEnvoyConfig? = null url [jvm]val url: String? = null"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-endpoint-config/-http-client-endpoint-config/","title":"HttpClientEndpointConfig - Misk","text":"<p>//wisp-client/wisp.client/HttpClientEndpointConfig/HttpClientEndpointConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-endpoint-config/-http-client-endpoint-config/#httpclientendpointconfig","title":"HttpClientEndpointConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun HttpClientEndpointConfig(url: String? = null, envoy: HttpClientEnvoyConfig? = null, clientConfig: HttpClientConfig = HttpClientConfig())</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-endpoint-config/client-config/","title":"clientConfig - Misk","text":"<p>//wisp-client/wisp.client/HttpClientEndpointConfig/clientConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-endpoint-config/client-config/#clientconfig","title":"clientConfig","text":"<p>[jvm]\\ val clientConfig: HttpClientConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-endpoint-config/envoy/","title":"envoy - Misk","text":"<p>//wisp-client/wisp.client/HttpClientEndpointConfig/envoy</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-endpoint-config/envoy/#envoy","title":"envoy","text":"<p>[jvm]\\ val envoy: HttpClientEnvoyConfig? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-endpoint-config/url/","title":"url - Misk","text":"<p>//wisp-client/wisp.client/HttpClientEndpointConfig/url</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-endpoint-config/url/#url","title":"url","text":"<p>[jvm]\\ val url: String? = null</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-envoy-config/","title":"HttpClientEnvoyConfig - Misk","text":"<p>//wisp-client/wisp.client/HttpClientEnvoyConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-envoy-config/#httpclientenvoyconfig","title":"HttpClientEnvoyConfig","text":"<p>[jvm]\\ data class HttpClientEnvoyConfig@JvmOverloadsconstructor(app: String, env: String?)</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-envoy-config/#properties","title":"Properties","text":"Name Summary app [jvm]val app: String env [jvm]val env: String? = nullEnvironment to target. If null, the same environment as the app is running in is assumed."},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-envoy-config/-http-client-envoy-config/","title":"HttpClientEnvoyConfig - Misk","text":"<p>//wisp-client/wisp.client/HttpClientEnvoyConfig/HttpClientEnvoyConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-envoy-config/-http-client-envoy-config/#httpclientenvoyconfig","title":"HttpClientEnvoyConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun HttpClientEnvoyConfig(app: String, env: String? = null)</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-envoy-config/app/","title":"app - Misk","text":"<p>//wisp-client/wisp.client/HttpClientEnvoyConfig/app</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-envoy-config/app/#app","title":"app","text":"<p>[jvm]\\ val app: String</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-envoy-config/env/","title":"env - Misk","text":"<p>//wisp-client/wisp.client/HttpClientEnvoyConfig/env</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-envoy-config/env/#env","title":"env","text":"<p>[jvm]\\ val env: String? = null</p> <p>Environment to target. If null, the same environment as the app is running in is assumed.</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-factory/","title":"HttpClientFactory - Misk","text":"<p>//wisp-client/wisp.client/HttpClientFactory</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-factory/#httpclientfactory","title":"HttpClientFactory","text":"<p>[jvm]\\ class HttpClientFactory@JvmOverloadsconstructor(sslLoader: SslLoader, sslContextFactory: SslContextFactory, okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator, envoyClientEndpointProvider: EnvoyClientEndpointProvider?, okhttpInterceptors: List&lt;Interceptor&gt;?)</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-factory/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-factory/#functions","title":"Functions","text":"Name Summary create [jvm]fun create(config: HttpClientEndpointConfig): OkHttpClientReturns a client initialized based on config."},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-factory/-http-client-factory/","title":"HttpClientFactory - Misk","text":"<p>//wisp-client/wisp.client/HttpClientFactory/HttpClientFactory</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-factory/-http-client-factory/#httpclientfactory","title":"HttpClientFactory","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun HttpClientFactory(sslLoader: SslLoader = SslLoader(ResourceLoader.SYSTEM), sslContextFactory: SslContextFactory = SslContextFactory(sslLoader), okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator = OkHttpClientCommonConfigurator(), envoyClientEndpointProvider: EnvoyClientEndpointProvider? = null, okhttpInterceptors: List&lt;Interceptor&gt;? = null)</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-factory/create/","title":"create - Misk","text":"<p>//wisp-client/wisp.client/HttpClientFactory/create</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-factory/create/#create","title":"create","text":"<p>[jvm]\\ fun create(config: HttpClientEndpointConfig): OkHttpClient</p> <p>Returns a client initialized based on config.</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-factory/-companion/","title":"Companion - Misk","text":"<p>//wisp-client/wisp.client/HttpClientFactory/Companion</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-factory/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-s-s-l-config/","title":"HttpClientSSLConfig - Misk","text":"<p>//wisp-client/wisp.client/HttpClientSSLConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-s-s-l-config/#httpclientsslconfig","title":"HttpClientSSLConfig","text":"<p>[jvm]\\ data class HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig)</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-s-s-l-config/#properties","title":"Properties","text":"Name Summary cert_store [jvm]val cert_store: CertStoreConfig? trust_store [jvm]val trust_store: TrustStoreConfig"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-s-s-l-config/-http-client-s-s-l-config/","title":"HttpClientSSLConfig - Misk","text":"<p>//wisp-client/wisp.client/HttpClientSSLConfig/HttpClientSSLConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-s-s-l-config/-http-client-s-s-l-config/#httpclientsslconfig","title":"HttpClientSSLConfig","text":"<p>[jvm]\\ fun HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig)</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-s-s-l-config/cert_store/","title":"cert_store - Misk","text":"<p>//wisp-client/wisp.client/HttpClientSSLConfig/cert_store</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-s-s-l-config/cert_store/#cert_store","title":"cert_store","text":"<p>[jvm]\\ val cert_store: CertStoreConfig?</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-s-s-l-config/trust_store/","title":"trust_store - Misk","text":"<p>//wisp-client/wisp.client/HttpClientSSLConfig/trust_store</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-client-s-s-l-config/trust_store/#trust_store","title":"trust_store","text":"<p>[jvm]\\ val trust_store: TrustStoreConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/","title":"HttpClientsConfig - Misk","text":"<p>//wisp-client/wisp.client/HttpClientsConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/#httpclientsconfig","title":"HttpClientsConfig","text":"<p>[jvm]\\ data class HttpClientsConfig@JvmOverloadsconstructor(hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt;, endpoints: Map&lt;String, HttpClientEndpointConfig&gt;)</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/#functions","title":"Functions","text":"Name Summary endpointNames [jvm]fun endpointNames(): Set&lt;String&gt;Names of configured endpoints, all of which can be fetched using get get [jvm]operator fun get(url: URL): HttpClientEndpointConfigoperator fun get(clientName: String): HttpClientEndpointConfig"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/#properties","title":"Properties","text":"Name Summary endpoints [jvm]val endpoints: Map&lt;String, HttpClientEndpointConfig&gt; hostConfigs [jvm]val hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt;"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/-http-clients-config/","title":"HttpClientsConfig - Misk","text":"<p>//wisp-client/wisp.client/HttpClientsConfig/HttpClientsConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/-http-clients-config/#httpclientsconfig","title":"HttpClientsConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun HttpClientsConfig(hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt; = linkedMapOf(), endpoints: Map&lt;String, HttpClientEndpointConfig&gt; = mapOf())</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/endpoint-names/","title":"endpointNames - Misk","text":"<p>//wisp-client/wisp.client/HttpClientsConfig/endpointNames</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/endpoint-names/#endpointnames","title":"endpointNames","text":"<p>[jvm]\\ fun endpointNames(): Set&lt;String&gt;</p> <p>Names of configured endpoints, all of which can be fetched using get</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/endpoints/","title":"endpoints - Misk","text":"<p>//wisp-client/wisp.client/HttpClientsConfig/endpoints</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/endpoints/#endpoints","title":"endpoints","text":"<p>[jvm]\\ val endpoints: Map&lt;String, HttpClientEndpointConfig&gt;</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/get/","title":"get - Misk","text":"<p>//wisp-client/wisp.client/HttpClientsConfig/get</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/get/#get","title":"get","text":"<p>[jvm]\\ operator fun get(clientName: String): HttpClientEndpointConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/get/#return","title":"Return","text":"<p>The HttpClientEndpointConfig for the given client, populated with defaults as needed</p> <p>[jvm]\\ operator fun get(url: URL): HttpClientEndpointConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/get/#return_1","title":"Return","text":"<p>The HttpClientEndpointConfig for the given URL, populated with defaults as needed</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/host-configs/","title":"hostConfigs - Misk","text":"<p>//wisp-client/wisp.client/HttpClientsConfig/hostConfigs</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/host-configs/#hostconfigs","title":"hostConfigs","text":"<p>[jvm]\\ val hostConfigs: &lt;ERROR CLASS&gt;&lt;String, HttpClientConfig&gt;</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/-companion/","title":"Companion - Misk","text":"<p>//wisp-client/wisp.client/HttpClientsConfig/Companion</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/-companion/#properties","title":"Properties","text":"Name Summary httpClientConfigDefaults [jvm]val httpClientConfigDefaults: HttpClientConfig"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/-companion/http-client-config-defaults/","title":"httpClientConfigDefaults - Misk","text":"<p>//wisp-client/wisp.client/HttpClientsConfig/Companion/httpClientConfigDefaults</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-http-clients-config/-companion/http-client-config-defaults/#httpclientconfigdefaults","title":"httpClientConfigDefaults","text":"<p>[jvm]\\ val httpClientConfigDefaults: HttpClientConfig</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-no-op-dns/","title":"NoOpDns - Misk","text":"<p>//wisp-client/wisp.client/NoOpDns</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-no-op-dns/#noopdns","title":"NoOpDns","text":"<p>[jvm]\\ object NoOpDns : Dns</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-no-op-dns/#functions","title":"Functions","text":"Name Summary lookup [jvm]open override fun lookup(hostname: String): &lt;ERROR CLASS&gt;"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-no-op-dns/lookup/","title":"lookup - Misk","text":"<p>//wisp-client/wisp.client/NoOpDns/lookup</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-no-op-dns/lookup/#lookup","title":"lookup","text":"<p>[jvm]\\ open override fun lookup(hostname: String): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/","title":"OkHttpClientCommonConfigurator - Misk","text":"<p>//wisp-client/wisp.client/OkHttpClientCommonConfigurator</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/#okhttpclientcommonconfigurator","title":"OkHttpClientCommonConfigurator","text":"<p>[jvm]\\ class OkHttpClientCommonConfigurator</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/#functions","title":"Functions","text":"Name Summary configure [jvm]fun configure(builder: OkHttpClient.Builder, config: HttpClientEndpointConfig): OkHttpClient.Builder"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/-ok-http-client-common-configurator/","title":"OkHttpClientCommonConfigurator - Misk","text":"<p>//wisp-client/wisp.client/OkHttpClientCommonConfigurator/OkHttpClientCommonConfigurator</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/-ok-http-client-common-configurator/#okhttpclientcommonconfigurator","title":"OkHttpClientCommonConfigurator","text":"<p>[jvm]\\ fun OkHttpClientCommonConfigurator()</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/configure/","title":"configure - Misk","text":"<p>//wisp-client/wisp.client/OkHttpClientCommonConfigurator/configure</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/configure/#configure","title":"configure","text":"<p>[jvm]\\ fun configure(builder: OkHttpClient.Builder, config: HttpClientEndpointConfig): OkHttpClient.Builder</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/-companion/","title":"Companion - Misk","text":"<p>//wisp-client/wisp.client/OkHttpClientCommonConfigurator/Companion</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/-companion/#properties","title":"Properties","text":"Name Summary keepAliveDuration [jvm]val keepAliveDuration: Duration maxIdleConnections [jvm]const val maxIdleConnections: Int = 5 retryOnConnectionFailure [jvm]const val retryOnConnectionFailure: Boolean = false"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/-companion/keep-alive-duration/","title":"keepAliveDuration - Misk","text":"<p>//wisp-client/wisp.client/OkHttpClientCommonConfigurator/Companion/keepAliveDuration</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/-companion/keep-alive-duration/#keepaliveduration","title":"keepAliveDuration","text":"<p>[jvm]\\ val keepAliveDuration: Duration</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/-companion/max-idle-connections/","title":"maxIdleConnections - Misk","text":"<p>//wisp-client/wisp.client/OkHttpClientCommonConfigurator/Companion/maxIdleConnections</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/-companion/max-idle-connections/#maxidleconnections","title":"maxIdleConnections","text":"<p>[jvm]\\ const val maxIdleConnections: Int = 5</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/-companion/retry-on-connection-failure/","title":"retryOnConnectionFailure - Misk","text":"<p>//wisp-client/wisp.client/OkHttpClientCommonConfigurator/Companion/retryOnConnectionFailure</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-ok-http-client-common-configurator/-companion/retry-on-connection-failure/#retryonconnectionfailure","title":"retryOnConnectionFailure","text":"<p>[jvm]\\ const val retryOnConnectionFailure: Boolean = false</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-server-socket-factory/","title":"UnixDomainServerSocketFactory - Misk","text":"<p>//wisp-client/wisp.client/UnixDomainServerSocketFactory</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-server-socket-factory/#unixdomainserversocketfactory","title":"UnixDomainServerSocketFactory","text":"<p>[jvm]\\ class UnixDomainServerSocketFactory : ServerSocketFactory</p> <p>Impersonate TCP-style ServerSocketFactory over UNIX domain sockets.</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-server-socket-factory/#constructors","title":"Constructors","text":"UnixDomainServerSocketFactory [jvm]open fun UnixDomainServerSocketFactory(path: File)"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-server-socket-factory/#functions","title":"Functions","text":"Name Summary createServerSocket [jvm]open fun createServerSocket(): ServerSocketopen fun createServerSocket(port: Int): ServerSocketopen fun createServerSocket(port: Int, backlog: Int): ServerSocketopen fun createServerSocket(port: Int, backlog: Int, inetAddress: InetAddress): ServerSocket getDefault [jvm]open fun getDefault(): ServerSocketFactory"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-server-socket-factory/-unix-domain-server-socket-factory/","title":"UnixDomainServerSocketFactory - Misk","text":"<p>//wisp-client/wisp.client/UnixDomainServerSocketFactory/UnixDomainServerSocketFactory</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-server-socket-factory/-unix-domain-server-socket-factory/#unixdomainserversocketfactory","title":"UnixDomainServerSocketFactory","text":"<p>[jvm]\\ open fun UnixDomainServerSocketFactory(path: File)</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-server-socket-factory/create-server-socket/","title":"createServerSocket - Misk","text":"<p>//wisp-client/wisp.client/UnixDomainServerSocketFactory/createServerSocket</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-server-socket-factory/create-server-socket/#createserversocket","title":"createServerSocket","text":"<p>[jvm]\\ open fun createServerSocket(): ServerSocket</p> <p>open fun createServerSocket(port: Int): ServerSocket</p> <p>open fun createServerSocket(port: Int, backlog: Int): ServerSocket</p> <p>open fun createServerSocket(port: Int, backlog: Int, inetAddress: InetAddress): ServerSocket</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-socket-factory/","title":"UnixDomainSocketFactory - Misk","text":"<p>//wisp-client/wisp.client/UnixDomainSocketFactory</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-socket-factory/#unixdomainsocketfactory","title":"UnixDomainSocketFactory","text":"<p>[jvm]\\ class UnixDomainSocketFactory : SocketFactory</p> <p>Impersonate TCP-style SocketFactory over UNIX domain sockets.</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-socket-factory/#constructors","title":"Constructors","text":"UnixDomainSocketFactory [jvm]open fun UnixDomainSocketFactory(path: File)"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-socket-factory/#functions","title":"Functions","text":"Name Summary createSocket [jvm]open fun createSocket(): Socketopen fun createSocket(host: String, port: Int): Socketopen fun createSocket(host: InetAddress, port: Int): Socketopen fun createSocket(host: String, port: Int, localHost: InetAddress, localPort: Int): Socketopen fun createSocket(host: InetAddress, port: Int, localAddress: InetAddress, localPort: Int): Socket getDefault [jvm]open fun getDefault(): SocketFactory"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-socket-factory/-unix-domain-socket-factory/","title":"UnixDomainSocketFactory - Misk","text":"<p>//wisp-client/wisp.client/UnixDomainSocketFactory/UnixDomainSocketFactory</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-socket-factory/-unix-domain-socket-factory/#unixdomainsocketfactory","title":"UnixDomainSocketFactory","text":"<p>[jvm]\\ open fun UnixDomainSocketFactory(path: File)</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-socket-factory/create-socket/","title":"createSocket - Misk","text":"<p>//wisp-client/wisp.client/UnixDomainSocketFactory/createSocket</p>"},{"location":"0.x/wisp-client/wisp-client/wisp.client/-unix-domain-socket-factory/create-socket/#createsocket","title":"createSocket","text":"<p>[jvm]\\ open fun createSocket(): Socket</p> <p>open fun createSocket(host: String, port: Int): Socket</p> <p>open fun createSocket(host: String, port: Int, localHost: InetAddress, localPort: Int): Socket</p> <p>open fun createSocket(host: InetAddress, port: Int): Socket</p> <p>open fun createSocket(host: InetAddress, port: Int, localAddress: InetAddress, localPort: Int): Socket</p>"},{"location":"0.x/wisp-config/","title":"wisp-config - Misk","text":"<p>//wisp-config</p>"},{"location":"0.x/wisp-config/#wisp-config","title":"wisp-config","text":""},{"location":"0.x/wisp-config/#packages","title":"Packages","text":"Name wisp.config"},{"location":"0.x/wisp-config/wisp-config/wisp.config/","title":"Package wisp.config - Misk","text":"<p>//wisp-config/wisp.config</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/#package-wispconfig","title":"Package wisp.config","text":""},{"location":"0.x/wisp-config/wisp-config/wisp.config/#types","title":"Types","text":"Name Summary Config [jvm]interface Config ConfigSource [jvm]data class ConfigSource@JvmOverloadsconstructor(configLocation: String, format: String)Config location and format (default yaml).  The location should be in a format that ResourceLoader understands. Configurable [jvm]interface Configurable&lt;T : Config&gt; PrefixResourceLoaderPreprocessor [jvm]class PrefixResourceLoaderPreprocessor@JvmOverloadsconstructor(prefix: String, resourceLoader: ResourceLoader) : TraversingPrimitivePreprocessorPreprocessor for a config node.  If the node is a StringNode and the value starts with the prefix, then the node value is treated as a resource location.  This is loaded using the resourceLoader and returned as a StringNode. WispConfig [jvm]object WispConfigWispConfig is a wrapper around the Hoplite config library: https://github.com/sksamuel/hoplite"},{"location":"0.x/wisp-config/wisp-config/wisp.config/#functions","title":"Functions","text":"Name Summary addWispConfigSources [jvm]fun ConfigLoaderBuilder.addWispConfigSources(configSources: List&lt;ConfigSource&gt;, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): ConfigLoaderBuilderAdd the config sources in the order supplied. If the config source location does not exist it is silently skipped, i.e. the config locations are optional."},{"location":"0.x/wisp-config/wisp-config/wisp.config/add-wisp-config-sources/","title":"addWispConfigSources - Misk","text":"<p>//wisp-config/wisp.config/addWispConfigSources</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/add-wisp-config-sources/#addwispconfigsources","title":"addWispConfigSources","text":"<p>[jvm]\\ fun ConfigLoaderBuilder.addWispConfigSources(configSources: List&lt;ConfigSource&gt;, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): ConfigLoaderBuilder</p> <p>Add the config sources in the order supplied. If the config source location does not exist it is silently skipped, i.e. the config locations are optional.</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-config/","title":"Config - Misk","text":"<p>//wisp-config/wisp.config/Config</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-config/#config","title":"Config","text":"<p>[jvm]\\ interface Config</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-config-source/","title":"ConfigSource - Misk","text":"<p>//wisp-config/wisp.config/ConfigSource</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-config-source/#configsource","title":"ConfigSource","text":"<p>[jvm]\\ data class ConfigSource@JvmOverloadsconstructor(configLocation: String, format: String)</p> <p>Config location and format (default yaml).  The location should be in a format that ResourceLoader understands.</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-config-source/#constructors","title":"Constructors","text":"ConfigSource [jvm]@JvmOverloadsfun ConfigSource(configLocation: String, format: String = \u201cyml\u201d)"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-config-source/#properties","title":"Properties","text":"Name Summary configLocation [jvm]val configLocation: String format [jvm]val format: String"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-config-source/-config-source/","title":"ConfigSource - Misk","text":"<p>//wisp-config/wisp.config/ConfigSource/ConfigSource</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-config-source/-config-source/#configsource","title":"ConfigSource","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun ConfigSource(configLocation: String, format: String = \u201cyml\u201d)</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-config-source/config-location/","title":"configLocation - Misk","text":"<p>//wisp-config/wisp.config/ConfigSource/configLocation</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-config-source/config-location/#configlocation","title":"configLocation","text":"<p>[jvm]\\ val configLocation: String</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-config-source/format/","title":"format - Misk","text":"<p>//wisp-config/wisp.config/ConfigSource/format</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-config-source/format/#format","title":"format","text":"<p>[jvm]\\ val format: String</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-configurable/","title":"Configurable - Misk","text":"<p>//wisp-config/wisp.config/Configurable</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-configurable/#configurable","title":"Configurable","text":"<p>[jvm]\\ interface Configurable&lt;T : Config&gt;</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-configurable/#functions","title":"Functions","text":"Name Summary configure [jvm]abstract fun configure(config: T) getConfigClass [jvm]abstract fun getConfigClass(): KClass&lt;T&gt;"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-configurable/configure/","title":"configure - Misk","text":"<p>//wisp-config/wisp.config/Configurable/configure</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-configurable/configure/#configure","title":"configure","text":"<p>[jvm]\\ abstract fun configure(config: T)</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-configurable/get-config-class/","title":"getConfigClass - Misk","text":"<p>//wisp-config/wisp.config/Configurable/getConfigClass</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-configurable/get-config-class/#getconfigclass","title":"getConfigClass","text":"<p>[jvm]\\ abstract fun getConfigClass(): KClass&lt;T&gt;</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/","title":"PrefixResourceLoaderPreprocessor - Misk","text":"<p>//wisp-config/wisp.config/PrefixResourceLoaderPreprocessor</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/#prefixresourceloaderpreprocessor","title":"PrefixResourceLoaderPreprocessor","text":"<p>[jvm]\\ class PrefixResourceLoaderPreprocessor@JvmOverloadsconstructor(prefix: String, resourceLoader: ResourceLoader) : TraversingPrimitivePreprocessor</p> <p>Preprocessor for a config node.  If the node is a StringNode and the value starts with the prefix, then the node value is treated as a resource location.  This is loaded using the resourceLoader and returned as a StringNode.</p> <p>prefix is either CLASSPATH_PREFIX or FILESYSTEM_PREFIX</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/#constructors","title":"Constructors","text":"PrefixResourceLoaderPreprocessor [jvm]@JvmOverloadsfun PrefixResourceLoaderPreprocessor(prefix: String, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM)"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/#functions","title":"Functions","text":"Name Summary handle [jvm]open override fun handle(node: PrimitiveNode, context: DecoderContext): ConfigResult&lt;Node&gt; process [jvm]open override fun process(node: Node, context: DecoderContext): ConfigResult&lt;Node&gt;"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/#properties","title":"Properties","text":"Name Summary prefix [jvm]val prefix: String resourceLoader [jvm]val resourceLoader: ResourceLoader"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/-prefix-resource-loader-preprocessor/","title":"PrefixResourceLoaderPreprocessor - Misk","text":"<p>//wisp-config/wisp.config/PrefixResourceLoaderPreprocessor/PrefixResourceLoaderPreprocessor</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/-prefix-resource-loader-preprocessor/#prefixresourceloaderpreprocessor","title":"PrefixResourceLoaderPreprocessor","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun PrefixResourceLoaderPreprocessor(prefix: String, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM)</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/handle/","title":"handle - Misk","text":"<p>//wisp-config/wisp.config/PrefixResourceLoaderPreprocessor/handle</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/handle/#handle","title":"handle","text":"<p>[jvm]\\ open override fun handle(node: PrimitiveNode, context: DecoderContext): ConfigResult&lt;Node&gt;</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/prefix/","title":"prefix - Misk","text":"<p>//wisp-config/wisp.config/PrefixResourceLoaderPreprocessor/prefix</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/prefix/#prefix","title":"prefix","text":"<p>[jvm]\\ val prefix: String</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/resource-loader/","title":"resourceLoader - Misk","text":"<p>//wisp-config/wisp.config/PrefixResourceLoaderPreprocessor/resourceLoader</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/resource-loader/#resourceloader","title":"resourceLoader","text":"<p>[jvm]\\ val resourceLoader: ResourceLoader</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/-companion/","title":"Companion - Misk","text":"<p>//wisp-config/wisp.config/PrefixResourceLoaderPreprocessor/Companion</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/-companion/#properties","title":"Properties","text":"Name Summary CLASSPATH_PREFIX [jvm]const val CLASSPATH_PREFIX: String FILESYSTEM_PREFIX [jvm]const val FILESYSTEM_PREFIX: String"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/-companion/-c-l-a-s-s-p-a-t-h_-p-r-e-f-i-x/","title":"CLASSPATH_PREFIX - Misk","text":"<p>//wisp-config/wisp.config/PrefixResourceLoaderPreprocessor/Companion/CLASSPATH_PREFIX</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/-companion/-c-l-a-s-s-p-a-t-h_-p-r-e-f-i-x/#classpath_prefix","title":"CLASSPATH_PREFIX","text":"<p>[jvm]\\ const val CLASSPATH_PREFIX: String</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/-companion/-f-i-l-e-s-y-s-t-e-m_-p-r-e-f-i-x/","title":"FILESYSTEM_PREFIX - Misk","text":"<p>//wisp-config/wisp.config/PrefixResourceLoaderPreprocessor/Companion/FILESYSTEM_PREFIX</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-prefix-resource-loader-preprocessor/-companion/-f-i-l-e-s-y-s-t-e-m_-p-r-e-f-i-x/#filesystem_prefix","title":"FILESYSTEM_PREFIX","text":"<p>[jvm]\\ const val FILESYSTEM_PREFIX: String</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-wisp-config/","title":"WispConfig - Misk","text":"<p>//wisp-config/wisp.config/WispConfig</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-wisp-config/#wispconfig","title":"WispConfig","text":"<p>[jvm]\\ object WispConfig</p> <p>WispConfig is a wrapper around the Hoplite config library: https://github.com/sksamuel/hoplite</p> <p>Config precedence is in order of sources added for loading, so if you want an environment config file to override values in the default file, it has to be added first.</p> <p>Note that config values from Environment Variables, System Properties and User Settings are always loaded first, see: https://github.com/sksamuel/hoplite#property-sources for details.</p> <p>Secrets in config are automatically handled, see: https://github.com/sksamuel/hoplite#masked-values</p> <p>Note that if you are passing configuration fragments within Wisp, your config class should implement Config</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-wisp-config/#functions","title":"Functions","text":"Name Summary builder [jvm]fun builder(): ConfigLoaderBuilderGet a config builder."},{"location":"0.x/wisp-config/wisp-config/wisp.config/-wisp-config/builder/","title":"builder - Misk","text":"<p>//wisp-config/wisp.config/WispConfig/builder</p>"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-wisp-config/builder/#builder","title":"builder","text":"<p>[jvm]\\ fun builder(): ConfigLoaderBuilder</p> <p>Get a config builder.</p> <p>Example use:</p> <p>val myConfig = WispConfig.builder()     \u2026     .addWispConfigSources(\u2026)     \u2026     .build()     .loadConfigOrThrow() Note that if you are passing configuration fragments within Wisp, MyConfig should implement Config"},{"location":"0.x/wisp-config/wisp-config/wisp.config/-wisp-config/builder/#return","title":"Return","text":"<p>ConfigLoader.Builder</p>"},{"location":"0.x/wisp-containers-testing/","title":"wisp-containers-testing - Misk","text":"<p>//wisp-containers-testing</p>"},{"location":"0.x/wisp-containers-testing/#wisp-containers-testing","title":"wisp-containers-testing","text":""},{"location":"0.x/wisp-containers-testing/#packages","title":"Packages","text":"Name wisp.containers"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/","title":"Package wisp.containers - Misk","text":"<p>//wisp-containers-testing/wisp.containers</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/#package-wispcontainers","title":"Package wisp.containers","text":""},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/#types","title":"Types","text":"Name Summary Composer [jvm]class Composer(name: String, containers: Container)Composer composes many Containers together to use in a unit test. Container [jvm]data class Container(createCmd: CreateContainerCmd.() -&gt; Unit, beforeStartHook: (docker: DockerClient, id: String) -&gt; Unit)A Container creates a Docker container for testing. ContainerUtil [jvm]object ContainerUtil"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/","title":"Composer - Misk","text":"<p>//wisp-containers-testing/wisp.containers/Composer</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/#composer","title":"Composer","text":"<p>[jvm]\\ class Composer(name: String, containers: Container)</p> <p>Composer composes many Containers together to use in a unit test.</p> <p>The Containers are networked using a dedicated Docker network. Tests need to expose ports in order for the test to communicate with the containers over 127.0.0.1.</p> <p>The following example composes Kafka and Zookeeper containers for testing. Kafka is exposed to the jUnit test via 127.0.0.1:9102. In this example, Zookeeper is not exposed to the test.</p> <pre><code>val zkContainer = Container {\\\n    withImage(\"confluentinc/cp-zookeeper\")\\\n    withName(\"zookeeper\")\\\n    withEnv(\"ZOOKEEPER_CLIENT_PORT=2181\")\\\n}\\\nval kafka = Container {\\\n    withImage(\"confluentinc/cp-kafka\")\\\n    withName(\"kafka\")\\\n    withExposedPorts(ExposedPort.tcp(port))\\\n    withPortBindings(Ports().apply {\\\n      bind(ExposedPort.tcp(9102), Ports.Binding.bindPort(9102))\\\n    })\\\n    withEnv(\\\n      \"KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181\",\\\n      \"KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9102\")\\\n    }\\\nval composer = Composer(\"e-kafka\", zkContainer, kafka)\\\ncomposer.start()\n</code></pre>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/#constructors","title":"Constructors","text":"Composer [jvm]fun Composer(name: String, vararg containers: Container)"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/#functions","title":"Functions","text":"Name Summary start [jvm]fun start() stop [jvm]fun stop()"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/#properties","title":"Properties","text":"Name Summary running [jvm]val running: AtomicBoolean"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/-composer/","title":"Composer - Misk","text":"<p>//wisp-containers-testing/wisp.containers/Composer/Composer</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/-composer/#composer","title":"Composer","text":"<p>[jvm]\\ fun Composer(name: String, vararg containers: Container)</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/running/","title":"running - Misk","text":"<p>//wisp-containers-testing/wisp.containers/Composer/running</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/running/#running","title":"running","text":"<p>[jvm]\\ val running: AtomicBoolean</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/start/","title":"start - Misk","text":"<p>//wisp-containers-testing/wisp.containers/Composer/start</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/start/#start","title":"start","text":"<p>[jvm]\\ fun start()</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/stop/","title":"stop - Misk","text":"<p>//wisp-containers-testing/wisp.containers/Composer/stop</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/stop/#stop","title":"stop","text":"<p>[jvm]\\ fun stop()</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/-companion/","title":"Companion - Misk","text":"<p>//wisp-containers-testing/wisp.containers/Composer/Companion</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/-companion/#properties","title":"Properties","text":"Name Summary dockerClient [jvm]val dockerClient: DockerClient"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/-companion/docker-client/","title":"dockerClient - Misk","text":"<p>//wisp-containers-testing/wisp.containers/Composer/Companion/dockerClient</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-composer/-companion/docker-client/#dockerclient","title":"dockerClient","text":"<p>[jvm]\\ val dockerClient: DockerClient</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container/","title":"Container - Misk","text":"<p>//wisp-containers-testing/wisp.containers/Container</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container/#container","title":"Container","text":"<p>[jvm]\\ data class Container(createCmd: CreateContainerCmd.() -&gt; Unit, beforeStartHook: (docker: DockerClient, id: String) -&gt; Unit)</p> <p>A Container creates a Docker container for testing.</p> <p>Tests provide a lambda to build a CreateContainerCmd. The createCmd lambda must set CreateContainerCmd.withName and CreateContainerCmd.withImage. All other fields are optional. The Composer takes care of setting up the network.</p> <p>There may be a need to configure your container between the creation and start steps. beforeStartHook provides you with an id to your container allowing you to manipulate as necessary before the command/entrypoint is invoked.</p> <p>See Composer for an example.</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container/#constructors","title":"Constructors","text":"Container [jvm]fun Container(createCmd: CreateContainerCmd.() -&gt; Unit) Container [jvm]fun Container(createCmd: CreateContainerCmd.() -&gt; Unit, beforeStartHook: (docker: DockerClient, id: String) -&gt; Unit)"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container/#properties","title":"Properties","text":"Name Summary beforeStartHook [jvm]val beforeStartHook: (docker: DockerClient, id: String) -&gt; Unit createCmd [jvm]val createCmd: CreateContainerCmd.() -&gt; Unit"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container/-container/","title":"Container - Misk","text":"<p>//wisp-containers-testing/wisp.containers/Container/Container</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container/-container/#container","title":"Container","text":"<p>[jvm]\\ fun Container(createCmd: CreateContainerCmd.() -&gt; Unit)</p> <p>fun Container(createCmd: CreateContainerCmd.() -&gt; Unit, beforeStartHook: (docker: DockerClient, id: String) -&gt; Unit)</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container/before-start-hook/","title":"beforeStartHook - Misk","text":"<p>//wisp-containers-testing/wisp.containers/Container/beforeStartHook</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container/before-start-hook/#beforestarthook","title":"beforeStartHook","text":"<p>[jvm]\\ val beforeStartHook: (docker: DockerClient, id: String) -&gt; Unit</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container/create-cmd/","title":"createCmd - Misk","text":"<p>//wisp-containers-testing/wisp.containers/Container/createCmd</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container/create-cmd/#createcmd","title":"createCmd","text":"<p>[jvm]\\ val createCmd: CreateContainerCmd.() -&gt; Unit</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container-util/","title":"ContainerUtil - Misk","text":"<p>//wisp-containers-testing/wisp.containers/ContainerUtil</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container-util/#containerutil","title":"ContainerUtil","text":"<p>[jvm]\\ object ContainerUtil</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container-util/#functions","title":"Functions","text":"Name Summary dockerTargetOrLocalHost [jvm]fun dockerTargetOrLocalHost(): String dockerTargetOrLocalIp [jvm]fun dockerTargetOrLocalIp(): String"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container-util/#properties","title":"Properties","text":"Name Summary isRunningInDocker [jvm]val isRunningInDocker: Boolean"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container-util/docker-target-or-local-host/","title":"dockerTargetOrLocalHost - Misk","text":"<p>//wisp-containers-testing/wisp.containers/ContainerUtil/dockerTargetOrLocalHost</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container-util/docker-target-or-local-host/#dockertargetorlocalhost","title":"dockerTargetOrLocalHost","text":"<p>[jvm]\\ fun dockerTargetOrLocalHost(): String</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container-util/docker-target-or-local-ip/","title":"dockerTargetOrLocalIp - Misk","text":"<p>//wisp-containers-testing/wisp.containers/ContainerUtil/dockerTargetOrLocalIp</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container-util/docker-target-or-local-ip/#dockertargetorlocalip","title":"dockerTargetOrLocalIp","text":"<p>[jvm]\\ fun dockerTargetOrLocalIp(): String</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container-util/is-running-in-docker/","title":"isRunningInDocker - Misk","text":"<p>//wisp-containers-testing/wisp.containers/ContainerUtil/isRunningInDocker</p>"},{"location":"0.x/wisp-containers-testing/wisp-containers-testing/wisp.containers/-container-util/is-running-in-docker/#isrunningindocker","title":"isRunningInDocker","text":"<p>[jvm]\\ val isRunningInDocker: Boolean</p>"},{"location":"0.x/wisp-deployment/","title":"wisp-deployment - Misk","text":"<p>//wisp-deployment</p>"},{"location":"0.x/wisp-deployment/#wisp-deployment","title":"wisp-deployment","text":""},{"location":"0.x/wisp-deployment/#packages","title":"Packages","text":"Name wisp.deployment"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/","title":"Package wisp.deployment - Misk","text":"<p>//wisp-deployment/wisp.deployment</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/#package-wispdeployment","title":"Package wisp.deployment","text":""},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/#types","title":"Types","text":"Name Summary Deployment [jvm]data class Deployment@JvmOverloadsconstructor(name: String, isProduction: Boolean, isStaging: Boolean, isTest: Boolean, isLocalDevelopment: Boolean)Deployment describes the context in which the application is running DeploymentLocation [jvm]interface DeploymentLocationFor information about the deployment location. EnvironmentVariableDeploymentLocation [jvm]class EnvironmentVariableDeploymentLocation@JvmOverloadsconstructor(environmentVariableName: String, environmentVariableLoader: EnvironmentVariableLoader) : DeploymentLocationProvides a deployment location id from the environment variable value. EnvironmentVariableLoader [jvm]interface EnvironmentVariableLoaderLoads an environment variable value. RealEnvironmentVariableLoader [jvm]class RealEnvironmentVariableLoader : EnvironmentVariableLoader"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/#functions","title":"Functions","text":"Name Summary getDeploymentFromEnvironmentVariable [jvm]fun getDeploymentFromEnvironmentVariable(defaultDeployment: Deployment = DEVELOPMENT, environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real): DeploymentDetermines a Deployment based on the value within the ENVIRONMENT variable, defaulting to local development if not set (i.e. isLocalDevelopment == true)"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/#properties","title":"Properties","text":"Name Summary deployments [jvm]val deployments: &lt;ERROR CLASS&gt; DEVELOPMENT [jvm]val DEVELOPMENT: Deployment PRODUCTION [jvm]val PRODUCTION: Deployment STAGING [jvm]val STAGING: Deployment TESTING [jvm]val TESTING: Deployment"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-d-e-v-e-l-o-p-m-e-n-t/","title":"DEVELOPMENT - Misk","text":"<p>//wisp-deployment/wisp.deployment/DEVELOPMENT</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-d-e-v-e-l-o-p-m-e-n-t/#development","title":"DEVELOPMENT","text":"<p>[jvm]\\ val DEVELOPMENT: Deployment</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-p-r-o-d-u-c-t-i-o-n/","title":"PRODUCTION - Misk","text":"<p>//wisp-deployment/wisp.deployment/PRODUCTION</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-p-r-o-d-u-c-t-i-o-n/#production","title":"PRODUCTION","text":"<p>[jvm]\\ val PRODUCTION: Deployment</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-s-t-a-g-i-n-g/","title":"STAGING - Misk","text":"<p>//wisp-deployment/wisp.deployment/STAGING</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-s-t-a-g-i-n-g/#staging","title":"STAGING","text":"<p>[jvm]\\ val STAGING: Deployment</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-t-e-s-t-i-n-g/","title":"TESTING - Misk","text":"<p>//wisp-deployment/wisp.deployment/TESTING</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-t-e-s-t-i-n-g/#testing","title":"TESTING","text":"<p>[jvm]\\ val TESTING: Deployment</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/deployments/","title":"deployments - Misk","text":"<p>//wisp-deployment/wisp.deployment/deployments</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/deployments/#deployments","title":"deployments","text":"<p>[jvm]\\ val deployments: &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/get-deployment-from-environment-variable/","title":"getDeploymentFromEnvironmentVariable - Misk","text":"<p>//wisp-deployment/wisp.deployment/getDeploymentFromEnvironmentVariable</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/get-deployment-from-environment-variable/#getdeploymentfromenvironmentvariable","title":"getDeploymentFromEnvironmentVariable","text":"<p>[jvm]\\ fun getDeploymentFromEnvironmentVariable(defaultDeployment: Deployment = DEVELOPMENT, environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real): Deployment</p> <p>Determines a Deployment based on the value within the ENVIRONMENT variable, defaulting to local development if not set (i.e. isLocalDevelopment == true)</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/","title":"Deployment - Misk","text":"<p>//wisp-deployment/wisp.deployment/Deployment</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/#deployment","title":"Deployment","text":"<p>[jvm]\\ data class Deployment@JvmOverloadsconstructor(name: String, isProduction: Boolean, isStaging: Boolean, isTest: Boolean, isLocalDevelopment: Boolean)</p> <p>Deployment describes the context in which the application is running</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/#constructors","title":"Constructors","text":"Deployment [jvm]@JvmOverloadsfun Deployment(name: String, isProduction: Boolean = false, isStaging: Boolean = false, isTest: Boolean = false, isLocalDevelopment: Boolean = false)"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/#functions","title":"Functions","text":"Name Summary mapToEnvironmentName [jvm]fun mapToEnvironmentName(): String"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/#properties","title":"Properties","text":"Name Summary isFake [jvm]val isFake: BooleanReturns true if running outside of a cluster (CI or local development). Mutually exclusive with isReal. isLocalDevelopment [jvm]val isLocalDevelopment: Boolean = falseWhether the service is running on a local developer machine, including as a Docker image. isProduction [jvm]val isProduction: Boolean = falseWhether the service is running in a production environment, having an SLA or handling customer data. isReal [jvm]val isReal: BooleanReturns true if running in a managed cluster, such as a staging or production cluster. Mutually exclusive with isFake. isStaging [jvm]val isStaging: Boolean = falseWhether the service is running in a staging environment. isTest [jvm]val isTest: Boolean = falseWhether the service is running in a test environment, either locally or in a CI. name [jvm]val name: StringThe name of this deployment. This is used for debugging and should not be parsed."},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/-deployment/","title":"Deployment - Misk","text":"<p>//wisp-deployment/wisp.deployment/Deployment/Deployment</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/-deployment/#deployment","title":"Deployment","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun Deployment(name: String, isProduction: Boolean = false, isStaging: Boolean = false, isTest: Boolean = false, isLocalDevelopment: Boolean = false)</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/is-fake/","title":"isFake - Misk","text":"<p>//wisp-deployment/wisp.deployment/Deployment/isFake</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/is-fake/#isfake","title":"isFake","text":"<p>[jvm]\\ val isFake: Boolean</p> <p>Returns true if running outside of a cluster (CI or local development). Mutually exclusive with isReal.</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/is-local-development/","title":"isLocalDevelopment - Misk","text":"<p>//wisp-deployment/wisp.deployment/Deployment/isLocalDevelopment</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/is-local-development/#islocaldevelopment","title":"isLocalDevelopment","text":"<p>[jvm]\\ val isLocalDevelopment: Boolean = false</p> <p>Whether the service is running on a local developer machine, including as a Docker image.</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/is-production/","title":"isProduction - Misk","text":"<p>//wisp-deployment/wisp.deployment/Deployment/isProduction</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/is-production/#isproduction","title":"isProduction","text":"<p>[jvm]\\ val isProduction: Boolean = false</p> <p>Whether the service is running in a production environment, having an SLA or handling customer data.</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/is-real/","title":"isReal - Misk","text":"<p>//wisp-deployment/wisp.deployment/Deployment/isReal</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/is-real/#isreal","title":"isReal","text":"<p>[jvm]\\ val isReal: Boolean</p> <p>Returns true if running in a managed cluster, such as a staging or production cluster. Mutually exclusive with isFake.</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/is-staging/","title":"isStaging - Misk","text":"<p>//wisp-deployment/wisp.deployment/Deployment/isStaging</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/is-staging/#isstaging","title":"isStaging","text":"<p>[jvm]\\ val isStaging: Boolean = false</p> <p>Whether the service is running in a staging environment.</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/is-test/","title":"isTest - Misk","text":"<p>//wisp-deployment/wisp.deployment/Deployment/isTest</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/is-test/#istest","title":"isTest","text":"<p>[jvm]\\ val isTest: Boolean = false</p> <p>Whether the service is running in a test environment, either locally or in a CI.</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/map-to-environment-name/","title":"mapToEnvironmentName - Misk","text":"<p>//wisp-deployment/wisp.deployment/Deployment/mapToEnvironmentName</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/map-to-environment-name/#maptoenvironmentname","title":"mapToEnvironmentName","text":"<p>[jvm]\\ fun mapToEnvironmentName(): String</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/name/","title":"name - Misk","text":"<p>//wisp-deployment/wisp.deployment/Deployment/name</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p> <p>The name of this deployment. This is used for debugging and should not be parsed.</p> <p>All pods in the same deployment will have this same name.</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment-location/","title":"DeploymentLocation - Misk","text":"<p>//wisp-deployment/wisp.deployment/DeploymentLocation</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment-location/#deploymentlocation","title":"DeploymentLocation","text":"<p>[jvm]\\ interface DeploymentLocation</p> <p>For information about the deployment location.</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment-location/#properties","title":"Properties","text":"Name Summary id [jvm]abstract val id: StringDeployment identification, e.g. Kubernetes pod name or host name, etc."},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment-location/#inheritors","title":"Inheritors","text":"Name EnvironmentVariableDeploymentLocation"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment-location/id/","title":"id - Misk","text":"<p>//wisp-deployment/wisp.deployment/DeploymentLocation/id</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-deployment-location/id/#id","title":"id","text":"<p>[jvm]\\ abstract val id: String</p> <p>Deployment identification, e.g. Kubernetes pod name or host name, etc.</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-deployment-location/","title":"EnvironmentVariableDeploymentLocation - Misk","text":"<p>//wisp-deployment/wisp.deployment/EnvironmentVariableDeploymentLocation</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-deployment-location/#environmentvariabledeploymentlocation","title":"EnvironmentVariableDeploymentLocation","text":"<p>[jvm]\\ class EnvironmentVariableDeploymentLocation@JvmOverloadsconstructor(environmentVariableName: String, environmentVariableLoader: EnvironmentVariableLoader) : DeploymentLocation</p> <p>Provides a deployment location id from the environment variable value.</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-deployment-location/#constructors","title":"Constructors","text":"EnvironmentVariableDeploymentLocation [jvm]@JvmOverloadsfun EnvironmentVariableDeploymentLocation(environmentVariableName: String, environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real)"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-deployment-location/#properties","title":"Properties","text":"Name Summary id [jvm]open override val id: StringDeployment identification, e.g. Kubernetes pod name or host name, etc."},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-deployment-location/-environment-variable-deployment-location/","title":"EnvironmentVariableDeploymentLocation - Misk","text":"<p>//wisp-deployment/wisp.deployment/EnvironmentVariableDeploymentLocation/EnvironmentVariableDeploymentLocation</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-deployment-location/-environment-variable-deployment-location/#environmentvariabledeploymentlocation","title":"EnvironmentVariableDeploymentLocation","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun EnvironmentVariableDeploymentLocation(environmentVariableName: String, environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real)</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-deployment-location/id/","title":"id - Misk","text":"<p>//wisp-deployment/wisp.deployment/EnvironmentVariableDeploymentLocation/id</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-deployment-location/id/#id","title":"id","text":"<p>[jvm]\\ open override val id: String</p> <p>Deployment identification, e.g. Kubernetes pod name or host name, etc.</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/","title":"EnvironmentVariableLoader - Misk","text":"<p>//wisp-deployment/wisp.deployment/EnvironmentVariableLoader</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/#environmentvariableloader","title":"EnvironmentVariableLoader","text":"<p>[jvm]\\ interface EnvironmentVariableLoader</p> <p>Loads an environment variable value.</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/#functions","title":"Functions","text":"Name Summary getEnvironmentVariable [jvm]open fun getEnvironmentVariable(name: String): StringGet the environment variable value that must exist getEnvironmentVariableOrDefault [jvm]open fun getEnvironmentVariableOrDefault(name: String, defaultValue: String): StringGet the environment variable value, or if it does not exist, use the defaultValue supplied."},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/#inheritors","title":"Inheritors","text":"Name RealEnvironmentVariableLoader"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/get-environment-variable-or-default/","title":"getEnvironmentVariableOrDefault - Misk","text":"<p>//wisp-deployment/wisp.deployment/EnvironmentVariableLoader/getEnvironmentVariableOrDefault</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/get-environment-variable-or-default/#getenvironmentvariableordefault","title":"getEnvironmentVariableOrDefault","text":"<p>[jvm]\\ open fun getEnvironmentVariableOrDefault(name: String, defaultValue: String): String</p> <p>Get the environment variable value, or if it does not exist, use the defaultValue supplied.</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/get-environment-variable/","title":"getEnvironmentVariable - Misk","text":"<p>//wisp-deployment/wisp.deployment/EnvironmentVariableLoader/getEnvironmentVariable</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/get-environment-variable/#getenvironmentvariable","title":"getEnvironmentVariable","text":"<p>[jvm]\\ open fun getEnvironmentVariable(name: String): String</p> <p>Get the environment variable value that must exist</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/get-environment-variable/#throws","title":"Throws","text":"java.lang.IllegalStateException if the environment variable is not found"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/-companion/","title":"Companion - Misk","text":"<p>//wisp-deployment/wisp.deployment/EnvironmentVariableLoader/Companion</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/-companion/#properties","title":"Properties","text":"Name Summary real [jvm]val real: RealEnvironmentVariableLoader"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/-companion/real/","title":"real - Misk","text":"<p>//wisp-deployment/wisp.deployment/EnvironmentVariableLoader/Companion/real</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-environment-variable-loader/-companion/real/#real","title":"real","text":"<p>[jvm]\\ val real: RealEnvironmentVariableLoader</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-real-environment-variable-loader/","title":"RealEnvironmentVariableLoader - Misk","text":"<p>//wisp-deployment/wisp.deployment/RealEnvironmentVariableLoader</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-real-environment-variable-loader/#realenvironmentvariableloader","title":"RealEnvironmentVariableLoader","text":"<p>[jvm]\\ class RealEnvironmentVariableLoader : EnvironmentVariableLoader</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-real-environment-variable-loader/#functions","title":"Functions","text":"Name Summary getEnvironmentVariable [jvm]open fun getEnvironmentVariable(name: String): StringGet the environment variable value that must exist getEnvironmentVariableOrDefault [jvm]open fun getEnvironmentVariableOrDefault(name: String, defaultValue: String): StringGet the environment variable value, or if it does not exist, use the defaultValue supplied."},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-real-environment-variable-loader/-real-environment-variable-loader/","title":"RealEnvironmentVariableLoader - Misk","text":"<p>//wisp-deployment/wisp.deployment/RealEnvironmentVariableLoader/RealEnvironmentVariableLoader</p>"},{"location":"0.x/wisp-deployment/wisp-deployment/wisp.deployment/-real-environment-variable-loader/-real-environment-variable-loader/#realenvironmentvariableloader","title":"RealEnvironmentVariableLoader","text":"<p>[jvm]\\ fun RealEnvironmentVariableLoader()</p>"},{"location":"0.x/wisp-deployment-testing/","title":"wisp-deployment-testing - Misk","text":"<p>//wisp-deployment-testing</p>"},{"location":"0.x/wisp-deployment-testing/#wisp-deployment-testing","title":"wisp-deployment-testing","text":""},{"location":"0.x/wisp-deployment-testing/#packages","title":"Packages","text":"Name wisp.deployment"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/","title":"Package wisp.deployment - Misk","text":"<p>//wisp-deployment-testing/wisp.deployment</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/#package-wispdeployment","title":"Package wisp.deployment","text":""},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/#types","title":"Types","text":"Name Summary FakeDeploymentLocation [jvm]class FakeDeploymentLocation@JvmOverloadsconstructor(deploymentLocation: String) : DeploymentLocation FakeEnvironmentVariableLoader [jvm]class FakeEnvironmentVariableLoader@JvmOverloadsconstructor(vars: MutableMap&lt;String, String&gt;) : EnvironmentVariableLoaderA Fake EnvironmentVariableLoader that loads from an in memory map"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-deployment-location/","title":"FakeDeploymentLocation - Misk","text":"<p>//wisp-deployment-testing/wisp.deployment/FakeDeploymentLocation</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-deployment-location/#fakedeploymentlocation","title":"FakeDeploymentLocation","text":"<p>[jvm]\\ class FakeDeploymentLocation@JvmOverloadsconstructor(deploymentLocation: String) : DeploymentLocation</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-deployment-location/#properties","title":"Properties","text":"Name Summary id [jvm]open override val id: StringDeployment identification, e.g. Kubernetes pod name or host name, etc."},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-deployment-location/-fake-deployment-location/","title":"FakeDeploymentLocation - Misk","text":"<p>//wisp-deployment-testing/wisp.deployment/FakeDeploymentLocation/FakeDeploymentLocation</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-deployment-location/-fake-deployment-location/#fakedeploymentlocation","title":"FakeDeploymentLocation","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun FakeDeploymentLocation(deploymentLocation: String = \u201cFakeDeploymentLocation\u201d)</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-deployment-location/id/","title":"id - Misk","text":"<p>//wisp-deployment-testing/wisp.deployment/FakeDeploymentLocation/id</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-deployment-location/id/#id","title":"id","text":"<p>[jvm]\\ open override val id: String</p> <p>Deployment identification, e.g. Kubernetes pod name or host name, etc.</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/","title":"FakeEnvironmentVariableLoader - Misk","text":"<p>//wisp-deployment-testing/wisp.deployment/FakeEnvironmentVariableLoader</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/#fakeenvironmentvariableloader","title":"FakeEnvironmentVariableLoader","text":"<p>[jvm]\\ class FakeEnvironmentVariableLoader@JvmOverloadsconstructor(vars: MutableMap&lt;String, String&gt;) : EnvironmentVariableLoader</p> <p>A Fake EnvironmentVariableLoader that loads from an in memory map</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/#constructors","title":"Constructors","text":"FakeEnvironmentVariableLoader [jvm]@JvmOverloadsfun FakeEnvironmentVariableLoader(vars: MutableMap&lt;String, String&gt; = mutableMapOf())"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/#functions","title":"Functions","text":"Name Summary getEnvironmentVariable [jvm]open override fun getEnvironmentVariable(name: String): String getEnvironmentVariableOrDefault [jvm]open override fun getEnvironmentVariableOrDefault(name: String, defaultValue: String): String"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/#properties","title":"Properties","text":"Name Summary vars [jvm]val vars: MutableMap&lt;String, String&gt;"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/-fake-environment-variable-loader/","title":"FakeEnvironmentVariableLoader - Misk","text":"<p>//wisp-deployment-testing/wisp.deployment/FakeEnvironmentVariableLoader/FakeEnvironmentVariableLoader</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/-fake-environment-variable-loader/#fakeenvironmentvariableloader","title":"FakeEnvironmentVariableLoader","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun FakeEnvironmentVariableLoader(vars: MutableMap&lt;String, String&gt; = mutableMapOf())</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/get-environment-variable-or-default/","title":"getEnvironmentVariableOrDefault - Misk","text":"<p>//wisp-deployment-testing/wisp.deployment/FakeEnvironmentVariableLoader/getEnvironmentVariableOrDefault</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/get-environment-variable-or-default/#getenvironmentvariableordefault","title":"getEnvironmentVariableOrDefault","text":"<p>[jvm]\\ open override fun getEnvironmentVariableOrDefault(name: String, defaultValue: String): String</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/get-environment-variable/","title":"getEnvironmentVariable - Misk","text":"<p>//wisp-deployment-testing/wisp.deployment/FakeEnvironmentVariableLoader/getEnvironmentVariable</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/get-environment-variable/#getenvironmentvariable","title":"getEnvironmentVariable","text":"<p>[jvm]\\ open override fun getEnvironmentVariable(name: String): String</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/vars/","title":"vars - Misk","text":"<p>//wisp-deployment-testing/wisp.deployment/FakeEnvironmentVariableLoader/vars</p>"},{"location":"0.x/wisp-deployment-testing/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/vars/#vars","title":"vars","text":"<p>[jvm]\\ val vars: MutableMap&lt;String, String&gt;</p>"},{"location":"0.x/wisp-feature/","title":"wisp-feature - Misk","text":"<p>//wisp-feature</p>"},{"location":"0.x/wisp-feature/#wisp-feature","title":"wisp-feature","text":""},{"location":"0.x/wisp-feature/#packages","title":"Packages","text":"Name wisp.feature"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/","title":"Package wisp.feature - Misk","text":"<p>//wisp-feature/wisp.feature</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/#package-wispfeature","title":"Package wisp.feature","text":""},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/#types","title":"Types","text":"Name Summary Attributes [jvm]open class Attributes@JvmOverloadsconstructor(text: Map&lt;String, String&gt;, number: Map&lt;String, Number&gt;?, anonymous: Boolean)Extra attributes to be used for evaluating features. BooleanFeatureFlag [jvm]interface BooleanFeatureFlag : FeatureFlag&lt;Boolean&gt; DoubleFeatureFlag [jvm]interface DoubleFeatureFlag : FeatureFlag&lt;Double&gt; DynamicConfig [jvm]interface DynamicConfigInterface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys. EnumFeatureFlag [jvm]interface EnumFeatureFlag&lt;T : Enum&lt;T&gt;&gt; : FeatureFlag&lt;T&gt; A Enumeration feature flag, when evaluated returns T Feature [jvm]open class Feature(name: String)Typed feature string. FeatureFlag [jvm]interface FeatureFlag&lt;T : Any&gt; FeatureFlags [jvm]interface FeatureFlags : StrongFeatureFlags, LegacyFeatureFlagsInterface for evaluating feature flags. FeatureFlagValidation [jvm]object FeatureFlagValidation IntFeatureFlag [jvm]interface IntFeatureFlag : FeatureFlag&lt;Int&gt; JsonFeatureFlag [jvm]interface JsonFeatureFlag&lt;T : Any&gt; : FeatureFlag&lt;T&gt; A JSON feature flag, when evaluated returns T. LegacyFeatureFlags [jvm]interface LegacyFeatureFlags StringFeatureFlag [jvm]interface StringFeatureFlag : FeatureFlag&lt;String&gt; StrongFeatureFlags [jvm]interface StrongFeatureFlags TrackerReference [jvm]interface TrackerReference"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/#functions","title":"Functions","text":"Name Summary fromSafeJson [jvm]fun &lt;T&gt; JsonAdapter&lt;T&gt;.fromSafeJson(value: String): T?fun &lt;T&gt; JsonAdapter&lt;T&gt;.fromSafeJson(json: String, onUnknownFields: (JsonDataException) -&gt; Unit): T?Attempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields. getEnum [jvm]inline fun &lt;T : Enum&lt;T&gt;&gt; DynamicConfig.getEnum(feature: Feature): Tinline fun &lt;T : Enum&lt;T&gt;&gt; FeatureFlags.getEnum(feature: Feature, key: String, attributes: Attributes = Attributes()): T getJson [jvm]inline fun &lt;T&gt; DynamicConfig.getJson(feature: Feature): Tinline fun &lt;T&gt; FeatureFlags.getJson(feature: Feature, key: String, attributes: Attributes = Attributes()): T toSafeJson [jvm]fun &lt;T&gt; JsonAdapter&lt;T&gt;.toSafeJson(value: T): Stringfun &lt;T&gt; JsonAdapter&lt;T&gt;.toSafeJson(value: T, onUnknownFields: (JsonDataException) -&gt; Unit): StringAttempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields. trackEnum [jvm]inline fun &lt;T : Enum&lt;T&gt;&gt; DynamicConfig.trackEnum(feature: Feature, executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReferenceinline fun &lt;T : Enum&lt;T&gt;&gt; FeatureFlags.trackEnum(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference trackJson [jvm]inline fun &lt;T&gt; DynamicConfig.trackJson(feature: Feature, executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReferenceinline fun &lt;T&gt; FeatureFlags.trackJson(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/from-safe-json/","title":"fromSafeJson - Misk","text":"<p>//wisp-feature/wisp.feature/fromSafeJson</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/from-safe-json/#fromsafejson","title":"fromSafeJson","text":"<p>[jvm]\\ fun &lt;T&gt; JsonAdapter&lt;T&gt;.fromSafeJson(value: String): T?</p> <p>Attempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields.</p> <p>This overload is needed for JVM compatibility.</p> <p>[jvm]\\ fun &lt;T&gt; JsonAdapter&lt;T&gt;.fromSafeJson(json: String, onUnknownFields: (JsonDataException) -&gt; Unit): T?</p> <p>Attempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/get-enum/","title":"getEnum - Misk","text":"<p>//wisp-feature/wisp.feature/getEnum</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/get-enum/#getenum","title":"getEnum","text":"<p>[jvm]\\ inline fun &lt;T : Enum&lt;T&gt;&gt; DynamicConfig.getEnum(feature: Feature): T</p> <p>inline fun &lt;T : Enum&lt;T&gt;&gt; FeatureFlags.getEnum(feature: Feature, key: String, attributes: Attributes = Attributes()): T</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/get-json/","title":"getJson - Misk","text":"<p>//wisp-feature/wisp.feature/getJson</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/get-json/#getjson","title":"getJson","text":"<p>[jvm]\\ inline fun &lt;T&gt; DynamicConfig.getJson(feature: Feature): T</p> <p>inline fun &lt;T&gt; FeatureFlags.getJson(feature: Feature, key: String, attributes: Attributes = Attributes()): T</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/to-safe-json/","title":"toSafeJson - Misk","text":"<p>//wisp-feature/wisp.feature/toSafeJson</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/to-safe-json/#tosafejson","title":"toSafeJson","text":"<p>[jvm]\\ fun &lt;T&gt; JsonAdapter&lt;T&gt;.toSafeJson(value: T): String</p> <p>Attempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields.</p> <p>This overload is needed for JVM compatibility.</p> <p>[jvm]\\ fun &lt;T&gt; JsonAdapter&lt;T&gt;.toSafeJson(value: T, onUnknownFields: (JsonDataException) -&gt; Unit): String</p> <p>Attempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/track-enum/","title":"trackEnum - Misk","text":"<p>//wisp-feature/wisp.feature/trackEnum</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/track-enum/#trackenum","title":"trackEnum","text":"<p>[jvm]\\ inline fun &lt;T : Enum&lt;T&gt;&gt; DynamicConfig.trackEnum(feature: Feature, executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference</p> <p>inline fun &lt;T : Enum&lt;T&gt;&gt; FeatureFlags.trackEnum(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/track-json/","title":"trackJson - Misk","text":"<p>//wisp-feature/wisp.feature/trackJson</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/track-json/#trackjson","title":"trackJson","text":"<p>[jvm]\\ inline fun &lt;T&gt; DynamicConfig.trackJson(feature: Feature, executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference</p> <p>inline fun &lt;T&gt; FeatureFlags.trackJson(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/","title":"Attributes - Misk","text":"<p>//wisp-feature/wisp.feature/Attributes</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/#attributes","title":"Attributes","text":"<p>[jvm]\\ open class Attributes@JvmOverloadsconstructor(text: Map&lt;String, String&gt;, number: Map&lt;String, Number&gt;?, anonymous: Boolean)</p> <p>Extra attributes to be used for evaluating features.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/#constructors","title":"Constructors","text":"Attributes [jvm]@JvmOverloadsfun Attributes(text: Map&lt;String, String&gt; = mapOf(), number: Map&lt;String, Number&gt;? = null, anonymous: Boolean = false)"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/#functions","title":"Functions","text":"Name Summary copy [jvm]@JvmOverloadsfun copy(text: Map&lt;String, String&gt; = this.text, number: Map&lt;String, Number&gt;? = this.number, anonymous: Boolean = this.anonymous): Attributes equals [jvm]open operator override fun equals(other: Any?): Boolean hashCode [jvm]open override fun hashCode(): Int toString [jvm]open override fun toString(): String with [jvm]fun with(name: String, value: Number): Attributesfun with(name: String, value: String): Attributes"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/#properties","title":"Properties","text":"Name Summary anonymous [jvm]val anonymous: Boolean = false number [jvm]val number: Map&lt;String, Number&gt;? = null text [jvm]val text: Map&lt;String, String&gt;"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/-attributes/","title":"Attributes - Misk","text":"<p>//wisp-feature/wisp.feature/Attributes/Attributes</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/-attributes/#attributes","title":"Attributes","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun Attributes(text: Map&lt;String, String&gt; = mapOf(), number: Map&lt;String, Number&gt;? = null, anonymous: Boolean = false)</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/anonymous/","title":"anonymous - Misk","text":"<p>//wisp-feature/wisp.feature/Attributes/anonymous</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/anonymous/#anonymous","title":"anonymous","text":"<p>[jvm]\\ val anonymous: Boolean = false</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/copy/","title":"copy - Misk","text":"<p>//wisp-feature/wisp.feature/Attributes/copy</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/copy/#copy","title":"copy","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun copy(text: Map&lt;String, String&gt; = this.text, number: Map&lt;String, Number&gt;? = this.number, anonymous: Boolean = this.anonymous): Attributes</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/equals/","title":"equals - Misk","text":"<p>//wisp-feature/wisp.feature/Attributes/equals</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/equals/#equals","title":"equals","text":"<p>[jvm]\\ open operator override fun equals(other: Any?): Boolean</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/hash-code/","title":"hashCode - Misk","text":"<p>//wisp-feature/wisp.feature/Attributes/hashCode</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open override fun hashCode(): Int</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/number/","title":"number - Misk","text":"<p>//wisp-feature/wisp.feature/Attributes/number</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/number/#number","title":"number","text":"<p>[jvm]\\ val number: Map&lt;String, Number&gt;? = null</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/text/","title":"text - Misk","text":"<p>//wisp-feature/wisp.feature/Attributes/text</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/text/#text","title":"text","text":"<p>[jvm]\\ val text: Map&lt;String, String&gt;</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/to-string/","title":"toString - Misk","text":"<p>//wisp-feature/wisp.feature/Attributes/toString</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/with/","title":"with - Misk","text":"<p>//wisp-feature/wisp.feature/Attributes/with</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-attributes/with/#with","title":"with","text":"<p>[jvm]\\ fun with(name: String, value: String): Attributes</p> <p>fun with(name: String, value: Number): Attributes</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-boolean-feature-flag/","title":"BooleanFeatureFlag - Misk","text":"<p>//wisp-feature/wisp.feature/BooleanFeatureFlag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-boolean-feature-flag/#booleanfeatureflag","title":"BooleanFeatureFlag","text":"<p>[jvm]\\ interface BooleanFeatureFlag : FeatureFlag&lt;Boolean&gt;</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-boolean-feature-flag/#properties","title":"Properties","text":"Name Summary attributes [jvm]abstract val attributes: AttributesThe attributes of this feature flag, provided during flag evaluation feature [jvm]abstract val feature: FeatureFeature name of the feature flag key [jvm]abstract val key: StringUnique primary key for the entity the flag should be evaluated against."},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-double-feature-flag/","title":"DoubleFeatureFlag - Misk","text":"<p>//wisp-feature/wisp.feature/DoubleFeatureFlag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-double-feature-flag/#doublefeatureflag","title":"DoubleFeatureFlag","text":"<p>[jvm]\\ interface DoubleFeatureFlag : FeatureFlag&lt;Double&gt;</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-double-feature-flag/#properties","title":"Properties","text":"Name Summary attributes [jvm]abstract val attributes: AttributesThe attributes of this feature flag, provided during flag evaluation feature [jvm]abstract val feature: FeatureFeature name of the feature flag key [jvm]abstract val key: StringUnique primary key for the entity the flag should be evaluated against."},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/","title":"DynamicConfig - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/#dynamicconfig","title":"DynamicConfig","text":"<p>[jvm]\\ interface DynamicConfig</p> <p>Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/#functions","title":"Functions","text":"Name Summary getBoolean [jvm]abstract fun getBoolean(feature: Feature): BooleanReturns the value of a boolean dynamic flag. getDouble [jvm]abstract fun getDouble(feature: Feature): DoubleReturns the value of a double dynamic flag. getEnum [jvm]abstract fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, clazz: Class&lt;T&gt;): TReturns the value of an enumerated dynamic flag. getInt [jvm]abstract fun getInt(feature: Feature): IntReturns the value of an integer dynamic flag. getJson [jvm]abstract fun &lt;T&gt; getJson(feature: Feature, clazz: Class&lt;T&gt;): TReturns the value of a JSON dynamic flag. getJsonString [jvm]abstract fun getJsonString(feature: Feature): StringReturns the value of a JSON string value of the dynamic flag. getString [jvm]abstract fun getString(feature: Feature): StringReturns the value of a string dynamic flag. trackBoolean [jvm]abstract fun trackBoolean(feature: Feature, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReferenceRegisters a boolean dynamic config tracker which will be invoked whenever the boolean dynamic config changes value. trackDouble [jvm]abstract fun trackDouble(feature: Feature, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReferenceRegisters a double dynamic config tracker which will be invoked whenever the double dynamic config changes value. trackEnum [jvm]abstract fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceRegisters a enum dynamic config tracker which will be invoked whenever the enum dynamic config changes value. trackInt [jvm]abstract fun trackInt(feature: Feature, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReferenceRegisters a integer dynamic config tracker which will be invoked whenever the integer dynamic config changes value. trackJson [jvm]abstract fun &lt;T&gt; trackJson(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceRegisters a json dynamic config tracker which will be invoked whenever the json dynamic config changes value. trackString [jvm]abstract fun trackString(feature: Feature, executor: Executor, tracker: (String) -&gt; Unit): TrackerReferenceRegisters a string dynamic config tracker which will be invoked whenever the string dynamic config changes value."},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/#extensions","title":"Extensions","text":"Name Summary getEnum [jvm]inline fun &lt;T : Enum&lt;T&gt;&gt; DynamicConfig.getEnum(feature: Feature): T getJson [jvm]inline fun &lt;T&gt; DynamicConfig.getJson(feature: Feature): T trackEnum [jvm]inline fun &lt;T : Enum&lt;T&gt;&gt; DynamicConfig.trackEnum(feature: Feature, executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference trackJson [jvm]inline fun &lt;T&gt; DynamicConfig.trackJson(feature: Feature, executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-boolean/","title":"getBoolean - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig/getBoolean</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-boolean/#getboolean","title":"getBoolean","text":"<p>[jvm]\\ abstract fun getBoolean(feature: Feature): Boolean</p> <p>Returns the value of a boolean dynamic flag.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-double/","title":"getDouble - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig/getDouble</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-double/#getdouble","title":"getDouble","text":"<p>[jvm]\\ abstract fun getDouble(feature: Feature): Double</p> <p>Returns the value of a double dynamic flag.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-enum/","title":"getEnum - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig/getEnum</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-enum/#getenum","title":"getEnum","text":"<p>[jvm]\\ abstract fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, clazz: Class&lt;T&gt;): T</p> <p>Returns the value of an enumerated dynamic flag.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-int/","title":"getInt - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig/getInt</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-int/#getint","title":"getInt","text":"<p>[jvm]\\ abstract fun getInt(feature: Feature): Int</p> <p>Returns the value of an integer dynamic flag.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-json-string/","title":"getJsonString - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig/getJsonString</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-json-string/#getjsonstring","title":"getJsonString","text":"<p>[jvm]\\ abstract fun getJsonString(feature: Feature): String</p> <p>Returns the value of a JSON string value of the dynamic flag.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-json/","title":"getJson - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig/getJson</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-json/#getjson","title":"getJson","text":"<p>[jvm]\\ abstract fun &lt;T&gt; getJson(feature: Feature, clazz: Class&lt;T&gt;): T</p> <p>Returns the value of a JSON dynamic flag.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-string/","title":"getString - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig/getString</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/get-string/#getstring","title":"getString","text":"<p>[jvm]\\ abstract fun getString(feature: Feature): String</p> <p>Returns the value of a string dynamic flag.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/track-boolean/","title":"trackBoolean - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig/trackBoolean</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/track-boolean/#trackboolean","title":"trackBoolean","text":"<p>[jvm]\\ abstract fun trackBoolean(feature: Feature, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference</p> <p>Registers a boolean dynamic config tracker which will be invoked whenever the boolean dynamic config changes value.</p> <p>Returns a tracker reference which can be used to un-register the tracker.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/track-double/","title":"trackDouble - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig/trackDouble</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/track-double/#trackdouble","title":"trackDouble","text":"<p>[jvm]\\ abstract fun trackDouble(feature: Feature, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference</p> <p>Registers a double dynamic config tracker which will be invoked whenever the double dynamic config changes value.</p> <p>Returns a tracker reference which can be used to un-register the tracker.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/track-enum/","title":"trackEnum - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig/trackEnum</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/track-enum/#trackenum","title":"trackEnum","text":"<p>[jvm]\\ abstract fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p> <p>Registers a enum dynamic config tracker which will be invoked whenever the enum dynamic config changes value.</p> <p>Returns a tracker reference which can be used to un-register the tracker.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/track-int/","title":"trackInt - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig/trackInt</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/track-int/#trackint","title":"trackInt","text":"<p>[jvm]\\ abstract fun trackInt(feature: Feature, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference</p> <p>Registers a integer dynamic config tracker which will be invoked whenever the integer dynamic config changes value.</p> <p>Returns a tracker reference which can be used to un-register the tracker.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/track-json/","title":"trackJson - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig/trackJson</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/track-json/#trackjson","title":"trackJson","text":"<p>[jvm]\\ abstract fun &lt;T&gt; trackJson(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p> <p>Registers a json dynamic config tracker which will be invoked whenever the json dynamic config changes value.</p> <p>Returns a tracker reference which can be used to un-register the tracker.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/track-string/","title":"trackString - Misk","text":"<p>//wisp-feature/wisp.feature/DynamicConfig/trackString</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-dynamic-config/track-string/#trackstring","title":"trackString","text":"<p>[jvm]\\ abstract fun trackString(feature: Feature, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference</p> <p>Registers a string dynamic config tracker which will be invoked whenever the string dynamic config changes value.</p> <p>Returns a tracker reference which can be used to un-register the tracker.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-enum-feature-flag/","title":"EnumFeatureFlag - Misk","text":"<p>//wisp-feature/wisp.feature/EnumFeatureFlag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-enum-feature-flag/#enumfeatureflag","title":"EnumFeatureFlag","text":"<p>[jvm]\\ interface EnumFeatureFlag&lt;T : Enum&lt;T&gt;&gt; : FeatureFlag&lt;T&gt; </p> <p>A Enumeration feature flag, when evaluated returns T</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-enum-feature-flag/#properties","title":"Properties","text":"Name Summary attributes [jvm]abstract val attributes: AttributesThe attributes of this feature flag, provided during flag evaluation feature [jvm]abstract val feature: FeatureFeature name of the feature flag key [jvm]abstract val key: StringUnique primary key for the entity the flag should be evaluated against. returnType [jvm]abstract val returnType: Class&lt;T&gt;"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-enum-feature-flag/return-type/","title":"returnType - Misk","text":"<p>//wisp-feature/wisp.feature/EnumFeatureFlag/returnType</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-enum-feature-flag/return-type/#returntype","title":"returnType","text":"<p>[jvm]\\ abstract val returnType: Class&lt;T&gt;</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/","title":"Feature - Misk","text":"<p>//wisp-feature/wisp.feature/Feature</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/#feature","title":"Feature","text":"<p>[jvm]\\ open class Feature(name: String)</p> <p>Typed feature string.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/#constructors","title":"Constructors","text":"Feature [jvm]fun Feature(name: String)"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/#functions","title":"Functions","text":"Name Summary equals [jvm]open operator override fun equals(other: Any?): Boolean hashCode [jvm]open override fun hashCode(): Int toString [jvm]open override fun toString(): String"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/-feature/","title":"Feature - Misk","text":"<p>//wisp-feature/wisp.feature/Feature/Feature</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/-feature/#feature","title":"Feature","text":"<p>[jvm]\\ fun Feature(name: String)</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/equals/","title":"equals - Misk","text":"<p>//wisp-feature/wisp.feature/Feature/equals</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/equals/#equals","title":"equals","text":"<p>[jvm]\\ open operator override fun equals(other: Any?): Boolean</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/hash-code/","title":"hashCode - Misk","text":"<p>//wisp-feature/wisp.feature/Feature/hashCode</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/hash-code/#hashcode","title":"hashCode","text":"<p>[jvm]\\ open override fun hashCode(): Int</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/name/","title":"name - Misk","text":"<p>//wisp-feature/wisp.feature/Feature/name</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/to-string/","title":"toString - Misk","text":"<p>//wisp-feature/wisp.feature/Feature/toString</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature/to-string/#tostring","title":"toString","text":"<p>[jvm]\\ open override fun toString(): String</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag/","title":"FeatureFlag - Misk","text":"<p>//wisp-feature/wisp.feature/FeatureFlag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag/#featureflag","title":"FeatureFlag","text":"<p>[jvm]\\ interface FeatureFlag&lt;T : Any&gt;</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag/#properties","title":"Properties","text":"Name Summary attributes [jvm]abstract val attributes: AttributesThe attributes of this feature flag, provided during flag evaluation feature [jvm]abstract val feature: FeatureFeature name of the feature flag key [jvm]abstract val key: StringUnique primary key for the entity the flag should be evaluated against."},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag/#inheritors","title":"Inheritors","text":"Name StringFeatureFlag BooleanFeatureFlag IntFeatureFlag DoubleFeatureFlag EnumFeatureFlag JsonFeatureFlag"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag/attributes/","title":"attributes - Misk","text":"<p>//wisp-feature/wisp.feature/FeatureFlag/attributes</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag/attributes/#attributes","title":"attributes","text":"<p>[jvm]\\ abstract val attributes: Attributes</p> <p>The attributes of this feature flag, provided during flag evaluation</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag/feature/","title":"feature - Misk","text":"<p>//wisp-feature/wisp.feature/FeatureFlag/feature</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag/feature/#feature","title":"feature","text":"<p>[jvm]\\ abstract val feature: Feature</p> <p>Feature name of the feature flag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag/key/","title":"key - Misk","text":"<p>//wisp-feature/wisp.feature/FeatureFlag/key</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag/key/#key","title":"key","text":"<p>[jvm]\\ abstract val key: String</p> <p>Unique primary key for the entity the flag should be evaluated against.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag-validation/","title":"FeatureFlagValidation - Misk","text":"<p>//wisp-feature/wisp.feature/FeatureFlagValidation</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag-validation/#featureflagvalidation","title":"FeatureFlagValidation","text":"<p>[jvm]\\ object FeatureFlagValidation</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag-validation/#functions","title":"Functions","text":"Name Summary checkValidKey [jvm]fun checkValidKey(feature: Feature, key: String)Validates the feature flags\u2019s hashing \u201ckey\u201d. Most implementation technically support arbitrary strings, but we still prefer to restrict valid input to prevent accidentally passing in the wrong value or potentially sensitive information."},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag-validation/check-valid-key/","title":"checkValidKey - Misk","text":"<p>//wisp-feature/wisp.feature/FeatureFlagValidation/checkValidKey</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flag-validation/check-valid-key/#checkvalidkey","title":"checkValidKey","text":"<p>[jvm]\\ fun checkValidKey(feature: Feature, key: String)</p> <p>Validates the feature flags\u2019s hashing \u201ckey\u201d. Most implementation technically support arbitrary strings, but we still prefer to restrict valid input to prevent accidentally passing in the wrong value or potentially sensitive information.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flags/","title":"FeatureFlags - Misk","text":"<p>//wisp-feature/wisp.feature/FeatureFlags</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flags/#featureflags","title":"FeatureFlags","text":"<p>[jvm]\\ interface FeatureFlags : StrongFeatureFlags, LegacyFeatureFlags</p> <p>Interface for evaluating feature flags.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flags/#functions","title":"Functions","text":"Name Summary get [jvm]abstract fun get(flag: BooleanFeatureFlag): BooleanCalculates the value of a boolean feature flag[jvm]abstract fun get(flag: DoubleFeatureFlag): DoubleCalculates the value of a double feature flag[jvm]abstract fun &lt;T : Enum&lt;T&gt;&gt; get(flag: EnumFeatureFlag&lt;T&gt;): TCalculates the value of an enum feature flag[jvm]abstract fun get(flag: IntFeatureFlag): IntCalculates the value of an int feature flag[jvm]abstract fun &lt;T : Any&gt; get(flag: JsonFeatureFlag&lt;T&gt;): TCalculates the value of a json feature flag[jvm]abstract fun get(flag: StringFeatureFlag): StringCalculates the value of a string feature flag getBoolean [jvm]open fun getBoolean(feature: Feature, key: String): Boolean[jvm]abstract fun getBoolean(feature: Feature, key: String, attributes: Attributes = Attributes()): BooleanCalculates the value of a boolean feature flag for the given key and attributes. getDouble [jvm]open fun getDouble(feature: Feature, key: String): Double[jvm]abstract fun getDouble(feature: Feature, key: String, attributes: Attributes = Attributes()): DoubleCalculates the value of a double feature flag for the given key and attributes. getEnum [jvm]open fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;): T[jvm]abstract fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes()): TCalculates the value of an enumerated feature flag for the given key and attributes. getInt [jvm]open fun getInt(feature: Feature, key: String): Int[jvm]abstract fun getInt(feature: Feature, key: String, attributes: Attributes = Attributes()): IntCalculates the value of an integer feature flag for the given key and attributes. getJson [jvm]open fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;): T[jvm]abstract fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes()): TCalculates the value of a JSON feature flag for the given key and attributes. getJsonString [jvm]open fun getJsonString(feature: Feature, key: String): String[jvm]abstract fun getJsonString(feature: Feature, key: String, attributes: Attributes = Attributes()): StringCalculates the value of a JSON feature flag for the given key and attributes and returns it as a json string. getString [jvm]open fun getString(feature: Feature, key: String): String[jvm]abstract fun getString(feature: Feature, key: String, attributes: Attributes = Attributes()): StringCalculates the value of a string feature flag for the given key and attributes. trackBoolean [jvm]open fun trackBoolean(feature: Feature, key: String, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference[jvm]abstract fun trackBoolean(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of a boolean feature flag for the given key and attributes. trackDouble [jvm]open fun trackDouble(feature: Feature, key: String, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference[jvm]abstract fun trackDouble(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Double) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of a double feature flag for the given key and attributes. trackEnum [jvm]open fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference[jvm]abstract fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes(), executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of an enumerated feature flag for the given key and attributes. trackInt [jvm]open fun trackInt(feature: Feature, key: String, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference[jvm]abstract fun trackInt(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Int) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of an integer feature flag for the given key and attributes. trackJson [jvm]open fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference[jvm]abstract fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes(), executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of a JSON feature flag for the given key and attributes. trackString [jvm]open fun trackString(feature: Feature, key: String, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference[jvm]abstract fun trackString(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (String) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of a string feature flag for the given key and attributes."},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-feature-flags/#extensions","title":"Extensions","text":"Name Summary getEnum [jvm]inline fun &lt;T : Enum&lt;T&gt;&gt; FeatureFlags.getEnum(feature: Feature, key: String, attributes: Attributes = Attributes()): T getJson [jvm]inline fun &lt;T&gt; FeatureFlags.getJson(feature: Feature, key: String, attributes: Attributes = Attributes()): T trackEnum [jvm]inline fun &lt;T : Enum&lt;T&gt;&gt; FeatureFlags.trackEnum(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference trackJson [jvm]inline fun &lt;T&gt; FeatureFlags.trackJson(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, noinline tracker: (T) -&gt; Unit): TrackerReference"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-int-feature-flag/","title":"IntFeatureFlag - Misk","text":"<p>//wisp-feature/wisp.feature/IntFeatureFlag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-int-feature-flag/#intfeatureflag","title":"IntFeatureFlag","text":"<p>[jvm]\\ interface IntFeatureFlag : FeatureFlag&lt;Int&gt;</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-int-feature-flag/#properties","title":"Properties","text":"Name Summary attributes [jvm]abstract val attributes: AttributesThe attributes of this feature flag, provided during flag evaluation feature [jvm]abstract val feature: FeatureFeature name of the feature flag key [jvm]abstract val key: StringUnique primary key for the entity the flag should be evaluated against."},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-json-feature-flag/","title":"JsonFeatureFlag - Misk","text":"<p>//wisp-feature/wisp.feature/JsonFeatureFlag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-json-feature-flag/#jsonfeatureflag","title":"JsonFeatureFlag","text":"<p>[jvm]\\ interface JsonFeatureFlag&lt;T : Any&gt; : FeatureFlag&lt;T&gt; </p> <p>A JSON feature flag, when evaluated returns T.</p> <p>It is expected that a Moshi type adapter is registered for T.</p> <p>Example definition:</p> <p>// Step 1: Define the object we expect to get from the JSON flag\\ data class PaymentConfiguration(\\   val fraudulent: Boolean,\\   val vipTreatment: Boolean,\\   val specialDescription: String\\ )\\ \\ // Step 2: Define the feature flag\\ data class PaymentConfigurationFeature(\\   // Put the <code>key</code> and <code>attributes</code> here\\   val customerId: String,\\   val extraAttribute: String\\ ) : JsonFeatureFlag&lt;PaymentConfiguration&gt; {\\   override val feature = Feature(\u201cpayment-configuration-feature\u201d)\\   override val key = customerId\\   override val attributes = Attributes()\\     .with(\u201cextraAttribute\u201d, extraAttribute)\\   override val returnType = PaymentConfiguration::class\\ }</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-json-feature-flag/#properties","title":"Properties","text":"Name Summary attributes [jvm]abstract val attributes: AttributesThe attributes of this feature flag, provided during flag evaluation feature [jvm]abstract val feature: FeatureFeature name of the feature flag key [jvm]abstract val key: StringUnique primary key for the entity the flag should be evaluated against. returnType [jvm]abstract val returnType: Class&lt;out T&gt;"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-json-feature-flag/return-type/","title":"returnType - Misk","text":"<p>//wisp-feature/wisp.feature/JsonFeatureFlag/returnType</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-json-feature-flag/return-type/#returntype","title":"returnType","text":"<p>[jvm]\\ abstract val returnType: Class&lt;out T&gt;</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/","title":"LegacyFeatureFlags - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/#legacyfeatureflags","title":"LegacyFeatureFlags","text":"<p>[jvm]\\ interface LegacyFeatureFlags</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/#functions","title":"Functions","text":"Name Summary getBoolean [jvm]open fun getBoolean(feature: Feature, key: String): Boolean[jvm]abstract fun getBoolean(feature: Feature, key: String, attributes: Attributes = Attributes()): BooleanCalculates the value of a boolean feature flag for the given key and attributes. getDouble [jvm]open fun getDouble(feature: Feature, key: String): Double[jvm]abstract fun getDouble(feature: Feature, key: String, attributes: Attributes = Attributes()): DoubleCalculates the value of a double feature flag for the given key and attributes. getEnum [jvm]open fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;): T[jvm]abstract fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes()): TCalculates the value of an enumerated feature flag for the given key and attributes. getInt [jvm]open fun getInt(feature: Feature, key: String): Int[jvm]abstract fun getInt(feature: Feature, key: String, attributes: Attributes = Attributes()): IntCalculates the value of an integer feature flag for the given key and attributes. getJson [jvm]open fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;): T[jvm]abstract fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes()): TCalculates the value of a JSON feature flag for the given key and attributes. getJsonString [jvm]open fun getJsonString(feature: Feature, key: String): String[jvm]abstract fun getJsonString(feature: Feature, key: String, attributes: Attributes = Attributes()): StringCalculates the value of a JSON feature flag for the given key and attributes and returns it as a json string. getString [jvm]open fun getString(feature: Feature, key: String): String[jvm]abstract fun getString(feature: Feature, key: String, attributes: Attributes = Attributes()): StringCalculates the value of a string feature flag for the given key and attributes. trackBoolean [jvm]open fun trackBoolean(feature: Feature, key: String, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference[jvm]abstract fun trackBoolean(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of a boolean feature flag for the given key and attributes. trackDouble [jvm]open fun trackDouble(feature: Feature, key: String, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference[jvm]abstract fun trackDouble(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Double) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of a double feature flag for the given key and attributes. trackEnum [jvm]open fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference[jvm]abstract fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes(), executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of an enumerated feature flag for the given key and attributes. trackInt [jvm]open fun trackInt(feature: Feature, key: String, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference[jvm]abstract fun trackInt(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Int) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of an integer feature flag for the given key and attributes. trackJson [jvm]open fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference[jvm]abstract fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes(), executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of a JSON feature flag for the given key and attributes. trackString [jvm]open fun trackString(feature: Feature, key: String, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference[jvm]abstract fun trackString(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (String) -&gt; Unit): TrackerReferenceRegisters a tracker for the value of a string feature flag for the given key and attributes."},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/#inheritors","title":"Inheritors","text":"Name FeatureFlags"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-boolean/","title":"getBoolean - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags/getBoolean</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-boolean/#getboolean","title":"getBoolean","text":"<p>[jvm]\\ abstract fun getBoolean(feature: Feature, key: String, attributes: Attributes = Attributes()): Boolean</p> <p>Calculates the value of a boolean feature flag for the given key and attributes.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-boolean/#see-also","title":"See also","text":"<p>jvm</p> wisp.feature.LegacyFeatureFlags for param details <p>[jvm]\\ open fun getBoolean(feature: Feature, key: String): Boolean</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-double/","title":"getDouble - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags/getDouble</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-double/#getdouble","title":"getDouble","text":"<p>[jvm]\\ abstract fun getDouble(feature: Feature, key: String, attributes: Attributes = Attributes()): Double</p> <p>Calculates the value of a double feature flag for the given key and attributes.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-double/#see-also","title":"See also","text":"<p>jvm</p> wisp.feature.LegacyFeatureFlags for param details <p>[jvm]\\ open fun getDouble(feature: Feature, key: String): Double</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-enum/","title":"getEnum - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags/getEnum</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-enum/#getenum","title":"getEnum","text":"<p>[jvm]\\ abstract fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes()): T</p> <p>Calculates the value of an enumerated feature flag for the given key and attributes.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-enum/#parameters","title":"Parameters","text":"<p>jvm</p> feature name of the feature flag to evaluate. key unique primary key for the entity the flag should be evaluated against. clazz the enum type. attributes additional attributes to provide to flag evaluation."},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-enum/#throws","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. java.lang.IllegalStateException if the flag is off with no default value. <p>[jvm]\\ open fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;): T</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-int/","title":"getInt - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags/getInt</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-int/#getint","title":"getInt","text":"<p>[jvm]\\ abstract fun getInt(feature: Feature, key: String, attributes: Attributes = Attributes()): Int</p> <p>Calculates the value of an integer feature flag for the given key and attributes.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-int/#see-also","title":"See also","text":"<p>jvm</p> wisp.feature.LegacyFeatureFlags for param details <p>[jvm]\\ open fun getInt(feature: Feature, key: String): Int</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-json-string/","title":"getJsonString - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags/getJsonString</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-json-string/#getjsonstring","title":"getJsonString","text":"<p>[jvm]\\ abstract fun getJsonString(feature: Feature, key: String, attributes: Attributes = Attributes()): String</p> <p>Calculates the value of a JSON feature flag for the given key and attributes and returns it as a json string.</p> <p>is registered with the impl.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-json-string/#see-also","title":"See also","text":"<p>jvm</p> wisp.feature.LegacyFeatureFlags for param details <p>[jvm]\\ open fun getJsonString(feature: Feature, key: String): String</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-json/","title":"getJson - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags/getJson</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-json/#getjson","title":"getJson","text":"<p>[jvm]\\ abstract fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes()): T</p> <p>Calculates the value of a JSON feature flag for the given key and attributes.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-json/#see-also","title":"See also","text":"<p>jvm</p> wisp.feature.LegacyFeatureFlags for param details"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-json/#parameters","title":"Parameters","text":"<p>jvm</p> clazz the type to convert the JSON string into. It is expected that a Moshi type adapter is registered with the impl. <p>[jvm]\\ open fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;): T</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-string/","title":"getString - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags/getString</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-string/#getstring","title":"getString","text":"<p>[jvm]\\ abstract fun getString(feature: Feature, key: String, attributes: Attributes = Attributes()): String</p> <p>Calculates the value of a string feature flag for the given key and attributes.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/get-string/#see-also","title":"See also","text":"<p>jvm</p> wisp.feature.LegacyFeatureFlags for param details <p>[jvm]\\ open fun getString(feature: Feature, key: String): String</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-boolean/","title":"trackBoolean - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags/trackBoolean</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-boolean/#trackboolean","title":"trackBoolean","text":"<p>[jvm]\\ abstract fun trackBoolean(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference</p> <p>Registers a tracker for the value of a boolean feature flag for the given key and attributes.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-boolean/#see-also","title":"See also","text":"<p>jvm</p> wisp.feature.LegacyFeatureFlags for param details <p>[jvm]\\ open fun trackBoolean(feature: Feature, key: String, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-double/","title":"trackDouble - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags/trackDouble</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-double/#trackdouble","title":"trackDouble","text":"<p>[jvm]\\ abstract fun trackDouble(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference</p> <p>Registers a tracker for the value of a double feature flag for the given key and attributes.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-double/#see-also","title":"See also","text":"<p>jvm</p> wisp.feature.LegacyFeatureFlags for param details <p>[jvm]\\ open fun trackDouble(feature: Feature, key: String, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-enum/","title":"trackEnum - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags/trackEnum</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-enum/#trackenum","title":"trackEnum","text":"<p>[jvm]\\ abstract fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes(), executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p> <p>Registers a tracker for the value of an enumerated feature flag for the given key and attributes.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-enum/#return","title":"Return","text":"<p>a reference to the registered tracker allowing to un-register it</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-enum/#parameters","title":"Parameters","text":"<p>jvm</p> feature name of the feature flag to evaluate. key unique primary key for the entity the flag should be evaluated against. clazz the enum type. attributes additional attributes to provide to flag evaluation. tracker a tracker to be registered for processing of changed values"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-enum/#throws","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. java.lang.IllegalStateException if the flag is off with no default value. <p>[jvm]\\ open fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-int/","title":"trackInt - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags/trackInt</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-int/#trackint","title":"trackInt","text":"<p>[jvm]\\ abstract fun trackInt(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference</p> <p>Registers a tracker for the value of an integer feature flag for the given key and attributes.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-int/#see-also","title":"See also","text":"<p>jvm</p> wisp.feature.LegacyFeatureFlags for param details <p>[jvm]\\ open fun trackInt(feature: Feature, key: String, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-json/","title":"trackJson - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags/trackJson</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-json/#trackjson","title":"trackJson","text":"<p>[jvm]\\ abstract fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes = Attributes(), executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p> <p>Registers a tracker for the value of a JSON feature flag for the given key and attributes.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-json/#see-also","title":"See also","text":"<p>jvm</p> wisp.feature.LegacyFeatureFlags for param details"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-json/#parameters","title":"Parameters","text":"<p>jvm</p> clazz the type to convert the JSON string into. It is expected that a Moshi type adapter is registered with the impl. <p>[jvm]\\ open fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-string/","title":"trackString - Misk","text":"<p>//wisp-feature/wisp.feature/LegacyFeatureFlags/trackString</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-string/#trackstring","title":"trackString","text":"<p>[jvm]\\ abstract fun trackString(feature: Feature, key: String, attributes: Attributes = Attributes(), executor: Executor, tracker: (String) -&gt; Unit): TrackerReference</p> <p>Registers a tracker for the value of a string feature flag for the given key and attributes.</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-legacy-feature-flags/track-string/#see-also","title":"See also","text":"<p>jvm</p> wisp.feature.LegacyFeatureFlags for param details <p>[jvm]\\ open fun trackString(feature: Feature, key: String, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-string-feature-flag/","title":"StringFeatureFlag - Misk","text":"<p>//wisp-feature/wisp.feature/StringFeatureFlag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-string-feature-flag/#stringfeatureflag","title":"StringFeatureFlag","text":"<p>[jvm]\\ interface StringFeatureFlag : FeatureFlag&lt;String&gt;</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-string-feature-flag/#properties","title":"Properties","text":"Name Summary attributes [jvm]abstract val attributes: AttributesThe attributes of this feature flag, provided during flag evaluation feature [jvm]abstract val feature: FeatureFeature name of the feature flag key [jvm]abstract val key: StringUnique primary key for the entity the flag should be evaluated against."},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/","title":"StrongFeatureFlags - Misk","text":"<p>//wisp-feature/wisp.feature/StrongFeatureFlags</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/#strongfeatureflags","title":"StrongFeatureFlags","text":"<p>[jvm]\\ interface StrongFeatureFlags</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/#functions","title":"Functions","text":"Name Summary get [jvm]abstract fun get(flag: BooleanFeatureFlag): BooleanCalculates the value of a boolean feature flag[jvm]abstract fun get(flag: DoubleFeatureFlag): DoubleCalculates the value of a double feature flag[jvm]abstract fun &lt;T : Enum&lt;T&gt;&gt; get(flag: EnumFeatureFlag&lt;T&gt;): TCalculates the value of an enum feature flag[jvm]abstract fun get(flag: IntFeatureFlag): IntCalculates the value of an int feature flag[jvm]abstract fun &lt;T : Any&gt; get(flag: JsonFeatureFlag&lt;T&gt;): TCalculates the value of a json feature flag[jvm]abstract fun get(flag: StringFeatureFlag): StringCalculates the value of a string feature flag"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/#inheritors","title":"Inheritors","text":"Name FeatureFlags"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/","title":"get - Misk","text":"<p>//wisp-feature/wisp.feature/StrongFeatureFlags/get</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/#get","title":"get","text":"<p>[jvm]\\ abstract fun get(flag: BooleanFeatureFlag): Boolean</p> <p>Calculates the value of a boolean feature flag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/#parameters","title":"Parameters","text":"<p>jvm</p> flag the feature flag to evaluate"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/#throws","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. <p>[jvm]\\ abstract fun get(flag: StringFeatureFlag): String</p> <p>Calculates the value of a string feature flag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/#parameters_1","title":"Parameters","text":"<p>jvm</p> flag the feature flag to evaluate"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/#throws_1","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. <p>[jvm]\\ abstract fun get(flag: IntFeatureFlag): Int</p> <p>Calculates the value of an int feature flag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/#parameters_2","title":"Parameters","text":"<p>jvm</p> flag the feature flag to evaluate"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/#throws_2","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. <p>[jvm]\\ abstract fun get(flag: DoubleFeatureFlag): Double</p> <p>Calculates the value of a double feature flag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/#parameters_3","title":"Parameters","text":"<p>jvm</p> flag the feature flag to evaluate"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/#throws_3","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. <p>[jvm]\\ abstract fun &lt;T : Enum&lt;T&gt;&gt; get(flag: EnumFeatureFlag&lt;T&gt;): T</p> <p>Calculates the value of an enum feature flag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/#parameters_4","title":"Parameters","text":"<p>jvm</p> flag the feature flag to evaluate"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/#throws_4","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. java.lang.IllegalStateException if the flag is off with no default value. <p>[jvm]\\ abstract fun &lt;T : Any&gt; get(flag: JsonFeatureFlag&lt;T&gt;): T</p> <p>Calculates the value of a json feature flag</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/#parameters_5","title":"Parameters","text":"<p>jvm</p> flag the feature flag to evaluate"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-strong-feature-flags/get/#throws_5","title":"Throws","text":"java.lang.RuntimeException if the service is unavailable. java.lang.IllegalStateException if the flag is off with no default value."},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-tracker-reference/","title":"TrackerReference - Misk","text":"<p>//wisp-feature/wisp.feature/TrackerReference</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-tracker-reference/#trackerreference","title":"TrackerReference","text":"<p>[jvm]\\ interface TrackerReference</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-tracker-reference/#functions","title":"Functions","text":"Name Summary unregister [jvm]abstract fun unregister()"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-tracker-reference/unregister/","title":"unregister - Misk","text":"<p>//wisp-feature/wisp.feature/TrackerReference/unregister</p>"},{"location":"0.x/wisp-feature/wisp-feature/wisp.feature/-tracker-reference/unregister/#unregister","title":"unregister","text":"<p>[jvm]\\ abstract fun unregister()</p>"},{"location":"0.x/wisp-feature-testing/","title":"wisp-feature-testing - Misk","text":"<p>//wisp-feature-testing</p>"},{"location":"0.x/wisp-feature-testing/#wisp-feature-testing","title":"wisp-feature-testing","text":""},{"location":"0.x/wisp-feature-testing/#packages","title":"Packages","text":"Name wisp.feature.testing"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/","title":"Package wisp.feature.testing - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/#package-wispfeaturetesting","title":"Package wisp.feature.testing","text":""},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/#types","title":"Types","text":"Name Summary FakeFeatureFlags [jvm]open class FakeFeatureFlags : FeatureFlags, LegacyFeatureFlags, DynamicConfig, StrongFeatureFlags, Configurable&lt;FakeFeatureFlagsConfig&gt; In-memory test implementation of FeatureFlags that allows flags to be overridden. FakeFeatureFlagsConfig [jvm]data class FakeFeatureFlagsConfig@JvmOverloadsconstructor(featuresConfig: List&lt;FeaturesConfig&gt;) : Config FakeLegacyFeatureFlags [jvm]class FakeLegacyFeatureFlags : LegacyFeatureFlags, DynamicConfigIn-memory test implementation of FeatureFlags that allows flags to be overridden. FakeStrongFeatureFlags [jvm]class FakeStrongFeatureFlags : StrongFeatureFlagsIn-memory test implementation of FeatureFlags that allows for overriding strong feature flags FeaturesConfig [jvm]data class FeaturesConfig@JvmOverloadsconstructor(featureName: String, key: String?, attributes: Attributes, value: String, type: String)"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/","title":"FakeFeatureFlags - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/#fakefeatureflags","title":"FakeFeatureFlags","text":"<p>[jvm]\\ open class FakeFeatureFlags : FeatureFlags, LegacyFeatureFlags, DynamicConfig, StrongFeatureFlags, Configurable&lt;FakeFeatureFlagsConfig&gt; </p> <p>In-memory test implementation of FeatureFlags that allows flags to be overridden.</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/#constructors","title":"Constructors","text":"FakeFeatureFlags [jvm]fun FakeFeatureFlags(moshi: Moshi = defaultKotlinMoshi)Preferred constructor for Wisp"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/#functions","title":"Functions","text":"Name Summary configure [jvm]open override fun configure(config: FakeFeatureFlagsConfig)Configures the feature flags values from supplied config. get [jvm]open override fun get(flag: BooleanFeatureFlag): Booleanopen override fun get(flag: DoubleFeatureFlag): Doubleopen override fun &lt;T : Enum&lt;T&gt;&gt; get(flag: EnumFeatureFlag&lt;T&gt;): Topen override fun get(flag: IntFeatureFlag): Intopen override fun &lt;T : Any&gt; get(flag: JsonFeatureFlag&lt;T&gt;): Topen override fun get(flag: StringFeatureFlag): String getBoolean [jvm]open override fun getBoolean(feature: Feature): Booleanopen override fun getBoolean(feature: Feature, key: String): Booleanopen override fun getBoolean(feature: Feature, key: String, attributes: Attributes): Boolean getConfigClass [jvm]open override fun getConfigClass(): KClass&lt;FakeFeatureFlagsConfig&gt; getDouble [jvm]open override fun getDouble(feature: Feature): Doubleopen override fun getDouble(feature: Feature, key: String): Doubleopen override fun getDouble(feature: Feature, key: String, attributes: Attributes): Double getEnum [jvm]open override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, clazz: Class&lt;T&gt;): Topen override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;): Topen override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T getInt [jvm]open override fun getInt(feature: Feature): Intopen override fun getInt(feature: Feature, key: String): Intopen override fun getInt(feature: Feature, key: String, attributes: Attributes): Int getJson [jvm]open override fun &lt;T&gt; getJson(feature: Feature, clazz: Class&lt;T&gt;): Topen override fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;): Topen override fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T getJsonString [jvm]open override fun getJsonString(feature: Feature): Stringopen override fun getJsonString(feature: Feature, key: String): Stringopen override fun getJsonString(feature: Feature, key: String, attributes: Attributes): String getString [jvm]open override fun getString(feature: Feature): Stringopen override fun getString(feature: Feature, key: String): Stringopen override fun getString(feature: Feature, key: String, attributes: Attributes): String override [jvm]@JvmOverloadsinline fun &lt;Flag : JsonFeatureFlag&lt;T&gt;, T : Any&gt; override(value: T, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlags@JvmOverloadsinline fun &lt;Flag : EnumFeatureFlag&lt;T&gt;, T : Enum&lt;T&gt;&gt; override(value: T, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlags@JvmOverloadsinline fun &lt;Flag : BooleanFeatureFlag&gt; override(value: Boolean, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlags@JvmOverloadsinline fun &lt;Flag : DoubleFeatureFlag&gt; override(value: Double, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlags@JvmOverloadsinline fun &lt;Flag : IntFeatureFlag&gt; override(value: Int, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlags@JvmOverloadsinline fun &lt;Flag : StringFeatureFlag&gt; override(value: String, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlagsfun &lt;T&gt; override(feature: Feature, value: T)fun override(feature: Feature, value: Boolean)fun override(feature: Feature, value: Double)fun override(feature: Feature, value: Enum&lt;*&gt;)fun override(feature: Feature, value: Int)fun override(feature: Feature, value: String)fun &lt;T&gt; override(feature: Feature, value: T, clazz: Class&lt;T&gt;) overrideAny [jvm]@JvmOverloadsfun &lt;T : Any, Flag : FeatureFlag&lt;in T&gt;&gt; overrideAny(clazz: Class&lt;out FeatureFlag&lt;T&gt;&gt;, value: T, matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlags overrideJson [jvm]inline fun &lt;T&gt; overrideJson(feature: Feature, value: T) overrideJsonString [jvm]fun overrideJsonString(feature: Feature, json: String) overrideKey [jvm]fun &lt;T&gt; overrideKey(feature: Feature, key: String, value: T, clazz: Class&lt;T&gt;)@JvmOverloadsfun &lt;T&gt; overrideKey(feature: Feature, key: String, value: T, attributes: Attributes = defaultAttributes)@JvmOverloadsfun overrideKey(feature: Feature, key: String, value: Boolean, attributes: Attributes = defaultAttributes)@JvmOverloadsfun overrideKey(feature: Feature, key: String, value: Double, attributes: Attributes = defaultAttributes)@JvmOverloadsfun overrideKey(feature: Feature, key: String, value: Enum&lt;*&gt;, attributes: Attributes = defaultAttributes)@JvmOverloadsfun overrideKey(feature: Feature, key: String, value: Int, attributes: Attributes = defaultAttributes)@JvmOverloadsfun overrideKey(feature: Feature, key: String, value: String, attributes: Attributes = defaultAttributes) overrideKeyJson [jvm]@JvmOverloadsinline fun &lt;T&gt; overrideKeyJson(feature: Feature, key: String, value: T, attributes: Attributes = defaultAttributes) overrideKeyJsonString [jvm]@JvmOverloadsfun overrideKeyJsonString(feature: Feature, key: String, value: String, attributes: Attributes = defaultAttributes) reset [jvm]fun reset() trackBoolean [jvm]open override fun trackBoolean(feature: Feature, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReferenceopen override fun trackBoolean(feature: Feature, key: String, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReferenceopen override fun trackBoolean(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference trackDouble [jvm]open override fun trackDouble(feature: Feature, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReferenceopen override fun trackDouble(feature: Feature, key: String, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReferenceopen override fun trackDouble(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference trackEnum [jvm]open override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceopen override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceopen override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference trackInt [jvm]open override fun trackInt(feature: Feature, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReferenceopen override fun trackInt(feature: Feature, key: String, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReferenceopen override fun trackInt(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference trackJson [jvm]open override fun &lt;T&gt; trackJson(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceopen override fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceopen override fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference trackString [jvm]open override fun trackString(feature: Feature, executor: Executor, tracker: (String) -&gt; Unit): TrackerReferenceopen override fun trackString(feature: Feature, key: String, executor: Executor, tracker: (String) -&gt; Unit): TrackerReferenceopen override fun trackString(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/#properties","title":"Properties","text":"Name Summary legacyFeatureFlags [jvm]val legacyFeatureFlags: FakeLegacyFeatureFlags strongFeatureFlags [jvm]val strongFeatureFlags: FakeStrongFeatureFlags"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/-fake-feature-flags/","title":"FakeFeatureFlags - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/FakeFeatureFlags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/-fake-feature-flags/#fakefeatureflags","title":"FakeFeatureFlags","text":"<p>[jvm]\\ fun FakeFeatureFlags(moshi: Moshi = defaultKotlinMoshi)</p> <p>Preferred constructor for Wisp</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/configure/","title":"configure - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/configure</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/configure/#configure","title":"configure","text":"<p>[jvm]\\ open override fun configure(config: FakeFeatureFlagsConfig)</p> <p>Configures the feature flags values from supplied config.</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/get-config-class/","title":"getConfigClass - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/getConfigClass</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/get-config-class/#getconfigclass","title":"getConfigClass","text":"<p>[jvm]\\ open override fun getConfigClass(): KClass&lt;FakeFeatureFlagsConfig&gt;</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/legacy-feature-flags/","title":"legacyFeatureFlags - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/legacyFeatureFlags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/legacy-feature-flags/#legacyfeatureflags","title":"legacyFeatureFlags","text":"<p>[jvm]\\ val legacyFeatureFlags: FakeLegacyFeatureFlags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-any/","title":"overrideAny - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/overrideAny</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-any/#overrideany","title":"overrideAny","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun &lt;T : Any, Flag : FeatureFlag&lt;in T&gt;&gt; overrideAny(clazz: Class&lt;out FeatureFlag&lt;T&gt;&gt;, value: T, matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-json-string/","title":"overrideJsonString - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/overrideJsonString</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-json-string/#overridejsonstring","title":"overrideJsonString","text":"<p>[jvm]\\ fun overrideJsonString(feature: Feature, json: String)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-json/","title":"overrideJson - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/overrideJson</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-json/#overridejson","title":"overrideJson","text":"<p>[jvm]\\ inline fun &lt;T&gt; overrideJson(feature: Feature, value: T)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-key-json-string/","title":"overrideKeyJsonString - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/overrideKeyJsonString</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-key-json-string/#overridekeyjsonstring","title":"overrideKeyJsonString","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun overrideKeyJsonString(feature: Feature, key: String, value: String, attributes: Attributes = defaultAttributes)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-key-json/","title":"overrideKeyJson - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/overrideKeyJson</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-key-json/#overridekeyjson","title":"overrideKeyJson","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>inline fun &lt;T&gt; overrideKeyJson(feature: Feature, key: String, value: T, attributes: Attributes = defaultAttributes)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-key/","title":"overrideKey - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/overrideKey</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-key/#overridekey","title":"overrideKey","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun overrideKey(feature: Feature, key: String, value: Boolean, attributes: Attributes = defaultAttributes)</p> <p>@JvmOverloads</p> <p>fun overrideKey(feature: Feature, key: String, value: Double, attributes: Attributes = defaultAttributes)</p> <p>@JvmOverloads</p> <p>fun overrideKey(feature: Feature, key: String, value: Int, attributes: Attributes = defaultAttributes)</p> <p>@JvmOverloads</p> <p>fun overrideKey(feature: Feature, key: String, value: String, attributes: Attributes = defaultAttributes)</p> <p>@JvmOverloads</p> <p>fun overrideKey(feature: Feature, key: String, value: Enum&lt;*&gt;, attributes: Attributes = defaultAttributes)</p> <p>fun &lt;T&gt; overrideKey(feature: Feature, key: String, value: T, clazz: Class&lt;T&gt;)</p> <p>@JvmOverloads</p> <p>fun &lt;T&gt; overrideKey(feature: Feature, key: String, value: T, attributes: Attributes = defaultAttributes)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override/","title":"override - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/override</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override/#override","title":"override","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>inline fun &lt;Flag : BooleanFeatureFlag&gt; override(value: Boolean, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlags</p> <p>@JvmOverloads</p> <p>inline fun &lt;Flag : StringFeatureFlag&gt; override(value: String, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlags</p> <p>@JvmOverloads</p> <p>inline fun &lt;Flag : IntFeatureFlag&gt; override(value: Int, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlags</p> <p>@JvmOverloads</p> <p>inline fun &lt;Flag : DoubleFeatureFlag&gt; override(value: Double, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlags</p> <p>@JvmOverloads</p> <p>inline fun &lt;Flag : JsonFeatureFlag&lt;T&gt;, T : Any&gt; override(value: T, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlags</p> <p>@JvmOverloads</p> <p>inline fun &lt;Flag : EnumFeatureFlag&lt;T&gt;, T : Enum&lt;T&gt;&gt; override(value: T, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeFeatureFlags</p> <p>fun override(feature: Feature, value: Boolean)</p> <p>fun override(feature: Feature, value: Double)</p> <p>fun override(feature: Feature, value: Int)</p> <p>fun override(feature: Feature, value: String)</p> <p>fun override(feature: Feature, value: Enum&lt;*&gt;)</p> <p>fun &lt;T&gt; override(feature: Feature, value: T)</p> <p>fun &lt;T&gt; override(feature: Feature, value: T, clazz: Class&lt;T&gt;)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/reset/","title":"reset - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/reset</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/reset/#reset","title":"reset","text":"<p>[jvm]\\ fun reset()</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/strong-feature-flags/","title":"strongFeatureFlags - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/strongFeatureFlags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/strong-feature-flags/#strongfeatureflags","title":"strongFeatureFlags","text":"<p>[jvm]\\ val strongFeatureFlags: FakeStrongFeatureFlags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/-companion/","title":"Companion - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/Companion</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/-companion/#properties","title":"Properties","text":"Name Summary defaultAttributes [jvm]val defaultAttributes: Attributes KEY [jvm]const val KEY: String"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/-companion/-k-e-y/","title":"KEY - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/Companion/KEY</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/-companion/-k-e-y/#key","title":"KEY","text":"<p>[jvm]\\ const val KEY: String</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/-companion/default-attributes/","title":"defaultAttributes - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlags/Companion/defaultAttributes</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/-companion/default-attributes/#defaultattributes","title":"defaultAttributes","text":"<p>[jvm]\\ val defaultAttributes: Attributes</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags-config/","title":"FakeFeatureFlagsConfig - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlagsConfig</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags-config/#fakefeatureflagsconfig","title":"FakeFeatureFlagsConfig","text":"<p>[jvm]\\ data class FakeFeatureFlagsConfig@JvmOverloadsconstructor(featuresConfig: List&lt;FeaturesConfig&gt;) : Config</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags-config/#properties","title":"Properties","text":"Name Summary featuresConfig [jvm]val featuresConfig: List&lt;FeaturesConfig&gt;"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags-config/-fake-feature-flags-config/","title":"FakeFeatureFlagsConfig - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlagsConfig/FakeFeatureFlagsConfig</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags-config/-fake-feature-flags-config/#fakefeatureflagsconfig","title":"FakeFeatureFlagsConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun FakeFeatureFlagsConfig(featuresConfig: List&lt;FeaturesConfig&gt; = emptyList())</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags-config/features-config/","title":"featuresConfig - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeFeatureFlagsConfig/featuresConfig</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags-config/features-config/#featuresconfig","title":"featuresConfig","text":"<p>[jvm]\\ val featuresConfig: List&lt;FeaturesConfig&gt;</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/","title":"FakeLegacyFeatureFlags - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/#fakelegacyfeatureflags","title":"FakeLegacyFeatureFlags","text":"<p>[jvm]\\ class FakeLegacyFeatureFlags : LegacyFeatureFlags, DynamicConfig</p> <p>In-memory test implementation of FeatureFlags that allows flags to be overridden.</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/#constructors","title":"Constructors","text":"FakeLegacyFeatureFlags [jvm]fun FakeLegacyFeatureFlags(moshi: Moshi = defaultKotlinMoshi)Preferred constructor for Wisp"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/#functions","title":"Functions","text":"Name Summary getBoolean [jvm]open override fun getBoolean(feature: Feature): Booleanopen fun getBoolean(feature: Feature, key: String): Booleanopen override fun getBoolean(feature: Feature, key: String, attributes: Attributes): Boolean getDouble [jvm]open override fun getDouble(feature: Feature): Doubleopen fun getDouble(feature: Feature, key: String): Doubleopen override fun getDouble(feature: Feature, key: String, attributes: Attributes): Double getEnum [jvm]open override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, clazz: Class&lt;T&gt;): Topen fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;): Topen override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T getInt [jvm]open override fun getInt(feature: Feature): Intopen fun getInt(feature: Feature, key: String): Intopen override fun getInt(feature: Feature, key: String, attributes: Attributes): Int getJson [jvm]open override fun &lt;T&gt; getJson(feature: Feature, clazz: Class&lt;T&gt;): Topen fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;): Topen override fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T getJsonString [jvm]open override fun getJsonString(feature: Feature): Stringopen fun getJsonString(feature: Feature, key: String): Stringopen override fun getJsonString(feature: Feature, key: String, attributes: Attributes): String getString [jvm]open override fun getString(feature: Feature): Stringopen fun getString(feature: Feature, key: String): Stringopen override fun getString(feature: Feature, key: String, attributes: Attributes): String override [jvm]fun &lt;T&gt; override(feature: Feature, value: T)fun override(feature: Feature, value: Boolean)fun override(feature: Feature, value: Double)fun override(feature: Feature, value: Enum&lt;*&gt;)fun override(feature: Feature, value: Int)fun override(feature: Feature, value: String)fun &lt;T&gt; override(feature: Feature, value: T, clazz: Class&lt;T&gt;) overrideJson [jvm]inline fun &lt;T&gt; overrideJson(feature: Feature, value: T) overrideJsonString [jvm]fun overrideJsonString(feature: Feature, json: String) overrideKey [jvm]fun &lt;T&gt; overrideKey(feature: Feature, key: String, value: T, clazz: Class&lt;T&gt;)@JvmOverloadsfun &lt;T&gt; overrideKey(feature: Feature, key: String, value: T, attributes: Attributes = defaultAttributes)@JvmOverloadsfun overrideKey(feature: Feature, key: String, value: Boolean, attributes: Attributes = defaultAttributes)@JvmOverloadsfun overrideKey(feature: Feature, key: String, value: Double, attributes: Attributes = defaultAttributes)@JvmOverloadsfun overrideKey(feature: Feature, key: String, value: Enum&lt;*&gt;, attributes: Attributes = defaultAttributes)@JvmOverloadsfun overrideKey(feature: Feature, key: String, value: Int, attributes: Attributes = defaultAttributes)@JvmOverloadsfun overrideKey(feature: Feature, key: String, value: String, attributes: Attributes = defaultAttributes) overrideKeyJson [jvm]@JvmOverloadsinline fun &lt;T&gt; overrideKeyJson(feature: Feature, key: String, value: T, attributes: Attributes = defaultAttributes) overrideKeyJsonString [jvm]@JvmOverloadsfun overrideKeyJsonString(feature: Feature, key: String, value: String, attributes: Attributes = defaultAttributes) reset [jvm]fun reset() trackBoolean [jvm]open override fun trackBoolean(feature: Feature, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReferenceopen fun trackBoolean(feature: Feature, key: String, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReferenceopen override fun trackBoolean(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference trackDouble [jvm]open override fun trackDouble(feature: Feature, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReferenceopen fun trackDouble(feature: Feature, key: String, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReferenceopen override fun trackDouble(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference trackEnum [jvm]open override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceopen fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceopen override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference trackInt [jvm]open override fun trackInt(feature: Feature, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReferenceopen fun trackInt(feature: Feature, key: String, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReferenceopen override fun trackInt(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference trackJson [jvm]open override fun &lt;T&gt; trackJson(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceopen fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceopen override fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference trackString [jvm]open override fun trackString(feature: Feature, executor: Executor, tracker: (String) -&gt; Unit): TrackerReferenceopen fun trackString(feature: Feature, key: String, executor: Executor, tracker: (String) -&gt; Unit): TrackerReferenceopen override fun trackString(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/#properties","title":"Properties","text":"Name Summary moshi [jvm]val moshi: () -&gt; Moshi"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/-fake-legacy-feature-flags/","title":"FakeLegacyFeatureFlags - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/FakeLegacyFeatureFlags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/-fake-legacy-feature-flags/#fakelegacyfeatureflags","title":"FakeLegacyFeatureFlags","text":"<p>[jvm]\\ fun FakeLegacyFeatureFlags(moshi: Moshi = defaultKotlinMoshi)</p> <p>Preferred constructor for Wisp</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-boolean/","title":"getBoolean - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/getBoolean</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-boolean/#getboolean","title":"getBoolean","text":"<p>[jvm]\\ open override fun getBoolean(feature: Feature, key: String, attributes: Attributes): Boolean</p> <p>open override fun getBoolean(feature: Feature): Boolean</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-double/","title":"getDouble - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/getDouble</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-double/#getdouble","title":"getDouble","text":"<p>[jvm]\\ open override fun getDouble(feature: Feature, key: String, attributes: Attributes): Double</p> <p>open override fun getDouble(feature: Feature): Double</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-enum/","title":"getEnum - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/getEnum</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-enum/#getenum","title":"getEnum","text":"<p>[jvm]\\ open override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T</p> <p>open override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, clazz: Class&lt;T&gt;): T</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-int/","title":"getInt - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/getInt</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-int/#getint","title":"getInt","text":"<p>[jvm]\\ open override fun getInt(feature: Feature, key: String, attributes: Attributes): Int</p> <p>open override fun getInt(feature: Feature): Int</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-json-string/","title":"getJsonString - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/getJsonString</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-json-string/#getjsonstring","title":"getJsonString","text":"<p>[jvm]\\ open override fun getJsonString(feature: Feature, key: String, attributes: Attributes): String</p> <p>open override fun getJsonString(feature: Feature): String</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-json/","title":"getJson - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/getJson</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-json/#getjson","title":"getJson","text":"<p>[jvm]\\ open override fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T</p> <p>open override fun &lt;T&gt; getJson(feature: Feature, clazz: Class&lt;T&gt;): T</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-string/","title":"getString - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/getString</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/get-string/#getstring","title":"getString","text":"<p>[jvm]\\ open override fun getString(feature: Feature, key: String, attributes: Attributes): String</p> <p>open override fun getString(feature: Feature): String</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/moshi/","title":"moshi - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/moshi</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/moshi/#moshi","title":"moshi","text":"<p>[jvm]\\ val moshi: () -&gt; Moshi</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/override-json-string/","title":"overrideJsonString - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/overrideJsonString</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/override-json-string/#overridejsonstring","title":"overrideJsonString","text":"<p>[jvm]\\ fun overrideJsonString(feature: Feature, json: String)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/override-json/","title":"overrideJson - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/overrideJson</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/override-json/#overridejson","title":"overrideJson","text":"<p>[jvm]\\ inline fun &lt;T&gt; overrideJson(feature: Feature, value: T)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/override-key-json-string/","title":"overrideKeyJsonString - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/overrideKeyJsonString</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/override-key-json-string/#overridekeyjsonstring","title":"overrideKeyJsonString","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun overrideKeyJsonString(feature: Feature, key: String, value: String, attributes: Attributes = defaultAttributes)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/override-key-json/","title":"overrideKeyJson - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/overrideKeyJson</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/override-key-json/#overridekeyjson","title":"overrideKeyJson","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>inline fun &lt;T&gt; overrideKeyJson(feature: Feature, key: String, value: T, attributes: Attributes = defaultAttributes)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/override-key/","title":"overrideKey - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/overrideKey</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/override-key/#overridekey","title":"overrideKey","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun overrideKey(feature: Feature, key: String, value: Boolean, attributes: Attributes = defaultAttributes)</p> <p>@JvmOverloads</p> <p>fun overrideKey(feature: Feature, key: String, value: Double, attributes: Attributes = defaultAttributes)</p> <p>@JvmOverloads</p> <p>fun overrideKey(feature: Feature, key: String, value: Int, attributes: Attributes = defaultAttributes)</p> <p>@JvmOverloads</p> <p>fun overrideKey(feature: Feature, key: String, value: String, attributes: Attributes = defaultAttributes)</p> <p>@JvmOverloads</p> <p>fun overrideKey(feature: Feature, key: String, value: Enum&lt;*&gt;, attributes: Attributes = defaultAttributes)</p> <p>fun &lt;T&gt; overrideKey(feature: Feature, key: String, value: T, clazz: Class&lt;T&gt;)</p> <p>@JvmOverloads</p> <p>fun &lt;T&gt; overrideKey(feature: Feature, key: String, value: T, attributes: Attributes = defaultAttributes)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/override/","title":"override - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/override</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/override/#override","title":"override","text":"<p>[jvm]\\ fun override(feature: Feature, value: Boolean)</p> <p>fun override(feature: Feature, value: Double)</p> <p>fun override(feature: Feature, value: Int)</p> <p>fun override(feature: Feature, value: String)</p> <p>fun override(feature: Feature, value: Enum&lt;*&gt;)</p> <p>fun &lt;T&gt; override(feature: Feature, value: T)</p> <p>fun &lt;T&gt; override(feature: Feature, value: T, clazz: Class&lt;T&gt;)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/reset/","title":"reset - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/reset</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/reset/#reset","title":"reset","text":"<p>[jvm]\\ fun reset()</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/track-boolean/","title":"trackBoolean - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/trackBoolean</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/track-boolean/#trackboolean","title":"trackBoolean","text":"<p>[jvm]\\ open override fun trackBoolean(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference</p> <p>open override fun trackBoolean(feature: Feature, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/track-double/","title":"trackDouble - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/trackDouble</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/track-double/#trackdouble","title":"trackDouble","text":"<p>[jvm]\\ open override fun trackDouble(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference</p> <p>open override fun trackDouble(feature: Feature, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/track-enum/","title":"trackEnum - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/trackEnum</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/track-enum/#trackenum","title":"trackEnum","text":"<p>[jvm]\\ open override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p> <p>open override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/track-int/","title":"trackInt - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/trackInt</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/track-int/#trackint","title":"trackInt","text":"<p>[jvm]\\ open override fun trackInt(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference</p> <p>open override fun trackInt(feature: Feature, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/track-json/","title":"trackJson - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/trackJson</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/track-json/#trackjson","title":"trackJson","text":"<p>[jvm]\\ open override fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p> <p>open override fun &lt;T&gt; trackJson(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/track-string/","title":"trackString - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/trackString</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/track-string/#trackstring","title":"trackString","text":"<p>[jvm]\\ open override fun trackString(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference</p> <p>open override fun trackString(feature: Feature, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/-companion/","title":"Companion - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/Companion</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/-companion/#properties","title":"Properties","text":"Name Summary defaultAttributes [jvm]val defaultAttributes: Attributes KEY [jvm]const val KEY: String"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/-companion/-k-e-y/","title":"KEY - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/Companion/KEY</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/-companion/-k-e-y/#key","title":"KEY","text":"<p>[jvm]\\ const val KEY: String</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/-companion/default-attributes/","title":"defaultAttributes - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeLegacyFeatureFlags/Companion/defaultAttributes</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-legacy-feature-flags/-companion/default-attributes/#defaultattributes","title":"defaultAttributes","text":"<p>[jvm]\\ val defaultAttributes: Attributes</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/","title":"FakeStrongFeatureFlags - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeStrongFeatureFlags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/#fakestrongfeatureflags","title":"FakeStrongFeatureFlags","text":"<p>[jvm]\\ class FakeStrongFeatureFlags : StrongFeatureFlags</p> <p>In-memory test implementation of FeatureFlags that allows for overriding strong feature flags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/#constructors","title":"Constructors","text":"FakeStrongFeatureFlags [jvm]fun FakeStrongFeatureFlags()"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(flag: BooleanFeatureFlag): Booleanopen override fun get(flag: DoubleFeatureFlag): Doubleopen override fun &lt;T : Enum&lt;T&gt;&gt; get(flag: EnumFeatureFlag&lt;T&gt;): Topen override fun get(flag: IntFeatureFlag): Intopen override fun &lt;T : Any&gt; get(flag: JsonFeatureFlag&lt;T&gt;): Topen override fun get(flag: StringFeatureFlag): String override [jvm]@JvmOverloadsinline fun &lt;Flag : JsonFeatureFlag&lt;T&gt;, T : Any&gt; override(value: T, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlags@JvmOverloadsinline fun &lt;Flag : EnumFeatureFlag&lt;T&gt;, T : Enum&lt;T&gt;&gt; override(value: T, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlags@JvmOverloadsinline fun &lt;Flag : BooleanFeatureFlag&gt; override(value: Boolean, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlags@JvmOverloadsinline fun &lt;Flag : DoubleFeatureFlag&gt; override(value: Double, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlags@JvmOverloadsinline fun &lt;Flag : IntFeatureFlag&gt; override(value: Int, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlags@JvmOverloadsinline fun &lt;Flag : StringFeatureFlag&gt; override(value: String, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlags overrideAny [jvm]@JvmOverloadsfun &lt;T : Any, Flag : FeatureFlag&lt;in T&gt;&gt; overrideAny(clazz: Class&lt;out FeatureFlag&lt;T&gt;&gt;, value: T, matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlagsGeneric flag override function. reset [jvm]fun reset(): FakeStrongFeatureFlags"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/-fake-strong-feature-flags/","title":"FakeStrongFeatureFlags - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeStrongFeatureFlags/FakeStrongFeatureFlags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/-fake-strong-feature-flags/#fakestrongfeatureflags","title":"FakeStrongFeatureFlags","text":"<p>[jvm]\\ fun FakeStrongFeatureFlags()</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/get/","title":"get - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeStrongFeatureFlags/get</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(flag: BooleanFeatureFlag): Boolean</p> <p>open override fun get(flag: StringFeatureFlag): String</p> <p>open override fun get(flag: IntFeatureFlag): Int</p> <p>open override fun get(flag: DoubleFeatureFlag): Double</p> <p>open override fun &lt;T : Enum&lt;T&gt;&gt; get(flag: EnumFeatureFlag&lt;T&gt;): T</p> <p>open override fun &lt;T : Any&gt; get(flag: JsonFeatureFlag&lt;T&gt;): T</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/override-any/","title":"overrideAny - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeStrongFeatureFlags/overrideAny</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/override-any/#overrideany","title":"overrideAny","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun &lt;T : Any, Flag : FeatureFlag&lt;in T&gt;&gt; overrideAny(clazz: Class&lt;out FeatureFlag&lt;T&gt;&gt;, value: T, matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlags</p> <p>Generic flag override function.</p> <p>Prefer override instead for a more convenient interface.</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/override/","title":"override - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeStrongFeatureFlags/override</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/override/#override","title":"override","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>inline fun &lt;Flag : BooleanFeatureFlag&gt; override(value: Boolean, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlags</p> <p>@JvmOverloads</p> <p>inline fun &lt;Flag : StringFeatureFlag&gt; override(value: String, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlags</p> <p>@JvmOverloads</p> <p>inline fun &lt;Flag : IntFeatureFlag&gt; override(value: Int, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlags</p> <p>@JvmOverloads</p> <p>inline fun &lt;Flag : DoubleFeatureFlag&gt; override(value: Double, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlags</p> <p>@JvmOverloads</p> <p>inline fun &lt;Flag : JsonFeatureFlag&lt;T&gt;, T : Any&gt; override(value: T, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlags</p> <p>@JvmOverloads</p> <p>inline fun &lt;Flag : EnumFeatureFlag&lt;T&gt;, T : Enum&lt;T&gt;&gt; override(value: T, noinline matcher: (Flag) -&gt; Boolean = { _ -&gt; true }): FakeStrongFeatureFlags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/reset/","title":"reset - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FakeStrongFeatureFlags/reset</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-fake-strong-feature-flags/reset/#reset","title":"reset","text":"<p>[jvm]\\ fun reset(): FakeStrongFeatureFlags</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/","title":"FeaturesConfig - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FeaturesConfig</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/#featuresconfig","title":"FeaturesConfig","text":"<p>[jvm]\\ data class FeaturesConfig@JvmOverloadsconstructor(featureName: String, key: String?, attributes: Attributes, value: String, type: String)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/#properties","title":"Properties","text":"Name Summary attributes [jvm]val attributes: Attributes featureName [jvm]val featureName: String key [jvm]val key: String? = null type [jvm]val type: String value [jvm]val value: String"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/-features-config/","title":"FeaturesConfig - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FeaturesConfig/FeaturesConfig</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/-features-config/#featuresconfig","title":"FeaturesConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun FeaturesConfig(featureName: String, key: String? = null, attributes: Attributes = Attributes(), value: String, type: String = \u201cString\u201d)</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/attributes/","title":"attributes - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FeaturesConfig/attributes</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/attributes/#attributes","title":"attributes","text":"<p>[jvm]\\ val attributes: Attributes</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/feature-name/","title":"featureName - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FeaturesConfig/featureName</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/feature-name/#featurename","title":"featureName","text":"<p>[jvm]\\ val featureName: String</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/key/","title":"key - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FeaturesConfig/key</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/key/#key","title":"key","text":"<p>[jvm]\\ val key: String? = null</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/type/","title":"type - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FeaturesConfig/type</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/type/#type","title":"type","text":"<p>[jvm]\\ val type: String</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/value/","title":"value - Misk","text":"<p>//wisp-feature-testing/wisp.feature.testing/FeaturesConfig/value</p>"},{"location":"0.x/wisp-feature-testing/wisp-feature-testing/wisp.feature.testing/-features-config/value/#value","title":"value","text":"<p>[jvm]\\ val value: String</p>"},{"location":"0.x/wisp-launchdarkly/","title":"wisp-launchdarkly - Misk","text":"<p>//wisp-launchdarkly</p>"},{"location":"0.x/wisp-launchdarkly/#wisp-launchdarkly","title":"wisp-launchdarkly","text":""},{"location":"0.x/wisp-launchdarkly/#packages","title":"Packages","text":"Name wisp.launchdarkly"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/","title":"Package wisp.launchdarkly - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/#package-wisplaunchdarkly","title":"Package wisp.launchdarkly","text":""},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/#types","title":"Types","text":"Name Summary LaunchDarklyClient [jvm]object LaunchDarklyClient LaunchDarklyClientMetrics [jvm]class LaunchDarklyClientMetrics(meterRegistry: MeterRegistry) LaunchDarklyConfig [jvm]data class LaunchDarklyConfig@JvmOverloadsconstructor(sdk_key: String, base_uri: String, ssl: HttpClientSSLConfig?, offline: Boolean) : Config LaunchDarklyDynamicConfig [jvm]class LaunchDarklyDynamicConfig(featureFlags: FeatureFlags) : DynamicConfig LaunchDarklyFeatureFlags [jvm]class LaunchDarklyFeatureFlags@JvmOverloadsconstructor(ldClient: LDClientInterface, moshi: Moshi, meterRegistry: MeterRegistry) : FeatureFlagsImplementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation."},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client/","title":"LaunchDarklyClient - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyClient</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client/#launchdarklyclient","title":"LaunchDarklyClient","text":"<p>[jvm]\\ object LaunchDarklyClient</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client/#functions","title":"Functions","text":"Name Summary createLaunchDarklyClient [jvm]fun createLaunchDarklyClient(config: LaunchDarklyConfig, sslLoader: SslLoader, sslContextFactory: SslContextFactory, resourceLoader: ResourceLoader): LDClientInterfaceCreates the LaunchDarkly client interface with the supplied config"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client/create-launch-darkly-client/","title":"createLaunchDarklyClient - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyClient/createLaunchDarklyClient</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client/create-launch-darkly-client/#createlaunchdarklyclient","title":"createLaunchDarklyClient","text":"<p>[jvm]\\ fun createLaunchDarklyClient(config: LaunchDarklyConfig, sslLoader: SslLoader, sslContextFactory: SslContextFactory, resourceLoader: ResourceLoader): LDClientInterface</p> <p>Creates the LaunchDarkly client interface with the supplied config</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/","title":"LaunchDarklyClientMetrics - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyClientMetrics</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/#launchdarklyclientmetrics","title":"LaunchDarklyClientMetrics","text":"<p>[jvm]\\ class LaunchDarklyClientMetrics(meterRegistry: MeterRegistry)</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/#functions","title":"Functions","text":"Name Summary onInitFailure [jvm]fun onInitFailure() onInitSuccess [jvm]fun onInitSuccess(duration: Long)"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/-launch-darkly-client-metrics/","title":"LaunchDarklyClientMetrics - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyClientMetrics/LaunchDarklyClientMetrics</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/-launch-darkly-client-metrics/#launchdarklyclientmetrics","title":"LaunchDarklyClientMetrics","text":"<p>[jvm]\\ fun LaunchDarklyClientMetrics(meterRegistry: MeterRegistry)</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/on-init-failure/","title":"onInitFailure - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyClientMetrics/onInitFailure</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/on-init-failure/#oninitfailure","title":"onInitFailure","text":"<p>[jvm]\\ fun onInitFailure()</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/on-init-success/","title":"onInitSuccess - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyClientMetrics/onInitSuccess</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/on-init-success/#oninitsuccess","title":"onInitSuccess","text":"<p>[jvm]\\ fun onInitSuccess(duration: Long)</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/-companion/","title":"Companion - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyClientMetrics/Companion</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/-companion/#properties","title":"Properties","text":"Name Summary FAILED_COUNTER_NAME [jvm]const val FAILED_COUNTER_NAME: String INITIALIZATION_DURATION_NAME [jvm]const val INITIALIZATION_DURATION_NAME: String SUCCESS_COUNTER_NAME [jvm]const val SUCCESS_COUNTER_NAME: String"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/-companion/-f-a-i-l-e-d_-c-o-u-n-t-e-r_-n-a-m-e/","title":"FAILED_COUNTER_NAME - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyClientMetrics/Companion/FAILED_COUNTER_NAME</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/-companion/-f-a-i-l-e-d_-c-o-u-n-t-e-r_-n-a-m-e/#failed_counter_name","title":"FAILED_COUNTER_NAME","text":"<p>[jvm]\\ const val FAILED_COUNTER_NAME: String</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/-companion/-i-n-i-t-i-a-l-i-z-a-t-i-o-n_-d-u-r-a-t-i-o-n_-n-a-m-e/","title":"INITIALIZATION_DURATION_NAME - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyClientMetrics/Companion/INITIALIZATION_DURATION_NAME</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/-companion/-i-n-i-t-i-a-l-i-z-a-t-i-o-n_-d-u-r-a-t-i-o-n_-n-a-m-e/#initialization_duration_name","title":"INITIALIZATION_DURATION_NAME","text":"<p>[jvm]\\ const val INITIALIZATION_DURATION_NAME: String</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/-companion/-s-u-c-c-e-s-s_-c-o-u-n-t-e-r_-n-a-m-e/","title":"SUCCESS_COUNTER_NAME - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyClientMetrics/Companion/SUCCESS_COUNTER_NAME</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-client-metrics/-companion/-s-u-c-c-e-s-s_-c-o-u-n-t-e-r_-n-a-m-e/#success_counter_name","title":"SUCCESS_COUNTER_NAME","text":"<p>[jvm]\\ const val SUCCESS_COUNTER_NAME: String</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-config/","title":"LaunchDarklyConfig - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyConfig</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-config/#launchdarklyconfig","title":"LaunchDarklyConfig","text":"<p>[jvm]\\ data class LaunchDarklyConfig@JvmOverloadsconstructor(sdk_key: String, base_uri: String, ssl: HttpClientSSLConfig?, offline: Boolean) : Config</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-config/#properties","title":"Properties","text":"Name Summary base_uri [jvm]val base_uri: String offline [jvm]val offline: Boolean = false sdk_key [jvm]val sdk_key: String ssl [jvm]val ssl: HttpClientSSLConfig? = null"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-config/-launch-darkly-config/","title":"LaunchDarklyConfig - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyConfig/LaunchDarklyConfig</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-config/-launch-darkly-config/#launchdarklyconfig","title":"LaunchDarklyConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun LaunchDarklyConfig(sdk_key: String, base_uri: String, ssl: HttpClientSSLConfig? = null, offline: Boolean = false)</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-config/base_uri/","title":"base_uri - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyConfig/base_uri</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-config/base_uri/#base_uri","title":"base_uri","text":"<p>[jvm]\\ val base_uri: String</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-config/offline/","title":"offline - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyConfig/offline</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-config/offline/#offline","title":"offline","text":"<p>[jvm]\\ val offline: Boolean = false</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-config/sdk_key/","title":"sdk_key - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyConfig/sdk_key</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-config/sdk_key/#sdk_key","title":"sdk_key","text":"<p>[jvm]\\ val sdk_key: String</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-config/ssl/","title":"ssl - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyConfig/ssl</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-config/ssl/#ssl","title":"ssl","text":"<p>[jvm]\\ val ssl: HttpClientSSLConfig? = null</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/","title":"LaunchDarklyDynamicConfig - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/#launchdarklydynamicconfig","title":"LaunchDarklyDynamicConfig","text":"<p>[jvm]\\ class LaunchDarklyDynamicConfig(featureFlags: FeatureFlags) : DynamicConfig</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/#functions","title":"Functions","text":"Name Summary getBoolean [jvm]open override fun getBoolean(feature: Feature): Boolean getDouble [jvm]open override fun getDouble(feature: Feature): Double getEnum [jvm]open override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, clazz: Class&lt;T&gt;): T getInt [jvm]open override fun getInt(feature: Feature): Int getJson [jvm]open override fun &lt;T&gt; getJson(feature: Feature, clazz: Class&lt;T&gt;): T getJsonString [jvm]open override fun getJsonString(feature: Feature): String getString [jvm]open override fun getString(feature: Feature): String trackBoolean [jvm]open override fun trackBoolean(feature: Feature, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference trackDouble [jvm]open override fun trackDouble(feature: Feature, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference trackEnum [jvm]open override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference trackInt [jvm]open override fun trackInt(feature: Feature, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference trackJson [jvm]open override fun &lt;T&gt; trackJson(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference trackString [jvm]open override fun trackString(feature: Feature, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/-launch-darkly-dynamic-config/","title":"LaunchDarklyDynamicConfig - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/LaunchDarklyDynamicConfig</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/-launch-darkly-dynamic-config/#launchdarklydynamicconfig","title":"LaunchDarklyDynamicConfig","text":"<p>[jvm]\\ fun LaunchDarklyDynamicConfig(featureFlags: FeatureFlags)</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-boolean/","title":"getBoolean - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/getBoolean</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-boolean/#getboolean","title":"getBoolean","text":"<p>[jvm]\\ open override fun getBoolean(feature: Feature): Boolean</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-double/","title":"getDouble - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/getDouble</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-double/#getdouble","title":"getDouble","text":"<p>[jvm]\\ open override fun getDouble(feature: Feature): Double</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-enum/","title":"getEnum - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/getEnum</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-enum/#getenum","title":"getEnum","text":"<p>[jvm]\\ open override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, clazz: Class&lt;T&gt;): T</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-int/","title":"getInt - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/getInt</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-int/#getint","title":"getInt","text":"<p>[jvm]\\ open override fun getInt(feature: Feature): Int</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-json-string/","title":"getJsonString - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/getJsonString</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-json-string/#getjsonstring","title":"getJsonString","text":"<p>[jvm]\\ open override fun getJsonString(feature: Feature): String</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-json/","title":"getJson - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/getJson</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-json/#getjson","title":"getJson","text":"<p>[jvm]\\ open override fun &lt;T&gt; getJson(feature: Feature, clazz: Class&lt;T&gt;): T</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-string/","title":"getString - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/getString</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/get-string/#getstring","title":"getString","text":"<p>[jvm]\\ open override fun getString(feature: Feature): String</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/track-boolean/","title":"trackBoolean - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/trackBoolean</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/track-boolean/#trackboolean","title":"trackBoolean","text":"<p>[jvm]\\ open override fun trackBoolean(feature: Feature, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/track-double/","title":"trackDouble - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/trackDouble</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/track-double/#trackdouble","title":"trackDouble","text":"<p>[jvm]\\ open override fun trackDouble(feature: Feature, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/track-enum/","title":"trackEnum - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/trackEnum</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/track-enum/#trackenum","title":"trackEnum","text":"<p>[jvm]\\ open override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/track-int/","title":"trackInt - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/trackInt</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/track-int/#trackint","title":"trackInt","text":"<p>[jvm]\\ open override fun trackInt(feature: Feature, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/track-json/","title":"trackJson - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/trackJson</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/track-json/#trackjson","title":"trackJson","text":"<p>[jvm]\\ open override fun &lt;T&gt; trackJson(feature: Feature, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/track-string/","title":"trackString - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/trackString</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/track-string/#trackstring","title":"trackString","text":"<p>[jvm]\\ open override fun trackString(feature: Feature, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/-companion/","title":"Companion - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/Companion</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/-companion/#properties","title":"Properties","text":"Name Summary ATTRIBUTES [jvm]val ATTRIBUTES: Attributes KEY [jvm]const val KEY: String"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/-companion/-a-t-t-r-i-b-u-t-e-s/","title":"ATTRIBUTES - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/Companion/ATTRIBUTES</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/-companion/-a-t-t-r-i-b-u-t-e-s/#attributes","title":"ATTRIBUTES","text":"<p>[jvm]\\ val ATTRIBUTES: Attributes</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/-companion/-k-e-y/","title":"KEY - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyDynamicConfig/Companion/KEY</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-dynamic-config/-companion/-k-e-y/#key","title":"KEY","text":"<p>[jvm]\\ const val KEY: String</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/","title":"LaunchDarklyFeatureFlags - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/#launchdarklyfeatureflags","title":"LaunchDarklyFeatureFlags","text":"<p>[jvm]\\ class LaunchDarklyFeatureFlags@JvmOverloadsconstructor(ldClient: LDClientInterface, moshi: Moshi, meterRegistry: MeterRegistry) : FeatureFlags</p> <p>Implementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation.</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/#constructors","title":"Constructors","text":"LaunchDarklyFeatureFlags [jvm]@JvmOverloadsfun LaunchDarklyFeatureFlags(ldClient: LDClientInterface, moshi: Moshi, meterRegistry: MeterRegistry = Metrics.globalRegistry)"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/#functions","title":"Functions","text":"Name Summary get [jvm]open override fun get(flag: BooleanFeatureFlag): Booleanopen override fun get(flag: DoubleFeatureFlag): Doubleopen override fun &lt;T : Enum&lt;T&gt;&gt; get(flag: EnumFeatureFlag&lt;T&gt;): Topen override fun get(flag: IntFeatureFlag): Intopen override fun &lt;T : Any&gt; get(flag: JsonFeatureFlag&lt;T&gt;): Topen override fun get(flag: StringFeatureFlag): String getBoolean [jvm]open fun getBoolean(feature: Feature, key: String): Booleanopen override fun getBoolean(feature: Feature, key: String, attributes: Attributes): Boolean getDouble [jvm]open fun getDouble(feature: Feature, key: String): Doubleopen override fun getDouble(feature: Feature, key: String, attributes: Attributes): Double getEnum [jvm]open fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;): Topen override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T getInt [jvm]open fun getInt(feature: Feature, key: String): Intopen override fun getInt(feature: Feature, key: String, attributes: Attributes): Int getJson [jvm]open fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;): Topen override fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T getJsonString [jvm]open fun getJsonString(feature: Feature, key: String): Stringopen override fun getJsonString(feature: Feature, key: String, attributes: Attributes): String getString [jvm]open fun getString(feature: Feature, key: String): Stringopen override fun getString(feature: Feature, key: String, attributes: Attributes): String shutDown [jvm]fun shutDown() startUp [jvm]fun startUp(): LaunchDarklyFeatureFlags trackBoolean [jvm]open fun trackBoolean(feature: Feature, key: String, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReferenceopen override fun trackBoolean(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference trackDouble [jvm]open fun trackDouble(feature: Feature, key: String, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReferenceopen override fun trackDouble(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference trackEnum [jvm]open fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceopen override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference trackInt [jvm]open fun trackInt(feature: Feature, key: String, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReferenceopen override fun trackInt(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference trackJson [jvm]open fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, executor: Executor, tracker: (T) -&gt; Unit): TrackerReferenceopen override fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference trackString [jvm]open fun trackString(feature: Feature, key: String, executor: Executor, tracker: (String) -&gt; Unit): TrackerReferenceopen override fun trackString(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/-launch-darkly-feature-flags/","title":"LaunchDarklyFeatureFlags - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/LaunchDarklyFeatureFlags</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/-launch-darkly-feature-flags/#launchdarklyfeatureflags","title":"LaunchDarklyFeatureFlags","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun LaunchDarklyFeatureFlags(ldClient: LDClientInterface, moshi: Moshi, meterRegistry: MeterRegistry = Metrics.globalRegistry)</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-boolean/","title":"getBoolean - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/getBoolean</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-boolean/#getboolean","title":"getBoolean","text":"<p>[jvm]\\ open override fun getBoolean(feature: Feature, key: String, attributes: Attributes): Boolean</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-double/","title":"getDouble - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/getDouble</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-double/#getdouble","title":"getDouble","text":"<p>[jvm]\\ open override fun getDouble(feature: Feature, key: String, attributes: Attributes): Double</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-enum/","title":"getEnum - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/getEnum</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-enum/#getenum","title":"getEnum","text":"<p>[jvm]\\ open override fun &lt;T : Enum&lt;T&gt;&gt; getEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-int/","title":"getInt - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/getInt</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-int/#getint","title":"getInt","text":"<p>[jvm]\\ open override fun getInt(feature: Feature, key: String, attributes: Attributes): Int</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-json-string/","title":"getJsonString - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/getJsonString</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-json-string/#getjsonstring","title":"getJsonString","text":"<p>[jvm]\\ open override fun getJsonString(feature: Feature, key: String, attributes: Attributes): String</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-json/","title":"getJson - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/getJson</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-json/#getjson","title":"getJson","text":"<p>[jvm]\\ open override fun &lt;T&gt; getJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes): T</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-string/","title":"getString - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/getString</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get-string/#getstring","title":"getString","text":"<p>[jvm]\\ open override fun getString(feature: Feature, key: String, attributes: Attributes): String</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get/","title":"get - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/get</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/get/#get","title":"get","text":"<p>[jvm]\\ open override fun get(flag: BooleanFeatureFlag): Boolean</p> <p>open override fun get(flag: StringFeatureFlag): String</p> <p>open override fun get(flag: IntFeatureFlag): Int</p> <p>open override fun get(flag: DoubleFeatureFlag): Double</p> <p>open override fun &lt;T : Enum&lt;T&gt;&gt; get(flag: EnumFeatureFlag&lt;T&gt;): T</p> <p>open override fun &lt;T : Any&gt; get(flag: JsonFeatureFlag&lt;T&gt;): T</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/shut-down/","title":"shutDown - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/shutDown</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/shut-down/#shutdown","title":"shutDown","text":"<p>[jvm]\\ fun shutDown()</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/start-up/","title":"startUp - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/startUp</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/start-up/#startup","title":"startUp","text":"<p>[jvm]\\ fun startUp(): LaunchDarklyFeatureFlags</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/track-boolean/","title":"trackBoolean - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/trackBoolean</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/track-boolean/#trackboolean","title":"trackBoolean","text":"<p>[jvm]\\ open override fun trackBoolean(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Boolean) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/track-double/","title":"trackDouble - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/trackDouble</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/track-double/#trackdouble","title":"trackDouble","text":"<p>[jvm]\\ open override fun trackDouble(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Double) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/track-enum/","title":"trackEnum - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/trackEnum</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/track-enum/#trackenum","title":"trackEnum","text":"<p>[jvm]\\ open override fun &lt;T : Enum&lt;T&gt;&gt; trackEnum(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/track-int/","title":"trackInt - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/trackInt</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/track-int/#trackint","title":"trackInt","text":"<p>[jvm]\\ open override fun trackInt(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (Int) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/track-json/","title":"trackJson - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/trackJson</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/track-json/#trackjson","title":"trackJson","text":"<p>[jvm]\\ open override fun &lt;T&gt; trackJson(feature: Feature, key: String, clazz: Class&lt;T&gt;, attributes: Attributes, executor: Executor, tracker: (T) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/track-string/","title":"trackString - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/trackString</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/track-string/#trackstring","title":"trackString","text":"<p>[jvm]\\ open override fun trackString(feature: Feature, key: String, attributes: Attributes, executor: Executor, tracker: (String) -&gt; Unit): TrackerReference</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/-companion/","title":"Companion - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/Companion</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/-companion/#properties","title":"Properties","text":"Name Summary logger [jvm]val logger: KLogger"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/-companion/logger/","title":"logger - Misk","text":"<p>//wisp-launchdarkly/wisp.launchdarkly/LaunchDarklyFeatureFlags/Companion/logger</p>"},{"location":"0.x/wisp-launchdarkly/wisp-launchdarkly/wisp.launchdarkly/-launch-darkly-feature-flags/-companion/logger/#logger","title":"logger","text":"<p>[jvm]\\ val logger: KLogger</p>"},{"location":"0.x/wisp-lease/","title":"wisp-lease - Misk","text":"<p>//wisp-lease</p>"},{"location":"0.x/wisp-lease/#wisp-lease","title":"wisp-lease","text":""},{"location":"0.x/wisp-lease/#packages","title":"Packages","text":"Name wisp.lease wisp.lease.pool"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/","title":"Package wisp.lease - Misk","text":"<p>//wisp-lease/wisp.lease</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/#package-wisplease","title":"Package wisp.lease","text":""},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/#types","title":"Types","text":"Name Summary AutoCloseableLease [jvm]class AutoCloseableLease(lease: Lease) : Lease, AutoCloseableConverts a lease into an AutoCloseable resource. Lease [jvm]interface LeaseA Lease is a cluster-wide time-based lock on a given resource. Leases are retrieved via LeaseManager.requestLease. LeaseManager [jvm]interface LeaseManager"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/#functions","title":"Functions","text":"Name Summary acquireOrNull [jvm]fun LeaseManager.acquireOrNull(name: String): AutoCloseableLease?Attempts to acquire an AutoCloseableLease."},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/acquire-or-null/","title":"acquireOrNull - Misk","text":"<p>//wisp-lease/wisp.lease/acquireOrNull</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/acquire-or-null/#acquireornull","title":"acquireOrNull","text":"<p>[jvm]\\ fun LeaseManager.acquireOrNull(name: String): AutoCloseableLease?</p> <p>Attempts to acquire an AutoCloseableLease.</p> <p>Use like</p> <p>leaseManager.acquireOrNull(\u201csome-lease\u201d)?.use { lease -&gt;\\   // Do something with the lease.\\ }</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-auto-closeable-lease/","title":"AutoCloseableLease - Misk","text":"<p>//wisp-lease/wisp.lease/AutoCloseableLease</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-auto-closeable-lease/#autocloseablelease","title":"AutoCloseableLease","text":"<p>[jvm]\\ class AutoCloseableLease(lease: Lease) : Lease, AutoCloseable</p> <p>Converts a lease into an AutoCloseable resource.</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-auto-closeable-lease/#constructors","title":"Constructors","text":"AutoCloseableLease [jvm]fun AutoCloseableLease(lease: Lease)"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-auto-closeable-lease/#functions","title":"Functions","text":"Name Summary acquire [jvm]open override fun acquire(): BooleanAttempts to acquire the lock on the lease.  If the lock was not already held and the lock was successfully obtained, listeners should be notified. addListener [jvm]open override fun addListener(listener: Lease.StateChangeListener)Registers a listener that is called on lease state changes. checkHeld [jvm]open override fun checkHeld(): Boolean close [jvm]open override fun close() release [jvm]open override fun release(): BooleanRelease the lock on the lease.  This will return true if released.  Note that it will return false if the lease was not held.  Listeners should be notified before the lock is released."},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-auto-closeable-lease/#properties","title":"Properties","text":"Name Summary name [jvm]open override val name: String"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-auto-closeable-lease/-auto-closeable-lease/","title":"AutoCloseableLease - Misk","text":"<p>//wisp-lease/wisp.lease/AutoCloseableLease/AutoCloseableLease</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-auto-closeable-lease/-auto-closeable-lease/#autocloseablelease","title":"AutoCloseableLease","text":"<p>[jvm]\\ fun AutoCloseableLease(lease: Lease)</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-auto-closeable-lease/close/","title":"close - Misk","text":"<p>//wisp-lease/wisp.lease/AutoCloseableLease/close</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-auto-closeable-lease/close/#close","title":"close","text":"<p>[jvm]\\ open override fun close()</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/","title":"Lease - Misk","text":"<p>//wisp-lease/wisp.lease/Lease</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/#lease","title":"Lease","text":"<p>[jvm]\\ interface Lease</p> <p>A Lease is a cluster-wide time-based lock on a given resource. Leases are retrieved via LeaseManager.requestLease.</p> <p>It should be assumed that calls to checkHeld, acquire and release could invoke remote calls, so consider usage carefully.</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/#types","title":"Types","text":"Name Summary StateChangeListener [jvm]interface StateChangeListener"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/#functions","title":"Functions","text":"Name Summary acquire [jvm]abstract fun acquire(): BooleanAttempts to acquire the lock on the lease.  If the lock was not already held and the lock was successfully obtained, listeners should be notified. addListener [jvm]abstract fun addListener(listener: Lease.StateChangeListener)Registers a listener that is called on lease state changes. checkHeld [jvm]abstract fun checkHeld(): Boolean release [jvm]abstract fun release(): BooleanRelease the lock on the lease.  This will return true if released.  Note that it will return false if the lease was not held.  Listeners should be notified before the lock is released."},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/#properties","title":"Properties","text":"Name Summary name [jvm]abstract val name: String"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/#inheritors","title":"Inheritors","text":"Name AutoCloseableLease PoolLease"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/acquire/","title":"acquire - Misk","text":"<p>//wisp-lease/wisp.lease/Lease/acquire</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/acquire/#acquire","title":"acquire","text":"<p>[jvm]\\ abstract fun acquire(): Boolean</p> <p>Attempts to acquire the lock on the lease.  If the lock was not already held and the lock was successfully obtained, listeners should be notified.</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/acquire/#return","title":"Return","text":"<p>true if this process acquires the lease.</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/add-listener/","title":"addListener - Misk","text":"<p>//wisp-lease/wisp.lease/Lease/addListener</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/add-listener/#addlistener","title":"addListener","text":"<p>[jvm]\\ abstract fun addListener(listener: Lease.StateChangeListener)</p> <p>Registers a listener that is called on lease state changes.</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/check-held/","title":"checkHeld - Misk","text":"<p>//wisp-lease/wisp.lease/Lease/checkHeld</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/check-held/#checkheld","title":"checkHeld","text":"<p>[jvm]\\ abstract fun checkHeld(): Boolean</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/check-held/#return","title":"Return","text":"<p>true if the lease is owned by this process instance.</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/name/","title":"name - Misk","text":"<p>//wisp-lease/wisp.lease/Lease/name</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/name/#name","title":"name","text":"<p>[jvm]\\ abstract val name: String</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/release/","title":"release - Misk","text":"<p>//wisp-lease/wisp.lease/Lease/release</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/release/#release","title":"release","text":"<p>[jvm]\\ abstract fun release(): Boolean</p> <p>Release the lock on the lease.  This will return true if released.  Note that it will return false if the lease was not held.  Listeners should be notified before the lock is released.</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/-state-change-listener/","title":"StateChangeListener - Misk","text":"<p>//wisp-lease/wisp.lease/Lease/StateChangeListener</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/-state-change-listener/#statechangelistener","title":"StateChangeListener","text":"<p>[jvm]\\ interface StateChangeListener</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/-state-change-listener/#functions","title":"Functions","text":"Name Summary afterAcquire [jvm]abstract fun afterAcquire(lease: Lease)Called immediately after the lease is acquired. Also called immediately if the lease is already owned by this process instance when the listener is registered. beforeRelease [jvm]abstract fun beforeRelease(lease: Lease)Called immediately before the lease is released."},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/-state-change-listener/after-acquire/","title":"afterAcquire - Misk","text":"<p>//wisp-lease/wisp.lease/Lease/StateChangeListener/afterAcquire</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/-state-change-listener/after-acquire/#afteracquire","title":"afterAcquire","text":"<p>[jvm]\\ abstract fun afterAcquire(lease: Lease)</p> <p>Called immediately after the lease is acquired. Also called immediately if the lease is already owned by this process instance when the listener is registered.</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/-state-change-listener/after-acquire/#parameters","title":"Parameters","text":"<p>jvm</p> lease the lease that is acquired"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/-state-change-listener/before-release/","title":"beforeRelease - Misk","text":"<p>//wisp-lease/wisp.lease/Lease/StateChangeListener/beforeRelease</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/-state-change-listener/before-release/#beforerelease","title":"beforeRelease","text":"<p>[jvm]\\ abstract fun beforeRelease(lease: Lease)</p> <p>Called immediately before the lease is released.</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease/-state-change-listener/before-release/#parameters","title":"Parameters","text":"<p>jvm</p> lease the lease that is released"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease-manager/","title":"LeaseManager - Misk","text":"<p>//wisp-lease/wisp.lease/LeaseManager</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease-manager/#leasemanager","title":"LeaseManager","text":"<p>[jvm]\\ interface LeaseManager</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease-manager/#functions","title":"Functions","text":"Name Summary releaseAll [jvm]open fun releaseAll() requestLease [jvm]abstract fun requestLease(name: String): LeaseRegisters interest in the lease with the given name. Service instances should register their interest in leases as soon as they know about them; this gives the process an opportunity to notify the underlying cluster system that it is interested in the lease, or to setup other background tasks to acquire the lease if necessary. Note that registering interest in a lease doesn\u2019t necessarily mean that this service instance will attempt to acquire the lease; many clustering systems will only try to acquire leases for resources that they think they should own based on some consistent hashing system"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease-manager/#inheritors","title":"Inheritors","text":"Name PoolLeaseManager"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease-manager/#extensions","title":"Extensions","text":"Name Summary acquireOrNull [jvm]fun LeaseManager.acquireOrNull(name: String): AutoCloseableLease?Attempts to acquire an AutoCloseableLease."},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease-manager/release-all/","title":"releaseAll - Misk","text":"<p>//wisp-lease/wisp.lease/LeaseManager/releaseAll</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease-manager/release-all/#releaseall","title":"releaseAll","text":"<p>[jvm]\\ open fun releaseAll()</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease-manager/request-lease/","title":"requestLease - Misk","text":"<p>//wisp-lease/wisp.lease/LeaseManager/requestLease</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease/-lease-manager/request-lease/#requestlease","title":"requestLease","text":"<p>[jvm]\\ abstract fun requestLease(name: String): Lease</p> <p>Registers interest in the lease with the given name. Service instances should register their interest in leases as soon as they know about them; this gives the process an opportunity to notify the underlying cluster system that it is interested in the lease, or to setup other background tasks to acquire the lease if necessary. Note that registering interest in a lease doesn\u2019t necessarily mean that this service instance will attempt to acquire the lease; many clustering systems will only try to acquire leases for resources that they think they should own based on some consistent hashing system</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/","title":"Package wisp.lease.pool - Misk","text":"<p>//wisp-lease/wisp.lease.pool</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/#package-wispleasepool","title":"Package wisp.lease.pool","text":""},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/#types","title":"Types","text":"Name Summary PoolLease [jvm]class PoolLease(delegateLease: Lease, poolLeaseManager: PoolLeaseManager) : Lease PoolLeaseConfig [jvm]data class PoolLeaseConfig(name: String, leaseNames: List&lt;String&gt;) PoolLeaseManager [jvm]class PoolLeaseManager(delegateLeaseManager: LeaseManager, deployment: Deployment, poolConfig: List&lt;PoolLeaseConfig&gt;) : LeaseManagerA LeaseManager that ensures that leases that are in the same lease pool are acquired on different instances.  It requires a delegate LeaseManager to handle the Lease implementation."},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease/","title":"PoolLease - Misk","text":"<p>//wisp-lease/wisp.lease.pool/PoolLease</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease/#poollease","title":"PoolLease","text":"<p>[jvm]\\ class PoolLease(delegateLease: Lease, poolLeaseManager: PoolLeaseManager) : Lease</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease/#functions","title":"Functions","text":"Name Summary acquire [jvm]open override fun acquire(): BooleanAttempts to acquire the lock on the lease.  If the lock was not already held and the lock was successfully obtained, listeners should be notified. addListener [jvm]open override fun addListener(listener: Lease.StateChangeListener)Registers a listener that is called on lease state changes. checkHeld [jvm]open override fun checkHeld(): BooleanCan always use the delegate\u2019s result release [jvm]open override fun release(): BooleanRelease the lock on the lease.  This will return true if released.  Note that it will return false if the lease was not held.  Listeners should be notified before the lock is released."},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease/#properties","title":"Properties","text":"Name Summary name [jvm]open override val name: String"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease/-pool-lease/","title":"PoolLease - Misk","text":"<p>//wisp-lease/wisp.lease.pool/PoolLease/PoolLease</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease/-pool-lease/#poollease","title":"PoolLease","text":"<p>[jvm]\\ fun PoolLease(delegateLease: Lease, poolLeaseManager: PoolLeaseManager)</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease/acquire/","title":"acquire - Misk","text":"<p>//wisp-lease/wisp.lease.pool/PoolLease/acquire</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease/acquire/#acquire","title":"acquire","text":"<p>[jvm]\\ open override fun acquire(): Boolean</p> <p>Attempts to acquire the lock on the lease.  If the lock was not already held and the lock was successfully obtained, listeners should be notified.</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease/acquire/#return","title":"Return","text":"<p>true if this process acquires the lease.</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease/check-held/","title":"checkHeld - Misk","text":"<p>//wisp-lease/wisp.lease.pool/PoolLease/checkHeld</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease/check-held/#checkheld","title":"checkHeld","text":"<p>[jvm]\\ open override fun checkHeld(): Boolean</p> <p>Can always use the delegate\u2019s result</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease/release/","title":"release - Misk","text":"<p>//wisp-lease/wisp.lease.pool/PoolLease/release</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease/release/#release","title":"release","text":"<p>[jvm]\\ open override fun release(): Boolean</p> <p>Release the lock on the lease.  This will return true if released.  Note that it will return false if the lease was not held.  Listeners should be notified before the lock is released.</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-config/","title":"PoolLeaseConfig - Misk","text":"<p>//wisp-lease/wisp.lease.pool/PoolLeaseConfig</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-config/#poolleaseconfig","title":"PoolLeaseConfig","text":"<p>[jvm]\\ data class PoolLeaseConfig(name: String, leaseNames: List&lt;String&gt;)</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-config/#properties","title":"Properties","text":"Name Summary leaseNames [jvm]val leaseNames: List&lt;String&gt; name [jvm]val name: String"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-config/-pool-lease-config/","title":"PoolLeaseConfig - Misk","text":"<p>//wisp-lease/wisp.lease.pool/PoolLeaseConfig/PoolLeaseConfig</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-config/-pool-lease-config/#poolleaseconfig","title":"PoolLeaseConfig","text":"<p>[jvm]\\ fun PoolLeaseConfig(name: String, leaseNames: List&lt;String&gt;)</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-config/lease-names/","title":"leaseNames - Misk","text":"<p>//wisp-lease/wisp.lease.pool/PoolLeaseConfig/leaseNames</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-config/lease-names/#leasenames","title":"leaseNames","text":"<p>[jvm]\\ val leaseNames: List&lt;String&gt;</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-config/name/","title":"name - Misk","text":"<p>//wisp-lease/wisp.lease.pool/PoolLeaseConfig/name</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-config/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-manager/","title":"PoolLeaseManager - Misk","text":"<p>//wisp-lease/wisp.lease.pool/PoolLeaseManager</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-manager/#poolleasemanager","title":"PoolLeaseManager","text":"<p>[jvm]\\ class PoolLeaseManager(delegateLeaseManager: LeaseManager, deployment: Deployment, poolConfig: List&lt;PoolLeaseConfig&gt;) : LeaseManager</p> <p>A LeaseManager that ensures that leases that are in the same lease pool are acquired on different instances.  It requires a delegate LeaseManager to handle the Lease implementation.</p> <p>This lease acquisition restriction is applied when Deployment.isReal is true.</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-manager/#constructors","title":"Constructors","text":"PoolLeaseManager [jvm]fun PoolLeaseManager(delegateLeaseManager: LeaseManager, deployment: Deployment, poolConfig: List&lt;PoolLeaseConfig&gt;)"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-manager/#functions","title":"Functions","text":"Name Summary releaseAll [jvm]open override fun releaseAll() requestLease [jvm]open override fun requestLease(name: String): LeaseRegisters interest in the lease with the given name. Service instances should register their interest in leases as soon as they know about them; this gives the process an opportunity to notify the underlying cluster system that it is interested in the lease, or to setup other background tasks to acquire the lease if necessary. Note that registering interest in a lease doesn\u2019t necessarily mean that this service instance will attempt to acquire the lease; many clustering systems will only try to acquire leases for resources that they think they should own based on some consistent hashing system"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-manager/-pool-lease-manager/","title":"PoolLeaseManager - Misk","text":"<p>//wisp-lease/wisp.lease.pool/PoolLeaseManager/PoolLeaseManager</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-manager/-pool-lease-manager/#poolleasemanager","title":"PoolLeaseManager","text":"<p>[jvm]\\ fun PoolLeaseManager(delegateLeaseManager: LeaseManager, deployment: Deployment, poolConfig: List&lt;PoolLeaseConfig&gt;)</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-manager/release-all/","title":"releaseAll - Misk","text":"<p>//wisp-lease/wisp.lease.pool/PoolLeaseManager/releaseAll</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-manager/release-all/#releaseall","title":"releaseAll","text":"<p>[jvm]\\ open override fun releaseAll()</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-manager/request-lease/","title":"requestLease - Misk","text":"<p>//wisp-lease/wisp.lease.pool/PoolLeaseManager/requestLease</p>"},{"location":"0.x/wisp-lease/wisp-lease/wisp.lease.pool/-pool-lease-manager/request-lease/#requestlease","title":"requestLease","text":"<p>[jvm]\\ open override fun requestLease(name: String): Lease</p> <p>Registers interest in the lease with the given name. Service instances should register their interest in leases as soon as they know about them; this gives the process an opportunity to notify the underlying cluster system that it is interested in the lease, or to setup other background tasks to acquire the lease if necessary. Note that registering interest in a lease doesn\u2019t necessarily mean that this service instance will attempt to acquire the lease; many clustering systems will only try to acquire leases for resources that they think they should own based on some consistent hashing system</p>"},{"location":"0.x/wisp-lease-testing/","title":"wisp-lease-testing - Misk","text":"<p>//wisp-lease-testing</p>"},{"location":"0.x/wisp-lease-testing/#wisp-lease-testing","title":"wisp-lease-testing","text":""},{"location":"0.x/wisp-lease-testing/#packages","title":"Packages","text":"Name wisp.lease"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/","title":"Package wisp.lease - Misk","text":"<p>//wisp-lease-testing/wisp.lease</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/#package-wisplease","title":"Package wisp.lease","text":""},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/#types","title":"Types","text":"Name Summary FakeLease [jvm]class FakeLease(name: String, manager: FakeLeaseManager) : Lease FakeLeaseManager [jvm]open class FakeLeaseManager : LeaseManagerA FakeLeaseManager provides explicit control over leases for the purposes of testing. By default, a fake lease is considered held, but it can be explicitly marked as not held if desired"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/","title":"FakeLease - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLease</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/#fakelease","title":"FakeLease","text":"<p>[jvm]\\ class FakeLease(name: String, manager: FakeLeaseManager) : Lease</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/#functions","title":"Functions","text":"Name Summary acquire [jvm]open override fun acquire(): Boolean addListener [jvm]open override fun addListener(listener: Lease.StateChangeListener) checkHeld [jvm]open override fun checkHeld(): Boolean notifyAfterAcquire [jvm]fun notifyAfterAcquire() notifyBeforeRelease [jvm]fun notifyBeforeRelease() release [jvm]open override fun release(): BooleanRelease the lease.  This will return true if released.  Note that it will return false if the lease was not held."},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/#properties","title":"Properties","text":"Name Summary name [jvm]open override val name: String"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/-fake-lease/","title":"FakeLease - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLease/FakeLease</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/-fake-lease/#fakelease","title":"FakeLease","text":"<p>[jvm]\\ fun FakeLease(name: String, manager: FakeLeaseManager)</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/acquire/","title":"acquire - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLease/acquire</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/acquire/#acquire","title":"acquire","text":"<p>[jvm]\\ open override fun acquire(): Boolean</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/acquire/#return","title":"Return","text":"<p>true if this process acquires the lease.</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/add-listener/","title":"addListener - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLease/addListener</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/add-listener/#addlistener","title":"addListener","text":"<p>[jvm]\\ open override fun addListener(listener: Lease.StateChangeListener)</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/check-held/","title":"checkHeld - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLease/checkHeld</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/check-held/#checkheld","title":"checkHeld","text":"<p>[jvm]\\ open override fun checkHeld(): Boolean</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/name/","title":"name - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLease/name</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/name/#name","title":"name","text":"<p>[jvm]\\ open override val name: String</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/notify-after-acquire/","title":"notifyAfterAcquire - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLease/notifyAfterAcquire</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/notify-after-acquire/#notifyafteracquire","title":"notifyAfterAcquire","text":"<p>[jvm]\\ fun notifyAfterAcquire()</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/notify-before-release/","title":"notifyBeforeRelease - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLease/notifyBeforeRelease</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/notify-before-release/#notifybeforerelease","title":"notifyBeforeRelease","text":"<p>[jvm]\\ fun notifyBeforeRelease()</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/release/","title":"release - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLease/release</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease/release/#release","title":"release","text":"<p>[jvm]\\ open override fun release(): Boolean</p> <p>Release the lease.  This will return true if released.  Note that it will return false if the lease was not held.</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/","title":"FakeLeaseManager - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLeaseManager</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/#fakeleasemanager","title":"FakeLeaseManager","text":"<p>[jvm]\\ open class FakeLeaseManager : LeaseManager</p> <p>A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default, a fake lease is considered held, but it can be explicitly marked as not held if desired</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/#constructors","title":"Constructors","text":"FakeLeaseManager [jvm]fun FakeLeaseManager()"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/#functions","title":"Functions","text":"Name Summary isLeaseHeld [jvm]fun isLeaseHeld(name: String): Boolean markLeaseHeld [jvm]fun markLeaseHeld(name: String) markLeaseHeldElsewhere [jvm]fun markLeaseHeldElsewhere(name: String) releaseAll [jvm]open override fun releaseAll() requestLease [jvm]open override fun requestLease(name: String): Lease"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/-fake-lease-manager/","title":"FakeLeaseManager - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLeaseManager/FakeLeaseManager</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/-fake-lease-manager/#fakeleasemanager","title":"FakeLeaseManager","text":"<p>[jvm]\\ fun FakeLeaseManager()</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/is-lease-held/","title":"isLeaseHeld - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLeaseManager/isLeaseHeld</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/is-lease-held/#isleaseheld","title":"isLeaseHeld","text":"<p>[jvm]\\ fun isLeaseHeld(name: String): Boolean</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/mark-lease-held-elsewhere/","title":"markLeaseHeldElsewhere - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLeaseManager/markLeaseHeldElsewhere</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/mark-lease-held-elsewhere/#markleaseheldelsewhere","title":"markLeaseHeldElsewhere","text":"<p>[jvm]\\ fun markLeaseHeldElsewhere(name: String)</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/mark-lease-held/","title":"markLeaseHeld - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLeaseManager/markLeaseHeld</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/mark-lease-held/#markleaseheld","title":"markLeaseHeld","text":"<p>[jvm]\\ fun markLeaseHeld(name: String)</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/release-all/","title":"releaseAll - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLeaseManager/releaseAll</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/release-all/#releaseall","title":"releaseAll","text":"<p>[jvm]\\ open override fun releaseAll()</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/request-lease/","title":"requestLease - Misk","text":"<p>//wisp-lease-testing/wisp.lease/FakeLeaseManager/requestLease</p>"},{"location":"0.x/wisp-lease-testing/wisp-lease-testing/wisp.lease/-fake-lease-manager/request-lease/#requestlease","title":"requestLease","text":"<p>[jvm]\\ open override fun requestLease(name: String): Lease</p>"},{"location":"0.x/wisp-logging/","title":"wisp-logging - Misk","text":"<p>//wisp-logging</p>"},{"location":"0.x/wisp-logging/#wisp-logging","title":"wisp-logging","text":""},{"location":"0.x/wisp-logging/#packages","title":"Packages","text":"Name wisp.logging"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/","title":"Package wisp.logging - Misk","text":"<p>//wisp-logging/wisp.logging</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/#package-wisplogging","title":"Package wisp.logging","text":""},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/#types","title":"Types","text":"Name Summary SampledLogger [jvm]open class SampledLogger(underlyingLogger: KLogger, sampler: Sampler) : KLogger Tag [jvm]typealias Tag = Pair&lt;String, Any?&gt;"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/#functions","title":"Functions","text":"Name Summary debug [jvm]fun KLogger.debug(vararg tags: Tag, message: () -&gt; Any?)fun KLogger.debug(th: Throwable, vararg tags: Tag, message: () -&gt; Any?) error [jvm]fun KLogger.error(vararg tags: Tag, message: () -&gt; Any?)fun KLogger.error(th: Throwable, vararg tags: Tag, message: () -&gt; Any?) getLogger [jvm]inline fun &lt;T&gt; getLogger(): KLogger info [jvm]fun KLogger.info(vararg tags: Tag, message: () -&gt; Any?)fun KLogger.info(th: Throwable, vararg tags: Tag, message: () -&gt; Any?) log [jvm]fun KLogger.log(level: Level, vararg tags: Tag, message: () -&gt; Any?)fun KLogger.log(level: Level, th: Throwable, vararg tags: Tag, message: () -&gt; Any?) sampled [jvm]fun KLogger.sampled(sampler: Sampler = Sampler.rateLimiting(1L)): KLoggerReturns a logger that samples logs. This logger MUST be instantiated statically, in a companion object or as a Singleton. trace [jvm]fun KLogger.trace(vararg tags: Tag, message: () -&gt; Any?)fun KLogger.trace(th: Throwable, vararg tags: Tag, message: () -&gt; Any?) warn [jvm]fun KLogger.warn(vararg tags: Tag, message: () -&gt; Any?)fun KLogger.warn(th: Throwable, vararg tags: Tag, message: () -&gt; Any?) withTags [jvm]fun withTags(vararg tags: Tag, f: () -&gt; Unit)"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/debug/","title":"debug - Misk","text":"<p>//wisp-logging/wisp.logging/debug</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/debug/#debug","title":"debug","text":"<p>[jvm]\\ fun KLogger.debug(vararg tags: Tag, message: () -&gt; Any?)</p> <p>fun KLogger.debug(th: Throwable, vararg tags: Tag, message: () -&gt; Any?)</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/error/","title":"error - Misk","text":"<p>//wisp-logging/wisp.logging/error</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/error/#error","title":"error","text":"<p>[jvm]\\ fun KLogger.error(vararg tags: Tag, message: () -&gt; Any?)</p> <p>fun KLogger.error(th: Throwable, vararg tags: Tag, message: () -&gt; Any?)</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/get-logger/","title":"getLogger - Misk","text":"<p>//wisp-logging/wisp.logging/getLogger</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/get-logger/#getlogger","title":"getLogger","text":"<p>[jvm]\\ inline fun &lt;T&gt; getLogger(): KLogger</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/info/","title":"info - Misk","text":"<p>//wisp-logging/wisp.logging/info</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/info/#info","title":"info","text":"<p>[jvm]\\ fun KLogger.info(vararg tags: Tag, message: () -&gt; Any?)</p> <p>fun KLogger.info(th: Throwable, vararg tags: Tag, message: () -&gt; Any?)</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/log/","title":"log - Misk","text":"<p>//wisp-logging/wisp.logging/log</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/log/#log","title":"log","text":"<p>[jvm]\\ fun KLogger.log(level: Level, vararg tags: Tag, message: () -&gt; Any?)</p> <p>fun KLogger.log(level: Level, th: Throwable, vararg tags: Tag, message: () -&gt; Any?)</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/sampled/","title":"sampled - Misk","text":"<p>//wisp-logging/wisp.logging/sampled</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/sampled/#sampled","title":"sampled","text":"<p>[jvm]\\ fun KLogger.sampled(sampler: Sampler = Sampler.rateLimiting(1L)): KLogger</p> <p>Returns a logger that samples logs. This logger MUST be instantiated statically, in a companion object or as a Singleton.</p> <p>To use default sampler (rate limited to 1 log per second):</p> <p>val logger = getLogger&lt;MyClass&gt;().sampled()</p> <p>To get a rate limited logger:</p> <p>val logger = getLogger&lt;MyClass&gt;().sampled((Sampler.rateLimiting(RATE_PER_SECOND))</p> <p>To get a probabilistic sampler</p> <p>val logger = getLogger&lt;MyClass&gt;().sampled(Sampler.percentage(PERCENTAGE_TO_ALLOW))</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/sampled/#return","title":"Return","text":"<p>wrapped logger instance</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/sampled/#parameters","title":"Parameters","text":"<p>jvm</p> sampler Sampler to use to sample logs"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/trace/","title":"trace - Misk","text":"<p>//wisp-logging/wisp.logging/trace</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/trace/#trace","title":"trace","text":"<p>[jvm]\\ fun KLogger.trace(vararg tags: Tag, message: () -&gt; Any?)</p> <p>fun KLogger.trace(th: Throwable, vararg tags: Tag, message: () -&gt; Any?)</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/warn/","title":"warn - Misk","text":"<p>//wisp-logging/wisp.logging/warn</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/warn/#warn","title":"warn","text":"<p>[jvm]\\ fun KLogger.warn(vararg tags: Tag, message: () -&gt; Any?)</p> <p>fun KLogger.warn(th: Throwable, vararg tags: Tag, message: () -&gt; Any?)</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/with-tags/","title":"withTags - Misk","text":"<p>//wisp-logging/wisp.logging/withTags</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/with-tags/#withtags","title":"withTags","text":"<p>[jvm]\\ fun withTags(vararg tags: Tag, f: () -&gt; Unit)</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/","title":"SampledLogger - Misk","text":"<p>//wisp-logging/wisp.logging/SampledLogger</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/#sampledlogger","title":"SampledLogger","text":"<p>[jvm]\\ open class SampledLogger(underlyingLogger: KLogger, sampler: Sampler) : KLogger</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/#functions","title":"Functions","text":"Name Summary atDebug [jvm]@CheckReturnValueopen fun atDebug(): LoggingEventBuilder atError [jvm]@CheckReturnValueopen fun atError(): LoggingEventBuilder atInfo [jvm]@CheckReturnValueopen fun atInfo(): LoggingEventBuilder atLevel [jvm]@CheckReturnValueopen fun atLevel(p0: Level): LoggingEventBuilder atTrace [jvm]@CheckReturnValueopen fun atTrace(): LoggingEventBuilder atWarn [jvm]@CheckReturnValueopen fun atWarn(): LoggingEventBuilder catching [jvm]open override fun &lt;T : Throwable&gt; catching(throwable: T) debug [jvm]open override fun debug(msg: () -&gt; Any?)open override fun debug(msg: String?)open override fun debug(format: String?, arg: Any?)open override fun debug(format: String?, vararg arguments: Any?)open override fun debug(msg: String?, t: Throwable?)open override fun debug(t: Throwable?, msg: () -&gt; Any?)open override fun debug(marker: Marker?, msg: () -&gt; Any?)open override fun debug(marker: Marker?, msg: String?)open override fun debug(format: String?, arg1: Any?, arg2: Any?)open override fun debug(marker: Marker?, format: String?, arg: Any?)open override fun debug(marker: Marker?, format: String?, vararg arguments: Any?)open override fun debug(marker: Marker?, msg: String?, t: Throwable?)open override fun debug(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)open override fun debug(marker: Marker?, format: String?, arg1: Any?, arg2: Any?) entry [jvm]open override fun entry(vararg argArray: Any?) error [jvm]open override fun error(msg: () -&gt; Any?)open override fun error(msg: String?)open override fun error(format: String?, arg: Any?)open override fun error(format: String?, vararg arguments: Any?)open override fun error(msg: String?, t: Throwable?)open override fun error(t: Throwable?, msg: () -&gt; Any?)open override fun error(marker: Marker?, msg: () -&gt; Any?)open override fun error(marker: Marker?, msg: String?)open override fun error(format: String?, arg1: Any?, arg2: Any?)open override fun error(marker: Marker?, format: String?, arg: Any?)open override fun error(marker: Marker?, format: String?, vararg arguments: Any?)open override fun error(marker: Marker?, msg: String?, t: Throwable?)open override fun error(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)open override fun error(marker: Marker?, format: String?, arg1: Any?, arg2: Any?) exit [jvm]open override fun exit()open override fun &lt;T&gt; exit(result: T): T getName [jvm]open override fun getName(): String info [jvm]open override fun info(msg: () -&gt; Any?)open override fun info(msg: String?)open override fun info(format: String?, arg: Any?)open override fun info(format: String?, vararg arguments: Any?)open override fun info(msg: String?, t: Throwable?)open override fun info(t: Throwable?, msg: () -&gt; Any?)open override fun info(marker: Marker?, msg: () -&gt; Any?)open override fun info(marker: Marker?, msg: String?)open override fun info(format: String?, arg1: Any?, arg2: Any?)open override fun info(marker: Marker?, format: String?, arg: Any?)open override fun info(marker: Marker?, format: String?, vararg arguments: Any?)open override fun info(marker: Marker?, msg: String?, t: Throwable?)open override fun info(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)open override fun info(marker: Marker?, format: String?, arg1: Any?, arg2: Any?) isDebugEnabled [jvm]open override fun isDebugEnabled(): Booleanopen override fun isDebugEnabled(p0: Marker): Boolean isEnabledForLevel [jvm]open fun isEnabledForLevel(p0: Level): Boolean isErrorEnabled [jvm]open override fun isErrorEnabled(): Booleanopen override fun isErrorEnabled(p0: Marker): Boolean isInfoEnabled [jvm]open override fun isInfoEnabled(): Booleanopen override fun isInfoEnabled(p0: Marker): Boolean isTraceEnabled [jvm]open override fun isTraceEnabled(): Booleanopen override fun isTraceEnabled(p0: Marker): Boolean isWarnEnabled [jvm]open override fun isWarnEnabled(): Booleanopen override fun isWarnEnabled(p0: Marker): Boolean makeLoggingEventBuilder [jvm]open fun makeLoggingEventBuilder(p0: Level): LoggingEventBuilder throwing [jvm]open override fun &lt;T : Throwable&gt; throwing(throwable: T): T trace [jvm]open override fun trace(msg: () -&gt; Any?)open override fun trace(msg: String?)open override fun trace(format: String?, arg: Any?)open override fun trace(format: String?, vararg arguments: Any?)open override fun trace(msg: String?, t: Throwable?)open override fun trace(t: Throwable?, msg: () -&gt; Any?)open override fun trace(marker: Marker?, msg: () -&gt; Any?)open override fun trace(marker: Marker?, msg: String?)open override fun trace(format: String?, arg1: Any?, arg2: Any?)open override fun trace(marker: Marker?, format: String?, arg: Any?)open override fun trace(marker: Marker?, format: String?, vararg argArray: Any?)open override fun trace(marker: Marker?, msg: String?, t: Throwable?)open override fun trace(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)open override fun trace(marker: Marker?, format: String?, arg1: Any?, arg2: Any?) warn [jvm]open override fun warn(msg: () -&gt; Any?)open override fun warn(msg: String?)open override fun warn(format: String?, arg: Any?)open override fun warn(format: String?, vararg arguments: Any?)open override fun warn(msg: String?, t: Throwable?)open override fun warn(t: Throwable?, msg: () -&gt; Any?)open override fun warn(marker: Marker?, msg: () -&gt; Any?)open override fun warn(marker: Marker?, msg: String?)open override fun warn(format: String?, arg1: Any?, arg2: Any?)open override fun warn(marker: Marker?, format: String?, arg: Any?)open override fun warn(marker: Marker?, format: String?, vararg arguments: Any?)open override fun warn(marker: Marker?, msg: String?, t: Throwable?)open override fun warn(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)open override fun warn(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/#properties","title":"Properties","text":"Name Summary underlyingLogger [jvm]open override val underlyingLogger: KLogger"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/-sampled-logger/","title":"SampledLogger - Misk","text":"<p>//wisp-logging/wisp.logging/SampledLogger/SampledLogger</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/-sampled-logger/#sampledlogger","title":"SampledLogger","text":"<p>[jvm]\\ fun SampledLogger(underlyingLogger: KLogger, sampler: Sampler)</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/debug/","title":"debug - Misk","text":"<p>//wisp-logging/wisp.logging/SampledLogger/debug</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/debug/#debug","title":"debug","text":"<p>[jvm]\\ open override fun debug(msg: () -&gt; Any?)</p> <p>open override fun debug(t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun debug(marker: Marker?, msg: () -&gt; Any?)</p> <p>open override fun debug(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun debug(msg: String?)</p> <p>open override fun debug(format: String?, arg: Any?)</p> <p>open override fun debug(format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun debug(format: String?, vararg arguments: Any?)</p> <p>open override fun debug(msg: String?, t: Throwable?)</p> <p>open override fun debug(marker: Marker?, msg: String?)</p> <p>open override fun debug(marker: Marker?, format: String?, arg: Any?)</p> <p>open override fun debug(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun debug(marker: Marker?, format: String?, vararg arguments: Any?)</p> <p>open override fun debug(marker: Marker?, msg: String?, t: Throwable?)</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/error/","title":"error - Misk","text":"<p>//wisp-logging/wisp.logging/SampledLogger/error</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/error/#error","title":"error","text":"<p>[jvm]\\ open override fun error(msg: () -&gt; Any?)</p> <p>open override fun error(t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun error(marker: Marker?, msg: () -&gt; Any?)</p> <p>open override fun error(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun error(msg: String?)</p> <p>open override fun error(format: String?, arg: Any?)</p> <p>open override fun error(format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun error(format: String?, vararg arguments: Any?)</p> <p>open override fun error(msg: String?, t: Throwable?)</p> <p>open override fun error(marker: Marker?, msg: String?)</p> <p>open override fun error(marker: Marker?, format: String?, arg: Any?)</p> <p>open override fun error(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun error(marker: Marker?, format: String?, vararg arguments: Any?)</p> <p>open override fun error(marker: Marker?, msg: String?, t: Throwable?)</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/info/","title":"info - Misk","text":"<p>//wisp-logging/wisp.logging/SampledLogger/info</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/info/#info","title":"info","text":"<p>[jvm]\\ open override fun info(msg: () -&gt; Any?)</p> <p>open override fun info(t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun info(marker: Marker?, msg: () -&gt; Any?)</p> <p>open override fun info(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun info(msg: String?)</p> <p>open override fun info(format: String?, arg: Any?)</p> <p>open override fun info(format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun info(format: String?, vararg arguments: Any?)</p> <p>open override fun info(msg: String?, t: Throwable?)</p> <p>open override fun info(marker: Marker?, msg: String?)</p> <p>open override fun info(marker: Marker?, format: String?, arg: Any?)</p> <p>open override fun info(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun info(marker: Marker?, format: String?, vararg arguments: Any?)</p> <p>open override fun info(marker: Marker?, msg: String?, t: Throwable?)</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/trace/","title":"trace - Misk","text":"<p>//wisp-logging/wisp.logging/SampledLogger/trace</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/trace/#trace","title":"trace","text":"<p>[jvm]\\ open override fun trace(msg: () -&gt; Any?)</p> <p>open override fun trace(t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun trace(marker: Marker?, msg: () -&gt; Any?)</p> <p>open override fun trace(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun trace(msg: String?)</p> <p>open override fun trace(format: String?, arg: Any?)</p> <p>open override fun trace(format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun trace(format: String?, vararg arguments: Any?)</p> <p>open override fun trace(msg: String?, t: Throwable?)</p> <p>open override fun trace(marker: Marker?, msg: String?)</p> <p>open override fun trace(marker: Marker?, format: String?, arg: Any?)</p> <p>open override fun trace(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun trace(marker: Marker?, format: String?, vararg argArray: Any?)</p> <p>open override fun trace(marker: Marker?, msg: String?, t: Throwable?)</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/underlying-logger/","title":"underlyingLogger - Misk","text":"<p>//wisp-logging/wisp.logging/SampledLogger/underlyingLogger</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/underlying-logger/#underlyinglogger","title":"underlyingLogger","text":"<p>[jvm]\\ open override val underlyingLogger: KLogger</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/warn/","title":"warn - Misk","text":"<p>//wisp-logging/wisp.logging/SampledLogger/warn</p>"},{"location":"0.x/wisp-logging/wisp-logging/wisp.logging/-sampled-logger/warn/#warn","title":"warn","text":"<p>[jvm]\\ open override fun warn(msg: () -&gt; Any?)</p> <p>open override fun warn(t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun warn(marker: Marker?, msg: () -&gt; Any?)</p> <p>open override fun warn(marker: Marker?, t: Throwable?, msg: () -&gt; Any?)</p> <p>open override fun warn(msg: String?)</p> <p>open override fun warn(format: String?, arg: Any?)</p> <p>open override fun warn(format: String?, vararg arguments: Any?)</p> <p>open override fun warn(format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun warn(msg: String?, t: Throwable?)</p> <p>open override fun warn(marker: Marker?, msg: String?)</p> <p>open override fun warn(marker: Marker?, format: String?, arg: Any?)</p> <p>open override fun warn(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)</p> <p>open override fun warn(marker: Marker?, format: String?, vararg arguments: Any?)</p> <p>open override fun warn(marker: Marker?, msg: String?, t: Throwable?)</p>"},{"location":"0.x/wisp-logging-testing/","title":"wisp-logging-testing - Misk","text":"<p>//wisp-logging-testing</p>"},{"location":"0.x/wisp-logging-testing/#wisp-logging-testing","title":"wisp-logging-testing","text":""},{"location":"0.x/wisp-logging-testing/#packages","title":"Packages","text":"Name org.assertj.core.api wisp.logging"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/org.assertj.core.api/","title":"Package org.assertj.core.api - Misk","text":"<p>//wisp-logging-testing/org.assertj.core.api</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/org.assertj.core.api/#package-orgassertjcoreapi","title":"Package org.assertj.core.api","text":""},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/org.assertj.core.api/#functions","title":"Functions","text":"Name Summary assertOrdering [jvm]fun &lt;A : Comparable&lt;A&gt;&gt; assertOrdering(vararg values: A) containsExactly [jvm]inline fun &lt;KEY, VALUE&gt; MapAssert&lt;KEY, VALUE&gt;.containsExactly(vararg p: Pair&lt;KEY, VALUE&gt;): MapAssert&lt;KEY, VALUE&gt; isEqualToAsJson [jvm]fun &lt;ACTUAL : CharSequence&gt; AbstractCharSequenceAssert&lt;, ACTUAL&gt;.isEqualToAsJson(expected: CharSequence): AbstractCharSequenceAssert&lt;, ACTUAL&gt;"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/org.assertj.core.api/assert-ordering/","title":"assertOrdering - Misk","text":"<p>//wisp-logging-testing/org.assertj.core.api/assertOrdering</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/org.assertj.core.api/assert-ordering/#assertordering","title":"assertOrdering","text":"<p>[jvm]\\ fun &lt;A : Comparable&lt;A&gt;&gt; assertOrdering(vararg values: A)</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/org.assertj.core.api/contains-exactly/","title":"containsExactly - Misk","text":"<p>//wisp-logging-testing/org.assertj.core.api/containsExactly</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/org.assertj.core.api/contains-exactly/#containsexactly","title":"containsExactly","text":"<p>[jvm]\\ inline fun &lt;KEY, VALUE&gt; MapAssert&lt;KEY, VALUE&gt;.containsExactly(vararg p: Pair&lt;KEY, VALUE&gt;): MapAssert&lt;KEY, VALUE&gt;</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/org.assertj.core.api/is-equal-to-as-json/","title":"isEqualToAsJson - Misk","text":"<p>//wisp-logging-testing/org.assertj.core.api/isEqualToAsJson</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/org.assertj.core.api/is-equal-to-as-json/#isequaltoasjson","title":"isEqualToAsJson","text":"<p>[jvm]\\ fun &lt;ACTUAL : CharSequence&gt; AbstractCharSequenceAssert&lt;, ACTUAL&gt;.isEqualToAsJson(expected: CharSequence): AbstractCharSequenceAssert&lt;, ACTUAL&gt;</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/","title":"Package wisp.logging - Misk","text":"<p>//wisp-logging-testing/wisp.logging</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/#package-wisplogging","title":"Package wisp.logging","text":""},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/#types","title":"Types","text":"Name Summary LogCollector [jvm]interface LogCollectorCollects log messages, so they may be asserted on for testing. WispQueuedLogCollector [jvm]class WispQueuedLogCollector : LogCollector"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-log-collector/","title":"LogCollector - Misk","text":"<p>//wisp-logging-testing/wisp.logging/LogCollector</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-log-collector/#logcollector","title":"LogCollector","text":"<p>[jvm]\\ interface LogCollector</p> <p>Collects log messages, so they may be asserted on for testing.</p> <p>Use the optional parameters of takeMessages to constrain which log messages are returned.</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-log-collector/#functions","title":"Functions","text":"Name Summary takeEvent [jvm]abstract fun takeEvent(loggerClass: KClass&lt;&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null): ILoggingEventWaits until a matching event is logged, and returns it. The returned event and all preceding events are also removed.[jvm]abstract fun takeEvent(loggerClass: KClass&lt;&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null, consumeUnmatchedLogs: Boolean = false): ILoggingEventTake the first matching event, optionally leaving unmatched logs in this collector. takeEvents [jvm]abstract fun takeEvents(loggerClass: KClass&lt;&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null): List&lt;ILoggingEvent&gt;Removes all currently-collected log events and returns those that match the requested criteria.[jvm]abstract fun takeEvents(loggerClass: KClass&lt;&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null, consumeUnmatchedLogs: Boolean = false): List&lt;ILoggingEvent&gt;Takes all matching events, optionally leaving unmatched logs in this collector. takeMessage [jvm]abstract fun takeMessage(loggerClass: KClass&lt;&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null): StringWaits until a matching event is logged, and returns its message. The returned event and all preceding events are also removed.[jvm]abstract fun takeMessage(loggerClass: KClass&lt;&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null, consumeUnmatchedLogs: Boolean = false): StringTakes the first matching message, optionally leaving unmatched logs in this collector. takeMessages [jvm]abstract fun takeMessages(loggerClass: KClass&lt;&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null): List&lt;String&gt;Removes all currently-collected log messages and returns those that match the requested criteria.[jvm]abstract fun takeMessages(loggerClass: KClass&lt;&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null, consumeUnmatchedLogs: Boolean = false): List&lt;String&gt;Takes all matching messages, optionally leaving unmatched logs in this collector."},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-log-collector/#inheritors","title":"Inheritors","text":"Name WispQueuedLogCollector"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-log-collector/take-event/","title":"takeEvent - Misk","text":"<p>//wisp-logging-testing/wisp.logging/LogCollector/takeEvent</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-log-collector/take-event/#takeevent","title":"takeEvent","text":"<p>[jvm]\\ abstract fun takeEvent(loggerClass: KClass&lt;*&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null): ILoggingEvent</p> <p>Waits until a matching event is logged, and returns it. The returned event and all preceding events are also removed.</p> <p>[jvm]\\ abstract fun takeEvent(loggerClass: KClass&lt;*&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null, consumeUnmatchedLogs: Boolean = false): ILoggingEvent</p> <p>Take the first matching event, optionally leaving unmatched logs in this collector.</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-log-collector/take-events/","title":"takeEvents - Misk","text":"<p>//wisp-logging-testing/wisp.logging/LogCollector/takeEvents</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-log-collector/take-events/#takeevents","title":"takeEvents","text":"<p>[jvm]\\ abstract fun takeEvents(loggerClass: KClass&lt;*&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null): List&lt;ILoggingEvent&gt;</p> <p>Removes all currently-collected log events and returns those that match the requested criteria.</p> <p>[jvm]\\ abstract fun takeEvents(loggerClass: KClass&lt;*&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null, consumeUnmatchedLogs: Boolean = false): List&lt;ILoggingEvent&gt;</p> <p>Takes all matching events, optionally leaving unmatched logs in this collector.</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-log-collector/take-message/","title":"takeMessage - Misk","text":"<p>//wisp-logging-testing/wisp.logging/LogCollector/takeMessage</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-log-collector/take-message/#takemessage","title":"takeMessage","text":"<p>[jvm]\\ abstract fun takeMessage(loggerClass: KClass&lt;*&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null): String</p> <p>Waits until a matching event is logged, and returns its message. The returned event and all preceding events are also removed.</p> <p>[jvm]\\ abstract fun takeMessage(loggerClass: KClass&lt;*&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null, consumeUnmatchedLogs: Boolean = false): String</p> <p>Takes the first matching message, optionally leaving unmatched logs in this collector.</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-log-collector/take-messages/","title":"takeMessages - Misk","text":"<p>//wisp-logging-testing/wisp.logging/LogCollector/takeMessages</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-log-collector/take-messages/#takemessages","title":"takeMessages","text":"<p>[jvm]\\ abstract fun takeMessages(loggerClass: KClass&lt;*&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null): List&lt;String&gt;</p> <p>Removes all currently-collected log messages and returns those that match the requested criteria.</p> <p>[jvm]\\ abstract fun takeMessages(loggerClass: KClass&lt;*&gt;? = null, minLevel: Level = Level.INFO, pattern: Regex? = null, consumeUnmatchedLogs: Boolean = false): List&lt;String&gt;</p> <p>Takes all matching messages, optionally leaving unmatched logs in this collector.</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/","title":"WispQueuedLogCollector - Misk","text":"<p>//wisp-logging-testing/wisp.logging/WispQueuedLogCollector</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/#wispqueuedlogcollector","title":"WispQueuedLogCollector","text":"<p>[jvm]\\ class WispQueuedLogCollector : LogCollector</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/#functions","title":"Functions","text":"Name Summary shutDown [jvm]fun shutDown() startUp [jvm]fun startUp() takeEvent [jvm]open override fun takeEvent(loggerClass: KClass&lt;&gt;?, minLevel: Level, pattern: Regex?): ILoggingEventWaits until a matching event is logged, and returns it. The returned event and all preceding events are also removed.[jvm]open override fun takeEvent(loggerClass: KClass&lt;&gt;?, minLevel: Level, pattern: Regex?, consumeUnmatchedLogs: Boolean): ILoggingEventTake the first matching event, optionally leaving unmatched logs in this collector. takeEvents [jvm]open override fun takeEvents(loggerClass: KClass&lt;&gt;?, minLevel: Level, pattern: Regex?): List&lt;ILoggingEvent&gt;Removes all currently-collected log events and returns those that match the requested criteria.[jvm]open override fun takeEvents(loggerClass: KClass&lt;&gt;?, minLevel: Level, pattern: Regex?, consumeUnmatchedLogs: Boolean): List&lt;ILoggingEvent&gt;Takes all matching events, optionally leaving unmatched logs in this collector. takeMessage [jvm]open override fun takeMessage(loggerClass: KClass&lt;&gt;?, minLevel: Level, pattern: Regex?): StringWaits until a matching event is logged, and returns its message. The returned event and all preceding events are also removed.[jvm]open override fun takeMessage(loggerClass: KClass&lt;&gt;?, minLevel: Level, pattern: Regex?, consumeUnmatchedLogs: Boolean): StringTakes the first matching message, optionally leaving unmatched logs in this collector. takeMessages [jvm]open override fun takeMessages(loggerClass: KClass&lt;&gt;?, minLevel: Level, pattern: Regex?): List&lt;String&gt;Removes all currently-collected log messages and returns those that match the requested criteria.[jvm]open override fun takeMessages(loggerClass: KClass&lt;&gt;?, minLevel: Level, pattern: Regex?, consumeUnmatchedLogs: Boolean): List&lt;String&gt;Takes all matching messages, optionally leaving unmatched logs in this collector."},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/-wisp-queued-log-collector/","title":"WispQueuedLogCollector - Misk","text":"<p>//wisp-logging-testing/wisp.logging/WispQueuedLogCollector/WispQueuedLogCollector</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/-wisp-queued-log-collector/#wispqueuedlogcollector","title":"WispQueuedLogCollector","text":"<p>[jvm]\\ fun WispQueuedLogCollector()</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/shut-down/","title":"shutDown - Misk","text":"<p>//wisp-logging-testing/wisp.logging/WispQueuedLogCollector/shutDown</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/shut-down/#shutdown","title":"shutDown","text":"<p>[jvm]\\ fun shutDown()</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/start-up/","title":"startUp - Misk","text":"<p>//wisp-logging-testing/wisp.logging/WispQueuedLogCollector/startUp</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/start-up/#startup","title":"startUp","text":"<p>[jvm]\\ fun startUp()</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-event/","title":"takeEvent - Misk","text":"<p>//wisp-logging-testing/wisp.logging/WispQueuedLogCollector/takeEvent</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-event/#takeevent","title":"takeEvent","text":"<p>[jvm]\\ open override fun takeEvent(loggerClass: KClass&lt;*&gt;?, minLevel: Level, pattern: Regex?): ILoggingEvent</p> <p>Waits until a matching event is logged, and returns it. The returned event and all preceding events are also removed.</p> <p>[jvm]\\ open override fun takeEvent(loggerClass: KClass&lt;*&gt;?, minLevel: Level, pattern: Regex?, consumeUnmatchedLogs: Boolean): ILoggingEvent</p> <p>Take the first matching event, optionally leaving unmatched logs in this collector.</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-events/","title":"takeEvents - Misk","text":"<p>//wisp-logging-testing/wisp.logging/WispQueuedLogCollector/takeEvents</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-events/#takeevents","title":"takeEvents","text":"<p>[jvm]\\ open override fun takeEvents(loggerClass: KClass&lt;*&gt;?, minLevel: Level, pattern: Regex?): List&lt;ILoggingEvent&gt;</p> <p>Removes all currently-collected log events and returns those that match the requested criteria.</p> <p>[jvm]\\ open override fun takeEvents(loggerClass: KClass&lt;*&gt;?, minLevel: Level, pattern: Regex?, consumeUnmatchedLogs: Boolean): List&lt;ILoggingEvent&gt;</p> <p>Takes all matching events, optionally leaving unmatched logs in this collector.</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-message/","title":"takeMessage - Misk","text":"<p>//wisp-logging-testing/wisp.logging/WispQueuedLogCollector/takeMessage</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-message/#takemessage","title":"takeMessage","text":"<p>[jvm]\\ open override fun takeMessage(loggerClass: KClass&lt;*&gt;?, minLevel: Level, pattern: Regex?): String</p> <p>Waits until a matching event is logged, and returns its message. The returned event and all preceding events are also removed.</p> <p>[jvm]\\ open override fun takeMessage(loggerClass: KClass&lt;*&gt;?, minLevel: Level, pattern: Regex?, consumeUnmatchedLogs: Boolean): String</p> <p>Takes the first matching message, optionally leaving unmatched logs in this collector.</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-messages/","title":"takeMessages - Misk","text":"<p>//wisp-logging-testing/wisp.logging/WispQueuedLogCollector/takeMessages</p>"},{"location":"0.x/wisp-logging-testing/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-messages/#takemessages","title":"takeMessages","text":"<p>[jvm]\\ open override fun takeMessages(loggerClass: KClass&lt;*&gt;?, minLevel: Level, pattern: Regex?): List&lt;String&gt;</p> <p>Removes all currently-collected log messages and returns those that match the requested criteria.</p> <p>[jvm]\\ open override fun takeMessages(loggerClass: KClass&lt;*&gt;?, minLevel: Level, pattern: Regex?, consumeUnmatchedLogs: Boolean): List&lt;String&gt;</p> <p>Takes all matching messages, optionally leaving unmatched logs in this collector.</p>"},{"location":"0.x/wisp-moshi/","title":"wisp-moshi - Misk","text":"<p>//wisp-moshi</p>"},{"location":"0.x/wisp-moshi/#wisp-moshi","title":"wisp-moshi","text":""},{"location":"0.x/wisp-moshi/#packages","title":"Packages","text":"Name wisp.moshi"},{"location":"0.x/wisp-moshi/wisp-moshi/wisp.moshi/","title":"Package wisp.moshi - Misk","text":"<p>//wisp-moshi/wisp.moshi</p>"},{"location":"0.x/wisp-moshi/wisp-moshi/wisp.moshi/#package-wispmoshi","title":"Package wisp.moshi","text":""},{"location":"0.x/wisp-moshi/wisp-moshi/wisp.moshi/#functions","title":"Functions","text":"Name Summary adapter [jvm]inline fun &lt;T&gt; Moshi.adapter(): &lt;ERROR CLASS&gt; buildMoshi [jvm]@JvmOverloadsfun buildMoshi(jsonAdapters: List&lt;Any&gt;, jsonLastAdapters: List&lt;Any&gt; = emptyList()): Moshi"},{"location":"0.x/wisp-moshi/wisp-moshi/wisp.moshi/#properties","title":"Properties","text":"Name Summary defaultKotlinMoshi [jvm]val defaultKotlinMoshi: MoshiDefault build for Moshi using the Kotlin JSON adapter"},{"location":"0.x/wisp-moshi/wisp-moshi/wisp.moshi/adapter/","title":"adapter - Misk","text":"<p>//wisp-moshi/wisp.moshi/adapter</p>"},{"location":"0.x/wisp-moshi/wisp-moshi/wisp.moshi/adapter/#adapter","title":"adapter","text":"<p>[jvm]\\ inline fun &lt;T&gt; Moshi.adapter(): &lt;ERROR CLASS&gt;</p>"},{"location":"0.x/wisp-moshi/wisp-moshi/wisp.moshi/build-moshi/","title":"buildMoshi - Misk","text":"<p>//wisp-moshi/wisp.moshi/buildMoshi</p>"},{"location":"0.x/wisp-moshi/wisp-moshi/wisp.moshi/build-moshi/#buildmoshi","title":"buildMoshi","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun buildMoshi(jsonAdapters: List&lt;Any&gt;, jsonLastAdapters: List&lt;Any&gt; = emptyList()): Moshi</p>"},{"location":"0.x/wisp-moshi/wisp-moshi/wisp.moshi/default-kotlin-moshi/","title":"defaultKotlinMoshi - Misk","text":"<p>//wisp-moshi/wisp.moshi/defaultKotlinMoshi</p>"},{"location":"0.x/wisp-moshi/wisp-moshi/wisp.moshi/default-kotlin-moshi/#defaultkotlinmoshi","title":"defaultKotlinMoshi","text":"<p>[jvm]\\ val defaultKotlinMoshi: Moshi</p> <p>Default build for Moshi using the Kotlin JSON adapter</p>"},{"location":"0.x/wisp-resource-loader/","title":"wisp-resource-loader - Misk","text":"<p>//wisp-resource-loader</p>"},{"location":"0.x/wisp-resource-loader/#wisp-resource-loader","title":"wisp-resource-loader","text":""},{"location":"0.x/wisp-resource-loader/#packages","title":"Packages","text":"Name wisp.resources"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/","title":"Package wisp.resources - Misk","text":"<p>//wisp-resource-loader/wisp.resources</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/#package-wispresources","title":"Package wisp.resources","text":""},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/#types","title":"Types","text":"Name Summary ClasspathResourceLoaderBackend [jvm]object ClasspathResourceLoaderBackend : ResourceLoader.BackendRead-only resources that are fetched from either the deployed .jar file or the local filesystem. FilesystemLoaderBackend [jvm]object FilesystemLoaderBackend : ResourceLoader.BackendRead-only resources that are fetched from the local filesystem using absolute paths. MemoryResourceLoaderBackend [jvm]class MemoryResourceLoaderBackend : ResourceLoader.BackendRead-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend. ResourceLoader [jvm]open class ResourceLoader(backends: Map&lt;String, ResourceLoader.Backend&gt;)ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source."},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/","title":"ClasspathResourceLoaderBackend - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ClasspathResourceLoaderBackend</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/#classpathresourceloaderbackend","title":"ClasspathResourceLoaderBackend","text":"<p>[jvm]\\ object ClasspathResourceLoaderBackend : ResourceLoader.Backend</p> <p>Read-only resources that are fetched from either the deployed .jar file or the local filesystem.</p> <p>This uses the scheme classpath:.</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/#functions","title":"Functions","text":"Name Summary all [jvm]open fun all(): Set&lt;String&gt; exists [jvm]open override fun exists(path: String): Boolean list [jvm]open override fun list(path: String): List&lt;String&gt; open [jvm]open override fun open(path: String): BufferedSource? put [jvm]open fun put(path: String, data: ByteString) unwatch [jvm]open fun unwatch(path: String) watch [jvm]open fun watch(path: String, resourceChangedListener: (address: String) -&gt; Unit)"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/#properties","title":"Properties","text":"Name Summary SCHEME [jvm]const val SCHEME: String"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/-s-c-h-e-m-e/","title":"SCHEME - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ClasspathResourceLoaderBackend/SCHEME</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/-s-c-h-e-m-e/#scheme","title":"SCHEME","text":"<p>[jvm]\\ const val SCHEME: String</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/exists/","title":"exists - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ClasspathResourceLoaderBackend/exists</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/exists/#exists","title":"exists","text":"<p>[jvm]\\ open override fun exists(path: String): Boolean</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/list/","title":"list - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ClasspathResourceLoaderBackend/list</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/list/#list","title":"list","text":"<p>[jvm]\\ open override fun list(path: String): List&lt;String&gt;</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/open/","title":"open - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ClasspathResourceLoaderBackend/open</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/open/#open","title":"open","text":"<p>[jvm]\\ open override fun open(path: String): BufferedSource?</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/","title":"FilesystemLoaderBackend - Misk","text":"<p>//wisp-resource-loader/wisp.resources/FilesystemLoaderBackend</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/#filesystemloaderbackend","title":"FilesystemLoaderBackend","text":"<p>[jvm]\\ object FilesystemLoaderBackend : ResourceLoader.Backend</p> <p>Read-only resources that are fetched from the local filesystem using absolute paths.</p> <p>This uses the scheme filesystem:.</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/#functions","title":"Functions","text":"Name Summary all [jvm]open fun all(): Set&lt;String&gt; exists [jvm]open override fun exists(path: String): Boolean list [jvm]open fun list(path: String): List&lt;String&gt; open [jvm]open override fun open(path: String): BufferedSource? put [jvm]open fun put(path: String, data: ByteString) unwatch [jvm]open override fun unwatch(path: String) watch [jvm]open override fun watch(path: String, resourceChangedListener: (address: String) -&gt; Unit)For changes to the file that have been done externally, since this is a read-only ResourceLoader."},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/#properties","title":"Properties","text":"Name Summary SCHEME [jvm]const val SCHEME: String"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/-s-c-h-e-m-e/","title":"SCHEME - Misk","text":"<p>//wisp-resource-loader/wisp.resources/FilesystemLoaderBackend/SCHEME</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/-s-c-h-e-m-e/#scheme","title":"SCHEME","text":"<p>[jvm]\\ const val SCHEME: String</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/exists/","title":"exists - Misk","text":"<p>//wisp-resource-loader/wisp.resources/FilesystemLoaderBackend/exists</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/exists/#exists","title":"exists","text":"<p>[jvm]\\ open override fun exists(path: String): Boolean</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/open/","title":"open - Misk","text":"<p>//wisp-resource-loader/wisp.resources/FilesystemLoaderBackend/open</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/open/#open","title":"open","text":"<p>[jvm]\\ open override fun open(path: String): BufferedSource?</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/unwatch/","title":"unwatch - Misk","text":"<p>//wisp-resource-loader/wisp.resources/FilesystemLoaderBackend/unwatch</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/unwatch/#unwatch","title":"unwatch","text":"<p>[jvm]\\ open override fun unwatch(path: String)</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/watch/","title":"watch - Misk","text":"<p>//wisp-resource-loader/wisp.resources/FilesystemLoaderBackend/watch</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/watch/#watch","title":"watch","text":"<p>[jvm]\\ open override fun watch(path: String, resourceChangedListener: (address: String) -&gt; Unit)</p> <p>For changes to the file that have been done externally, since this is a read-only ResourceLoader.</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/","title":"MemoryResourceLoaderBackend - Misk","text":"<p>//wisp-resource-loader/wisp.resources/MemoryResourceLoaderBackend</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/#memoryresourceloaderbackend","title":"MemoryResourceLoaderBackend","text":"<p>[jvm]\\ class MemoryResourceLoaderBackend : ResourceLoader.Backend</p> <p>Read-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend.</p> <p>This uses the scheme memory:.</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/#constructors","title":"Constructors","text":"MemoryResourceLoaderBackend [jvm]fun MemoryResourceLoaderBackend()"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/#functions","title":"Functions","text":"Name Summary all [jvm]open override fun all(): Set&lt;String&gt; exists [jvm]open override fun exists(path: String): Boolean list [jvm]open fun list(path: String): List&lt;String&gt; open [jvm]open override fun open(path: String): BufferedSource? put [jvm]open override fun put(path: String, data: ByteString) resourceChanged [jvm]fun resourceChanged(scheme: String, path: String) unwatch [jvm]open override fun unwatch(path: String) watch [jvm]open override fun watch(path: String, resourceChangedListener: (address: String) -&gt; Unit)"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/-memory-resource-loader-backend/","title":"MemoryResourceLoaderBackend - Misk","text":"<p>//wisp-resource-loader/wisp.resources/MemoryResourceLoaderBackend/MemoryResourceLoaderBackend</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/-memory-resource-loader-backend/#memoryresourceloaderbackend","title":"MemoryResourceLoaderBackend","text":"<p>[jvm]\\ fun MemoryResourceLoaderBackend()</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/all/","title":"all - Misk","text":"<p>//wisp-resource-loader/wisp.resources/MemoryResourceLoaderBackend/all</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/all/#all","title":"all","text":"<p>[jvm]\\ open override fun all(): Set&lt;String&gt;</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/exists/","title":"exists - Misk","text":"<p>//wisp-resource-loader/wisp.resources/MemoryResourceLoaderBackend/exists</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/exists/#exists","title":"exists","text":"<p>[jvm]\\ open override fun exists(path: String): Boolean</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/open/","title":"open - Misk","text":"<p>//wisp-resource-loader/wisp.resources/MemoryResourceLoaderBackend/open</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/open/#open","title":"open","text":"<p>[jvm]\\ open override fun open(path: String): BufferedSource?</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/put/","title":"put - Misk","text":"<p>//wisp-resource-loader/wisp.resources/MemoryResourceLoaderBackend/put</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/put/#put","title":"put","text":"<p>[jvm]\\ open override fun put(path: String, data: ByteString)</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/resource-changed/","title":"resourceChanged - Misk","text":"<p>//wisp-resource-loader/wisp.resources/MemoryResourceLoaderBackend/resourceChanged</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/resource-changed/#resourcechanged","title":"resourceChanged","text":"<p>[jvm]\\ fun resourceChanged(scheme: String, path: String)</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/unwatch/","title":"unwatch - Misk","text":"<p>//wisp-resource-loader/wisp.resources/MemoryResourceLoaderBackend/unwatch</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/unwatch/#unwatch","title":"unwatch","text":"<p>[jvm]\\ open override fun unwatch(path: String)</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/watch/","title":"watch - Misk","text":"<p>//wisp-resource-loader/wisp.resources/MemoryResourceLoaderBackend/watch</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/watch/#watch","title":"watch","text":"<p>[jvm]\\ open override fun watch(path: String, resourceChangedListener: (address: String) -&gt; Unit)</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/-companion/","title":"Companion - Misk","text":"<p>//wisp-resource-loader/wisp.resources/MemoryResourceLoaderBackend/Companion</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/-companion/#properties","title":"Properties","text":"Name Summary SCHEME [jvm]const val SCHEME: String"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/-companion/-s-c-h-e-m-e/","title":"SCHEME - Misk","text":"<p>//wisp-resource-loader/wisp.resources/MemoryResourceLoaderBackend/Companion/SCHEME</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/-companion/-s-c-h-e-m-e/#scheme","title":"SCHEME","text":"<p>[jvm]\\ const val SCHEME: String</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/","title":"ResourceLoader - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/#resourceloader","title":"ResourceLoader","text":"<p>[jvm]\\ open class ResourceLoader(backends: Map&lt;String, ResourceLoader.Backend&gt;)</p> <p>ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source.</p> <p>Resource addresses have a scheme name, a colon, and an absolute filesystem-like path: classpath:/migrations/v1.sql. Schemes identify backends classpath: or memory:. Paths start with a slash and have any number of segments.</p> <p>Classpath resources use the scheme classpath:. The backend reads data from the src/main/resources of the project\u2019s modules and the contents of all library .jar files. Classpath resources are read-only.</p> <p>Filesystem resources use the scheme filesystem:. The backend reads data from the host machine\u2019s local filesystem. It is read-only and does not support list.</p> <p>Memory resources use the scheme memory:. The backend starts empty and is populated by calls to put.</p> <p>Other backends are permitted. They should be registered with a MapBinder with the backend scheme like classpath: as the key.</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/#constructors","title":"Constructors","text":"ResourceLoader [jvm]fun ResourceLoader(backends: Map&lt;String, ResourceLoader.Backend&gt;)"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/#types","title":"Types","text":"Name Summary Backend [jvm]abstract class Backend Companion [jvm]object Companion"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/#functions","title":"Functions","text":"Name Summary copyTo [jvm]fun copyTo(root: String, dir: Path)Copies all resources with root as a prefix to the directory dir. exists [jvm]fun exists(address: String): BooleanReturns true if a resource at address exists. list [jvm]fun list(address: String): List&lt;String&gt;Returns the full path of the resources that are immediate children of address. open [jvm]fun open(address: String): BufferedSource?Return a buffered source for address, or null if no such resource exists. put [jvm]fun put(address: String, utf8: String)Writes a resource as UTF-8. Throws if the backend is readonly.[jvm]fun put(address: String, data: ByteString)Writes a resource. Throws if the backend is readonly. requireUtf8 [jvm]fun requireUtf8(address: String): StringLike utf8, but throws IllegalStateException if the resource is missing. unwatch [jvm]fun unwatch(address: String) utf8 [jvm]fun utf8(address: String): String?Return the contents of address as a string, or null if no such resource exists. Note that this method decodes the resource on every use. It is the caller\u2019s responsibility to cache the result if it is to be loaded frequently. walk [jvm]fun walk(address: String): List&lt;String&gt; watch [jvm]fun watch(address: String, resourceChangedListener: (address: String) -&gt; Unit)"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-resource-loader/","title":"ResourceLoader - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/ResourceLoader</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-resource-loader/#resourceloader","title":"ResourceLoader","text":"<p>[jvm]\\ fun ResourceLoader(backends: Map&lt;String, ResourceLoader.Backend&gt;)</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/copy-to/","title":"copyTo - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/copyTo</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/copy-to/#copyto","title":"copyTo","text":"<p>[jvm]\\ fun copyTo(root: String, dir: Path)</p> <p>Copies all resources with root as a prefix to the directory dir.</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/exists/","title":"exists - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/exists</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/exists/#exists","title":"exists","text":"<p>[jvm]\\ fun exists(address: String): Boolean</p> <p>Returns true if a resource at address exists.</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/list/","title":"list - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/list</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/list/#list","title":"list","text":"<p>[jvm]\\ fun list(address: String): List&lt;String&gt;</p> <p>Returns the full path of the resources that are immediate children of address.</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/open/","title":"open - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/open</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/open/#open","title":"open","text":"<p>[jvm]\\ fun open(address: String): BufferedSource?</p> <p>Return a buffered source for address, or null if no such resource exists.</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/put/","title":"put - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/put</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/put/#put","title":"put","text":"<p>[jvm]\\ fun put(address: String, utf8: String)</p> <p>Writes a resource as UTF-8. Throws if the backend is readonly.</p> <p>[jvm]\\ fun put(address: String, data: ByteString)</p> <p>Writes a resource. Throws if the backend is readonly.</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/require-utf8/","title":"requireUtf8 - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/requireUtf8</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/require-utf8/#requireutf8","title":"requireUtf8","text":"<p>[jvm]\\ fun requireUtf8(address: String): String</p> <p>Like utf8, but throws IllegalStateException if the resource is missing.</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/unwatch/","title":"unwatch - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/unwatch</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/unwatch/#unwatch","title":"unwatch","text":"<p>[jvm]\\ fun unwatch(address: String)</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/utf8/","title":"utf8 - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/utf8</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/utf8/#utf8","title":"utf8","text":"<p>[jvm]\\ fun utf8(address: String): String?</p> <p>Return the contents of address as a string, or null if no such resource exists. Note that this method decodes the resource on every use. It is the caller\u2019s responsibility to cache the result if it is to be loaded frequently.</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/walk/","title":"walk - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/walk</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/walk/#walk","title":"walk","text":"<p>[jvm]\\ fun walk(address: String): List&lt;String&gt;</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/watch/","title":"watch - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/watch</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/watch/#watch","title":"watch","text":"<p>[jvm]\\ fun watch(address: String, resourceChangedListener: (address: String) -&gt; Unit)</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/","title":"Backend - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/Backend</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/#backend","title":"Backend","text":"<p>[jvm]\\ abstract class Backend</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/#functions","title":"Functions","text":"Name Summary all [jvm]open fun all(): Set&lt;String&gt; exists [jvm]abstract fun exists(path: String): Boolean list [jvm]open fun list(path: String): List&lt;String&gt; open [jvm]abstract fun open(path: String): BufferedSource? put [jvm]open fun put(path: String, data: ByteString) unwatch [jvm]open fun unwatch(path: String) watch [jvm]open fun watch(path: String, resourceChangedListener: (address: String) -&gt; Unit)"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/#inheritors","title":"Inheritors","text":"Name ClasspathResourceLoaderBackend FilesystemLoaderBackend MemoryResourceLoaderBackend"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/-backend/","title":"Backend - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/Backend/Backend</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/-backend/#backend","title":"Backend","text":"<p>[jvm]\\ fun Backend()</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/all/","title":"all - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/Backend/all</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/all/#all","title":"all","text":"<p>[jvm]\\ open fun all(): Set&lt;String&gt;</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/exists/","title":"exists - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/Backend/exists</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/exists/#exists","title":"exists","text":"<p>[jvm]\\ abstract fun exists(path: String): Boolean</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/list/","title":"list - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/Backend/list</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/list/#list","title":"list","text":"<p>[jvm]\\ open fun list(path: String): List&lt;String&gt;</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/open/","title":"open - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/Backend/open</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/open/#open","title":"open","text":"<p>[jvm]\\ abstract fun open(path: String): BufferedSource?</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/put/","title":"put - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/Backend/put</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/put/#put","title":"put","text":"<p>[jvm]\\ open fun put(path: String, data: ByteString)</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/unwatch/","title":"unwatch - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/Backend/unwatch</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/unwatch/#unwatch","title":"unwatch","text":"<p>[jvm]\\ open fun unwatch(path: String)</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/watch/","title":"watch - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/Backend/watch</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-backend/watch/#watch","title":"watch","text":"<p>[jvm]\\ open fun watch(path: String, resourceChangedListener: (address: String) -&gt; Unit)</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-companion/","title":"Companion - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/Companion</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-companion/#properties","title":"Properties","text":"Name Summary SYSTEM [jvm]val SYSTEM: ResourceLoader"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-companion/-s-y-s-t-e-m/","title":"SYSTEM - Misk","text":"<p>//wisp-resource-loader/wisp.resources/ResourceLoader/Companion/SYSTEM</p>"},{"location":"0.x/wisp-resource-loader/wisp-resource-loader/wisp.resources/-resource-loader/-companion/-s-y-s-t-e-m/#system","title":"SYSTEM","text":"<p>[jvm]\\ val SYSTEM: ResourceLoader</p>"},{"location":"0.x/wisp-resource-loader-testing/","title":"wisp-resource-loader-testing - Misk","text":"<p>//wisp-resource-loader-testing</p>"},{"location":"0.x/wisp-resource-loader-testing/#wisp-resource-loader-testing","title":"wisp-resource-loader-testing","text":""},{"location":"0.x/wisp-resource-loader-testing/#packages","title":"Packages","text":"Name wisp.resources"},{"location":"0.x/wisp-resource-loader-testing/wisp-resource-loader-testing/wisp.resources/","title":"Package wisp.resources - Misk","text":"<p>//wisp-resource-loader-testing/wisp.resources</p>"},{"location":"0.x/wisp-resource-loader-testing/wisp-resource-loader-testing/wisp.resources/#package-wispresources","title":"Package wisp.resources","text":""},{"location":"0.x/wisp-resource-loader-testing/wisp-resource-loader-testing/wisp.resources/#types","title":"Types","text":"Name Summary FakeFilesystemLoaderBackend [jvm]class FakeFilesystemLoaderBackend(files: Map&lt;String, String&gt;) : ResourceLoader.BackendA fake FilesystemLoaderBackend that loads file contents from an in-memory map. The map can be populated by adding to the ForFakeFiles map."},{"location":"0.x/wisp-resource-loader-testing/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/","title":"FakeFilesystemLoaderBackend - Misk","text":"<p>//wisp-resource-loader-testing/wisp.resources/FakeFilesystemLoaderBackend</p>"},{"location":"0.x/wisp-resource-loader-testing/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/#fakefilesystemloaderbackend","title":"FakeFilesystemLoaderBackend","text":"<p>[jvm]\\ class FakeFilesystemLoaderBackend(files: Map&lt;String, String&gt;) : ResourceLoader.Backend</p> <p>A fake FilesystemLoaderBackend that loads file contents from an in-memory map. The map can be populated by adding to the ForFakeFiles map.</p> <p>newMapBinder&lt;String, String&gt;(ForFakeFiles::class).addBinding(\u201c/etc/foo.txt\u201d).toInstance(\u201chello!\u201d)</p>"},{"location":"0.x/wisp-resource-loader-testing/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/#constructors","title":"Constructors","text":"FakeFilesystemLoaderBackend [jvm]fun FakeFilesystemLoaderBackend(files: Map&lt;String, String&gt;)"},{"location":"0.x/wisp-resource-loader-testing/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/#functions","title":"Functions","text":"Name Summary all [jvm]open fun all(): Set&lt;String&gt; exists [jvm]open override fun exists(path: String): Boolean list [jvm]open fun list(path: String): List&lt;String&gt; open [jvm]open override fun open(path: String): BufferedSource? put [jvm]open fun put(path: String, data: ByteString) unwatch [jvm]open fun unwatch(path: String) watch [jvm]open fun watch(path: String, resourceChangedListener: (address: String) -&gt; Unit)"},{"location":"0.x/wisp-resource-loader-testing/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/-fake-filesystem-loader-backend/","title":"FakeFilesystemLoaderBackend - Misk","text":"<p>//wisp-resource-loader-testing/wisp.resources/FakeFilesystemLoaderBackend/FakeFilesystemLoaderBackend</p>"},{"location":"0.x/wisp-resource-loader-testing/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/-fake-filesystem-loader-backend/#fakefilesystemloaderbackend","title":"FakeFilesystemLoaderBackend","text":"<p>[jvm]\\ fun FakeFilesystemLoaderBackend(files: Map&lt;String, String&gt;)</p>"},{"location":"0.x/wisp-resource-loader-testing/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/exists/","title":"exists - Misk","text":"<p>//wisp-resource-loader-testing/wisp.resources/FakeFilesystemLoaderBackend/exists</p>"},{"location":"0.x/wisp-resource-loader-testing/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/exists/#exists","title":"exists","text":"<p>[jvm]\\ open override fun exists(path: String): Boolean</p>"},{"location":"0.x/wisp-resource-loader-testing/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/open/","title":"open - Misk","text":"<p>//wisp-resource-loader-testing/wisp.resources/FakeFilesystemLoaderBackend/open</p>"},{"location":"0.x/wisp-resource-loader-testing/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/open/#open","title":"open","text":"<p>[jvm]\\ open override fun open(path: String): BufferedSource?</p>"},{"location":"0.x/wisp-sampling/","title":"wisp-sampling - Misk","text":"<p>//wisp-sampling</p>"},{"location":"0.x/wisp-sampling/#wisp-sampling","title":"wisp-sampling","text":""},{"location":"0.x/wisp-sampling/#packages","title":"Packages","text":"Name wisp.sampling"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/","title":"Package wisp.sampling - Misk","text":"<p>//wisp-sampling/wisp.sampling</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/#package-wispsampling","title":"Package wisp.sampling","text":""},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/#types","title":"Types","text":"Name Summary AlwaysSampler [jvm]class AlwaysSampler : Sampler PercentageSampler [jvm]class PercentageSampler(samplePercentage: Int, random: () -&gt; Int) : Sampler RateLimiter [jvm]class RateLimiter@JvmOverloadsconstructor(permitsPerSecond: Long, ticker: Ticker, sleeper: Sleeper)A deterministic testable rate limiter that uses two variables: RateLimitingSampler [jvm]class RateLimitingSampler(rateLimiter: RateLimiter) : Sampler Sampler [jvm]interface SamplerA Sampler is used to \u201csample\u201d whether an action is allowed to occur or not. Sleeper [jvm]interface SleeperAbstraction for Thread.sleep() that allows for testing. Ticker [jvm]interface TickerAbstraction for System.nanoTime() that allows for testing."},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-always-sampler/","title":"AlwaysSampler - Misk","text":"<p>//wisp-sampling/wisp.sampling/AlwaysSampler</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-always-sampler/#alwayssampler","title":"AlwaysSampler","text":"<p>[jvm]\\ class AlwaysSampler : Sampler</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-always-sampler/#functions","title":"Functions","text":"Name Summary sample [jvm]open override fun sample(): BooleanTests if a sample is allowed or not"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-always-sampler/-always-sampler/","title":"AlwaysSampler - Misk","text":"<p>//wisp-sampling/wisp.sampling/AlwaysSampler/AlwaysSampler</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-always-sampler/-always-sampler/#alwayssampler","title":"AlwaysSampler","text":"<p>[jvm]\\ fun AlwaysSampler()</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-always-sampler/sample/","title":"sample - Misk","text":"<p>//wisp-sampling/wisp.sampling/AlwaysSampler/sample</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-always-sampler/sample/#sample","title":"sample","text":"<p>[jvm]\\ open override fun sample(): Boolean</p> <p>Tests if a sample is allowed or not</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-always-sampler/sample/#return","title":"Return","text":"<p>true if sample is allowed, otherwise false</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-percentage-sampler/","title":"PercentageSampler - Misk","text":"<p>//wisp-sampling/wisp.sampling/PercentageSampler</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-percentage-sampler/#percentagesampler","title":"PercentageSampler","text":"<p>[jvm]\\ class PercentageSampler(samplePercentage: Int, random: () -&gt; Int) : Sampler</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-percentage-sampler/#functions","title":"Functions","text":"Name Summary sample [jvm]open override fun sample(): BooleanTests if a sample is allowed or not"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-percentage-sampler/-percentage-sampler/","title":"PercentageSampler - Misk","text":"<p>//wisp-sampling/wisp.sampling/PercentageSampler/PercentageSampler</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-percentage-sampler/-percentage-sampler/#percentagesampler","title":"PercentageSampler","text":"<p>[jvm]\\ fun PercentageSampler(samplePercentage: Int, random: () -&gt; Int)</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-percentage-sampler/sample/","title":"sample - Misk","text":"<p>//wisp-sampling/wisp.sampling/PercentageSampler/sample</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-percentage-sampler/sample/#sample","title":"sample","text":"<p>[jvm]\\ open override fun sample(): Boolean</p> <p>Tests if a sample is allowed or not</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-percentage-sampler/sample/#return","title":"Return","text":"<p>true if sample is allowed, otherwise false</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiter/","title":"RateLimiter - Misk","text":"<p>//wisp-sampling/wisp.sampling/RateLimiter</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiter/#ratelimiter","title":"RateLimiter","text":"<p>[jvm]\\ class RateLimiter@JvmOverloadsconstructor(permitsPerSecond: Long, ticker: Ticker, sleeper: Sleeper)</p> <p>A deterministic testable rate limiter that uses two variables:</p> <ul> <li>Permits per second. This is the application\u2019s configured rate. We express as a per-second rate but use it as a time-between-permits. For example, 250 permits per second is a permit every 4 milliseconds. This may be zero, in which case all acquire attempts will return false.</li> <li>Window size. If the application specified 250 permits per second, that doesn\u2019t specify how many permits can be returned at once. An implementation could strictly return 1 permit every 4 milliseconds, or batches of 1000 permits every 4 seconds. This class hard codes the window size to 1 second. Small windows shrink batch sizes which is inefficient; large windows grow batch sizes which is bursty. This class uses 1 second to balance latency and throughput.</li> </ul> <p>The implementation tracks a future timestamp that permits are consumed until.</p> <p>This class is similar to Guava\u2019s rate limiter. Unlike Guava\u2019s rate limiter this class is testable by application code using the rate limiter. It also has very predictable behavior because its internal mechanisms are simpler than Guava\u2019s.</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiter/#constructors","title":"Constructors","text":"RateLimiter [jvm]@JvmOverloadsfun RateLimiter(permitsPerSecond: Long, ticker: Ticker = Ticker.DEFAULT, sleeper: Sleeper = Sleeper.DEFAULT)"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiter/#functions","title":"Functions","text":"Name Summary getPermitsRemaining [jvm]fun getPermitsRemaining(unit: TimeUnit, timeout: Long): LongReturns the maximum number of permits that could have been acquired by a call to tryAcquire, assuming the caller passed the same timeout and unit. tryAcquire [jvm]fun tryAcquire(permitCount: Long, timeout: Long, unit: TimeUnit): BooleanAttempt to acquire permitCount permits, sleeping up to timeout if necessary for them to become available."},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiter/#properties","title":"Properties","text":"Name Summary permitsPerSecond [jvm]@Volatilevar permitsPerSecond: Long"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiter/-rate-limiter/","title":"RateLimiter - Misk","text":"<p>//wisp-sampling/wisp.sampling/RateLimiter/RateLimiter</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiter/-rate-limiter/#ratelimiter","title":"RateLimiter","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun RateLimiter(permitsPerSecond: Long, ticker: Ticker = Ticker.DEFAULT, sleeper: Sleeper = Sleeper.DEFAULT)</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiter/get-permits-remaining/","title":"getPermitsRemaining - Misk","text":"<p>//wisp-sampling/wisp.sampling/RateLimiter/getPermitsRemaining</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiter/get-permits-remaining/#getpermitsremaining","title":"getPermitsRemaining","text":"<p>[jvm]\\ fun getPermitsRemaining(unit: TimeUnit, timeout: Long): Long</p> <p>Returns the maximum number of permits that could have been acquired by a call to tryAcquire, assuming the caller passed the same timeout and unit.</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiter/permits-per-second/","title":"permitsPerSecond - Misk","text":"<p>//wisp-sampling/wisp.sampling/RateLimiter/permitsPerSecond</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiter/permits-per-second/#permitspersecond","title":"permitsPerSecond","text":"<p>[jvm]\\</p> <p>@Volatile</p> <p>var permitsPerSecond: Long</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiter/try-acquire/","title":"tryAcquire - Misk","text":"<p>//wisp-sampling/wisp.sampling/RateLimiter/tryAcquire</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiter/try-acquire/#tryacquire","title":"tryAcquire","text":"<p>[jvm]\\ fun tryAcquire(permitCount: Long, timeout: Long, unit: TimeUnit): Boolean</p> <p>Attempt to acquire permitCount permits, sleeping up to timeout if necessary for them to become available.</p> <p>Returns true if permits were acquired.</p> <p>This always returns false if you request more than 1 window size worth of permits. If you need many permits, shrink your batch size. This is intended to smooth out consumption of the resources guarded by this rate limiter.</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiting-sampler/","title":"RateLimitingSampler - Misk","text":"<p>//wisp-sampling/wisp.sampling/RateLimitingSampler</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiting-sampler/#ratelimitingsampler","title":"RateLimitingSampler","text":"<p>[jvm]\\ class RateLimitingSampler(rateLimiter: RateLimiter) : Sampler</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiting-sampler/#functions","title":"Functions","text":"Name Summary sample [jvm]open override fun sample(): BooleanTests if a sample is allowed or not"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiting-sampler/-rate-limiting-sampler/","title":"RateLimitingSampler - Misk","text":"<p>//wisp-sampling/wisp.sampling/RateLimitingSampler/RateLimitingSampler</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiting-sampler/-rate-limiting-sampler/#ratelimitingsampler","title":"RateLimitingSampler","text":"<p>[jvm]\\ fun RateLimitingSampler(rateLimiter: RateLimiter)</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiting-sampler/sample/","title":"sample - Misk","text":"<p>//wisp-sampling/wisp.sampling/RateLimitingSampler/sample</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiting-sampler/sample/#sample","title":"sample","text":"<p>[jvm]\\ open override fun sample(): Boolean</p> <p>Tests if a sample is allowed or not</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-rate-limiting-sampler/sample/#return","title":"Return","text":"<p>true if sample is allowed, otherwise false</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/","title":"Sampler - Misk","text":"<p>//wisp-sampling/wisp.sampling/Sampler</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/#sampler","title":"Sampler","text":"<p>[jvm]\\ interface Sampler</p> <p>A Sampler is used to \u201csample\u201d whether an action is allowed to occur or not.</p> <p>A common usage of the sampler would look like:</p> <p>if (sampler.sample()) {\\     performAction()\\ }</p> <p>The frequency at which sample returns true or false is based on the implementation\u2019s policy. For example, Sampler.always creates a Sampler that only returns true, while Sampler.percentage will only return true for a given percentage of samples. For a more complex example, Sampler.rateLimiting will limit the number of true samples to a given rate per second.</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/#functions","title":"Functions","text":"Name Summary sample [jvm]abstract fun sample(): BooleanTests if a sample is allowed or not"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/#inheritors","title":"Inheritors","text":"Name PercentageSampler RateLimitingSampler AlwaysSampler"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/sample/","title":"sample - Misk","text":"<p>//wisp-sampling/wisp.sampling/Sampler/sample</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/sample/#sample","title":"sample","text":"<p>[jvm]\\ abstract fun sample(): Boolean</p> <p>Tests if a sample is allowed or not</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/sample/#return","title":"Return","text":"<p>true if sample is allowed, otherwise false</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/","title":"Companion - Misk","text":"<p>//wisp-sampling/wisp.sampling/Sampler/Companion</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/#functions","title":"Functions","text":"Name Summary always [jvm]fun always(): SamplerCreates a Sampler that always returns positive results. percentage [jvm]fun percentage(samplePercentage: Int): SamplerCreates a Sampler that limits positive results to a percentage chance. rateLimiting [jvm]fun rateLimiting(ratePerSecond: Long): SamplerCreates a Sampler that limits positive results to a limited rate per second."},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/always/","title":"always - Misk","text":"<p>//wisp-sampling/wisp.sampling/Sampler/Companion/always</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/always/#always","title":"always","text":"<p>[jvm]\\ fun always(): Sampler</p> <p>Creates a Sampler that always returns positive results.</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/always/#return","title":"Return","text":"<p>always Sampler instance</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/percentage/","title":"percentage - Misk","text":"<p>//wisp-sampling/wisp.sampling/Sampler/Companion/percentage</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/percentage/#percentage","title":"percentage","text":"<p>[jvm]\\ fun percentage(samplePercentage: Int): Sampler</p> <p>Creates a Sampler that limits positive results to a percentage chance.</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/percentage/#return","title":"Return","text":"<p>percentage Sampler instance</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/percentage/#parameters","title":"Parameters","text":"<p>jvm</p> samplePercentage percentage chance of positive results"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/rate-limiting/","title":"rateLimiting - Misk","text":"<p>//wisp-sampling/wisp.sampling/Sampler/Companion/rateLimiting</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/rate-limiting/#ratelimiting","title":"rateLimiting","text":"<p>[jvm]\\ fun rateLimiting(ratePerSecond: Long): Sampler</p> <p>Creates a Sampler that limits positive results to a limited rate per second.</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/rate-limiting/#return","title":"Return","text":"<p>rate limiting Sampler instance</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sampler/-companion/rate-limiting/#parameters","title":"Parameters","text":"<p>jvm</p> ratePerSecond the number of positive results per second"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sleeper/","title":"Sleeper - Misk","text":"<p>//wisp-sampling/wisp.sampling/Sleeper</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sleeper/#sleeper","title":"Sleeper","text":"<p>[jvm]\\ interface Sleeper</p> <p>Abstraction for Thread.sleep() that allows for testing.</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sleeper/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sleeper/#functions","title":"Functions","text":"Name Summary sleep [jvm]abstract fun sleep(duration: Duration)"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sleeper/sleep/","title":"sleep - Misk","text":"<p>//wisp-sampling/wisp.sampling/Sleeper/sleep</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sleeper/sleep/#sleep","title":"sleep","text":"<p>[jvm]\\ abstract fun sleep(duration: Duration)</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sleeper/-companion/","title":"Companion - Misk","text":"<p>//wisp-sampling/wisp.sampling/Sleeper/Companion</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sleeper/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sleeper/-companion/#properties","title":"Properties","text":"Name Summary DEFAULT [jvm]val DEFAULT: Sleeper"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sleeper/-companion/-d-e-f-a-u-l-t/","title":"DEFAULT - Misk","text":"<p>//wisp-sampling/wisp.sampling/Sleeper/Companion/DEFAULT</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-sleeper/-companion/-d-e-f-a-u-l-t/#default","title":"DEFAULT","text":"<p>[jvm]\\ val DEFAULT: Sleeper</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-ticker/","title":"Ticker - Misk","text":"<p>//wisp-sampling/wisp.sampling/Ticker</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-ticker/#ticker","title":"Ticker","text":"<p>[jvm]\\ interface Ticker</p> <p>Abstraction for System.nanoTime() that allows for testing.</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-ticker/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-ticker/#functions","title":"Functions","text":"Name Summary read [jvm]abstract fun read(): Long"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-ticker/read/","title":"read - Misk","text":"<p>//wisp-sampling/wisp.sampling/Ticker/read</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-ticker/read/#read","title":"read","text":"<p>[jvm]\\ abstract fun read(): Long</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-ticker/-companion/","title":"Companion - Misk","text":"<p>//wisp-sampling/wisp.sampling/Ticker/Companion</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-ticker/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-ticker/-companion/#properties","title":"Properties","text":"Name Summary DEFAULT [jvm]val DEFAULT: Ticker"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-ticker/-companion/-d-e-f-a-u-l-t/","title":"DEFAULT - Misk","text":"<p>//wisp-sampling/wisp.sampling/Ticker/Companion/DEFAULT</p>"},{"location":"0.x/wisp-sampling/wisp-sampling/wisp.sampling/-ticker/-companion/-d-e-f-a-u-l-t/#default","title":"DEFAULT","text":"<p>[jvm]\\ val DEFAULT: Ticker</p>"},{"location":"0.x/wisp-ssl/","title":"wisp-ssl - Misk","text":"<p>//wisp-ssl</p>"},{"location":"0.x/wisp-ssl/#wisp-ssl","title":"wisp-ssl","text":""},{"location":"0.x/wisp-ssl/#packages","title":"Packages","text":"Name wisp.security.ssl"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/","title":"Package wisp.security.ssl - Misk","text":"<p>//wisp-ssl/wisp.security.ssl</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/#package-wispsecurityssl","title":"Package wisp.security.ssl","text":""},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/#types","title":"Types","text":"Name Summary CertificateAndKey [jvm]data class CertificateAndKey(certificate: X509Certificate, privateKey: PrivateKey) CertStore [jvm]data class CertStore(keyStore: KeyStore)A certificate and its private key. CertStoreConfig [jvm]data class CertStoreConfig@JvmOverloadsconstructor(resource: String, passphrase: String?, format: String) PemComboFile [jvm]data class PemComboFile(certificates: List&lt;ByteString&gt;, privateRsaKeys: List&lt;ByteString&gt;, privateKeys: List&lt;ByteString&gt;, passphrase: String)A file containing a mix of PEM-encoded certificates and PEM-encoded private keys. Can be used both for trust stores (which certificate authorities a TLS client trusts) and also for TLS servers (which certificate chain a TLS server serves). SslContextFactory [jvm]open class SslContextFactory(sslLoader: SslLoader) SslLoader [jvm]open class SslLoader(resourceLoader: ResourceLoader)Loads keys and certificates from the file system. TrustStore [jvm]data class TrustStore(keyStore: KeyStore)A set of trusted root certificates. TrustStoreConfig [jvm]data class TrustStoreConfig@JvmOverloadsconstructor(resource: String, passphrase: String?, format: String)"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/#functions","title":"Functions","text":"Name Summary aliasesOfType [jvm]inline fun &lt;T : KeyStore.Entry&gt; KeyStore.aliasesOfType(): List&lt;String&gt;fun KeyStore.aliasesOfType(entryClass: Class&lt;out KeyStore.Entry&gt;): List&lt;String&gt; getCertificateAndKey [jvm]fun KeyStore.getCertificateAndKey(passphrase: CharArray): CertificateAndKey?fun KeyStore.getCertificateAndKey(alias: String, passphrase: CharArray): CertificateAndKey? getPrivateKey [jvm]fun KeyStore.getPrivateKey(passphrase: CharArray): PrivateKeyfun KeyStore.getPrivateKey(alias: String, passphrase: CharArray): PrivateKey getX509Certificate [jvm]fun KeyStore.getX509Certificate(): X509Certificatefun KeyStore.getX509Certificate(alias: String): X509Certificate getX509CertificateChain [jvm]fun KeyStore.getX509CertificateChain(): Array&lt;X509Certificate&gt;fun KeyStore.getX509CertificateChain(alias: String): Array&lt;X509Certificate&gt;"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/#properties","title":"Properties","text":"Name Summary onlyAlias [jvm]val KeyStore.onlyAlias: String"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/aliases-of-type/","title":"aliasesOfType - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/aliasesOfType</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/aliases-of-type/#aliasesoftype","title":"aliasesOfType","text":"<p>[jvm]\\ fun KeyStore.aliasesOfType(entryClass: Class&lt;out KeyStore.Entry&gt;): List&lt;String&gt;</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/aliases-of-type/#return","title":"Return","text":"<p>all aliases present in the keystore of a given entry type.</p> <p>[jvm]\\ inline fun &lt;T : KeyStore.Entry&gt; KeyStore.aliasesOfType(): List&lt;String&gt;</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-certificate-and-key/","title":"getCertificateAndKey - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/getCertificateAndKey</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-certificate-and-key/#getcertificateandkey","title":"getCertificateAndKey","text":"<p>[jvm]\\ fun KeyStore.getCertificateAndKey(alias: String, passphrase: CharArray): CertificateAndKey?</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-certificate-and-key/#return","title":"Return","text":"<p>the certificate and key pair for the given alias</p> <p>[jvm]\\ fun KeyStore.getCertificateAndKey(passphrase: CharArray): CertificateAndKey?</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-certificate-and-key/#return_1","title":"Return","text":"<p>the one and only CertificateAndKey in the keystore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-private-key/","title":"getPrivateKey - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/getPrivateKey</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-private-key/#getprivatekey","title":"getPrivateKey","text":"<p>[jvm]\\ fun KeyStore.getPrivateKey(alias: String, passphrase: CharArray): PrivateKey</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-private-key/#return","title":"Return","text":"<p>the PrivateKey with the given alias</p> <p>[jvm]\\ fun KeyStore.getPrivateKey(passphrase: CharArray): PrivateKey</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-private-key/#return_1","title":"Return","text":"<p>the one and only PrivateKey in the keystore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-x509-certificate-chain/","title":"getX509CertificateChain - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/getX509CertificateChain</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-x509-certificate-chain/#getx509certificatechain","title":"getX509CertificateChain","text":"<p>[jvm]\\ fun KeyStore.getX509CertificateChain(alias: String): Array&lt;X509Certificate&gt;</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-x509-certificate-chain/#return","title":"Return","text":"<p>the X509Certificate chain with the provided alias</p> <p>[jvm]\\ fun KeyStore.getX509CertificateChain(): Array&lt;X509Certificate&gt;</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-x509-certificate-chain/#return_1","title":"Return","text":"<p>the one and only X509Certificate chain in the keystore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-x509-certificate/","title":"getX509Certificate - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/getX509Certificate</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-x509-certificate/#getx509certificate","title":"getX509Certificate","text":"<p>[jvm]\\ fun KeyStore.getX509Certificate(alias: String): X509Certificate</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-x509-certificate/#return","title":"Return","text":"<p>The X509Certificate with the provided alias</p> <p>[jvm]\\ fun KeyStore.getX509Certificate(): X509Certificate</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/get-x509-certificate/#return_1","title":"Return","text":"<p>the one and only X509Certificate in the keystore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/only-alias/","title":"onlyAlias - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/onlyAlias</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/only-alias/#onlyalias","title":"onlyAlias","text":"<p>[jvm]\\ val KeyStore.onlyAlias: String</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/only-alias/#return","title":"Return","text":"<p>the only alias in the keystore, if the keystore only has a single entry</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store/","title":"CertStore - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/CertStore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store/#certstore","title":"CertStore","text":"<p>[jvm]\\ data class CertStore(keyStore: KeyStore)</p> <p>A certificate and its private key.</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store/#constructors","title":"Constructors","text":"CertStore [jvm]fun CertStore(keyStore: KeyStore)"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store/#properties","title":"Properties","text":"Name Summary keyStore [jvm]val keyStore: KeyStore"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store/-cert-store/","title":"CertStore - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/CertStore/CertStore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store/-cert-store/#certstore","title":"CertStore","text":"<p>[jvm]\\ fun CertStore(keyStore: KeyStore)</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store/key-store/","title":"keyStore - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/CertStore/keyStore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store/key-store/#keystore","title":"keyStore","text":"<p>[jvm]\\ val keyStore: KeyStore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store-config/","title":"CertStoreConfig - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/CertStoreConfig</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store-config/#certstoreconfig","title":"CertStoreConfig","text":"<p>[jvm]\\ data class CertStoreConfig@JvmOverloadsconstructor(resource: String, passphrase: String?, format: String)</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store-config/#properties","title":"Properties","text":"Name Summary format [jvm]val format: String passphrase [jvm]val passphrase: String? = null resource [jvm]val resource: String"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store-config/-cert-store-config/","title":"CertStoreConfig - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/CertStoreConfig/CertStoreConfig</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store-config/-cert-store-config/#certstoreconfig","title":"CertStoreConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun CertStoreConfig(resource: String, passphrase: String? = null, format: String = SslLoader.FORMAT_JCEKS)</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store-config/format/","title":"format - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/CertStoreConfig/format</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store-config/format/#format","title":"format","text":"<p>[jvm]\\ val format: String</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store-config/passphrase/","title":"passphrase - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/CertStoreConfig/passphrase</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store-config/passphrase/#passphrase","title":"passphrase","text":"<p>[jvm]\\ val passphrase: String? = null</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store-config/resource/","title":"resource - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/CertStoreConfig/resource</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-cert-store-config/resource/#resource","title":"resource","text":"<p>[jvm]\\ val resource: String</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-certificate-and-key/","title":"CertificateAndKey - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/CertificateAndKey</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-certificate-and-key/#certificateandkey","title":"CertificateAndKey","text":"<p>[jvm]\\ data class CertificateAndKey(certificate: X509Certificate, privateKey: PrivateKey)</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-certificate-and-key/#properties","title":"Properties","text":"Name Summary certificate [jvm]val certificate: X509Certificate privateKey [jvm]val privateKey: PrivateKey"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-certificate-and-key/-certificate-and-key/","title":"CertificateAndKey - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/CertificateAndKey/CertificateAndKey</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-certificate-and-key/-certificate-and-key/#certificateandkey","title":"CertificateAndKey","text":"<p>[jvm]\\ fun CertificateAndKey(certificate: X509Certificate, privateKey: PrivateKey)</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-certificate-and-key/certificate/","title":"certificate - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/CertificateAndKey/certificate</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-certificate-and-key/certificate/#certificate","title":"certificate","text":"<p>[jvm]\\ val certificate: X509Certificate</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-certificate-and-key/private-key/","title":"privateKey - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/CertificateAndKey/privateKey</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-certificate-and-key/private-key/#privatekey","title":"privateKey","text":"<p>[jvm]\\ val privateKey: PrivateKey</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/","title":"PemComboFile - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/PemComboFile</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/#pemcombofile","title":"PemComboFile","text":"<p>[jvm]\\ data class PemComboFile(certificates: List&lt;ByteString&gt;, privateRsaKeys: List&lt;ByteString&gt;, privateKeys: List&lt;ByteString&gt;, passphrase: String)</p> <p>A file containing a mix of PEM-encoded certificates and PEM-encoded private keys. Can be used both for trust stores (which certificate authorities a TLS client trusts) and also for TLS servers (which certificate chain a TLS server serves).</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/#constructors","title":"Constructors","text":"PemComboFile [jvm]fun PemComboFile(certificates: List&lt;ByteString&gt;, privateRsaKeys: List&lt;ByteString&gt;, privateKeys: List&lt;ByteString&gt;, passphrase: String)"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/#functions","title":"Functions","text":"Name Summary decodeCertificates [jvm]fun decodeCertificates(): List&lt;Certificate&gt; newEmptyKeyStore [jvm]fun newEmptyKeyStore(): KeyStore"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/#properties","title":"Properties","text":"Name Summary certificates [jvm]val certificates: List&lt;ByteString&gt; passphrase [jvm]val passphrase: String privateKeys [jvm]val privateKeys: List&lt;ByteString&gt; privateRsaKeys [jvm]val privateRsaKeys: List&lt;ByteString&gt;"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/-pem-combo-file/","title":"PemComboFile - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/PemComboFile/PemComboFile</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/-pem-combo-file/#pemcombofile","title":"PemComboFile","text":"<p>[jvm]\\ fun PemComboFile(certificates: List&lt;ByteString&gt;, privateRsaKeys: List&lt;ByteString&gt;, privateKeys: List&lt;ByteString&gt;, passphrase: String)</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/certificates/","title":"certificates - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/PemComboFile/certificates</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/certificates/#certificates","title":"certificates","text":"<p>[jvm]\\ val certificates: List&lt;ByteString&gt;</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/decode-certificates/","title":"decodeCertificates - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/PemComboFile/decodeCertificates</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/decode-certificates/#decodecertificates","title":"decodeCertificates","text":"<p>[jvm]\\ fun decodeCertificates(): List&lt;Certificate&gt;</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/new-empty-key-store/","title":"newEmptyKeyStore - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/PemComboFile/newEmptyKeyStore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/new-empty-key-store/#newemptykeystore","title":"newEmptyKeyStore","text":"<p>[jvm]\\ fun newEmptyKeyStore(): KeyStore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/passphrase/","title":"passphrase - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/PemComboFile/passphrase</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/passphrase/#passphrase","title":"passphrase","text":"<p>[jvm]\\ val passphrase: String</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/private-keys/","title":"privateKeys - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/PemComboFile/privateKeys</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/private-keys/#privatekeys","title":"privateKeys","text":"<p>[jvm]\\ val privateKeys: List&lt;ByteString&gt;</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/private-rsa-keys/","title":"privateRsaKeys - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/PemComboFile/privateRsaKeys</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/private-rsa-keys/#privatersakeys","title":"privateRsaKeys","text":"<p>[jvm]\\ val privateRsaKeys: List&lt;ByteString&gt;</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/-companion/","title":"Companion - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/PemComboFile/Companion</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/-companion/#functions","title":"Functions","text":"Name Summary convertPKCS1toPKCS8 [jvm]fun convertPKCS1toPKCS8(pkcs1Key: ByteString): KeySpec parse [jvm]fun parse(certKeyComboSource: BufferedSource, passphrase: String? = null): PemComboFile"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/-companion/convert-p-k-c-s1to-p-k-c-s8/","title":"convertPKCS1toPKCS8 - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/PemComboFile/Companion/convertPKCS1toPKCS8</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/-companion/convert-p-k-c-s1to-p-k-c-s8/#convertpkcs1topkcs8","title":"convertPKCS1toPKCS8","text":"<p>[jvm]\\ fun convertPKCS1toPKCS8(pkcs1Key: ByteString): KeySpec</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/-companion/parse/","title":"parse - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/PemComboFile/Companion/parse</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-pem-combo-file/-companion/parse/#parse","title":"parse","text":"<p>[jvm]\\ fun parse(certKeyComboSource: BufferedSource, passphrase: String? = null): PemComboFile</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-context-factory/","title":"SslContextFactory - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/SslContextFactory</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-context-factory/#sslcontextfactory","title":"SslContextFactory","text":"<p>[jvm]\\ open class SslContextFactory(sslLoader: SslLoader)</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-context-factory/#functions","title":"Functions","text":"Name Summary create [jvm]@JvmOverloadsfun create(certStore: CertStoreConfig? = null, trustStore: TrustStoreConfig? = null): SSLContext@JvmOverloadsfun create(certStore: CertStore?, pin: CharArray?, trustStore: TrustStore? = null): SSLContext loadTrustManagers [jvm]fun loadTrustManagers(trustStore: KeyStore): Array&lt;TrustManager&gt;"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-context-factory/-ssl-context-factory/","title":"SslContextFactory - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/SslContextFactory/SslContextFactory</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-context-factory/-ssl-context-factory/#sslcontextfactory","title":"SslContextFactory","text":"<p>[jvm]\\ fun SslContextFactory(sslLoader: SslLoader)</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-context-factory/create/","title":"create - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/SslContextFactory/create</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-context-factory/create/#create","title":"create","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun create(certStore: CertStoreConfig? = null, trustStore: TrustStoreConfig? = null): SSLContext</p> <p>@JvmOverloads</p> <p>fun create(certStore: CertStore?, pin: CharArray?, trustStore: TrustStore? = null): SSLContext</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-context-factory/create/#return","title":"Return","text":"<p>A new SSLContext for the given certstore and optional truststore config</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-context-factory/load-trust-managers/","title":"loadTrustManagers - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/SslContextFactory/loadTrustManagers</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-context-factory/load-trust-managers/#loadtrustmanagers","title":"loadTrustManagers","text":"<p>[jvm]\\ fun loadTrustManagers(trustStore: KeyStore): Array&lt;TrustManager&gt;</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-context-factory/load-trust-managers/#return","title":"Return","text":"<p>a set of TrustManagers based on the certificates in the given truststore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/","title":"SslLoader - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/SslLoader</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/#sslloader","title":"SslLoader","text":"<p>[jvm]\\ open class SslLoader(resourceLoader: ResourceLoader)</p> <p>Loads keys and certificates from the file system.</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/#constructors","title":"Constructors","text":"SslLoader [jvm]fun SslLoader(resourceLoader: ResourceLoader)"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/#functions","title":"Functions","text":"Name Summary loadCertStore [jvm]fun loadCertStore(config: CertStoreConfig): CertStore?@JvmOverloadsfun loadCertStore(path: String, format: String = FORMAT_PEM, passphrase: String? = null): CertStore? loadTrustStore [jvm]fun loadTrustStore(config: TrustStoreConfig): TrustStore?@JvmOverloadsfun loadTrustStore(path: String, format: String = FORMAT_PEM, passphrase: String? = null): TrustStore?"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/-ssl-loader/","title":"SslLoader - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/SslLoader/SslLoader</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/-ssl-loader/#sslloader","title":"SslLoader","text":"<p>[jvm]\\ fun SslLoader(resourceLoader: ResourceLoader)</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/load-cert-store/","title":"loadCertStore - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/SslLoader/loadCertStore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/load-cert-store/#loadcertstore","title":"loadCertStore","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun loadCertStore(path: String, format: String = FORMAT_PEM, passphrase: String? = null): CertStore?</p> <p>fun loadCertStore(config: CertStoreConfig): CertStore?</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/load-trust-store/","title":"loadTrustStore - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/SslLoader/loadTrustStore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/load-trust-store/#loadtruststore","title":"loadTrustStore","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun loadTrustStore(path: String, format: String = FORMAT_PEM, passphrase: String? = null): TrustStore?</p> <p>fun loadTrustStore(config: TrustStoreConfig): TrustStore?</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/-companion/","title":"Companion - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/SslLoader/Companion</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/-companion/#properties","title":"Properties","text":"Name Summary FORMAT_JCEKS [jvm]const val FORMAT_JCEKS: String FORMAT_JKS [jvm]const val FORMAT_JKS: String FORMAT_PEM [jvm]const val FORMAT_PEM: String FORMAT_PKCS12 [jvm]const val FORMAT_PKCS12: String"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-j-c-e-k-s/","title":"FORMAT_JCEKS - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/SslLoader/Companion/FORMAT_JCEKS</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-j-c-e-k-s/#format_jceks","title":"FORMAT_JCEKS","text":"<p>[jvm]\\ const val FORMAT_JCEKS: String</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-j-k-s/","title":"FORMAT_JKS - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/SslLoader/Companion/FORMAT_JKS</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-j-k-s/#format_jks","title":"FORMAT_JKS","text":"<p>[jvm]\\ const val FORMAT_JKS: String</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-p-e-m/","title":"FORMAT_PEM - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/SslLoader/Companion/FORMAT_PEM</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-p-e-m/#format_pem","title":"FORMAT_PEM","text":"<p>[jvm]\\ const val FORMAT_PEM: String</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-p-k-c-s12/","title":"FORMAT_PKCS12 - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/SslLoader/Companion/FORMAT_PKCS12</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-ssl-loader/-companion/-f-o-r-m-a-t_-p-k-c-s12/#format_pkcs12","title":"FORMAT_PKCS12","text":"<p>[jvm]\\ const val FORMAT_PKCS12: String</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store/","title":"TrustStore - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/TrustStore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store/#truststore","title":"TrustStore","text":"<p>[jvm]\\ data class TrustStore(keyStore: KeyStore)</p> <p>A set of trusted root certificates.</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store/#constructors","title":"Constructors","text":"TrustStore [jvm]fun TrustStore(keyStore: KeyStore)"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store/#properties","title":"Properties","text":"Name Summary keyStore [jvm]val keyStore: KeyStore"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store/-trust-store/","title":"TrustStore - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/TrustStore/TrustStore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store/-trust-store/#truststore","title":"TrustStore","text":"<p>[jvm]\\ fun TrustStore(keyStore: KeyStore)</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store/key-store/","title":"keyStore - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/TrustStore/keyStore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store/key-store/#keystore","title":"keyStore","text":"<p>[jvm]\\ val keyStore: KeyStore</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store-config/","title":"TrustStoreConfig - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/TrustStoreConfig</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store-config/#truststoreconfig","title":"TrustStoreConfig","text":"<p>[jvm]\\ data class TrustStoreConfig@JvmOverloadsconstructor(resource: String, passphrase: String?, format: String)</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store-config/#properties","title":"Properties","text":"Name Summary format [jvm]val format: String passphrase [jvm]val passphrase: String? = null resource [jvm]val resource: String"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store-config/-trust-store-config/","title":"TrustStoreConfig - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/TrustStoreConfig/TrustStoreConfig</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store-config/-trust-store-config/#truststoreconfig","title":"TrustStoreConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun TrustStoreConfig(resource: String, passphrase: String? = null, format: String = FORMAT_JCEKS)</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store-config/format/","title":"format - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/TrustStoreConfig/format</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store-config/format/#format","title":"format","text":"<p>[jvm]\\ val format: String</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store-config/passphrase/","title":"passphrase - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/TrustStoreConfig/passphrase</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store-config/passphrase/#passphrase","title":"passphrase","text":"<p>[jvm]\\ val passphrase: String? = null</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store-config/resource/","title":"resource - Misk","text":"<p>//wisp-ssl/wisp.security.ssl/TrustStoreConfig/resource</p>"},{"location":"0.x/wisp-ssl/wisp-ssl/wisp.security.ssl/-trust-store-config/resource/#resource","title":"resource","text":"<p>[jvm]\\ val resource: String</p>"},{"location":"0.x/wisp-task/","title":"wisp-task - Misk","text":"<p>//wisp-task</p>"},{"location":"0.x/wisp-task/#wisp-task","title":"wisp-task","text":""},{"location":"0.x/wisp-task/#packages","title":"Packages","text":"Name wisp.task wisp.task.exception"},{"location":"0.x/wisp-task/wisp-task/wisp.task/","title":"Package wisp.task - Misk","text":"<p>//wisp-task/wisp.task</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/#package-wisptask","title":"Package wisp.task","text":""},{"location":"0.x/wisp-task/wisp-task/wisp.task/#types","title":"Types","text":"Name Summary RepeatedTask [jvm]class RepeatedTask@JvmOverloadsconstructor(name: String, meterRegistry: MeterRegistry, repeatedTaskConfig: RepeatedTaskConfig, retryPolicy: suspend RetryFailure&lt;Throwable&gt;.() -&gt; RetryInstruction, taskConfig: TaskConfig, task: (name: String, taskConfig: TaskConfig) -&gt; Status)A RepeatedTask runs a repeated task at the user controlled rate. RepeatedTaskConfig [jvm]data class RepeatedTaskConfig@JvmOverloadsconstructor(timeBetweenRunsMs: Long, initialDelayMs: Long, defaultJitterMs: Long, defaultMaxDelayMs: Long) : Config RepeatedTaskManager [jvm]class RepeatedTaskManager@JvmOverloadsconstructor(meterRegistry: MeterRegistry)Basic management of repeated tasks. RepeatedTaskMetrics [jvm]class RepeatedTaskMetrics(meterRegistry: MeterRegistry)Metrics for repeated tasks: Status [jvm]enum Status : Enum&lt;Status&gt; TaskConfig [jvm]open class TaskConfig : ConfigConfig to pass to the task.  Extend this to pass in anything else your task may need."},{"location":"0.x/wisp-task/wisp-task/wisp.task/#properties","title":"Properties","text":"Name Summary defaultThrowableRetryPolicy [jvm]val defaultThrowableRetryPolicy: RetryPolicy&lt;Throwable&gt;By default, continue retrying"},{"location":"0.x/wisp-task/wisp-task/wisp.task/default-throwable-retry-policy/","title":"defaultThrowableRetryPolicy - Misk","text":"<p>//wisp-task/wisp.task/defaultThrowableRetryPolicy</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/default-throwable-retry-policy/#defaultthrowableretrypolicy","title":"defaultThrowableRetryPolicy","text":"<p>[jvm]\\ val defaultThrowableRetryPolicy: RetryPolicy&lt;Throwable&gt;</p> <p>By default, continue retrying</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/","title":"RepeatedTask - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTask</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/#repeatedtask","title":"RepeatedTask","text":"<p>[jvm]\\ class RepeatedTask@JvmOverloadsconstructor(name: String, meterRegistry: MeterRegistry, repeatedTaskConfig: RepeatedTaskConfig, retryPolicy: suspend RetryFailure&lt;Throwable&gt;.() -&gt; RetryInstruction, taskConfig: TaskConfig, task: (name: String, taskConfig: TaskConfig) -&gt; Status)</p> <p>A RepeatedTask runs a repeated task at the user controlled rate.</p> <p>Tasks are called with a TaskConfig and are expected to return a Status or throw an exception.  By default, the retry policy will try again if an exception is thrown and will apply a binaryExponentialBackoff using the supplied RepeatedTaskConfig. A Status.NO_WORK or Status.FAILED will be mapped to NoWorkForTaskException and FailedTaskException and thrown to apply the retry policy.</p> <p>If the Status.NO_RESCHEDULE is returned, the RepeatedTask is shutdown.</p> <p>Example usage:</p> <pre><code>val repeatedTask = RepeatedTask(\"task\") {\n  // do task stuff...\n  return Status.OK\n}\n\nrepeatedTask.startUp()\n</code></pre>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/#constructors","title":"Constructors","text":"RepeatedTask [jvm]@JvmOverloadsfun RepeatedTask(name: String, meterRegistry: MeterRegistry = Metrics.globalRegistry, repeatedTaskConfig: RepeatedTaskConfig = RepeatedTaskConfig(), retryPolicy: suspend RetryFailure&lt;Throwable&gt;.() -&gt; RetryInstruction = defaultThrowableRetryPolicy +                 binaryExponentialBackoff(                     base = repeatedTaskConfig.defaultJitterMs,                     max = repeatedTaskConfig.defaultMaxDelayMs                 ), taskConfig: TaskConfig = TaskConfig(), task: (name: String, taskConfig: TaskConfig) -&gt; Status)"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/#functions","title":"Functions","text":"Name Summary isRunning [jvm]fun isRunning(): Boolean shutDown [jvm]fun shutDown() startUp [jvm]fun startUp()"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/-repeated-task/","title":"RepeatedTask - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTask/RepeatedTask</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/-repeated-task/#repeatedtask","title":"RepeatedTask","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun RepeatedTask(name: String, meterRegistry: MeterRegistry = Metrics.globalRegistry, repeatedTaskConfig: RepeatedTaskConfig = RepeatedTaskConfig(), retryPolicy: suspend RetryFailure&lt;Throwable&gt;.() -&gt; RetryInstruction = defaultThrowableRetryPolicy +                 binaryExponentialBackoff(                     base = repeatedTaskConfig.defaultJitterMs,                     max = repeatedTaskConfig.defaultMaxDelayMs                 ), taskConfig: TaskConfig = TaskConfig(), task: (name: String, taskConfig: TaskConfig) -&gt; Status)</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/is-running/","title":"isRunning - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTask/isRunning</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/is-running/#isrunning","title":"isRunning","text":"<p>[jvm]\\ fun isRunning(): Boolean</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/name/","title":"name - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTask/name</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/shut-down/","title":"shutDown - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTask/shutDown</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/shut-down/#shutdown","title":"shutDown","text":"<p>[jvm]\\ fun shutDown()</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/start-up/","title":"startUp - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTask/startUp</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/start-up/#startup","title":"startUp","text":"<p>[jvm]\\ fun startUp()</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/-companion/","title":"Companion - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTask/Companion</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-config/","title":"RepeatedTaskConfig - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskConfig</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-config/#repeatedtaskconfig","title":"RepeatedTaskConfig","text":"<p>[jvm]\\ data class RepeatedTaskConfig@JvmOverloadsconstructor(timeBetweenRunsMs: Long, initialDelayMs: Long, defaultJitterMs: Long, defaultMaxDelayMs: Long) : Config</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-config/#properties","title":"Properties","text":"Name Summary defaultJitterMs [jvm]val defaultJitterMs: Long = 50The default amount of jitter to use when scheduling backoffs. defaultMaxDelayMs [jvm]val defaultMaxDelayMs: Long = 60000The default maximum backoff time. initialDelayMs [jvm]val initialDelayMs: Long = 0Initial delay before starting the first task run, defaults to no delay, i.e. immediate start timeBetweenRunsMs [jvm]val timeBetweenRunsMs: Long = 30000Time between runs of tasks, set to 0 if immediately repeat task"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-config/-repeated-task-config/","title":"RepeatedTaskConfig - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskConfig/RepeatedTaskConfig</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-config/-repeated-task-config/#repeatedtaskconfig","title":"RepeatedTaskConfig","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun RepeatedTaskConfig(timeBetweenRunsMs: Long = 30000, initialDelayMs: Long = 0, defaultJitterMs: Long = 50, defaultMaxDelayMs: Long = 60000)</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-config/default-jitter-ms/","title":"defaultJitterMs - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskConfig/defaultJitterMs</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-config/default-jitter-ms/#defaultjitterms","title":"defaultJitterMs","text":"<p>[jvm]\\ val defaultJitterMs: Long = 50</p> <p>The default amount of jitter to use when scheduling backoffs.</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-config/default-max-delay-ms/","title":"defaultMaxDelayMs - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskConfig/defaultMaxDelayMs</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-config/default-max-delay-ms/#defaultmaxdelayms","title":"defaultMaxDelayMs","text":"<p>[jvm]\\ val defaultMaxDelayMs: Long = 60000</p> <p>The default maximum backoff time.</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-config/initial-delay-ms/","title":"initialDelayMs - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskConfig/initialDelayMs</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-config/initial-delay-ms/#initialdelayms","title":"initialDelayMs","text":"<p>[jvm]\\ val initialDelayMs: Long = 0</p> <p>Initial delay before starting the first task run, defaults to no delay, i.e. immediate start</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-config/time-between-runs-ms/","title":"timeBetweenRunsMs - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskConfig/timeBetweenRunsMs</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-config/time-between-runs-ms/#timebetweenrunsms","title":"timeBetweenRunsMs","text":"<p>[jvm]\\ val timeBetweenRunsMs: Long = 30000</p> <p>Time between runs of tasks, set to 0 if immediately repeat task</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/","title":"RepeatedTaskManager - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskManager</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/#repeatedtaskmanager","title":"RepeatedTaskManager","text":"<p>[jvm]\\ class RepeatedTaskManager@JvmOverloadsconstructor(meterRegistry: MeterRegistry)</p> <p>Basic management of repeated tasks.</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/#constructors","title":"Constructors","text":"RepeatedTaskManager [jvm]@JvmOverloadsfun RepeatedTaskManager(meterRegistry: MeterRegistry = Metrics.globalRegistry)"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/#functions","title":"Functions","text":"Name Summary createTask [jvm]@JvmOverloadsfun createTask(name: String, meterRegistry: MeterRegistry = this.meterRegistry, repeatedTaskConfig: RepeatedTaskConfig = RepeatedTaskConfig(), retryPolicy: suspend RetryFailure&lt;Throwable&gt;.() -&gt; RetryInstruction = defaultThrowableRetryPolicy +                     binaryExponentialBackoff(                         base = repeatedTaskConfig.defaultJitterMs,                         max = repeatedTaskConfig.defaultMaxDelayMs                     ), taskConfig: TaskConfig = TaskConfig(), task: (name: String, taskConfig: TaskConfig) -&gt; Status): RepeatedTaskCreates the repeated task with the details supplied.  If the repeated task already exists, a TaskAlreadyExistsException is thrown. getTask [jvm]fun getTask(taskName: String): RepeatedTask isTaskRunning [jvm]fun isTaskRunning(taskName: String): BooleanReturns true if a repeated task with the name supplied is running. If the task does not exist or is not running, return false. shutDown [jvm]fun shutDown() taskExists [jvm]fun taskExists(taskName: String): Boolean"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/-repeated-task-manager/","title":"RepeatedTaskManager - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskManager/RepeatedTaskManager</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/-repeated-task-manager/#repeatedtaskmanager","title":"RepeatedTaskManager","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun RepeatedTaskManager(meterRegistry: MeterRegistry = Metrics.globalRegistry)</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/create-task/","title":"createTask - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskManager/createTask</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/create-task/#createtask","title":"createTask","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun createTask(name: String, meterRegistry: MeterRegistry = this.meterRegistry, repeatedTaskConfig: RepeatedTaskConfig = RepeatedTaskConfig(), retryPolicy: suspend RetryFailure&lt;Throwable&gt;.() -&gt; RetryInstruction = defaultThrowableRetryPolicy +                     binaryExponentialBackoff(                         base = repeatedTaskConfig.defaultJitterMs,                         max = repeatedTaskConfig.defaultMaxDelayMs                     ), taskConfig: TaskConfig = TaskConfig(), task: (name: String, taskConfig: TaskConfig) -&gt; Status): RepeatedTask</p> <p>Creates the repeated task with the details supplied.  If the repeated task already exists, a TaskAlreadyExistsException is thrown.</p> <p>Does not start the task.</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/get-task/","title":"getTask - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskManager/getTask</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/get-task/#gettask","title":"getTask","text":"<p>[jvm]\\ fun getTask(taskName: String): RepeatedTask</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/is-task-running/","title":"isTaskRunning - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskManager/isTaskRunning</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/is-task-running/#istaskrunning","title":"isTaskRunning","text":"<p>[jvm]\\ fun isTaskRunning(taskName: String): Boolean</p> <p>Returns true if a repeated task with the name supplied is running. If the task does not exist or is not running, return false.</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/shut-down/","title":"shutDown - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskManager/shutDown</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/shut-down/#shutdown","title":"shutDown","text":"<p>[jvm]\\ fun shutDown()</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/task-exists/","title":"taskExists - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskManager/taskExists</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-manager/task-exists/#taskexists","title":"taskExists","text":"<p>[jvm]\\ fun taskExists(taskName: String): Boolean</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/","title":"RepeatedTaskMetrics - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskMetrics</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/#repeatedtaskmetrics","title":"RepeatedTaskMetrics","text":"<p>[jvm]\\ class RepeatedTaskMetrics(meterRegistry: MeterRegistry)</p> <p>Metrics for repeated tasks:</p> <p>Duration Success Count Failures Count Count of No Work Required</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/#constructors","title":"Constructors","text":"RepeatedTaskMetrics [jvm]fun RepeatedTaskMetrics(meterRegistry: MeterRegistry)"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/-repeated-task-metrics/","title":"RepeatedTaskMetrics - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskMetrics/RepeatedTaskMetrics</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/-repeated-task-metrics/#repeatedtaskmetrics","title":"RepeatedTaskMetrics","text":"<p>[jvm]\\ fun RepeatedTaskMetrics(meterRegistry: MeterRegistry)</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/-companion/","title":"Companion - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskMetrics/Companion</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/-companion/#properties","title":"Properties","text":"Name Summary DURATION_SUMMARY_NAME [jvm]const val DURATION_SUMMARY_NAME: String FAILED_COUNTER_NAME [jvm]const val FAILED_COUNTER_NAME: String NO_WORK_COUNTER_NAME [jvm]const val NO_WORK_COUNTER_NAME: String SUCCESS_COUNTER_NAME [jvm]const val SUCCESS_COUNTER_NAME: String"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/-companion/-d-u-r-a-t-i-o-n_-s-u-m-m-a-r-y_-n-a-m-e/","title":"DURATION_SUMMARY_NAME - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskMetrics/Companion/DURATION_SUMMARY_NAME</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/-companion/-d-u-r-a-t-i-o-n_-s-u-m-m-a-r-y_-n-a-m-e/#duration_summary_name","title":"DURATION_SUMMARY_NAME","text":"<p>[jvm]\\ const val DURATION_SUMMARY_NAME: String</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/-companion/-f-a-i-l-e-d_-c-o-u-n-t-e-r_-n-a-m-e/","title":"FAILED_COUNTER_NAME - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskMetrics/Companion/FAILED_COUNTER_NAME</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/-companion/-f-a-i-l-e-d_-c-o-u-n-t-e-r_-n-a-m-e/#failed_counter_name","title":"FAILED_COUNTER_NAME","text":"<p>[jvm]\\ const val FAILED_COUNTER_NAME: String</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/-companion/-n-o_-w-o-r-k_-c-o-u-n-t-e-r_-n-a-m-e/","title":"NO_WORK_COUNTER_NAME - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskMetrics/Companion/NO_WORK_COUNTER_NAME</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/-companion/-n-o_-w-o-r-k_-c-o-u-n-t-e-r_-n-a-m-e/#no_work_counter_name","title":"NO_WORK_COUNTER_NAME","text":"<p>[jvm]\\ const val NO_WORK_COUNTER_NAME: String</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/-companion/-s-u-c-c-e-s-s_-c-o-u-n-t-e-r_-n-a-m-e/","title":"SUCCESS_COUNTER_NAME - Misk","text":"<p>//wisp-task/wisp.task/RepeatedTaskMetrics/Companion/SUCCESS_COUNTER_NAME</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-repeated-task-metrics/-companion/-s-u-c-c-e-s-s_-c-o-u-n-t-e-r_-n-a-m-e/#success_counter_name","title":"SUCCESS_COUNTER_NAME","text":"<p>[jvm]\\ const val SUCCESS_COUNTER_NAME: String</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/","title":"Status - Misk","text":"<p>//wisp-task/wisp.task/Status</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/#status","title":"Status","text":"<p>[jvm]\\ enum Status : Enum&lt;Status&gt;</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/#entries","title":"Entries","text":"NO_RESCHEDULE [jvm]NO_RESCHEDULE(\u201cno_reschedule\u201d)The task should not be rescheduled FAILED [jvm]FAILED(\u201cfailed\u201d)The task resulted in an error NO_WORK [jvm]NO_WORK(\u201cno_work\u201d)The task had no work to complete OK [jvm]OK(\u201cok\u201d)The task completed successfully and processed work"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/#functions","title":"Functions","text":"Name Summary metricLabel [jvm]fun metricLabel(): StringThe metric label for the status. This is used instead of name() in case the code is refactored."},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/metric-label/","title":"metricLabel - Misk","text":"<p>//wisp-task/wisp.task/Status/metricLabel</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/metric-label/#metriclabel","title":"metricLabel","text":"<p>[jvm]\\ fun metricLabel(): String</p> <p>The metric label for the status. This is used instead of name() in case the code is refactored.</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-f-a-i-l-e-d/","title":"FAILED - Misk","text":"<p>//wisp-task/wisp.task/Status/FAILED</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-f-a-i-l-e-d/#failed","title":"FAILED","text":"<p>[jvm]\\ FAILED(\u201cfailed\u201d)</p> <p>The task resulted in an error</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-f-a-i-l-e-d/#functions","title":"Functions","text":"Name Summary metricLabel [jvm]fun metricLabel(): StringThe metric label for the status. This is used instead of name() in case the code is refactored."},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-f-a-i-l-e-d/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-n-o_-r-e-s-c-h-e-d-u-l-e/","title":"NO_RESCHEDULE - Misk","text":"<p>//wisp-task/wisp.task/Status/NO_RESCHEDULE</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-n-o_-r-e-s-c-h-e-d-u-l-e/#no_reschedule","title":"NO_RESCHEDULE","text":"<p>[jvm]\\ NO_RESCHEDULE(\u201cno_reschedule\u201d)</p> <p>The task should not be rescheduled</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-n-o_-r-e-s-c-h-e-d-u-l-e/#functions","title":"Functions","text":"Name Summary metricLabel [jvm]fun metricLabel(): StringThe metric label for the status. This is used instead of name() in case the code is refactored."},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-n-o_-r-e-s-c-h-e-d-u-l-e/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-n-o_-w-o-r-k/","title":"NO_WORK - Misk","text":"<p>//wisp-task/wisp.task/Status/NO_WORK</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-n-o_-w-o-r-k/#no_work","title":"NO_WORK","text":"<p>[jvm]\\ NO_WORK(\u201cno_work\u201d)</p> <p>The task had no work to complete</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-n-o_-w-o-r-k/#functions","title":"Functions","text":"Name Summary metricLabel [jvm]fun metricLabel(): StringThe metric label for the status. This is used instead of name() in case the code is refactored."},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-n-o_-w-o-r-k/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-o-k/","title":"OK - Misk","text":"<p>//wisp-task/wisp.task/Status/OK</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-o-k/#ok","title":"OK","text":"<p>[jvm]\\ OK(\u201cok\u201d)</p> <p>The task completed successfully and processed work</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-o-k/#functions","title":"Functions","text":"Name Summary metricLabel [jvm]fun metricLabel(): StringThe metric label for the status. This is used instead of name() in case the code is refactored."},{"location":"0.x/wisp-task/wisp-task/wisp.task/-status/-o-k/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String ordinal [jvm]val ordinal: Int"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-task-config/","title":"TaskConfig - Misk","text":"<p>//wisp-task/wisp.task/TaskConfig</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-task-config/#taskconfig","title":"TaskConfig","text":"<p>[jvm]\\ open class TaskConfig : Config</p> <p>Config to pass to the task.  Extend this to pass in anything else your task may need.</p> <p>Note that this extends Config, so you can load your task\u2019s config if required.</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-task-config/#constructors","title":"Constructors","text":"TaskConfig [jvm]fun TaskConfig()"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-task-config/-task-config/","title":"TaskConfig - Misk","text":"<p>//wisp-task/wisp.task/TaskConfig/TaskConfig</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task/-task-config/-task-config/#taskconfig","title":"TaskConfig","text":"<p>[jvm]\\ fun TaskConfig()</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/","title":"Package wisp.task.exception - Misk","text":"<p>//wisp-task/wisp.task.exception</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/#package-wisptaskexception","title":"Package wisp.task.exception","text":""},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/#types","title":"Types","text":"Name Summary FailedTaskException [jvm]class FailedTaskException : ExceptionCan be thrown by a task to indicate it has failed. NoTaskFoundException [jvm]class NoTaskFoundException(taskName: String) : ExceptionThrown if an attempt to retrieve a non-existent RepeatedTask. NoWorkForTaskException [jvm]class NoWorkForTaskException : ExceptionCan be thrown by a task to indicate it has no work to do at this time. TaskAlreadyExistsException [jvm]class TaskAlreadyExistsException(taskName: String) : ExceptionThrown if an attempt to create a RepeatedTask that already exists with the name supplied."},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-failed-task-exception/","title":"FailedTaskException - Misk","text":"<p>//wisp-task/wisp.task.exception/FailedTaskException</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-failed-task-exception/#failedtaskexception","title":"FailedTaskException","text":"<p>[jvm]\\ class FailedTaskException : Exception</p> <p>Can be thrown by a task to indicate it has failed.</p> <p>If a task returns Status.FAILED, it is mapped to this exception and thrown.</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-failed-task-exception/#constructors","title":"Constructors","text":"FailedTaskException [jvm]fun FailedTaskException()"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-failed-task-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-failed-task-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-failed-task-exception/-failed-task-exception/","title":"FailedTaskException - Misk","text":"<p>//wisp-task/wisp.task.exception/FailedTaskException/FailedTaskException</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-failed-task-exception/-failed-task-exception/#failedtaskexception","title":"FailedTaskException","text":"<p>[jvm]\\ fun FailedTaskException()</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-task-found-exception/","title":"NoTaskFoundException - Misk","text":"<p>//wisp-task/wisp.task.exception/NoTaskFoundException</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-task-found-exception/#notaskfoundexception","title":"NoTaskFoundException","text":"<p>[jvm]\\ class NoTaskFoundException(taskName: String) : Exception</p> <p>Thrown if an attempt to retrieve a non-existent RepeatedTask.</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-task-found-exception/#constructors","title":"Constructors","text":"NoTaskFoundException [jvm]fun NoTaskFoundException(taskName: String)"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-task-found-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-task-found-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-task-found-exception/-no-task-found-exception/","title":"NoTaskFoundException - Misk","text":"<p>//wisp-task/wisp.task.exception/NoTaskFoundException/NoTaskFoundException</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-task-found-exception/-no-task-found-exception/#notaskfoundexception","title":"NoTaskFoundException","text":"<p>[jvm]\\ fun NoTaskFoundException(taskName: String)</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-work-for-task-exception/","title":"NoWorkForTaskException - Misk","text":"<p>//wisp-task/wisp.task.exception/NoWorkForTaskException</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-work-for-task-exception/#noworkfortaskexception","title":"NoWorkForTaskException","text":"<p>[jvm]\\ class NoWorkForTaskException : Exception</p> <p>Can be thrown by a task to indicate it has no work to do at this time.</p> <p>If a task returns Status.NO_WORK, it is mapped to this exception and thrown.</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-work-for-task-exception/#constructors","title":"Constructors","text":"NoWorkForTaskException [jvm]fun NoWorkForTaskException()"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-work-for-task-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-work-for-task-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-work-for-task-exception/-no-work-for-task-exception/","title":"NoWorkForTaskException - Misk","text":"<p>//wisp-task/wisp.task.exception/NoWorkForTaskException/NoWorkForTaskException</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-no-work-for-task-exception/-no-work-for-task-exception/#noworkfortaskexception","title":"NoWorkForTaskException","text":"<p>[jvm]\\ fun NoWorkForTaskException()</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-task-already-exists-exception/","title":"TaskAlreadyExistsException - Misk","text":"<p>//wisp-task/wisp.task.exception/TaskAlreadyExistsException</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-task-already-exists-exception/#taskalreadyexistsexception","title":"TaskAlreadyExistsException","text":"<p>[jvm]\\ class TaskAlreadyExistsException(taskName: String) : Exception</p> <p>Thrown if an attempt to create a RepeatedTask that already exists with the name supplied.</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-task-already-exists-exception/#constructors","title":"Constructors","text":"TaskAlreadyExistsException [jvm]fun TaskAlreadyExistsException(taskName: String)"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-task-already-exists-exception/#functions","title":"Functions","text":"Name Summary addSuppressed [jvm]fun addSuppressed(p0: Throwable) fillInStackTrace [jvm]open fun fillInStackTrace(): Throwable getLocalizedMessage [jvm]open fun getLocalizedMessage(): String getStackTrace [jvm]open fun getStackTrace(): Array&lt;StackTraceElement&gt; getSuppressed [jvm]fun getSuppressed(): Array&lt;Throwable&gt; initCause [jvm]open fun initCause(p0: Throwable): Throwable printStackTrace [jvm]open fun printStackTrace()open fun printStackTrace(p0: PrintStream)open fun printStackTrace(p0: PrintWriter) setStackTrace [jvm]open fun setStackTrace(p0: Array&lt;StackTraceElement&gt;)"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-task-already-exists-exception/#properties","title":"Properties","text":"Name Summary cause [jvm]open val cause: Throwable? message [jvm]open val message: String?"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-task-already-exists-exception/-task-already-exists-exception/","title":"TaskAlreadyExistsException - Misk","text":"<p>//wisp-task/wisp.task.exception/TaskAlreadyExistsException/TaskAlreadyExistsException</p>"},{"location":"0.x/wisp-task/wisp-task/wisp.task.exception/-task-already-exists-exception/-task-already-exists-exception/#taskalreadyexistsexception","title":"TaskAlreadyExistsException","text":"<p>[jvm]\\ fun TaskAlreadyExistsException(taskName: String)</p>"},{"location":"0.x/wisp-time-testing/","title":"wisp-time-testing - Misk","text":"<p>//wisp-time-testing</p>"},{"location":"0.x/wisp-time-testing/#wisp-time-testing","title":"wisp-time-testing","text":""},{"location":"0.x/wisp-time-testing/#packages","title":"Packages","text":"Name wisp.time"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/","title":"Package wisp.time - Misk","text":"<p>//wisp-time-testing/wisp.time</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/#package-wisptime","title":"Package wisp.time","text":""},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/#types","title":"Types","text":"Name Summary FakeClock [jvm]open class FakeClock@JvmOverloadsconstructor(epochMillis: Long, zone: ZoneId) : ClockControllable clock for testing."},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/","title":"FakeClock - Misk","text":"<p>//wisp-time-testing/wisp.time/FakeClock</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/#fakeclock","title":"FakeClock","text":"<p>[jvm]\\ open class FakeClock@JvmOverloadsconstructor(epochMillis: Long, zone: ZoneId) : Clock</p> <p>Controllable clock for testing.</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/#constructors","title":"Constructors","text":"FakeClock [jvm]@JvmOverloadsfun FakeClock(epochMillis: Long = Instant.parse(\u201c2018-01-01T00:00:00Z\u201d).toEpochMilli(), zone: ZoneId = ZoneId.of(\u201cUTC\u201d))"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/#functions","title":"Functions","text":"Name Summary add [jvm]fun add(d: Duration): LongAdvance the clock by specified Duration.[jvm]fun add(p: Period): LongAdvance the clock by the specified Period. Note that unlike adding a Duration the exact amount that is added to the clock will depend on its current time and timezone. Not all days, months or years have the same length. See the documentation for Period.[jvm]fun add(n: Long, unit: TimeUnit): LongAdvance the clock by specified amount n of TimeUnit. equals [jvm]open operator override fun equals(other: Any?): Boolean getZone [jvm]open override fun getZone(): ZoneId hashCode [jvm]open override fun hashCode(): Int instant [jvm]open override fun instant(): Instant millis [jvm]open override fun millis(): Long setNow [jvm]fun setNow(instant: Instant)Set the clock to the specified Instant. withZone [jvm]open override fun withZone(zone: ZoneId): Clock"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/-fake-clock/","title":"FakeClock - Misk","text":"<p>//wisp-time-testing/wisp.time/FakeClock/FakeClock</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/-fake-clock/#fakeclock","title":"FakeClock","text":"<p>[jvm]\\</p> <p>@JvmOverloads</p> <p>fun FakeClock(epochMillis: Long = Instant.parse(\u201c2018-01-01T00:00:00Z\u201d).toEpochMilli(), zone: ZoneId = ZoneId.of(\u201cUTC\u201d))</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/add/","title":"add - Misk","text":"<p>//wisp-time-testing/wisp.time/FakeClock/add</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/add/#add","title":"add","text":"<p>[jvm]\\ fun add(d: Duration): Long</p> <p>Advance the clock by specified Duration.</p> <p>[jvm]\\ fun add(p: Period): Long</p> <p>Advance the clock by the specified Period. Note that unlike adding a Duration the exact amount that is added to the clock will depend on its current time and timezone. Not all days, months or years have the same length. See the documentation for Period.</p> <p>[jvm]\\ fun add(n: Long, unit: TimeUnit): Long</p> <p>Advance the clock by specified amount n of TimeUnit.</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/get-zone/","title":"getZone - Misk","text":"<p>//wisp-time-testing/wisp.time/FakeClock/getZone</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/get-zone/#getzone","title":"getZone","text":"<p>[jvm]\\ open override fun getZone(): ZoneId</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/instant/","title":"instant - Misk","text":"<p>//wisp-time-testing/wisp.time/FakeClock/instant</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/instant/#instant","title":"instant","text":"<p>[jvm]\\ open override fun instant(): Instant</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/set-now/","title":"setNow - Misk","text":"<p>//wisp-time-testing/wisp.time/FakeClock/setNow</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/set-now/#setnow","title":"setNow","text":"<p>[jvm]\\ fun setNow(instant: Instant)</p> <p>Set the clock to the specified Instant.</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/with-zone/","title":"withZone - Misk","text":"<p>//wisp-time-testing/wisp.time/FakeClock/withZone</p>"},{"location":"0.x/wisp-time-testing/wisp-time-testing/wisp.time/-fake-clock/with-zone/#withzone","title":"withZone","text":"<p>[jvm]\\ open override fun withZone(zone: ZoneId): Clock</p>"},{"location":"0.x/wisp-token/","title":"wisp-token - Misk","text":"<p>//wisp-token</p>"},{"location":"0.x/wisp-token/#wisp-token","title":"wisp-token","text":""},{"location":"0.x/wisp-token/#packages","title":"Packages","text":"Name wisp.token"},{"location":"0.x/wisp-token/wisp-token/wisp.token/","title":"Package wisp.token - Misk","text":"<p>//wisp-token/wisp.token</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/#package-wisptoken","title":"Package wisp.token","text":""},{"location":"0.x/wisp-token/wisp-token/wisp.token/#types","title":"Types","text":"Name Summary RealTokenGenerator [jvm]class RealTokenGenerator : TokenGenerator TokenGenerator [jvm]interface TokenGeneratorGenerates an secure, unguessable, alphanumeric token for use as a universally unique ID. Tokens are encoded with a https://www.crockford.com/wrmg/base32.html. This alphabet contains a mix of lowercase characters and digits and is resistant to decoding errors; for example 0, o, and \u2018O\u2019 are equivalent."},{"location":"0.x/wisp-token/wisp-token/wisp.token/-real-token-generator/","title":"RealTokenGenerator - Misk","text":"<p>//wisp-token/wisp.token/RealTokenGenerator</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-real-token-generator/#realtokengenerator","title":"RealTokenGenerator","text":"<p>[jvm]\\ class RealTokenGenerator : TokenGenerator</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-real-token-generator/#functions","title":"Functions","text":"Name Summary generate [jvm]open override fun generate(label: String?, length: Int): String"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-real-token-generator/-real-token-generator/","title":"RealTokenGenerator - Misk","text":"<p>//wisp-token/wisp.token/RealTokenGenerator/RealTokenGenerator</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-real-token-generator/-real-token-generator/#realtokengenerator","title":"RealTokenGenerator","text":"<p>[jvm]\\ fun RealTokenGenerator()</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-real-token-generator/generate/","title":"generate - Misk","text":"<p>//wisp-token/wisp.token/RealTokenGenerator/generate</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-real-token-generator/generate/#generate","title":"generate","text":"<p>[jvm]\\ open override fun generate(label: String?, length: Int): String</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/","title":"TokenGenerator - Misk","text":"<p>//wisp-token/wisp.token/TokenGenerator</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/#tokengenerator","title":"TokenGenerator","text":"<p>[jvm]\\ interface TokenGenerator</p> <p>Generates an secure, unguessable, alphanumeric token for use as a universally unique ID. Tokens are encoded with a https://www.crockford.com/wrmg/base32.html. This alphabet contains a mix of lowercase characters and digits and is resistant to decoding errors; for example 0, o, and \u2018O\u2019 are equivalent.</p> <p>For strength similar to a random UUID (122 bits of entropy), most callers should use the default length of 25 characters (125 bits). Using fewer characters risks collision, which may be acceptable for some use-cases. There is no practical benefit to using more than 25 characters.</p> <p>In production, staging, and development environments tokens are always created using SecureRandom. These are some sample production tokens:</p> <p>75dsma7kscyvbgz7ea1yy3qe8\\ 3zg6svk9hcpvqyhej41tdkaa0\\ gv7s8nkevt9d7aw2eb06g640e\\ a17f7h6t853kzdqpc29qa8mnw</p> <p>In tests tokens are sequential and predictable. They are prefixed with an optional label that appears in the returned string and can be used as a namespace. It is okay to hardcode expected tokens in test cases! These are some sample testing tokens:</p> <p>cst0mer000000000000000035\\ payment000000000000000034\\ cst0mer000000000000000036\\ payment000000000000000035</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/#types","title":"Types","text":"Name Summary Companion [jvm]object Companion"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/#functions","title":"Functions","text":"Name Summary generate [jvm]abstract fun generate(label: String? = null, length: Int = 25): String"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/#inheritors","title":"Inheritors","text":"Name RealTokenGenerator"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/generate/","title":"generate - Misk","text":"<p>//wisp-token/wisp.token/TokenGenerator/generate</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/generate/#generate","title":"generate","text":"<p>[jvm]\\ abstract fun generate(label: String? = null, length: Int = 25): String</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/-companion/","title":"Companion - Misk","text":"<p>//wisp-token/wisp.token/TokenGenerator/Companion</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/-companion/#companion","title":"Companion","text":"<p>[jvm]\\ object Companion</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/-companion/#functions","title":"Functions","text":"Name Summary canonicalize [jvm]fun canonicalize(token: String): StringReturns a token semantically equal to token but using only characters from the Crockford Base32 alphabet. This maps visually similar characters like o to the corresponding encoding character like 0. Spaces are omitted."},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/-companion/#properties","title":"Properties","text":"Name Summary CANONICALIZE_LENGTH_MAX [jvm]const val CANONICALIZE_LENGTH_MAX: Int = 25 CANONICALIZE_LENGTH_MIN [jvm]const val CANONICALIZE_LENGTH_MIN: Int = 4"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/-companion/-c-a-n-o-n-i-c-a-l-i-z-e_-l-e-n-g-t-h_-m-a-x/","title":"CANONICALIZE_LENGTH_MAX - Misk","text":"<p>//wisp-token/wisp.token/TokenGenerator/Companion/CANONICALIZE_LENGTH_MAX</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/-companion/-c-a-n-o-n-i-c-a-l-i-z-e_-l-e-n-g-t-h_-m-a-x/#canonicalize_length_max","title":"CANONICALIZE_LENGTH_MAX","text":"<p>[jvm]\\ const val CANONICALIZE_LENGTH_MAX: Int = 25</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/-companion/-c-a-n-o-n-i-c-a-l-i-z-e_-l-e-n-g-t-h_-m-i-n/","title":"CANONICALIZE_LENGTH_MIN - Misk","text":"<p>//wisp-token/wisp.token/TokenGenerator/Companion/CANONICALIZE_LENGTH_MIN</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/-companion/-c-a-n-o-n-i-c-a-l-i-z-e_-l-e-n-g-t-h_-m-i-n/#canonicalize_length_min","title":"CANONICALIZE_LENGTH_MIN","text":"<p>[jvm]\\ const val CANONICALIZE_LENGTH_MIN: Int = 4</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/-companion/canonicalize/","title":"canonicalize - Misk","text":"<p>//wisp-token/wisp.token/TokenGenerator/Companion/canonicalize</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/-companion/canonicalize/#canonicalize","title":"canonicalize","text":"<p>[jvm]\\ fun canonicalize(token: String): String</p> <p>Returns a token semantically equal to token but using only characters from the Crockford Base32 alphabet. This maps visually similar characters like o to the corresponding encoding character like 0. Spaces are omitted.</p> <p>Call this when accepting tokens that may have been transcribed by a user. It is not necessary to canonicalize tokens that haven\u2019t been manually entered; they will already be in canonical form.</p>"},{"location":"0.x/wisp-token/wisp-token/wisp.token/-token-generator/-companion/canonicalize/#throws","title":"Throws","text":"java.lang.IllegalArgumentException if token contains a character that cannot be mapped and     that is not a space."},{"location":"0.x/wisp-token-testing/","title":"wisp-token-testing - Misk","text":"<p>//wisp-token-testing</p>"},{"location":"0.x/wisp-token-testing/#wisp-token-testing","title":"wisp-token-testing","text":""},{"location":"0.x/wisp-token-testing/#packages","title":"Packages","text":"Name wisp.token"},{"location":"0.x/wisp-token-testing/wisp-token-testing/wisp.token/","title":"Package wisp.token - Misk","text":"<p>//wisp-token-testing/wisp.token</p>"},{"location":"0.x/wisp-token-testing/wisp-token-testing/wisp.token/#package-wisptoken","title":"Package wisp.token","text":""},{"location":"0.x/wisp-token-testing/wisp-token-testing/wisp.token/#types","title":"Types","text":"Name Summary FakeTokenGenerator [jvm]class FakeTokenGenerator : TokenGenerator"},{"location":"0.x/wisp-token-testing/wisp-token-testing/wisp.token/-fake-token-generator/","title":"FakeTokenGenerator - Misk","text":"<p>//wisp-token-testing/wisp.token/FakeTokenGenerator</p>"},{"location":"0.x/wisp-token-testing/wisp-token-testing/wisp.token/-fake-token-generator/#faketokengenerator","title":"FakeTokenGenerator","text":"<p>[jvm]\\ class FakeTokenGenerator : TokenGenerator</p>"},{"location":"0.x/wisp-token-testing/wisp-token-testing/wisp.token/-fake-token-generator/#functions","title":"Functions","text":"Name Summary generate [jvm]open override fun generate(label: String?, length: Int): String"},{"location":"0.x/wisp-token-testing/wisp-token-testing/wisp.token/-fake-token-generator/-fake-token-generator/","title":"FakeTokenGenerator - Misk","text":"<p>//wisp-token-testing/wisp.token/FakeTokenGenerator/FakeTokenGenerator</p>"},{"location":"0.x/wisp-token-testing/wisp-token-testing/wisp.token/-fake-token-generator/-fake-token-generator/#faketokengenerator","title":"FakeTokenGenerator","text":"<p>[jvm]\\ fun FakeTokenGenerator()</p>"},{"location":"0.x/wisp-token-testing/wisp-token-testing/wisp.token/-fake-token-generator/generate/","title":"generate - Misk","text":"<p>//wisp-token-testing/wisp.token/FakeTokenGenerator/generate</p>"},{"location":"0.x/wisp-token-testing/wisp-token-testing/wisp.token/-fake-token-generator/generate/#generate","title":"generate","text":"<p>[jvm]\\ open override fun generate(label: String?, length: Int): String</p>"},{"location":"0.x/wisp-tracing/","title":"wisp-tracing - Misk","text":"<p>//wisp-tracing</p>"},{"location":"0.x/wisp-tracing/#wisp-tracing","title":"wisp-tracing","text":""},{"location":"0.x/wisp-tracing/#packages","title":"Packages","text":"Name wisp.tracing"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/","title":"Package wisp.tracing - Misk","text":"<p>//wisp-tracing/wisp.tracing</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/#package-wisptracing","title":"Package wisp.tracing","text":""},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/#types","title":"Types","text":"Name Summary SpanAndScope [jvm]data class SpanAndScope(span: Span, scope: Scope) Tag [jvm]data class Tag&lt;T&gt;(name: String, value: T)A Tag is a name-value pair which will be added to a Span. Only primitive types are supported like Booleans, Numbers, and Strings."},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/#functions","title":"Functions","text":"Name Summary setBaggageItems [jvm]fun Span.setBaggageItems(baggage: Map&lt;String, Any&gt;)Conveniently sets baggage items all at once. Baggage values come from Any.toString. setTag [jvm]fun Span.setTag(tag: Tag&lt;*&gt;) setTags [jvm]fun Span.setTags(tags: Collection&lt;Tag&lt;*&gt;&gt;)Conveniently set tags all at once. trace [jvm]fun &lt;T&gt; Tracer.trace(spanName: String, tags: Map&lt;String, String&gt; = mapOf(), f: () -&gt; T): TTraces a function f, using a span called spanName, which is automatically finished when the function completes execution. traceWithNewRootSpan [jvm]fun &lt;T&gt; Tracer.traceWithNewRootSpan(spanName: String, tags: Map&lt;String, String&gt; = mapOf(), retainBaggage: Boolean = false, f: (Span) -&gt; T): TLike traceWithSpan, but always starts a new independent (root) span. If you\u2019d like to continue propagating baggage that was set on the previous active span, set retainBaggage to true. traceWithSpan [jvm]fun &lt;T&gt; Tracer.traceWithSpan(spanName: String, tags: Map&lt;String, String&gt; = mapOf(), f: (Span) -&gt; T): TLike trace, but exposes the new active Span to f. withNewScope [jvm]inline fun &lt;T&gt; Tracer.withNewScope(span: Span, crossinline f: () -&gt; T): TInstruments a function f with a new scope. This is helpful if you need to create a new Scope for an existing Span, for example, if you are switching threads (since Scopes are not thread-safe)."},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/set-baggage-items/","title":"setBaggageItems - Misk","text":"<p>//wisp-tracing/wisp.tracing/setBaggageItems</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/set-baggage-items/#setbaggageitems","title":"setBaggageItems","text":"<p>[jvm]\\ fun Span.setBaggageItems(baggage: Map&lt;String, Any&gt;)</p> <p>Conveniently sets baggage items all at once. Baggage values come from Any.toString.</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/set-tag/","title":"setTag - Misk","text":"<p>//wisp-tracing/wisp.tracing/setTag</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/set-tag/#settag","title":"setTag","text":"<p>[jvm]\\ fun Span.setTag(tag: Tag&lt;*&gt;)</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/set-tags/","title":"setTags - Misk","text":"<p>//wisp-tracing/wisp.tracing/setTags</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/set-tags/#settags","title":"setTags","text":"<p>[jvm]\\ fun Span.setTags(tags: Collection&lt;Tag&lt;*&gt;&gt;)</p> <p>Conveniently set tags all at once.</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/trace-with-new-root-span/","title":"traceWithNewRootSpan - Misk","text":"<p>//wisp-tracing/wisp.tracing/traceWithNewRootSpan</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/trace-with-new-root-span/#tracewithnewrootspan","title":"traceWithNewRootSpan","text":"<p>[jvm]\\ fun &lt;T&gt; Tracer.traceWithNewRootSpan(spanName: String, tags: Map&lt;String, String&gt; = mapOf(), retainBaggage: Boolean = false, f: (Span) -&gt; T): T</p> <p>Like traceWithSpan, but always starts a new independent (root) span. If you\u2019d like to continue propagating baggage that was set on the previous active span, set retainBaggage to true.</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/trace-with-span/","title":"traceWithSpan - Misk","text":"<p>//wisp-tracing/wisp.tracing/traceWithSpan</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/trace-with-span/#tracewithspan","title":"traceWithSpan","text":"<p>[jvm]\\ fun &lt;T&gt; Tracer.traceWithSpan(spanName: String, tags: Map&lt;String, String&gt; = mapOf(), f: (Span) -&gt; T): T</p> <p>Like trace, but exposes the new active Span to f.</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/trace/","title":"trace - Misk","text":"<p>//wisp-tracing/wisp.tracing/trace</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/trace/#trace","title":"trace","text":"<p>[jvm]\\ fun &lt;T&gt; Tracer.trace(spanName: String, tags: Map&lt;String, String&gt; = mapOf(), f: () -&gt; T): T</p> <p>Traces a function f, using a span called spanName, which is automatically finished when the function completes execution.</p> <p>If a span is already active, the new span is made a child of the existing one. If you want to manipulate the Span (e.g. to attach baggage), use traceWithSpan instead.</p> <p>If you want a new independent span, use traceWithNewRootSpan.</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/with-new-scope/","title":"withNewScope - Misk","text":"<p>//wisp-tracing/wisp.tracing/withNewScope</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/with-new-scope/#withnewscope","title":"withNewScope","text":"<p>[jvm]\\ inline fun &lt;T&gt; Tracer.withNewScope(span: Span, crossinline f: () -&gt; T): T</p> <p>Instruments a function f with a new scope. This is helpful if you need to create a new Scope for an existing Span, for example, if you are switching threads (since Scopes are not thread-safe).</p> <p>tracer.traceWithSpan(\u201cthread-switching-span\u201d) {\\   \u2026\\   thread {\\     tracer.withNewScope(span) { \u2026 }\\   }\\ }</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-span-and-scope/","title":"SpanAndScope - Misk","text":"<p>//wisp-tracing/wisp.tracing/SpanAndScope</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-span-and-scope/#spanandscope","title":"SpanAndScope","text":"<p>[jvm]\\ data class SpanAndScope(span: Span, scope: Scope)</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-span-and-scope/#properties","title":"Properties","text":"Name Summary scope [jvm]val scope: Scope span [jvm]val span: Span"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-span-and-scope/-span-and-scope/","title":"SpanAndScope - Misk","text":"<p>//wisp-tracing/wisp.tracing/SpanAndScope/SpanAndScope</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-span-and-scope/-span-and-scope/#spanandscope","title":"SpanAndScope","text":"<p>[jvm]\\ fun SpanAndScope(span: Span, scope: Scope)</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-span-and-scope/scope/","title":"scope - Misk","text":"<p>//wisp-tracing/wisp.tracing/SpanAndScope/scope</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-span-and-scope/scope/#scope","title":"scope","text":"<p>[jvm]\\ val scope: Scope</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-span-and-scope/span/","title":"span - Misk","text":"<p>//wisp-tracing/wisp.tracing/SpanAndScope/span</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-span-and-scope/span/#span","title":"span","text":"<p>[jvm]\\ val span: Span</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-tag/","title":"Tag - Misk","text":"<p>//wisp-tracing/wisp.tracing/Tag</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-tag/#tag","title":"Tag","text":"<p>[jvm]\\ data class Tag&lt;T&gt;(name: String, value: T)</p> <p>A Tag is a name-value pair which will be added to a Span. Only primitive types are supported like Booleans, Numbers, and Strings.</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-tag/#constructors","title":"Constructors","text":"Tag [jvm]fun &lt;T&gt; Tag(name: String, value: T)"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-tag/#properties","title":"Properties","text":"Name Summary name [jvm]val name: String value [jvm]val value: T"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-tag/-tag/","title":"Tag - Misk","text":"<p>//wisp-tracing/wisp.tracing/Tag/Tag</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-tag/-tag/#tag","title":"Tag","text":"<p>[jvm]\\ fun &lt;T&gt; Tag(name: String, value: T)</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-tag/name/","title":"name - Misk","text":"<p>//wisp-tracing/wisp.tracing/Tag/name</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-tag/name/#name","title":"name","text":"<p>[jvm]\\ val name: String</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-tag/value/","title":"value - Misk","text":"<p>//wisp-tracing/wisp.tracing/Tag/value</p>"},{"location":"0.x/wisp-tracing/wisp-tracing/wisp.tracing/-tag/value/#value","title":"value","text":"<p>[jvm]\\ val value: T</p>"},{"location":"internals/graceful-shutdown/","title":"Shutdown Management","text":"<p>In any application it is important to shut down gracefully, to avoid dropping already accepted work or  creating inconsistent state. Misk handles this through use of a special <code>ReadyService</code> and its Service Manager Module</p>"},{"location":"internals/graceful-shutdown/#orchestrating-graceful-shutdown","title":"Orchestrating Graceful Shutdown","text":"<p>Misk ensures a graceful shutdown by dividing services into those that ingest or create work (e.g. SQS, Cron, Jetty),  and those that are needed to process work (e.g. JDBC, Redis). To ensure the work created by an incoming API request,  SQS subscription, cron job, or other work producing service is handled correctly even during shutdown, these services need</p> <ol> <li>To stop generating new work</li> <li>For the services they depend on to process their work to remain running until they have processed all existing work</li> </ol>"},{"location":"internals/graceful-shutdown/#ensuring-needed-services-remain-running","title":"Ensuring needed services remain running","text":"<p>Because Misk cannot know ahead of time which services an application might or might not need, we cannot create  hard dependencies from these work producing services to the various services needed for work processing. Instead, we configure the work producing services to depend on - and services needed for work processing to be enhanced by - the <code>ReadyService</code>, a special service that does no work but exists only to orchestrate a graceful shutdown.</p> <p>By having work producing services depend on the <code>ReadyService</code> and work processing services enhanced by it, Misk will  guarantee that services startup as follows:</p> <ol> <li>Work processing services (e.g. Redis)</li> <li>The <code>ReadyService</code></li> <li>Work generating services (e.g. Jetty)</li> </ol> <p>At shutdown time, we walk the dependency graph in reverse, shutting down services as follows:</p> <ol> <li>Work generating services (e.g. Jetty)</li> <li>The <code>ReadyService</code></li> <li>Work processing services (e.g. Redis)</li> </ol> <p>This ensures services that are needed for work processing remain up until all ingested work has been processed.</p>"},{"location":"internals/graceful-shutdown/#notes","title":"Notes","text":"<ul> <li>The mechanism for enhancing one service with another  is described in the service management doc </li> </ul>"},{"location":"internals/service-management/","title":"Misk Services","text":"<p>Services in Misk can depend on other services. We need to reconcile these dependencies to ensure an orderly application startup and shutdown</p>"},{"location":"internals/service-management/#dependencies","title":"Dependencies","text":"<p>Suppose we have a <code>DatabaseService</code> and a <code>MovieService</code>, with the <code>MovieService</code> depending on the <code>DatabaseService</code>.</p> <pre><code>DatabaseService\n  depended on by MovieService\n</code></pre> <p>When you install a service via this module, start-up and shut-down of its dependencies are handled automatically, so that a service can only run when the services it depends on are running. In the example above, the <code>MovieService</code> doesn\u2019t enter the <code>STARTING</code> state until the <code>DatabaseService</code> has entered the <code>RUNNING</code> state. Conversely, the <code>MovieService</code> must enter the <code>TERMINATED</code> state before the DatabaseService enters the <code>STOPPING</code> state.</p> <p>Dependencies can have their own dependencies, so there\u2019s an entire graph to manage of what starts and stops when.</p>"},{"location":"internals/service-management/#enhancements","title":"Enhancements","text":"<p>Some services exist to enhance the behavior of another service.</p> <p>For example, a <code>DatabaseService</code> may manage a generic connection to a MySQL database, and the <code>SchemaMigrationService</code> may create tables specific to the application.</p> <p>We treat such enhancements as implementation details of the enhanced service: they depend on the service, but downstream dependencies like the <code>MovieService</code> don\u2019t need to know that they exist.</p> <pre><code>DatabaseService\n  enhanced by SchemaMigrationService\n  depended on by MovieService\n</code></pre> <p>In the above service graph we start the <code>DatabaseService</code> first, the <code>SchemaMigrationService</code> second, and finally the <code>MovieService</code>. The <code>MovieService</code> doesn\u2019t need to express a dependency on the <code>SchemaMigrationService</code>, that happens automatically for enhancements.</p>"},{"location":"internals/service-management/#what-does-this-look-like","title":"What does this look like?","text":""},{"location":"internals/service-management/#configuration","title":"Configuration","text":"<p>Instead of using the regular service multi-bindings you might be used to, in the <code>configure</code> block of a Guice [KAbstractModule], you would set up the above relationship as follows:</p> <pre><code>override fun configure() {\n  install(ServiceModule&lt;SchemaMigrationService())\n  install(\n    ServiceModule&lt;DatabaseService&gt;()\n      .enhancedBy&lt;SchemaMigrationService&gt;()\n  )\n  install(\n    ServiceModule&lt;MoviesService&gt;()\n      .dependsOn&lt;DatabaseService&gt;()\n  )\n}\n</code></pre>"},{"location":"internals/service-management/#how-does-this-work","title":"How does this work?","text":"<p>Bindings are hooked up for a <code>ServiceManager</code> provider, which decorates the service with its dependencies and enhancements to defer its start up and shut down until its dependent services are ready.</p> <p>This service will stall in the <code>STARTING</code> state until all upstream services are <code>RUNNING</code>. Symmetrically it stalls in the <code>STOPPING</code> state until all dependent services are <code>TERMINATED</code>.</p>"},{"location":"internals/service-management/#notes","title":"Notes","text":"<ul> <li>This doc was lifted from the doc string on the <code>ServiceModule</code> class</li> </ul>"},{"location":"migrations/misk-metrics/","title":"Migrating Misk Metics","text":""},{"location":"migrations/misk-metrics/#misk-metrics-v1-to-v2","title":"Misk Metrics V1 to V2","text":"<p>To migrate from misk metrics v1 to v2, please apply the following openrewrite recipe:</p> <p>TODO: small guide on how to use open rewrite or good doc links TODO: put the recipe somewhere so it\u2019s ready to use</p> <pre><code>type: specs.openrewrite.org/v1beta/recipe\nname: misk.metrics.Migrator\ndisplayName: Migrate Misk Metrics V1\ndescription: Migrate from Misk Metrics v1 to v2\nrecipeList:\n    - org.openrewrite.java.ChangeMethodName:\n        methodPattern: misk.metrics.Metrics histogram(..)\n        newMethodName: legacyHistogram\n        matchOverrides: true\n    - org.openrewrite.java.ChangeType:\n        oldFullyQualifiedTypeName: misk.metrics.Metrics\n        newFullyQualifiedTypeName: misk.metrics.v2.Metrics\n</code></pre>"}]}